'''向量邏輯'''<ref name="miz92">Mizraji, E. (1992). </ref><ref name="miz08">Mizraji, E. (2008) [http://logcom.oxfordjournals.org/content/18/1/97.full.pdf Vector logic: a natural algebraic representation of the fundamental logical gates.] {{Wayback|url=http://logcom.oxfordjournals.org/content/18/1/97.full.pdf |date=20160804061256 }}</ref>是一種建基於[[矩陣|矩陣代數]]的[[邏輯|邏輯]][[数学模型|模型]]。它假設邏輯[[真值|真值]]可成為一種向量，而[[一元谓词演算|一元]]和二元謂詞演算皆以矩陣的算法進行。

== 歷史 ==
向量邏輯是人們在研究[[人工神经网络|人工神經網絡]]模型所涉及的多維矩陣及向量時受到啟發而發展出來的理論系統<ref>Kohonen, T. (1977) Associative Memory: A System-Theoretical Approach. </ref><ref>Mizraji, E. (1989) [http://link.springer.com/article/10.1007%2FBF02458441 Context-dependent associations in linear distributed memories] {{Wayback|url=http://link.springer.com/article/10.1007%2FBF02458441 |date=20180711191357 }}.</ref>。它把[[邏輯代數|邏輯代數]]以矩陣和向量的形式表示<ref name="boole">Boole, G. (1854) An Investigation of the Laws of Thought, on which are Founded the Theories of Logic and Probabilities. </ref>。這種邏輯形式被用來發展一種以[[复数_(数学)|複數]]進行運算的[[模糊逻辑|模糊邏輯]]<ref>Dick, S. (2005) Towards complex fuzzy logic. </ref>。另外，以矩陣和向量作為媒介的邏輯運算亦應用於[[量子物理|量子物理]]、[[電腦科學|計算機科學]]及[[光學|光學]]<ref>Mittelstaedt, P. (1968) Philosophische Probleme der Modernen Physik, Bibliographisches Institut, Mannheim</ref><ref>Stern, A. (1988) Matrix Logic: Theory and Applications. </ref><ref>Westphal, J., Hardy, J. (2005) Logic as a vector system. </ref>。[[查尔斯·桑德斯·皮尔士|皮爾士]]及柯比是最早嘗試使用[[線性代數|線性代數]]來演繹邏輯運算的數學家之一<ref>Copilowish, I.M. (1948) Matrix development of the calculus of relations. </ref>。印度生物物理學家G.N.拉馬錢德蘭曾經提出一種以矩陣及向量來演繹一種古典[[耆那教|耆那教]]邏輯運算<ref>Jain, M.K. (2011) Logic of evidence-based inference propositions, Current Science, 1663–1672, 100</ref>。該邏輯系統要求每個命題各自有獨立的證明，而不能以二值邏輯的互補性質進行論證。

== 概觀 ==
傳統的[[真值|二值]]邏輯僅使用少量數學函數演算一個或兩個邏輯變量。在古典邏輯，值 1 被賦為「真」，而值 0 則被賦為「假」。相對地，一個二值的向量邏輯需要為「真」、「假」二值賦予兩個由[[實數|實數]]組成的 ''q-''維[[单位向量|單位]][[列向量|列向量]] ''s'' 及'' n''，亦即：
: <math>t\mapsto s</math>    and    <math>f\mapsto n</math>
(其中 <math> q \geq 2</math> 為一任意[[自然數|自然數]]，而「單位」的意思是兩個向量的[[范数|範數]]為 1。又，''s ''、''n'' 二者通常互相[[正交|正交]])。由這種關係可衍生出一個內含各邏輯值的[[向量空間|向量空間]]''V''<sub>2</sub> = {''s'',''n''}。使用這些邏輯值推演的邏輯運算子則為矩陣運算子。

向量邏輯的運算建基於以上 ''q-''維列向量的[[数量积|數量積]]<math>u^Tv=\langle u,v\rangle</math>。由於 ''s'' 及 ''n'' 相互正交，假如 u = v，則<math>\langle u,v\rangle=1</math> ，而如果 u \ne v，則 <math>\langle u,v\rangle=0</math> 。

=== 一元謂詞運算子 ===
向量邏輯的一元謂詞運算子是運用<math>Mon: V_2 \to V_2</math>的成果，而相關的矩陣有 ''q'' 行及 ''q'' 列。在上面提及的向量邏輯系統中，兩個基本的一元謂詞運算子分別是「[[恆等函數|恆等]]」及「[[否定|否定]]」： 
* '''恆等'''：邏輯恆等函數 ID(p) 可以矩陣 <math>I=ss^T + nn^T</math> 表達。該矩陣的操作方式為：''Ip'' = ''p'', ''p'' ∈ ''V''<sub>2</sub>；由於 s 對於 n 而言是正交的，我們可以得到：<math>Is=ss^Ts+nn^Ts=s\langle s,s\rangle+n\langle n,s\rangle=s</math>，反之 <math>In=n</math>.

* '''否定'''：邏輯否定函數 ¬p 可以矩陣 <math>N=ns^T + sn^T</math> 表示。由此推論，''Ns'' = ''n'' 且 ''Nn'' = ''s''。由於否定函數有[[對合|對合]]性，即 ¬(¬''p'') 等於 ''p ''（對應於 ''N''<sup>2</sup> = ''I''）。Is 應予注意的是，以上的邏輯恆等矩陣'''並非'''矩陣代數中的[[單位矩陣|單位矩陣]]。

=== 二元謂詞運算子 ===
每個向量邏輯系統都會有16個二元謂詞運算子，對應於<math>Dyad: V_2 \otimes V_2\to V_2</math>類型的函數；這些二元謂詞運算矩陣有 ''q'' 行及 ''q''<sup>2</sup> 列，並且根據[[克罗内克积|克羅內克積]]的其中兩種特性而演算出來：

* '''混合律'''：如果 A、B、C、D 是四個可以構成 AC 及 BD 兩個乘積的矩陣，則
:: <math>(A \otimes B)(C \otimes D) = AC \otimes BD</math> 
* '''轉置分配律'''：涉及轉置的乘積可以分配：
::(A\otimes B)^T = A^T \otimes B^T.

根據以上特性，可以演算出以下向量邏輯運算子：
* '''[[逻辑与|與]]'''：在向量邏輯中，兩個邏輯值的「與」 (p∧q) 是由一個應用於兩個向量值的矩陣 <math>C(u\otimes v)</math> 表示。此矩陣透過以下算式實現古典[[邏輯與|邏輯與]]的真值表：
::<math>C=s(s\otimes s)^T + n(s\otimes n)^T + n(n\otimes s)^T + n(n\otimes n)^T </math>

此矩陣應當滿足
:: <math>C(s\otimes s)=s,</math> 及
:: <math>C(s\otimes n)=C(n\otimes s)=C(n\otimes n)=n.</math> 

* <span>[[逻辑或|或]]：</span>兩個邏輯值的「或」 (p∨q) 由以下矩陣運算：
:: <math>D=s(s\otimes s)^T+s(s\otimes n)^T+s(n\otimes s)^T+n(n\otimes n)^T,</math>，而且
:: <math>D(s\otimes s)=D(s\otimes n)=D(n\otimes s)=s</math> 及
:: <math>D(n\otimes n)=n.</math> 
* '''[[蕴涵|蘊涵]]'''：古典邏輯的「蘊涵」對應於邏輯式 p → q ≡ ¬p ∨ q。向量邏輯亦定義相對應的矩陣去表示該關係：<math>L=D(N\otimes I)</math>。較直接的表達式則為
:: <math>L=s(s\otimes s)^T+n(s\otimes n)^T+s(n\otimes s)^T+n(n\otimes n)^T,</math>
:: 該矩陣應當滿足
:: <math>L(s\otimes s)=L(n\otimes s)=L(n\otimes n)=s</math> 及
:: <math>L(s\otimes n)=n.</math>

* '''[[逻辑等价|等價值]]與[[逻辑异或|異或]]'''。在向量邏輯中，等價值表達式 p≡q 由以下矩陣表示：
:: <math>E=s(s\otimes s)^T+n(s\otimes n)^T+n(n\otimes s)^T+s(n\otimes n)^T</math>而且

:: <math>E(s\otimes s)=E(n\otimes n)=s</math> 及

:: <math>E(s\otimes n)=E(n\otimes s)=n.</math> 

:: 至於異或則是等價值的否定：¬(p≡q)，因此有關矩陣可由 <math>X=NE</math> 給出，亦即：

:: <math>X=n(s\otimes s)^T+s(s\otimes n)^T+s(n\otimes s)^T+n(n\otimes n)^T,</math>

:: 而且 <math>X(s\otimes s)=X(n\otimes n)=n</math> 及

:: <math>X(s\otimes n)=X(n\otimes s)=s.</math> 
* '''[[谢费尔竖线|與非]]及[[逻辑或非|或非]]'''
矩陣 ''S'' 及 ''P'' 分別對應古典邏輯的[[谢费尔竖线|謝費爾]]（即「與非」）及[[逻辑或非|皮爾士]]（即「或非」）操作：
:: <math>S=NC</math> 
:: <math>P=ND</math> 

=== 德摩根定律 ===
古典邏輯中的「與」、「或」兩個操作皆滿足[[德摩根定律|德摩根定律]]，即 p∧q≡¬(¬p∨¬q) 以及其[[对偶_(数学)|對偶]] p∨q≡¬(¬p∧¬q))。向量邏輯的相關操作亦可被證實為滿足德摩根定律：
:: <math>C(u\otimes v)=ND(Nu\otimes Nv)</math>，其中 ''u'' 及 ''v''  皆為邏輯向量。
基於克羅內克積的特性，以下的因式分解成立：
:: <math>C(u\otimes v)=ND(N\otimes N)(u\otimes v).</math> 
由此可以證明，在二維的向量邏輯中，德摩根定律不僅與邏輯操作有關，亦適用於有關的邏輯運算子：<ref name="miz96">Mizraji, E. (1996) The operators of vector logic. </ref>
:: <math>C=ND(N\otimes N)</math> 

=== 對位定律 ===
在古典命題運算中，對位定律 ''p'' → ''q'' ≡ ¬''q'' → ¬''p'' 是由於有關等價值算式對於任何真值 ''p''、''q ''皆成立而獲得證明<ref name="suppes">Suppes, P. (1957) Introduction to Logic, Van Nostrand Reinhold, New York.</ref>。但是，在向量邏輯範疇，對位定律是由一系列的等價值及克羅內克積運算而得出：
:: <math> D(NNv\otimes Nu)=D(N\otimes I)(Nv\otimes Nu)=L(Nv\otimes Nu)</math>
這是建基於向量邏輯的「或」運算矩陣 ''D'' 滿足[[交換律|交換律]]的特性。

== 二維多值邏輯 ==
[[多值逻辑|多值邏輯]]的學說體系由多位研究者協力發展（尤其是波蘭數學家[[扬·武卡谢维奇|揚·武卡謝維奇]]）。它容許涉及不確定值的邏輯運算<ref>Łukasiewicz, J. (1980) Selected Works. </ref>。在二值向量邏輯範疇中，不確定值可由 ''s'' 、''n'' 兩個基本真值以概率比重混合而成。

假設存在一個不確定值 <math>f=\epsilon s + \delta n</math>（其中 <math>\epsilon, \delta \in [0,1], \epsilon + \delta = 1</math>）。向量邏輯的多值性可以由對這種不確定值的運算獲得證明<ref name="miz92">Mizraji, E. (1992). </ref>。

=== 向量輸出值的純量投影 ===
多值向量邏輯的輸出值可以被投影為純量函數，並且能衍生一系列與[[赖欣巴哈|賴欣巴哈]]式多值邏輯相似的概率邏輯<ref>Rescher, N. (1969) Many-Valued Logic. </ref><ref>Blanché, R. (1968) Introduction à la Logique Contemporaine, Armand Colin, Paris</ref><ref>Klir, G.J., Yuan, G. (1995) Fuzzy Sets and Fuzzy Logic. </ref>。當有兩個已知的邏輯向量 <math>u=\alpha s + \beta n</math> 、 <math>v=\alpha's + \beta'n</math> ，以及一個二元邏輯運算矩陣 <math>G</math>，則通過加入特定向量 ''s''，可以得出一個純量概率邏輯算式：
:: <math>Val</math>(純量) <math> = s^TG</math>(向量)
根據以上投影式可得出以下主要結果：
:: <math>NOT(\alpha)=s^TNu=1-\alpha</math> 
:: <math>OR(\alpha,\alpha')=s^TD(u\otimes v)=\alpha + \alpha' - \alpha\alpha'</math> 
:: <math>AND(\alpha,\alpha')=s^TC(u\otimes v)=\alpha\alpha'</math> 
:: <math>IMPL(\alpha,\alpha')=s^TL(u\otimes v)=1-\alpha(1-\alpha')</math> 
:: <math>XOR(\alpha,\alpha')=s^TX(u\otimes v)=\alpha+\alpha'-2\alpha\alpha'</math> 
相關的否定式如下：
:: <math>NOR(\alpha,\alpha')=1-OR(\alpha,\alpha')</math> 
:: <math>NAND(\alpha,\alpha')=1-AND(\alpha,\alpha')</math> 
:: <math>EQUI(\alpha,\alpha')=1-XOR(\alpha,\alpha')</math> 
如果滿足該等算式的值屬於[[集合_(数学)|集合]] {0, ½, 1}，則有關的純量算式與武卡謝維奇提出的三值邏輯系統大致脗合。另外，數學家亦證明了如果將一元和二元向量邏輯運算子施加於該集合屬下的概率向量，則其輸出值亦必屬於該集合<ref name="miz96">Mizraji, E. (1996) The operators of vector logic. </ref>。

== 布爾多項式 ==
[[乔治·布尔|喬治·布爾]]確立了以多項式演繹邏輯運算的學說發展<ref name="boole">Boole, G. (1854) An Investigation of the Laws of Thought, on which are Founded the Theories of Logic and Probabilities. </ref>。一元邏輯運算子（例如[[恆等函數|恆等]]或[[逻辑非|否定]]）的布爾多項式可用以下的方式表示：
:: <math>f(x) = f(1)x + f(0)(1-x) </math> 
根據二值邏輯的值，可以得出四個一元邏輯運算式：恆等式要求 ''f''(1) = 1 、''f''(0) = 0，否定式則要求 ''f''(1) = 0、''f''(0) = 1。<div>至於16個二元邏輯運算子的布爾多項式可由以下算式求出：</div>
:: <math>f(x,y) = f(1,1)xy + f(1,0)x(1-y) +f(0,1)(1-x)y + f(0,0)(1-x)(1-y)</math> 
如果從相對應的[[真值表|真值表]]抽取相應的係數 ''f''，二元邏輯運算子可以轉譯成多項式。例如要建立一個[[与非|與非]]邏輯的布爾多項式，係數 ''f'' 的值如下：
:: <math> f(1,1)=0</math>    及    <math>f(1,0)=f(0,1)=f(0,0)=1</math>。
這些布爾多項式可以即時被擴充為包括任意數目的未知值，創造出大量的潛在邏輯運算子。向量邏輯的矩陣-向量結構即為這種運算的[[線性邏輯|線性邏輯]]演繹，其中上文設立的向量 ''s ''和 ''n'' 可以對應上列多項式中的 ''x'' 、''y'' 和''1-x、1-y''。 In 以「與非」為例，''f(1,1)=n'' 而且 ''f(1,0)=f(0,1)=f(0,0)=s''，從而演算出以下矩陣：
:: <math>S=n(s\otimes s)^T + s[(s\otimes n)^T+(n\otimes s)^T+(n\otimes n)^T]</math> 

== 延伸 ==
* 向量邏輯理論能夠容納多種真值的運算，其中關鍵在於向量空間維度越大，能夠造出相互正交的真值就越多，同時亦能造出適用於這些真值的邏輯運算矩陣<ref name="miz08">Mizraji, E. (2008) [http://logcom.oxfordjournals.org/content/18/1/97.full.pdf Vector logic: a natural algebraic representation of the fundamental logical gates.] </ref>。
* 向量邏輯能夠全面地表達模態邏輯，其中[[递归|遞歸]]運算過程是由神經元模型啟發所得<ref name="miz08">Mizraji, E. (2008) [http://logcom.oxfordjournals.org/content/18/1/97.full.pdf Vector logic: a natural algebraic representation of the fundamental logical gates.] </ref><ref>Mizraji, E. (1994) [http://projecteuclid.org/DPubS?verb=Display&version=1.0&service=UI&handle=euclid.ndjfl/1094061864&page=record Modalities in vector logic] {{Wayback|url=http://projecteuclid.org/DPubS?verb=Display&version=1.0&service=UI&handle=euclid.ndjfl%2F1094061864&page=record |date=20140811163306 }}.</ref>。
* 一些邏輯運算認知問題（尤其是涉及遞歸運算的問題）可以透過向量邏輯作出分析。傳統邏輯運算通常以[[樹狀結構|樹狀結構]]表達<ref name="suppes">Suppes, P. (1957) Introduction to Logic, Van Nostrand Reinhold, New York.</ref>，向量邏輯同樣能夠表達之，而這種特性被部份應用於用以研究自然語言分支結構的神經元模型上<ref>Mizraji, E., Lin, J. (2002) The dynamics of logical decisions. </ref><ref>beim Graben, P., Potthast, R. (2009). </ref><ref>beim Graben, P., Pinotsis, D., Saddy, D., Potthast, R. (2008). </ref><ref>beim Graben, P., Gerth, S., Vasishth, S.(2008) Towards dynamical system models of language-related brain potentials. </ref><ref>beim Graben, P., Gerth, S. (2012) Geometric representations for minimalist grammars. </ref><ref>Binazzi, A.(2012) [http://www.fupress.net/index.php/sf/article/view/11649 Cognizione logica e modelli mentali.] {{Wayback|url=http://www.fupress.net/index.php/sf/article/view/11649 |date=20140811225244 }}</ref>。
* 一些運用[[反函數|可逆]]操作（如弗雷堅閘）的邏輯運算可以透過向量邏輯實現。這種實現方式直接提供能夠定義輸入參數值格式以及篩選輸出值的矩陣運算子<ref name="miz08">Mizraji, E. (2008) [http://logcom.oxfordjournals.org/content/18/1/97.full.pdf Vector logic: a natural algebraic representation of the fundamental logical gates.] </ref><ref name="miz96">Mizraji, E. (1996) The operators of vector logic. </ref>。
* 基本細胞自動機可以經由向量邏輯的運算子結構進行分析。這種分析能夠把細胞自動機的行動規律進行[[特征分解|特徵分解]]<ref>Mizraji, E. (2006) The parts and the whole: inquiring how the interaction of simple subsystems generates complexity. </ref><ref>Arruti, C., Mizraji, E. (2006) Hidden potentialities. </ref>。

== 參看 ==
{{portal box|數學}}
* [[模糊逻辑|模糊邏輯]]
* {{link-en|量子邏輯|Quantum logic}}
* [[逻辑代数|邏輯代數]]
* [[命题逻辑|命題邏輯]]
* [[乔治·布尔|喬治·布爾]]
* [[扬·武卡谢维奇|揚·武卡謝維奇]]

== 參考資料 ==
{{Reflist|2}}
[[Category:布尔代数|Category:布尔代数]]
[[Category:邏輯|Category:邏輯]]