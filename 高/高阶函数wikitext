{{unreferenced|time=2019-03-06T20:01:31+00:00}}
{{not|高阶导数}}
在[[数学|数学]]和[[计算机科学|计算机科学]]中，'''高阶函数'''是至少满足下列一个条件的[[函数|函数]]：
*接受一个或多个函数作为输入
*输出一个函数
在数学中它们也叫做[[算子|算子]]（运算符）或[[泛函|泛函]]。[[微积分|微积分]]中的[[导数|导数]]就是常见的例子，因为它映射一个函数到另一个函数。

在[[lambda演算|无类型lambda演算]]，所有函数都是高阶的；在[[有类型lambda演算|有类型lambda演算]]{{notetag|大多数[[函数式编程语言|函数式编程语言]]都从中演化而来}}中，高阶函数一般是那些函數型別包含多于一个箭头的函数。在函数式编程中，返回另一个函数的高阶函数被称为[[Curry化|Curry化]]的函数。

==一般性例子==
在很多函数式编程语言中能找到的<code>[[Map_(高阶函数)|map]]</code>函数是高阶函数的一个例子。它接受一个函数'''f'''作为参数，并返回接受一个列表并应用'''f'''到它的每个元素的一个函数。高阶函数的其他例子包括:
* 常量函数λ''x''.λ''y''.''x''。
* 排序函数，接受一个比较函数作为参数。
* <code>[[Filter_(高阶函数)|filter]]</code>函数
* <code>[[fold_(高阶函数)|fold]]</code>函数
* <code>{{en-link|apply|}}</code>函数
* {{en-link|函数复合 (计算机科学)|Function composition (computer science)|函数复合}}
* [[积分|积分]]
* [[回调函数|回调函数]]
* [[蒙塔古語法|蒙塔古文法]]

==範例==
這是一個[[Python|Python]] [[脚本语言|脚本语言]]的例子，其中函式g()有一引數以及回傳一函數.這個例子會列印100 ( ''g(f,7)='' (7+3)×(7+3) ).
<syntaxhighlight lang="python">
def f(x):
    return x + 3

def g(function, x):
    return function(x) * function(x)

print g(f, 7)
</syntaxhighlight>
下列是[[Scheme|Scheme]]語言的例子，函數g()有一引數以及回傳一函數。函數a()取得一值並加上7，再回傳，（例如a(3)=10）。
<syntaxhighlight lang="scheme">
(define(g x)
  (lambda (y) (+ x y)))
(define a (g 7))
(display (a 3))
</syntaxhighlight>

==注释==
{{notefoot}}

==参见==
*[[泛函分析|泛函分析]]
*[[组合子逻辑|组合子逻辑]]
*[[高阶逻辑|高阶逻辑]]

[[Category:Lambda演算|Category:Lambda演算]]
[[Category:高阶函数|]]