{{多個問題|
{{citation style|time=2011-10-17T14:50:16+00:00}}
{{copyedit|time=2011-10-17T14:50:16+00:00}}
{{Untranslated-jargon|time=2011-12-24}}
}}
{{NoteTA
|G1 = Electronics
|G2 = IT
}}
'''高级综合'''（High-level Synthesis，縮寫 HLS），又譯'''高层次综合'''，另又稱'''C合成'''（C synthesis）、'''電子系統層次合成'''（Electronic System Level synthesis，縮寫 ESL synthesis），是将[[电路设计|电路设计]]规范的[[算法|算法]]级或[[行为|行为]]级描述在一定的[[约束条件|约束条件]]下转化为[[电路结构|电路结构]]描述的[[方法|方法]]和[[过程|过程]]。高层次综合又称为行为级综合、算法级综合等。它使设计者能够在更高层次进行[[电子设计|电子设计]]，更快速有效地在较高层次设计[[验证|验证]]和[[仿真|仿真]]，而较低层次的工作由[[工具|工具]]来[[自动|自动]]完成，从而让[[数字电路系统|数字电路系统]]设计工程师可以有更多的精力和更充分的条件去进行设计空间的搜索，寻求最佳的设计方案。

HLS 的过程通常基本包括[[预处理|预处理]]、[[编译|编译]]、[[转换|转换]]、[[调度|调度]]、[[分配|分配]]、[[控制器|控制器]]、[[综合|综合]]、[[RTL|RTL]] 、[[生成|生成]]、和[[反编译|反编译]]等几个部分。编译、转换部分决定了软件的兼容性和易用性，调度（schedule）和分配（binding）主要决定了产生的 RTL 的性能、资源大小等。

==发展==
高层次综合技术的发展经历了三个阶段。尽管早在20世纪80年代初就开始了关于高层次综合技术的研究，并且在90年代推出了一些[[商业|商业]][[工具|工具]]，高层次综合设计方法直到最近两三年才取得了一定的成功，得到了[[集成电路|集成电路]]设计公司更多的接受和应用。

第一阶段从80年代初到90年代初，关于 HLS 的研究主要集中在[[学术|学术]][[科研机构|科研机构]]，他们完成了高层次综合的早期的许多研究工作，包括许多关于 HLS 的基本的概念和技术。当时集成电路设计自动化系统开始了迅猛的发展，但限于当时的技术水平和 [[IC|IC]] 工业界提出的需求，多数研究努力都停留在较低的设计层次上。因此高层次综合技术被认为是[[学院派|学院派]]的探索，主要限于在[[大学|大学]]和一些基础性[[研究所|研究所]]中进行学术研究。

第二阶段从90年代初到2000年初，主要是几大 [[EDA|EDA]] 公司开始尝试推动[[商业化|商业化]]高层次综合技术，包括[[Synopsys|Synopsys]]、[[Cadence|Cadence]] 和 [[Mentor|Mentor]]，均推出了商业工具，多以行为级的 HDL 为输入语言。但是由于当时 RTL 设计方法能够满足复杂度的需求，HLS 技术的成熟度不够，并且当时的设计主要都是面向[[控制|控制]]的，而 HLS 对控制行为的综合 QoR（Quality of Result）较差；以及其它一些因素导致这些工具在商业上都很不成功，而退出市场。

从2000年初到现在，第三阶段的发展是众多 EDA 公司和学术机构一起在推动 HLS 技术的发展和应用，HLS 技术开始走向成熟和商业应用。新的高层次综合技术的解决了导致前两代 HLS 技术商业化失败的三个主要问题：
# 输入语言采用了类 [[C语言|C语言]]而非前两代的 HDL 语言，如 C、[[C++|C++]]、[[SystemC|SystemC]] 以及 [[SpecC|SpecC]]、[[HandelC|HandelC]] 等，这能够使得系统模型得到复用，进行进一步的软硬件实现。
# 实现了对时序（timing）比较精确的评估和调度。
# 实现了对验证环境的重复使用，通过 [[TLM|TLM]] 建模技术可以将系统验证环境复用于 RTL 级验证，降低了验证的复杂度。

HLS采用的输入语言主要有C、C++、SystemC、[[SystemVerilog|SystemVerilog]]等。

==参考文献==
* AutoPilot from [https://web.archive.org/web/20120214022912/http://www.autoesl.com/ AutoESL] acquired by Xilinx 1/31/2011 https://web.archive.org/web/20111017170928/http://www.eetimes.com/electronics-news/4212668/Xilinx-buys-high-level-synthesis-EDA-vendor
* C-to-Silicon from [[Cadence|Cadence]]
* Cynthesizer from [[Forte_Design_Systems|Forte Design Systems]]
* [[Catapult_C|Catapult C]] from [[Mentor_Graphics|Mentor Graphics]]
* Synphony C Compiler from [[Synopsys|Synopsys]]
* BlueSpec Compiler from [[Bluespec,_Inc.|Bluespec, Inc.]]
* Concurrent Acceleration from [[Concurrent_EDA|Concurrent EDA]]
* PowerOpt from [http://www.chipvision.com ChipVision] {{Wayback|url=http://www.chipvision.com/ |date=20020530041720 }}
* CyberWorkBench from [[NEC|NEC]]
* C-to-Verilog from [http://www.c-to-verilog.com C-to-Verilog.com] {{Wayback|url=http://www.c-to-verilog.com/ |date=20190824073122 }}
* C2R from [http://www.cebatech.com CebaTech] {{Wayback|url=http://www.cebatech.com/ |date=20050507101111 }}
* CoDeveloper from [[Impulse_Accelerated_Technologies|Impulse Accelerated Technologies]]
* eXCite from [http://www.yxi.com Y Explorations] {{Wayback|url=http://www.yxi.com/ |date=20190917062628 }}
* LegUP from [http://legup.eecg.utoronto.ca University of Toronto] {{Wayback|url=http://legup.eecg.utoronto.ca/ |date=20200724081231 }}
* HercuLeS from [http://www.nkavvadias.com/hercules/ Nikolaos Kavvadias (est. October 2011 release)] {{Wayback|url=http://www.nkavvadias.com/hercules/ |date=20120330171424 }}
* PICO from Synfora, acquired by Synopsys in June 2010 https://web.archive.org/web/20110407145420/http://www.eetimes.com/electronics-news/4200083/Synopsys-buys-Synfora-assets (PICO = Program In/Code Out)

{{可编程逻辑设备}}
[[Category:電路學|Category:電路學]]