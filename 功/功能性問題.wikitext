在[[計算複雜性理論|計算複雜性理論]]內，'''功能性問題'''或者'''函式問題'''（{{lang-en|Function problem}}）是一種{{Link-en|計算問題|computational problem}}，對任何一種輸入都預期會有單一個輸出，但是輸出不像是[[決定性問題|決定性問題]]一樣這麼單純。換句話說，輸出不只YES跟NO。重要的範例像是[[旅行推銷員問題|旅行推銷員問題]]，詢問一張圖是否有可以繞過每一點的不重複路徑（輸出為路徑），以及[[整數分解|整數分解]]，輸出為輸入的質因數。

因為沒有明顯類比的語言，功能性問題比起決定型問題要難以研究。而且因為輸出的可能變多，在解決輸入輸出之間的轉換，功能性問題[[歸約|歸約]]的過程也比較微妙。功能性問題也可以用像是決定性問題的方式來分成各種[[複雜度類|複雜度類]]。舉例來說[[FP（複雜度）|FP]]是指可以用[[確定型圖靈機|確定型圖靈機]]在[[多項式時間|多項式時間]]裡面可以解決的功能性問題（類似於決定性問題的[[P_(複雜度)|P]]），而[[FNP_(複雜度)|FNP]]是指可以用[[非確定型圖靈機|非確定型圖靈機]]在[[多項式時間|多項式時間]]裡面可以解決的功能性問題（類似於決定性問題的[[NP_(複雜度)|NP]]）。

對所有能在多項式時間內解決的的功能性問題，一定存在一個雷同的決定型問題，可以用[[多項式時間圖靈歸約|多項式時間圖靈歸約]]將後者歸約為前者的方式，解決這個功能性問題。舉例，[[旅行推銷員問題|旅行推銷員問題]]的決定型問題版本如下：

:給定一個有權重的[[有向圖|有向圖]]和一個整數K，是否存在一個哈密頓路徑（或者哈密頓回路，如果問題指定推銷員在經過所有城市後一定要回到家）並且走過的路徑權重相加小於或者等於K？

給定這個決定性問題的解答，我們則可以解決旅行推銷員問題如下：

:令<math>n</math>為邊的數量，<math>w_i</math>則是邊<math>i</math>的權重。首先我們重新設定邊的權重，給予每個邊<math>i</math>新的權重<math>w'_i = 2^{(n+1)} w_i + 2^i</math>。這並不會改變最短路徑本身，但是會保證這路徑是唯一的。然後，將所有的邊權重加起來，得到這個圖的總權重<math>M</math>。接著，我們使用[[折半搜索算法|折半搜索算法]]找出這條最短路徑的權重：是否有權重輕於<math>< M/2</math>的路徑？；是否有權重輕於<math>< M/4</math>的路徑？…等等。找到最短路徑的權重<math>W</math>之後，我們藉由以下演算法確定特定某個邊<math>i</math>是否在這個路徑上：修改<math>i</math>的權重為<math>W+1</math>之後，詢問這個圖是否還是有一個權重為<math>W</math>的哈密頓路徑？如果修改後的圖裡面不存在這條路徑，則<math>i</math>這個邊必定在原圖的最短路徑裡面，反之，如果修改後此路徑還是存在，則i不在原來的路徑之內。

這個演算法將旅行推銷員問題的時間複雜度放進FP<sup>NP</sup>內（可以在多項式時間之內，以決定性圖靈機和一個能解決NP問題的[[諭示機|神諭]]解決的問題），並且事實上是這個複雜度類的[[完備_(複雜度)|完備]]問題。

==參考資料==
{{refbegin}}
* Raymond Greenlaw, H. James Hoover, ''Fundamentals of the theory of computation: principles and practice'', Morgan Kaufmann, 1998, ISBN 155860474X, p. 45-51
* Elaine Rich, ''Automata, computability and complexity: theory and applications'', Prentice Hall, 2008, ISBN 0132288060, section 28.10 "The problem classes FP and FNP", pp. 689-694
{{refend}}

==相關條目==
[[最佳化問題|最佳化問題]]

[[category:計算複雜性理論|category:計算複雜性理論]]