[[File:Venn0001.svg|thumb]] <math>A \land B</math>]]

在[[逻辑|逻辑]]和[[数学|数学]]中，'''逻辑合取'''或'''逻辑与'''或'''且'''是一个二元[[逻辑運算符|逻辑運算符]]。如果其两个[[变量|变量]]的真值都为“真”，其结果为“真”，否则其结果为“假”。<ref name=":0">{{Cite web|date=2020-04-06|title=Comprehensive List of Logic Symbols|url=https://mathvault.ca/hub/higher-math/math-symbols/logic-symbols/|access-date=2020-09-02|website=Math Vault|language=en-US}}</ref><ref name=":1">{{Cite web|title=Conjunction, Negation, and Disjunction|url=https://philosophy.lander.edu/logic/conjunct.html|access-date=2020-09-02|website=philosophy.lander.edu}}</ref><ref name=":2">{{Cite web|date=2019-08-13|title=2.2: Conjunctions and Disjunctions|url=https://math.libretexts.org/Courses/Monroe_Community_College/MTH_220_Discrete_Math/2%3A_Logic/2.2%3A_Conjunctions_and_Disjunctions|access-date=2020-09-02|website=Mathematics LibreTexts|language=en}}</ref>

== 相关名称 ==
:基本符号：<math>\land</math>
:英文名：logical conjunction
:中文名：逻辑与，[[合取|合取]]，[[交集|交集]]，[[按位与|按位与]]，[[逻辑乘|逻辑乘]]，[[与门|与门]]，...
:[[命题逻辑|命题逻辑]]中的二元连接词合取，是一个两元算子，集合论中的交集算子，二进制中的逻辑乘算子，按位与（Bitwise AND），逻辑门中的“与”门（AND gate），编程语言中的&或and运算符等等。

==基本定义==
:逻辑与（logical conjunction）是两个[[逻辑变量|逻辑变量]]的一种运算，经常是两个命题的运算。它满足：当且仅当其两个变量的真值都为真时，其结果为真。

:逻辑与<math>\land</math>是个二元算子，运算结果取值为真的条件是，当且仅当两个命题的取值都真时。命题是取值要么是真要么是假的二值语句，没有第三种取值，或说值域为{真，假}或是{T,F}或是{0,1}。未知真又未知假的语句是猜想；既真又假，既不真又不假的语句是悖论。

:复合命题<math>~A \land B</math>，读作A合取B，在[[GCT逻辑|GCT逻辑]]中，也叫[[联言命题|联言命题]]。也有称为[[合取命题|合取命题]]的。

==[[真值表|真值表]]定义==
'''A与B'''的真值表（也写作'''A'''<math>\land</math>'''B'''（逻辑学），'''A && B'''（计算机科学），或'''A<math>\cdot</math>B'''（电子学））。

<math>~A \land B</math> 的[[真值表|真值表]]:

{| class="wikitable" style="margin: 0 0 1em 1em"
|- bgcolor="#ddeeff" align="center"
|colspan=2|'''输入''' || '''输出'''
|- bgcolor="#ddeeff" align="center"
| <math> A</math>|| <math>B</math> || <math> A \land B</math>
|- bgcolor="#ddffdd" align="center"
|真 || 真 || 真
|- bgcolor="#ddffdd" align="center"
|真|| 假 || 假
|- bgcolor="#ddffdd" align="center"
|假 || 真 || 假
|- bgcolor="#ddffdd" align="center"
|假|| 假 || 假
|}
==推理規則==
===合成与分解规则===
====合取引入规则====
'''合取引入规则'''（∧+）（conjunction introduction rule）或'''联言推理的合成式'''，是经典逻辑中简单且[[有效|有效]]的[[论证形式|论证形式]]。这个论证形式有两个前提，''A''和''B''，可以直观地推出他们的合取。

其形式如下：

:''A'', 
:''B''.
:因此''A''且''B''.

形式化为：

:<math>\mathbf{A}, </math>
:<math> \mathbf{B} </math>
:<math> \vdash A \land B </math>

下面的例子是满足联言推理的合成式的论证：

:小橘子是正妹。
:小橘子是車神。
:因此小橘子是正妹也是車神。

另一個例子如下：

:1小于2
:6大于5
:因此，1小于2，而且6大于5。

還有一個例子如下：

:有一些[[PSPACE|PSPACE問題]]不是[[NL_(複雜度)|NL問題]]
:有一些[[EXPSPACE|EXPSPACE問題]]不是[[PSPACE|PSPACE問題]]
:因此有一些[[EXPSPACE|EXPSPACE問題]]不是[[PSPACE|PSPACE問題]]，而且有一些[[PSPACE|PSPACE問題]]不是[[NL_(複雜度)|NL問題]]

====合取消去规则====
'''合取消去规则'''（∧-）（Conjunction elimination rule）或'''联言推理的分解式'''，是另一个在经典逻辑中简单且[[有效|有效]]的[[论证形式|论证形式]]。从任何合取式中都可以直观地推论出两个前提中的任意一个。

其形式如下：

:''A''且''B''。
:因此''A''。

...或者，

:''A''且''B''.
:因此''B''.

用[[逻辑运算符|逻辑运算符]]描述为，

形式化为:
:<math> A \land B </math>
:<math> \vdash A </math>

或者,

:<math> A \land B </math>
:<math> \vdash B </math>

例如:
:有一些[[EXPSPACE|EXPSPACE問題]]不是[[PSPACE|PSPACE問題]]，而且有一些[[PSPACE|PSPACE問題]]不是[[NL_(複雜度)|NL問題]]
:因此有一些[[PSPACE|PSPACE問題]]不是[[NL_(複雜度)|NL問題]]

或者

:有一些[[EXPSPACE|EXPSPACE問題]]不是[[PSPACE|PSPACE問題]]，而且有一些[[PSPACE|PSPACE問題]]不是[[NL_(複雜度)|NL問題]]
:因此有一些[[EXPSPACE|EXPSPACE問題]]不是[[PSPACE|PSPACE問題]]

另一個例子如下：
:1小于2，而且6大于5。
:因此1小于2。

或者

:1小于2，而且6大于5。
:因此6大于5。

還有一個例子如下：
:小橘子是正妹也是車神。
:因此小橘子是正妹。

或者

:小橘子是正妹也是車神。
:因此小橘子是車神。

==性质==
逻辑与满足以下性质：

*[[结合律|结合律]]: <math>A \land (B \land C) \equiv (A \land B) \land C </math>

*[[交换律|交换律]]: <math>A \land  B \equiv B \land A </math>

*[[分配律|分配律]]: <math>(A \land (B \lor C)) \equiv ((A \land B) \lor (A \land C))</math>
:::<math>(A \lor (B \land C)) \equiv ((A \lor B) \land (A \lor C))</math> 

*[[幂等律|幂等律]]: <math>A \land A \equiv A </math>

*[[单调性|单调性]]: <math>(A \rightarrow B) \rightarrow ((C \land A) \rightarrow (C \land B))</math>
:::<math>(A \rightarrow B) \rightarrow ((A \land C) \rightarrow (B \land C))</math>

*'''保真性''': 所有变量的真值皆为“真”的命题在逻辑与运算后的结果为真。

*'''保假性''': 所有变量的真值皆为“假”的命题在逻辑与运算后的结果为假。

如果用[[二进制|二进制]]来表达真（1）和假（0），逻辑与运算与算术[[乘法|乘法]]运算一致。

==计算机科学中的运用==
[[File:AND_Gate_diagram.svg|thumb]]]]

===位运算===
逻辑与常在位运算中使用，比如：

* 0 and 0 = 0
* 0 and 1 = 0
* 1 and 0 = 0
* 1 and 1 = 1

* 1100 and 1010 = 1000

===编程中的使用===
在高等计算机编程中，逻辑合取“与”通常由内置算符and或&号来表达。很多编程语言还提供与逻辑与相应的短路求值控制结构。

布尔“与”也在[[SQL|SQL]]的运算符中使用。有些数据库区分大小写，需要"AND"符号。

在计算机科学中，AND运算符可以用来构造位屏蔽，以选择二进制序列的一部分。比如<code>1001'''1'''101 AND 0000'''1'''000 = 0000'''1'''000</code>用来取二进制序列的第五位。

==交集运算==
[[集合论|集合论]]中的[[交|交]]运算是用逻辑与来定义的：''x'' ∈ ''A'' ∩ ''B''当且仅当(''x'' ∈ ''A'') ∧ (''x'' ∈ ''B'')。因此逻辑与有很多与交集运算相同的性质，诸如结合律，交换律，分配律，及[[德·摩根定律|德·摩根定律]]。

==註釋==
{{reflist}}

== 参见 ==
*[[与门|与门]]

==相关网页==
{{Commons category}}
*[http://mathworld.wolfram.com/Conjunction.html Wolfram Mathematics Conjunction]
*[http://www.allmathwords.org/en/c/conjunction.html All Math Words Encyclopedia Conjunction]
*{{springer|title=Conjunction|id=p/c025080}}
*{{cite web|url= http://www.math.hawaii.edu/~ramsey/Logic/And.html|title= Property and truth table of AND propositions|archive-url= https://web.archive.org/web/20170506173821/http://www.math.hawaii.edu/~ramsey/Logic/And.html|archive-date= May 6, 2017}}

{{邏輯聯結詞}}
{{tsl|en|template:Common logical symbols}}

[[Category:邏輯聯結詞|Category:邏輯聯結詞]]
[[Category:布尔代数|L]]
[[Category:二元運算|L]]