{{pp-vandalism|expiry=2022-06-24T03:16:31+00:00|small=yes}}
'''閏年'''是指該年有366日，即較平常年份多出一日。閏年是為了彌補因人為曆法規定的年度天數365日和平均[[回歸年|回歸年]]的大約365.24219日的差距而設立的。不同曆法有不同[[置閏|置閏]]方法。[[儒略曆|儒略曆]]每4年置1閏日，平均1年是365.25日。[[格里高利曆|格里高利曆]]每400年少3次閏日，平均是365.2425日。多出來的一天為2月29日。

== 閏年規則 ==
目前使用的[[格里高利曆|格里高利曆]]闰年规则如下<ref>{{cite encyclopedia |first1=Ed. K. Lee |last1=Lerner |first2=Brenda W. |last2=Lerner |title= Calendar |encyclopedia=The Gale Encyclopedia of Science |year=2004 |publisher=[[Gale|Gale]] |location=Detroit, MI |ref = harv }}</ref>：
[[File:閏年演算法.png|thumb]]

# 公元年分非4的倍數，為平年。
# 公元年分為4的倍數但非100的倍數，为闰年。
# 公元年分為100的倍數但非400的倍數，为平年。
# 公元年分為400的倍數為閏年。
计算方法：
 function output=CGUMIRS(y)
 if rem(y ,4) == 0 && rem(y ,100) ~= 0 
       fprintf('%g year is leap year\n',y)
 elseif rem(y,400)==0
       fprintf('%g year is leap year\n',y)
 else
    fprintf('%g year is ordinary year\n',y)
 end

 <?php
 function checkLeapYear($year){
 	$leap = date('L', mktime(0, 0, 0, 1, 1, $year));
 	echo $year . ' ' . ($leap ? 'is' : 'is NOT') . " a leap year!<br />\n";
 }
 ?>

 bool isLeap(int year)
 {
     return((((year) % 4) == 0 && ((year) % 100) != 0) || ((year) % 400) == 0);
 }



每逢閏年，2月份有29日，平年的2月份為28日。

因此，[[1979年|1979年]]、[[2018年|2018年]]、[[2021年|2021年]]為平年，[[1980年|1980年]]、[[2020年|2020年]]逢4的倍数為閏年，[[1900年|1900年]]逢100的倍数但非400的倍數故為平年。[[2000年|2000年]]逢400的倍数又為閏年。

[[格里高利曆|格里高利曆]]与太阳年的长度仍有誤差，大約3200年又约差一日，因此[[约翰·赫歇尔|约翰·赫歇尔]]提议每逢3200的倍数不闰，如[[公元|公元]]3200年。但距此年分来临尚有{{#expr:3200 -{{CURRENTYEAR}} }}年之遥，因此还未曾真正纳入规则或实施过。又由于地球公转速度的不稳定与众多影响因素，届时是否需要纳入此规则成為新曆法有待商榷。

== 閏年年份 ==
[[數列|數列]]{{OEIS|id=A189917}}：
[[4|4]]、[[8|8]]、[[12|12]]、[[16|16]]、[[20|20]]、[[24|24]]、[[28|28]]、[[32|32]]、[[36|36]]、[[40|40]]、[[44|44]]、[[48|48]]、[[52|52]]、[[56|56]]、[[60|60]]、[[64|64]]、[[68|68]]……

== 公元前的閏年 ==
{{main|儒略曆#羅馬失閏}}
公元前之閏年出現在前1, 前5, 前9, 前13, ...，或記作1 BC，5 BC，9 BC，13 BC，...，或在數軸上記作0，-4，-8，-12，...。
判斷是否閏年，須將年份值減1再以「除以4」計算，或以數軸記法表示時直接計算（正負性不影響是否整除）。（因爲沒有[[0年|公元0年]]这一年（除非臨時約定，並注明對應等式），所以公元前1, 2, 3, 4, ... 年应该在數學數軸上對應著（但不是，或不應該在曆法上稱）公元0, -1, -2, -3, ... 年，而公元前1, 5, 9, 13, ... 年在數學數軸上對應著0, -4, -8, -12, ... 年，为4的倍数）。
記住：臨時約定的數學“0”年，等於天文學固有的“0”年，等於曆法公元前一年。

== 各種曆法中的閏年 ==
=== 陽曆中的「閏年」 ===
[[阳历|阳历]]中有闰日的年分叫闰年，相反就是[[平年|平年]]，平年為365天，闰年为366天。在[[公历|公历]][[格里高利曆|格里高利曆]]及[[纪年|纪年]]中，平年的二月为28天，闰年的二月为29天。'''闰年的2月29日为闰日'''。

=== 農曆中的「閏年」 ===
[[農曆|農曆]]作為[[陰陽曆|陰陽曆]]的一種，每月的天數依照月虧而定，一年的時間以12個月為基準，平年比一回歸年少約11天。為了合上地球圍繞太陽運行週期即回歸年，每隔2到3年，增加一個月，增加的這個月為閏月。閏月加到哪個月，以農曆曆法規則推斷，主要依照與農曆的二十四節氣相符合來確定。在加有閏月的那一年有13個月，歷年長度為383至385日，這一年也稱為閏年。如2023年兔年的農曆中，有兩個二月，通常稱為前二月和後二月（即閏月）。農曆閏年閏月的推算，3年一閏，5年二閏，19年七閏；農曆基本上19年為一周期對應於公曆同一時間，但亦有部分例外。如公曆的1963年5月27日、1982年5月27日、2001年5月27日、2020年5月27日及2058年5月27日這些個日子，都是閏四月初五，但2039年5月27日例外，當日為五月初五（[[端午節|端午節]]）。

[[梁啟超|梁啟超]]曾撰文<ref>{{cite web |author1=梁啟超 |title=《改用太陽曆法議》 |url=https://zh.m.wikisource.org/zh-hant/%E6%94%B9%E7%94%A8%E5%A4%AA%E9%99%BD%E6%9B%86%E6%B3%95%E8%AD%B0 |website=維基文庫 |publisher=《梁啟超文集/卷25》}}</ref>討論「間年置閏」不利於「財務會計」的原因。

== 参考文献 ==
{{Reflist}}

== 外部連結 ==
{{Commons category|Leap years}}
* {{cite web|last=Gray|first=Meghan|title=29 Leap Year|url=http://www.numberphile.com/videos/leapyear.html|work=Numberphile|publisher=[[布雷迪·哈蘭|Brady Haran]]|access-date=2017-09-22|archive-url=https://web.archive.org/web/20170522022942/http://www.numberphile.com/videos/leapyear.html|archive-date=2017-05-22|dead-url=yes}}
* {{britannica|333933|Leap year (Calendar)}}
* [https://web.archive.org/web/20170922100012/http://www.leapyearday.com/content/famous-leapers Famous Leapers]
* [https://web.archive.org/web/20100115082230/http://www.thesomnambulist.org/2008/12/galileo-day-campaign-29-february-2012/ Leap Day Campaign: Galileo Day]
* [http://news.nationalgeographic.com/2016/02/160226-leap-year-science-time-world-cultures-february/ History Behind Leap Year] {{Wayback|url=http://news.nationalgeographic.com/2016/02/160226-leap-year-science-time-world-cultures-february/ |date=20190726031048 }} [[National_Geographic_Society|National Geographic Society]]

{{-}}
{{時間}}
{{時間導航}}
{{曆法}}

{{DEFAULTSORT:閏年}}
[[Category:曆法|Category:曆法]]
[[Category:農曆|Category:農曆]]
[[Category:时间单位|Category:时间单位]]
[[Category:带有伪代码示例的条目|Category:带有伪代码示例的条目]]