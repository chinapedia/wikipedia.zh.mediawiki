{{NoteTA
|G1 = Electronics
|G2 = IT
}}
{{逻辑门}}
{| class="wikitable" align=right
|- bgcolor="#ddeeff" align="center"
|colspan=2|'''输入'''<br />A   B || '''输出'''<br /> A XOR B
|- bgcolor="#ddffdd" align="center"
|0 || 0 || 0
|- bgcolor="#ddffdd" align="center"
|0 || 1 || 1
|- bgcolor="#ddffdd" align="center"
|1 || 0 || 1
|- bgcolor="#ddffdd" align="center"
|1 || 1 || 0
|}
'''异或门'''（{{lang-en|'''Exclusive-OR gate'''}}，簡稱{{lang|en|'''XOR gate'''}}，又稱{{lang|en|'''EOR gate'''}}、{{lang|en|'''ExOR gate'''}}）是数字逻辑中实现[[逻辑异或|逻辑异或]]的[[逻辑门|逻辑门]]，功能见右侧[[真值表|真值表]]。若两个输入的电平相异，则输出为高电平（1）；若两个输入的电平相同，则输出为低电平（0）。

这一函数能实现模为2的加法，因此，异或门可以实现计算机中的二进制加法。[[半加器|半加器]]是由异或门和[[与门|与门]]组成的。
==概述==
下列包括逻辑门的3种符号：形状特征型符号（[[ANSI|ANSI]]/[[IEEE|IEEE]] Std 91-1984）、[[IEC|IEC]]矩形国标符号（IEC 60617-12）和不再使用的[[DIN|DIN]]符号（DIN 40700）。其他的逻辑门符号见[[逻辑门#符號表|逻辑门符号表]]。
{| class="wikitable" 
|- 
! rowspan="2" class="wikitable"| 表达式
! colspan="3" class="wikitable"| 符号
! rowspan="2" class="wikitable"| 功能表
! rowspan="2" class="wikitable"| 继电器逻辑
|- class="wikitable"
|ANSI/IEEE Std 91-1984
|IEC 60617-12
|DIN 40700
|-
| <math>Y = A \oplus B</math><br/><br/><math>Y = A \,\underline{\lor}\, B</math>
|[[File:XOR_ANSI.svg|125px]]
|[[File:IEC_XOR.svg|125px]]
|[[File:XOR_DIN.svg|125px]]<br/>或<br/>[[File:XOR_DIN_2.svg|125px]]
|align="center"|
{| class="wikitable" cellpadding="5"
|-style="background-color:#f0f0f0;"
! width="33%" |A
! width="33%" |B
! width="34%" |<math>Y = A \oplus B</math>
|----- align="center"
||0 ||0 ||'''0'''
|----- align="center"
||0 ||1 ||'''1'''
|----- align="center"
||1 ||0 ||'''1'''
|----- align="center"
||1 ||1 ||'''0'''
|}
|[[File:Relay_xor.svg|File:Relay xor.svg]]
|}

<math>Y = A \oplus B</math>等价於<math>Y = A \cdot \overline{B} + \overline{A} \cdot B</math>。

异或的运算顺序如下：
:<math>\left( w \,\underline{\lor}\, x \,\underline{\lor}\, y \,\underline{\lor}\, z \right) \Leftrightarrow 
\left( \left( \left( w \,\underline{\lor}\, x \right) \,\underline{\lor}\, y \right) \,\underline{\lor}\, z \right)</math>

输入的顺序对输出没有影响，因为异或满足结合律。

与非逻辑实现的异或运算的逻辑表达式如下：
:<math>x \,\underline{\lor}\, y \Leftrightarrow \left( x \,\overline{\land}\, \left( x \,\overline{\land}\, y \right) \right) \,\overline{\land}\, \left( y \,\overline{\land}\, \left( x \,\overline{\land}\, y \right) \right)</math>

== 硬件描述和引脚分配 ==
异或门是基本的逻辑门，因此在[[晶体管-晶体管逻辑电路|TTL]]和[[CMOS|CMOS]][[集成电路|集成电路]]中都是可以使用的。标准的{{link-en|4000系列|4000 series}}[[CMOS|CMOS]][[集成电路|集成电路]]为4070，包含四个独立的2输入异或门。4070替换了可靠性差的4030，但二者的引脚分配相同。下面是引脚分配表：
<table>
<td>
[[File:4070_Pinout.svg|left]]集成电路的引脚分配图]]
</td>
<td>
{{quote|
# 输入A1
# 输入B1
# 输出Q1
# 输出Q2
# 输入A2
# 输入B2
# V<sub>G</sub>
# 输入A3
# 输入B3
# 输出Q3
# 输出Q4
# 输入A4
# 输入B4
# V<sub>CC</sub>}}
</td>
</table>

包括[[NXP|NXP]]在内的很多半导体制造商都生产这一元件，封装方式分为直插[[双列直插式封装|DIP封装]]和{{link-en|小输出线集成电路封装|small-outline integrated circuit|SOIC封装}}两种。元件的[[数据表|数据表]]可在大多数元件数据库查询到。

== 传输门连线 ==
异或门可以用[[MOSFET|MOSFET]]组成。下图是[[CMOS|CMOS]]实现的异或门。<ref name="Falstad">{{Cite web |url=http://www.falstad.com/circuit |title=Paul Falstad's Circuit Simulator Applet |access-date=2010-08-04 |archive-date=2013-01-21 |archive-url=https://web.archive.org/web/20130121173623/http://www.falstad.com/circuit/ |dead-url=no }}</ref>
[[File:CmosXORGate.png|thumb]]

==备选方案==
[[File:Cmos_xor.svg|thumb]]
[[File:Overzicht_XOR.jpg|thumb]]
輸入1和1時，XOR會輸出0。因此，不可能只使用AND和OR組成XOR，必須包含[[反相器|反相器]]（NOT）。

如果没有特定的逻辑门，我们可以用其他现有的逻辑门构建。显而易见的一个方法是用同或门後接一个非门来实现异或门。如果按照逻辑表达式<math>A \cdot \overline{B} + \overline{A} \cdot B</math>，我们可以利用[[与门|与门]]、[[或门|或门]]和[[非门|非门]]来构建异或门。但是，这种方法需要3种共5个逻辑门。

异或门可利用四个[[与非门|与非门]]或五个[[或非门|或非门]]来实现，连线方法见下图。因为与非门和或非门是“通用的门电路”，因此任何一个逻辑函数都可单独由[[与非逻辑|与非逻辑]]或[[或非逻辑|或非逻辑]]来实现。

{| style="text-align:center; margin: 1em auto 1em auto"
|[[File:XOR_from_NAND.svg|frame]]
|[[File:XOR_from_NOR.svg|frame]]
|}
{{clear}}

留意下表，OR和NAND中間兩行輸出跟XOR相同，第一和第四行不同。所以，利用OR和NAND再加上AND可以組成XOR。
{| class="wikitable" 
|-
!  A  !!  B  !! OR !! NAND !! XOR
|- align="center"
| 0 || 0 || 0 || 1 || 0
|- align="center"
| 0 || 1 || 1 || 1 || 1
|- align="center"
| 1 || 0 || 1 || 1 || 1
|- align="center"
| 1 || 1 || 1 || 0 || 0
|}

==2个输入以上的情况==
若严格的理解[[逻辑异或|逻辑异或]]的定义，或观察IEC符号，我们就会提出关於2输入以上的异或门是否能有正确表现的问题。如果一个逻辑门能有3个或更多的输入，并能得到正确的输出，而且输入中的一个为真，那么这个逻辑门在效果上是一个{{link-en|单热|one-hot}}检测器，而其实这是仅有2个输入的情况。不过，实际中极少用这种方法来实现这一装置。

将连续相接的输入接入[[级联|级联]]的异或门是很常见的连接方式。首先将2个信号作为一个异或门的输入，然後将其输出以及第3个信号作为第二个异或门的输入，对需要接入的其他信号反复进行以上操作，这样就会得到如下结果：若输入中高电平（1）的个数是奇数，输出为高电平（1）；若输入中高电平（1）的个数是偶数，输出为低电平（0）。这种特性在实际应用中可实现[[奇偶校验位|奇偶发生器]]或模2[[加法器|加法器]]。

例如，74LVC1G386微型集成电路是3输入异或门，可实现奇偶发生器<ref name="74LVC1G386">[http://www.nxp.com/documents/data_sheet/74LVC1G386.pdf 74LVC1G386] {{webarchive|url=https://web.archive.org/web/20091229193456/http://www.nxp.com/documents/data_sheet/74LVC1G386.pdf |date=2009-12-29 }}{{link-en|数据表|data sheet}}</ref>。

[[Verilog|Verilog]]的缩减运算符"^"能将任意位输入进行从高位到低位逐次异或运算，得到一位输出。

==其他应用==
=== 加法器 ===
[[File:Half_Adder.svg|right]]
异或门可以作为一位[[加法器|加法器]]，可将任何2位相加得到1个输出。若两个输入的值均为1，则得到10的结果，而[[与门|与门]]由两个输入的值控制进位的输出。以上是[[半加器|半加器]]的主要原理。

=== 异或密码 ===
{{seealso|异或密码}}
安全加密算法[[一次性密碼本|一次性密碼本]]就是利用异或门实现的。加密的原理是将要加密的文件（[[明文|明文]]）编码成二进制序列，然後将与被加密的消息长度相同的随机二进制序列作为[[密钥|密钥]]，再将明文与密钥的每一位依次进行按位异或运算，得到[[密文|密文]]。若将密文与密钥的每一位依次进行按位异或运算，就能得到原文。

=== 异或校验 ===
{| cellpadding="1" style="float: right; border: 1px solid #8888aa; background: #F9F9F9; padding: 5px; font-size: 85%; margin: 0 5px 0 5px;"
| 101 XOR 011 = 110
|-
| 110 XOR 011 = 101
|-
| 110 XOR 101 = 011
|}
将两个3位二进制序列<tt>101</tt>和<tt>011</tt>进行异或[[奇偶校验位|奇偶校验]]可得到异或校验和<tt>110</tt>（右表第一行右侧）。若序列<tt>101</tt>丢失，我们可以将已知序列<tt>011</tt>与异或校验和进行异或运算得到丢失的序列（右表第二行）。

=== 异或门倍频器 ===
[[File:Frequenzverdoppler_mit_XOR.png|right]]
将方波信号和利用[[RC電路|RC電路]]延迟的方波信号作为异或门的两个输入，可以很容易的得到频率达到100 MHz以上的[[方波|方波]]。输出得到的针尖脉冲是[[锁相环|锁相]]的，其频率会与RC电路的[[时间常数|时间常数]]基本保持同步。由於这种[[倍频器|倍频器]]不需要共振濾波器，输入信号可以具有经过[[频率调制|调频]]的任意[[占空比|占空比]]，也可以是强信号。

=== 可控反相器 ===
将异或门的一个输入作为信号输入端，另一个输入作为控制端，若控制端为低电平（0），信号输出不变；若控制端为高电平（1），异或门表现为[[反相器|反相器]]，信号输出反相。

==参见==
{{commonscat|XOR gates}}
*[[逻辑异或|逻辑异或]]
*[[同或门|同或门]]
*[[逻辑代数|逻辑代数]]
*[[逻辑门|逻辑门]]

==参考文献==
{{reflist}}
*{{cite book
|author = Tietze, Ulrich; Schenk, Christoph
|title = Halbleiter-Schaltungstechnik
|publisher = Springer | ISBN = 3-540-42849-6 |date=2002年12月}}
*{{cite book
|author = Beuth, Klaus
|title = Digitaltechnik
|publisher = Vogel| ISBN = 3-8023-1755-6 |date=1998年10月}}
*{{cite book
|author = Seifart, Manfred; Beikirch, Helmut
|title= Digitale Schaltungen
|publisher = Technik| ISBN = 3-341-01198-6 |date=1998年5月}}
{{数字电路}}
{{逻辑联结词}}

[[Category:逻辑门|Category:逻辑门]]

[[sv:Disjunktion_(logik)#OR-grind_och_XOR-grind|sv:Disjunktion (logik)#OR-grind och XOR-grind]]