{{noteTA|G1=IT
1=zh-cn:图像传感器;zh-tw:感光元件;}}
'''去馬賽克'''（{{lang-en|demosaicing}}，也写作{{lang|en|de-mosaicing}}、{{lang|en|demosaicking}}或{{lang|en|debayering}}）是一種{{le|數位影像處理|Digital image processing}}[[演算法|演算法]]，目的是从覆有{{link-en|濾色陣列|Color filter array}}（{{lang|en|Color filter array}}，簡稱CFA）的[[感光元件|感光元件]]所輸出的不完全色彩取樣中，重建出全彩影像。此法也稱為'''濾色陣列內插法'''（{{lang|en|CFA interpolation}}）或'''色彩重建法'''（{{lang|en|Color reconstruction}}）<ref>{{Cite web|title=沿著一維特徵均勻處理的去馬賽克方法|author=Boris Ajdin|coauthors=Matthias B. Hullin, Christian Fuchs, Hans-Peter Seidel, Hendrik P. A. Lensch MPI Informatik|publisher=Saarbrucken Germany|url=https://www.uni-ulm.de/fileadmin/website_uni_ulm/iui.inst.100/institut/mitarbeiter/cfuchs/Ajdin-2008-DSF.pdf|format=PDF|accessdate=2016-04-26|deadurl=yes|archiveurl=https://web.archive.org/web/20160509204449/https://www.uni-ulm.de/fileadmin/website_uni_ulm/iui.inst.100/institut/mitarbeiter/cfuchs/Ajdin-2008-DSF.pdf|archivedate=2016-05-09}}</ref>。

大多數現代[[數位相機|數位相機]]使用單個覆上濾色陣列的感光元件來取得影像，所以去馬賽克是[[影像處理管線|影像處理管線]]（{{lang|en|color image pipeline}}）中一個必要環節，以將影像重建成一般可瀏覽的格式。許多[[數位相機|數位相機]]也能夠以[[RAW|原始圖檔]]儲存影像，並允許使用者將之取出，並使用專業影像處理軟體去馬賽克，而不是使用相機內建的[[韌體|韌體]]處理。

== 目標 ==
去馬賽克演算法的目標是從CFA[[色彩通道|色彩通道]]（Color channels）輸出的不完全取樣中重建出全彩影像，即重建出各像素完整的[[RGB|RGB三原色]]組合。此演算法應俱備以下特點：
* 避免錯誤顏色雜訊（{{lang|en|False color artifacts}}）產生，例如色彩[[混疊|混疊]]（{{lang|en|Aliases}}）或出現拉鍊狀（Zippering，即鄰近像素出現突兀且不自然的強度改變，有一種拉鍊狀紋路的感覺）以及[[紫邊|紫邊]]（{{lang|en|Purple fringe}}）雜訊；
* 尽量保留影像[[分辨率|解析度]]；
* 在相機內的硬體限制下，以较低[[計算複雜度|計算複雜度]]（Computational complexity）實現快速有效的運算處理；
* 演算法易于分析，以使[[降噪|降噪]]（{{lang|en|Noise reduction}}）更精確。

== 濾色陣列 ==
{{main|濾色陣列}}
[[File:Bayer_pattern_on_sensor.svg|缩略图]]
濾色陣列是[[色彩|色彩]]過濾器在感光元件前的一塊濾色馬賽克。商務上最常使用的濾色陣列配置是[[拜爾濾色鏡|拜爾濾色鏡]]，如图所示。它的奇數列由[[紅色|紅色]]（R）與[[綠色|綠色]]（G）過濾器交替排列組成，而偶數列则由綠色（G）與[[藍色|藍色]]（B）過濾器交替排列組成。綠色過濾器数量是紅色、藍色的兩倍，这是為了模擬[[人眼|人眼]]對綠光更高的敏感度。

因為濾色陣列的色彩取樣會自然地產生[[混疊|混疊]]問題，所以通常會在感光元件以及鏡頭的光程之間配置光學[[抗混疊濾波器|抗混疊濾波器]]，以便消除內插法帶来的錯誤顏色雜訊以及色彩混疊。<ref>{{Cite book|url=http://books.google.com/?id=wsxk03-gceUC&pg=PA30&lpg=PA30&dq=anti-aliasing+lithium-niobate|title=寫給攝影師的數位影像|publisher=Focal Press|year=2001|isbn=0-240-51590-0|edition=Fourth|author=Adrian Davies 與 Phil Fennessy}}</ref>

因為感應器上的每個像素都在濾色器後方，所以輸出結果是一個像素值的矩陣，每個數值代表三種濾出顏色之一的原始強度，因此需要去馬賽克演算法以估算每個像素各种色彩的色階（{{lang|en|Color levels}}），而不僅僅是一種色彩的分量。

== 圖解 ==
要從濾色陣列输出的資料中重建出全彩影像，我們可以用[[內插法|內插法]]來填补空缺。用來做影像重建的數學運算法有不同的实现，总稱為去馬賽克演算法。

在這個範例裡，我們使用[[Adobe_Photoshop|Adobe Photoshop]]的[[双三次插值|雙三次內插法]]來模擬使用拜爾濾色鏡裝置（例如[[數位相機|數位相機]]）的去馬賽克處理。

下面這張影像模擬了拜爾濾色感光元件的輸出；每個像素僅有紅、綠、藍色元素。相应的原始圖檔与去馬賽克重建的圖檔並排顯示於章節底部。

{|
|-
| ||[[File:Shades_framed_bayer.png|240px]]
|-
| ||[[拜爾濾色鏡|拜爾濾色鏡]] 範例
|
|-
|[[File:shades_bayer_r.png|240px]]
|[[File:shades_bayer_g.png|240px]]
|[[File:shades_bayer_b.png|240px]]
|-
|紅色元素
|綠色元素
|藍色元素
|}

數位相機一般會用以上方法來重建RGB影像，生成的影會像以下所示：

{|
|-
|[[File:shades_framed_aa.jpg|100px]]
|[[File:shades_framed_dc.jpg|100px]]
|-
|原始圖
|重建圖
|}

重建影像通常會在顏色均匀的區域表現精確，但解析度（細節與銳度）會有一些損失，也會有邊緣雜訊。例如，圖像中這些字母的邊緣可見明顯的彩色條紋（{{lang|en|Color fringes}}）與些許粗糙感（{{lang|en|Roughness}}）。

== 演算法 ==

=== 單純內插法（{{lang|en|Simple interpolation}}） ===
單純內插法属于均匀网格上的[[多變數內插法|多變數內插法]]（{{lang|en|Multivariate interpolation}}），演算法对鄰近方格的相同色彩元素进行相對直接的數學運算。最簡單的方法是[[近鄰內插法|近鄰內插法]]（{{lang|en|Nearest-neighbor interpolation}}），直接複製同一色彩通道（{{lang|en|Color channel}}）的鄰接像素。若要顾及影像品質，這種方法就不合適了，但它是在有限運算資源下產生影像預覽的有效方法。

另外一種方式是[[双线性插值|雙線性內插法]]，用兩個或四個鄰接紅色像素的平均計算出非紅色像素的紅色數值，藍色與綠色計算方式类似。各顏色平面獨立內插是更複雜的方法，包括[[双三次插值|雙三次內插法]]、[[样条插值|樣條內插法]]，以及[[蘭克索司重取樣法|蘭克索司重取樣法]]（{{lang|en|Lanczos resampling}}）。

儘管這些方法在影像均匀的區域可以獲得不錯的結果，但使用純色濾色陣列时，影像的邊緣以及細節之处容易產生嚴重的去馬賽克雜訊
<ref>{{cite paper| title=使用合成式濾色陣列去馬賽克達成有效的雜訊抑制| author=Lanlan Chang 與 Yap-Peng Tan| url=http://www3.ntu.edu.sg/home5/CHAN0069/JEI013003.pdf| pages=2| deadurl=yes| archiveurl=https://web.archive.org/web/20091229063407/http://www3.ntu.edu.sg/home5/CHAN0069/JEI013003.pdf| archivedate=2009-12-29| access-date=2016-04-26}}</ref>。不过，線性內插与空間-光譜式（{{lang|en|Spatio-spectral}}），或稱全色（{{lang|en|Panchromatic}}）濾色陣列結合時，可以獲得非常良好的結果。<ref>{{cite paper |url=http://sisl.seas.harvard.edu/files/pub/HirakawaWolfe2007.pdf |title=為了強化影像保真度的空間-光譜濾色陣列設計 |author=Keigo Hirakawa 與 Patrick J. Wolfe |deadurl=yes |archiveurl=https://web.archive.org/web/20110720195627/http://sisl.seas.harvard.edu/files/pub/HirakawaWolfe2007.pdf |archivedate=2011-07-20 |access-date=2016-04-26 }}</ref>
去馬賽克時还可对影像进行簡單建模。相同区域的自然影像色彩比率應保持相同，影像感測內插法（{{lang|en|Image sensitive interpolation}}）就是利用了这点
<ref>R. Kimmel. [http://www.cs.technion.ac.il/~ron/PAPERS/Kim_TIP1999.pdf 去馬賽克: 從彩色CCD範例做影像重建] {{Wayback|url=http://www.cs.technion.ac.il/~ron/PAPERS/Kim_TIP1999.pdf |date=20170922000142 }}。 IEEE Trans. on Image Processing, 8(9):1221–8, Sept. 1999.</ref>。

=== 影像裡的像素相關性（{{lang|en|Pixel correlation}}）===
更成熟的去馬賽克演算法利用色彩影像中像素的空間、光譜關聯<ref>{{cite paper|title=使用合成式濾色陣列去馬賽克達成有效的雜訊抑制|author=Lanlan Chang 與 Yap-Peng Tan|url=http://www3.ntu.edu.sg/home5/CHAN0069/JEI013003.pdf|deadurl=yes|archiveurl=https://web.archive.org/web/20091229063407/http://www3.ntu.edu.sg/home5/CHAN0069/JEI013003.pdf|archivedate=2009-12-29|access-date=2016-04-26}}</ref>。空間相關是指像素在影像的小块匀質區内的色彩值往往相似。光譜相關則是指在小块影像裡不同色彩平面像素值之間的依賴性。

這种演算法包括：

* 可變數目梯度（{{lang|en|Variable Number of Gradients}}）<ref>{{cite web |title=使用一個門檻值基礎的可變數目梯度實現內插法 |author=Ting Chen |url=http://scien.stanford.edu/pages/labsite/1999/psych221/projects/99/tingchen/main.htm |deadurl=yes |archiveurl=https://web.archive.org/web/20120422035609/http://scien.stanford.edu/pages/labsite/1999/psych221/projects/99/tingchen/main.htm |archivedate=2012-04-22 |accessdate=2016-04-27 }}</ref>： 此內插法計算相关像素周围的梯度，使用較低的梯度（表示影像更均勻且更類似的部份）來估计。第一版[[dcraw|dcraw]]軟體中就有使用，但會有色彩雜訊的困擾。
* 像素群聚（{{lang|en|Pixel Grouping}}）<ref>{{cite web |title=為濾色陣列去馬賽克的像素群聚 |author=Chuan-kai Lin, Portland State University |year=2004 |url=https://sites.google.com/site/chklin/demosaic/ |access-date=2016-04-27 |archive-date=2016-09-23 |archive-url=https://web.archive.org/web/20160923211135/https://sites.google.com/site/chklin/demosaic/ |dead-url=no }}</ref>： 使用有關自然景像的假設來估计。與可變數目梯度演算法相比較，它在自然影像上色彩雜訊。第8.71版的[[dcraw|dcraw]]引進了這個方法，稱为做圖案化像素群聚（{{lang|en|Patterned pixel group}}）。
* 自适应均匀定向（{{lang|en|Adaptive homogeneity-directed}}）：此內插法能選擇內插的方向，以最大化同質標準（{{lang|en|Homogeneity metric}}），因此一般情況下能夠最小化色彩雜訊<ref>{{cite paper| title=自適性同次定向去馬賽克演算法| author=Kiego Hirakawa; [[Thomas_W._Parks|Thomas W. Parks]]| url=http://nagykrisztian.com/store/hirakawa.pdf| format=PDF| access-date=2016-04-27| archive-date=2021-02-24| archive-url=https://web.archive.org/web/20210224013012/http://nagykrisztian.com/store/hirakawa.pdf| dead-url=no}}</ref>。它已被建置在dcraw的最近版本裡<ref>[http://www.cybercom.net/~dcoffin/dcraw/ 在Linux解碼原始數位相片的圖檔] {{Wayback|url=http://www.cybercom.net/~dcoffin/dcraw/ |date=20161019024525 }}, Dave Coffin.</ref>。

=== 動態影像超解析度（Video super-resolution）/ 去馬賽克 ===
已有資料顯示，[[超解析度|超解析度]]（Super-resolution）與去馬賽克是一個相同問題的兩個面向，而用統一的內容將它們一起提出來說明是很合理的。<ref>{{cite journal | url = http://www.duke.edu/%7Esf59/TIP_Demos_Final_Color.pdf | title = 彩色影像多重畫格去馬賽克以及超解析度 | author = Sina Farsiu, Michael Elad, Peyman Milanfar | journal = IEEE Trans. on Image Processing | year = 2006 | volume = 15 | issue = 1 | pages = 141–159 | doi = 10.1109/TIP.2005.860336 | access-date = 2016-04-27 | archive-date = 2009-12-29 | archive-url = https://web.archive.org/web/20091229014209/http://www.duke.edu/~sf59/TIP_Demos_Final_Color.pdf | dead-url = no }}</ref>記住，這兩個問題會帶出混疊的問題。因此，特別是在動態影像（多重畫格）的重建案例中，這種結合超解析度與去馬賽克的方法提供了最佳解決方案。

=== 取捨 ===
舉例來說，某些方法可能对自然場景有較好的結果，而某些則對印刷物有較佳的顯現。这反應了估计不能准确感知的像素所面临的內在問題。当然，还有常见的估算速度與估算品質之间的取捨。

== 電腦影像處理軟體的使用 ==
從[[數位相機|數位相機]]取出[[RAW|原始圖檔]]後，可以使用專門的電腦軟體來選擇不同的去馬賽克演算法處理，以取代相機內寫死而無法再更替的演算法。一些原始圖檔處理程式，例如[[RawTherapee|RawTherapee]]，让使用者選取想要使用的演算法，不過大多數圖像處理程式已設定成使用一種特定的演算法來處理原始圖檔。各個攝影師處理的原始圖檔细节和紋理的差異，主要來自於選擇不同的去馬賽克演算法；通常攝影師會以自己的審美觀使用自己所偏好的應用程式。

另外，由去馬賽克所產生的色彩雜訊可以为辨識偽造圖片（{{lang|en|Photo forgeries}}）提供重要線索<ref>{{cite journal |url=http://pages.cs.wisc.edu/~huangyz/cvpr08_Huang.pdf |title=基於二次像素相關模式（Quadratic pixel correlation model）的去馬賽克辨識程式，使用於數位相片認證 |author=YiZhen Huang 與 YangJing Long |journal=Proc. IEEE Conference on Computer Vision and Pattern Recognition |year=2008 |pages=1–8 |deadurl=yes |archiveurl=https://web.archive.org/web/20100617081150/http://pages.cs.wisc.edu/~huangyz/cvpr08_Huang.pdf |archivedate=2010-06-17 |access-date=2016-04-28 }}</ref>。

== 相關文章 ==
*[[拜爾濾色鏡|拜爾濾色鏡]]

== 參考資料 ==
{{Reflist}}

== 備註 ==
{{noteFoot|1=}}

== 延伸閱讀 ==
* {{en}}[https://web.archive.org/web/20160305014854/http://www.imageval.com/ISET-Manual-201506/iset/imgproc/demosaic/index.html Comparison of different interpolations], ImagEval Consulting LLC
* {{en}}[https://web.archive.org/web/20110720045919/http://scien.stanford.edu/pages/labsite/1999/psych221/projects/99/tingchen/ A Study of Spatial Color Interpolation Algorithms for Digital Cameras] and especially [https://web.archive.org/web/20110111163458/http://scien.stanford.edu/pages/labsite/1999/psych221/projects/99/tingchen/algodep/vargra.html description of Variable Number of Gradients algorithm] by Ting Chen, Stanford University
* {{en}} K. Parulsi and K. Spaulding (2003).  ''Color image processing for digital cameras.''  In ''Digital Color Imaging'', G. Sharma, ed.  Boca Raton, Florida: CRC Press.  727–757.
* {{en}}[[HowStuffWorks|HowStuffWorks]]: [http://electronics.howstuffworks.com/digital-camera4.htm How Digital Cameras Work, More on Capturing Color] {{Wayback|url=http://electronics.howstuffworks.com/digital-camera4.htm |date=20100326075125 }}, with a demosaicing algorithm at work animation
* {{en}}[https://web.archive.org/web/20070609100554/http://scien.stanford.edu/class/psych221/projects/98/demosaic/kodak/ Demosaicing in the Kodak DC210 Digital Camera], Cleve Cheng, Mar 13 1998
* {{en}}{{cite web | url = http://pixel.cs.vt.edu/courses/5814/p3b.html | title = Evaluating Algorithms for the Demosaicing of Bayer Arrays | author = Roger W. Ehrich | work = Computer Science Courses | publisher = Virginia Tech CS Department | deadurl = yes | archiveurl = https://web.archive.org/web/20070912182334/http://pixel.cs.vt.edu/courses/5814/p3b.html | archivedate = 2007-09-12 | accessdate = 2016-04-26 }}(broken link)
* {{en}}[http://www.site.uottawa.ca/~edubois/courses/CEG4311/slides/InterpolationRGBcomponents.ppt Interpolation of RGB components in Bayer CFA images] {{Wayback|url=http://www.site.uottawa.ca/~edubois/courses/CEG4311/slides/InterpolationRGBcomponents.ppt |date=20191221195443 }}, by Eric Dubois
* {{en}}[http://www.eie.polyu.edu.hk/~enyhchan/J-TIP-CDemosaicking_using_VarCD.pdf Color Demosaicing Using Variance of Color Differences] {{Wayback|url=http://www.eie.polyu.edu.hk/~enyhchan/J-TIP-CDemosaicking_using_VarCD.pdf |date=20161224061941 }} by King-Hong Chung and Yuk-Hee Chan
* {{en}}[https://web.archive.org/web/20091229063407/http://www3.ntu.edu.sg/home5/CHAN0069/JEI013003.pdf Hybrid color filter array demosaicking for effective artifact suppression] by Lanlan Chang and Yap-Peng Tan
* {{en}}[https://web.archive.org/web/20100108045355/http://www.csee.wvu.edu/~xinl/papers/demosaicing_survey.pdf Image Demosaicing: A Systematic Survey by Xin Li], Bahadir Gunturk and Lei Zhang
* {{en}}[https://web.archive.org/web/20081030224717/http://www.ece.gatech.edu/research/labs/MCCL/pubs/dwnlds/p5.pdf Demosaicking: Color Filter Array Interpolation in Single-Chip Digital Cameras], B. K. Gunturk, J. Glotzbach, Y. Altunbasak, R. W. Schafer, and R. M. Mersereau
* {{en}}[https://web.archive.org/web/20110720195627/http://sisl.seas.harvard.edu/files/pub/HirakawaWolfe2007.pdf Spatio-Spectral Color Filter Array Design for Enhanced Image Fidelity], Keigo Hirakawa and Patrick J. Wolfe
* {{en}}[https://web.archive.org/web/20160303221338/http://dcmc.ee.ncku.edu.tw/~hwt94d/ Effective Soft-Decision Demosaicking Using Directional Filtering and Embedded Artifact Refinement], Wen-Tsung Huang, Wen-Jan Chen and Shen-Chuan Tai
* {{en}}[http://www.ipol.im/pub/algo/bcms_self_similarity_driven_demosaicking/ Similarity-based Demosaicking] {{Wayback|url=http://www.ipol.im/pub/algo/bcms_self_similarity_driven_demosaicking/ |date=20120620132340 }} by Antoni Buades, Bartomeu Coll, Jean-Michel Morel, Catalina Sbert, with source code and online demonstration
* {{en}}[https://web.archive.org/web/20110727115526/http://www.danielemenon.netsons.org/top/demosaicking-list.php A list of existing demosaicing techniques]
* {{en}}[http://thedailynathan.com/demosaic/ Interactive site simulating Bayer data and various demosaicing algorithms, allowing custom images] {{Wayback|url=http://thedailynathan.com/demosaic/ |date=20191031025650 }}
* {{en}}[http://www.ceremade.dauphine.fr/~sira/Demosaicking.html Geometry-based Demosaicking]{{Webarchive|url=https://archive.today/20130217114610/http://www.ceremade.dauphine.fr/~sira/Demosaicking.html |date=2013-02-17 }} by Sira Ferradans, Marcelo Bertamio and Vicent Caselles with source code and reference paper.
* {{en}}[https://web.archive.org/web/20160304065534/http://tx.technion.ac.il/~rc/Demosaicing_algorithms.pdf Review of common Bayer demosaicing algorithms]
* {{en}}[https://web.archive.org/web/20160421170330/http://web.engr.illinois.edu/~khashab2/files/2013_2014_demosaicing/demosaicing.html A comprehensive list of demosaicing codes and binaries available online]

[[Category:颜色|Category:颜色]]
[[Category:數位攝影|Category:數位攝影]]
[[Category:图像传感器|Category:图像传感器]]
[[Category:图像处理|Category:图像处理]]