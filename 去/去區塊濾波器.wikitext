{{noteTA
|G1=IT
|1=zh-tw:視訊;zh-cn:视频;
}}

去區塊濾波器（{{lang-en|'''D'''e'''b'''locking '''F'''ilter}}，[[縮寫|縮寫]]：'''DBF'''）又稱去塊效應濾波器是一種減少在區塊邊界產生視覺上瑕疵的濾波器。這種視覺瑕疵可稱為區塊效應（Blocking Effect），這種效應主要構成原因是因為以區塊為基礎（Block-Based）的[[編解碼器|編解碼器]]（Codec）所造成的人造邊界（Blocking Artifacts）。以區塊為基底的編解碼器有很多種，[[H.264/MPEG-4_AVC|H.264/高階視訊編碼]]（Advanced Video Coding, AVC）以及[[High_Efficiency_Video_Coding|H.265/高效率視訊編碼]]（High Efficiency Video Coding, HEVC）<ref name=OverviewHEVCIEEE2012/>都是這類型的編解碼器，而這些編解碼器均會在解碼（Decode）過程中利用去區塊濾波器將區塊效應的影響降低以改善視訊影像的品質。

==介紹==
以區塊為基礎的編解碼器在預測（Prediction）或是轉換（Transform）編碼時，無論是高階視訊編碼中的[[Macroblock|宏區塊]]（Macroblock）或是高效率視訊編碼中的[[編碼樹單元|編碼樹單元（Coding Tree Unit）]]都會將影像分成區塊再做編碼。因此影像重建時會造成在區塊間邊緣處不連續的現象，這個現象稱為區塊效應，而這些區塊邊緣間視覺上的不連續稱為人造邊界。人造區塊主要成因可在細分成兩個，第一個是因為預測時出現不準的地方稱為殘量（Residual），殘量會利用[[離散餘弦變換|離散餘弦變換（Discrete Cosine Transform, DCT）]]做量化（Quantization），由於量化與反量化會產生誤差，因此會在區塊邊界上產生視覺上的不連續。第二個原因是來自[[運動補償|運動補償]]，同一個畫面內相鄰區塊可能不是從前幾個編碼影像中相鄰區塊取得來做預測，因此造成不連續的現象。同樣地，[[幀內編碼|畫面內預測]]的方式也可能會造成影像不連續。<ref name=Deblocking Filter（去方块滤波）/>
去區塊濾波器主要有三個工作，分別是邊界強度計算（Boundary Strength Computation）、邊界分析（Boundary Analysis）及濾波器應用（Filter Implementation）。
:#邊界強度計算：主要是去計算邊界強度（Boundary Strength, Bs）這個參數，邊界強度呈現出相鄰區塊邊界不連續的程度，而這個參數會跟量化的方式、區塊類型、移動向量以及邊界取樣的梯度有關。
:#邊界分析：因為區塊邊緣不連續的現象可能真的是物件邊緣所產生，並非所謂的人造邊界，這個工作主要在判斷是否為人造邊界。
:#濾波器的應用：做完前面兩個工作可以決定邊界強度以及判斷是否真的為人造邊界，這個工作主要對人造邊界依造對應的邊界強度選擇該應用的濾波器。

==高階視訊編碼（AVC）的去區塊濾波器==
高階視訊編碼的去區塊濾波器會對每個宏區塊做濾波，其濾波順序為由左上到右下。下面詳細介紹高階視訊編碼如何做去區塊編碼，首先將一個16x16的宏區塊切割成更小的4x4區塊，如圖一所示。每個4x4的區塊會做到濾波的邊界為左邊跟上面的邊界，分別屬於垂直邊界與水平邊界。先利用水平濾波器對垂直邊界做濾波之後再利用垂直濾波器對水平邊界做濾波，圖一內的紅色數字為做濾波的順序。特別注意到如果4x4區塊的邊界為影像的邊界則不做區塊濾波。
[[File:DBF4x4.png|center]]
=== 邊界強度 ===
每一個4x4的亮度區塊中需要做濾波的區塊都會計算出一個邊界強度。色度區塊的邊界強度是對亮度區塊已經求得的邊界強度做取樣，如圖二所示。
[[File:DBFBS.png|center]]
計算邊界強度（Bs）以決定兩個4x4的區塊間不連續的程度。高階視訊編碼的邊界強度值從0到4。若兩個區塊皆屬於畫面內編碼（Intra-coded）且邊界屬於宏區塊的邊界，則這兩個區塊間的邊界強度為4。若其中一個為畫面內編碼或是不在宏區塊的邊界上，則這兩個區塊間的邊界強度為3。若這個區塊的轉換係數非0，則這兩個區塊間的邊界強度為2。最後如果使用不同的參考影像或是兩個區塊間的移動向量（Motion Vectors）大於等於4，則這兩個區塊間的邊界強度為1。剩下的情況，兩個區塊間的邊界強度皆為0。總結以上敘述得到邊界強度的判斷流程如圖三所示。
[[File:DBF_FF.png|center]]
===邊界分析===
[[File:DBFBA.png|thumb]]
邊界強度如果大於0則對這個邊界進行分析，判斷是否為人造邊界。圖四是利用水平濾波器對垂直邊界做濾波的示意圖，一行有八個點p3、p2、p1、p0、q0、q1、q2以及q3，p0及q0之間為兩區塊的邊界。判斷是否為人造邊界的條件如下所示：
:# Bs != 0
:# |p0 - q0| < α（Index<sub>A</sub>）
:# |p1 - p0| < β（Index<sub>A</sub>）
:# |q1 - q0| < β（Index<sub>B</sub>）
α與β兩個函數一般利用查表法計算值，而Index<sub>A</sub>和Index<sub>B</sub>計算方式如下
:Index<sub>A</sub> = Min（Max(0,QP + Offset<sub>A</sub>）, 51)
:Index<sub>B</sub> = Min（Max(0,QP + Offset<sub>B</sub>）, 51)
其中Offset<sub>A</sub>和Offset<sub>B</sub>為編碼器的參數，QP為量化參數（Quantization Parameter）。如果上面四個條件是都成立則p0與q0之間的邊界為人造邊界。

==高效率視訊編碼（HEVC）的去區塊濾波器==
高效率視訊編碼（HEVC）的去區塊濾波器是以高階視訊編碼的為基礎，但不像高階視訊編碼採用4x4的區塊大小，高效率視訊編碼採用8x8的區塊大小，這個限制減少最糟情況的運算複雜度而不降低視覺上的品質。高效率視訊編碼還改進去區塊濾波器可以讓互不相重疊的區塊平行做處理，邊界強度也從0到4變為0到2。<ref name=OverviewHEVCIEEE2012/><ref name=HEVCDeblockingFilter/>
==參考資料==
{{reflist|refs=
<ref name=OverviewHEVCIEEE2012>{{cite news |title=Overview of the High Efficiency Video Coding (HEVC) Standard |author=G.J. Sullivan |author2=J.-R. Ohm |author3=W.-J. Han |author4=T. Wiegand |publisher=IEEE Transactions on Circuits and Systems for Video Technology |url=http://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=6316136 |date=2012-12 |accessdate=2013-06-27 |archive-date=2019-08-08 |archive-url=https://web.archive.org/web/20190808085215/https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=6316136 |dead-url=no }}</ref>

<ref name=Deblocking Filter（去方块滤波）>{{cite web |url=http://ycool.com/post/utd2fkv |title=Deblocking Filter（去方块滤波） |author=Applechen |date=2006-03-20 |access-date=2013-06-27 |archive-date=2017-08-01 |archive-url=https://web.archive.org/web/20170801232426/http://ycool.com/post/utd2fkv |dead-url=no }}</ref>

<ref name=HEVCDeblockingFilter>{{cite news |title=HEVC Deblocking Filter |author=A. Norkin |author2=G. Bjontegaard |author3=M. Narroschke |author4=M. Ikeda |author5=K. Andersson |author6=M. Zhou |author7=G. Van der Auwera |publisher=IEEE Transactions on Circuits and Systems for Video Technology |url=http://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=6316136 |date=2012-12 |accessdate=2013-06-27 |archive-date=2019-08-08 |archive-url=https://web.archive.org/web/20190808085215/https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=6316136 |dead-url=no }}</ref>

}}

[[Category:視頻壓縮技術|D]]
[[Category:影片和電影技術|M]]