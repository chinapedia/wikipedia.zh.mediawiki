{{Merge|微指令|time=2021-07-23T03:58:38+00:00}}
{{Unreferenced|time=2017-05-26T21:50:04+00:00}}
{{NoteTA
|G1 = IT
}}
{{Program execution}}
'''微指令'''（{{lang-en|microcode}}），又稱'''微碼'''，是在[[CISC|CISC]]結構下，執行一些功能複雜的[[指令|指令]]時，所分解一系列相對簡單的指令。相關的概念最早在1947年開始出現。

微指令的作用是將[[機器指令|機器指令]]與相關的[[電路|電路]]實作分離，這樣一來機器指令可以更自由的進行設計與修改，而不用考慮到實際的電路架構。與其他方式比較起來，使用微指令架構可以在降低電路複雜度的同時，建構出複雜的多步驟機器指令。撰寫微指令一般稱為[[微程式設計|微程式設計]]（microprogramming），而特定架構下的處理器實作中，微指令有時會稱為微程式（microprogram）。

現代的微指令通常由[[CPU|CPU]]工程师在设计阶段编写，並且儲存在[[唯讀記憶體|唯讀記憶體]]（ROM, read-only-memory）或[[可程式邏輯陣列|可程式邏輯陣列]]（PLA, programmable logic array）中。然而有些機器會將微指令儲存在[[靜態隨機存取記憶體|靜態隨機存取記憶體]]（SRAM）或是[[快閃記憶體|快閃記憶體]]（flash memory）中。它通常对普通程序员甚至是[[組合語言|組合語言]]程式設計師来说是不可见的，也是无法修改的。與機器指令不同的是，機器指令必須在一系列不同的處理器之間維持相容性，而微指令只設計成在特定的電路架構下執行，成為特定處理器設計的一部分。

== 微程序设计技术 ==
微程序设计技术，指的是用软件技术来实现硬件设计的一种技术。
== 參見 ==
*[[韌體|韌體]]
*[[奔騰浮點除錯誤|奔騰浮點除錯誤]]
{{CPU technologies}}
{{compu-stub}}
[[Category:计算机编程|Weichengxu]]
[[de:Mikroprogrammsteuerwerk|de:Mikroprogrammsteuerwerk]]
[[Category:韌體|Category:韌體]]
[[Category:中央處理器|Category:中央處理器]]