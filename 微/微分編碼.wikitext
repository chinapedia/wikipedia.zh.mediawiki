{{original research|time=2016-06-30T09:22:57+00:00}}
{{unreferenced|time=2016-06-30T09:22:57+00:00}}
在數據傳輸中，當使用某些類型的調變時微分編碼能提供明確的訊號接收的一種技術，可以讓數據傳輸不僅僅依賴當前的訊號，而是會讓前一個訊號影響傳輸的數據。

常用到微分編碼的調變有像是[[正交振幅調變|正交振幅調變]]以及[[相位偏移調變|相位偏移調變]]等。

== 微分編碼的目的 ==
為了解調二位元相位偏移調變需要同步本地和遠端的振盪器，這是由載子回復來完成，然而因為不同的相位不同的相位，載子可以以不同的方式做回復。

在這個編碼下，如果載子回復的訊號不正確，則收到的資料會是倒置的。

假設現在有個想要傳送的訊號'''X<sub>i</sub>'''，而'''Y<sub>i</sub>'''為實際傳輸的訊號，若

'''Y<sub>i</sub> = Y<sub>i-1</sub>⊕X<sub>i</sub>   (1)'''

是被傳送的訊號，在解碼端則是

'''X<sub>i</sub> = Y<sub>i</sub>⊕Y<sub>i-1</sub>   (2)'''

藉由這樣就可以成功解碼。

'''X<sub>i</sub>'''僅取決於'''Y<sub>i</sub>'''以及'''Y<sub>i-1</sub>'''的差，而和'''Y<sub>i</sub>'''本身的值無關。因此無論資料是否被倒置，解碼的內容將一定是正確的。

當數據通過雙絞線電纜傳輸時，很容易在發送器和接收器之間的電纜中意外插入一個多餘的半捻。當這種情況發生時，所接收的數據被倒置。有幾種不同的[[线路码|線路碼]]設計為'''極性不敏感'''，無論數據流是否被倒置與否，解碼的數據將總是正確的。包括了這個性質的[[线路码|線路碼]]有像是{{tsl|en|Differential_Manchester_encoding|差分曼徹斯特編碼}}，[[交替反转码|雙相編碼]]，[[NRZI|NRZI]]，[[传号反转码|相傳號碼]]，[[传号反转码|編碼標記倒置]]和{{tsl|en|MLT-3_encoding|MLT-3編碼}}等。

== 傳統微分編碼 ==
以上是可以處理數據倒置的方法(也稱為''180°模糊'')，有時是足夠的(例如，如果使用[[相位偏移調變|BPSK]]或其他，諸如檢測到的[[Viterbi_decoder|維特比譯碼器]]或一個[[Frame_synchronization|幀同步器]])，但有時卻是不足的。

一般來說，微分編碼可以應用在符號上。要解決''180°模糊''，只要將位元當作符號。處理''90°模糊''則要將兩個位元一組當作符號，而要解決''45°模糊''則要將三個位元一組作為符號（例如，在[[8PSK|8PSK]]）。

微分編碼器提供 '''(1)'''的功能，而微分解碼器能提供'''(2)'''的功能。而這兩個編碼器及解碼器都是離散的[[线性时不变系统理论|線性非時變系統]]，編碼器是遞迴，因此是[[無限脈衝響應濾波器|無限脈衝響應]]；解碼器則是非遞迴，因此是[[有限脈衝響應濾波器|有限脈衝響應]]。它們可以被分類為[[数字滤波器|數位濾波器]]。

== 廣義微分編碼 ==
使用'''Y<sub>i</sub> = Y<sub>i-1</sub>⊕X<sub>i</sub>''' 並不是進行微分編碼的唯一途徑。更廣義的來說，它可以是任何函式u = F(y, x)，只要在u<sub>0</sub> = F(y<sub>0</sub>, x)中對任何y<sub>0</sub>和u<sub>0</sub>而言都只有唯一解即可。

== 應用 ==
微分編碼時常搭配[[相位偏移調變|相位偏移調變]]以及[[正交振幅調變|正交振幅調變]]在衛星以及無線電中繼站中使用。

== 其他解決相位模糊的技術 ==
微分編碼並不是處理相位模糊的唯一方式。另一個受到歡迎的技術是使用[[Syncword|同步字]]。也就是說，如果一個''幀同步器''檢測重複倒置的同步字，它就會倒置整個資料流。衛星的數位視訊廣播就是採用這個方法。