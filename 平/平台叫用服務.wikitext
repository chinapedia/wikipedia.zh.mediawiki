{{Unreferenced|time=2014-06-04T08:24:26+00:00}}
{{noteTA
|G1=IT
|T=zh-hans:平台调用服务;zh-hk:平台叫用服務;zh-tw:平台叫用服務;
|1=zh-hans:平台调用服务;zh-hk:平台叫用服務;zh-tw:平台叫用服務;
}}
'''平台叫用服務'''（{{lang-en|Platform Invocation Services}}），或称P/Invoke，通常指[[微软|微软]]的[[公共语言运行时|公共语言运行时]]提供的[[跨平台调用|跨平台调用]]方式。

平台叫用服務是[[公共语言基础设施|公共语言基础设施]]相关实现的一个特性。这一特性与微软的[[公共语言运行时|公共语言运行时]]提供的较为类似，因此一般提到P/Invoke多数指微软的[[.NET|.NET]]实现方案。这一方案能够实现通过托管代码访问原生代码。使用P/Invoke可以通过[[CLR|CLR]]来控制[[DLL|DLL]]的加载，以及将非托管代码的[[数据类型|数据类型]]转换为托管[[数据类型|数据类型]]。

{{noteTA|G1=IT}}
==Windows==
在Microsoft Windows作業系統中，Native API有時也是以[[COM|COM]]介面方式來推出，像是ADSI，FSRM（File Server Resource Manager）等，通常是新的服務或是介面才會廣泛使用COM原生介面方式。因為[[.NET_Framework|.NET Framework]]的推行，[[Windows|Windows]]的應用程式介面被分為兩種，一種是遵循原本Windows API方式的，稱為Native API，另一種則是以.NET Framework為基礎開發的，稱為Managed API，例如Managed DirectX或是IIS Admin APIs等。

在Microsoft Windows作業系統中，若是透過VB或是.NET Framework存取直接開放C函式的Native API時，則必須要利用'''平台叫用服務'''方式存取；若是存取以COM方式開放的Native API時，若該API支援COM Automation規格時，即可利用COM Interop Services來存取。

[[Category:.NET|Category:.NET]]