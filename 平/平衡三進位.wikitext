{{refimprove|time=2016-05-13T13:24:22+00:00}}
{{NoteTA
|T=zh-cn:平衡三进制;zh-sg:平衡三进制;zh:平衡三進位;zh-tw:平衡三進位;zh-hk:平衡三進制;zh-mo:平衡三進制
|G1=IT
|G2=Math}}
{{记数系统}}
'''平衡三进制'''（{{lang-en|'''balanced ternary'''}}）是一種非標準的的[[记数系统|計數进位制]]，它是一種基數為<math>3</math>的进位制系統，其中用於計數的符码為<math>{ -1, 0, 1 }</math>，與標準基數 3 进制系統對比：其中的計數符號為<math>{ 0, 1, 2 }</math>。以平衡三进制所記錄的數字可以表達出全部整數，由于<math>-1</math>的引入，而且對负数不必使用额外的负號；應用在於解決[[稱球問題|秤重問題]]<ref name=hayes>{{citation|first=Brian|last=Hayes|authorlink=Brian Hayes (scientist)|title=Third base|journal=American Scientist|url=http://bit-player.org/bph-publications/AmSci-2001-11-Hayes-ternary.pdf|year=2001|volume=89|issue=6|pages=490–494|doi=10.1511/2001.40.3268}}. Reprinted in {{citation|title=Group Theory in the Bedroom, and Other Mathematical Diversions|first=Brian|last=Hayes|authorlink=Brian Hayes (scientist)|publisher=Farrar, Straus and Giroux|year=2008|isbn=9781429938570|pages=179–200|url=https://books.google.com/books?id=1ZkYEFi3DMMC&pg=PA179|accessdate=2019-04-22|archive-date=2019-05-16|archive-url=https://web.archive.org/web/20190516012230/https://books.google.com/books?id=1ZkYEFi3DMMC&pg=PA179|dead-url=no}}</ref>，或在一些早期的計算機中使用<ref name=setun/>。

有些地方使用不同符码來表示平衡三进制中的三個數符。本文中以 T（連在 1 上方的负號）表示 <math>-1</math>，而 <math>0</math>和 <math>1</math>表示自身。其他約定包括使用 '-' 和 '+'分別表示 <math>-1</math>和 <math>1</math>，或使用希臘字母 Θ（於圓圈中的负號）來表示 <math>-1</math>。在 ''[[Сетунь|Setun]]''計算機中 <math>-1</math>表示為倒轉的阿拉伯數字一：「{{反轉|1}}」<ref name=setun>{{cite book|title=Programming|year=1963|location=Moscow|author=N.A.Krinitsky |author2=G.A.Mironov |author3=G.D.Frolov|editor=M.R.Shura-Bura|language=ru|chapter=Chapter 10. Program-controlled machine Setun}}</ref>。

平衡三进制在 Michael Stifel（1544）的書《Arithmetica Integra》中出現過<ref>{{citation
 | last = Stifel | first = Michael | author-link = Michael Stifel
 | language = la
 | page = 38
 | title = Arithmetica integra
 | url = https://archive.org/stream/bub_gb_ywkW9hDd7IIC#page/n85/mode/2up
 | year = 1544}}.</ref>。它也曾出現在 [[约翰内斯·开普勒|Kepler]]和 LéonLalanne 的作品中。對负数不必使用额外的负號这一点，使得平衡三进制在[[四则运算|四则运算]]的加、減、乘法效率，會比二进制高。美国著名计算机学家[[高德纳|高德纳]]在《编程的艺术》一书中指出，“也许最美的进制是平衡三进制”。

{{cquote|Perhaps the prettiest number system of all... is the balanced ternary notation|Donald Knuth, The Art of Programming}}

==数的表示方法==
===整数的轉換===
平衡三进制和其他进制一样，各位的数字和位权相乘然后叠加起来，就是该数的数值。數字下標 bal3 表示為平衡三进制，而下標 dec 則為十进制：
:  10<sub>bal3</sub> =  1×3<sup>1</sup> + 0×3<sup>0</sup> = 3<sub>dec</sub>
: 10T<sub>bal3</sub> =  1×3<sup>2</sup> + 0×3<sup>1</sup> + (-1)×3<sup>0</sup> = 8<sub>dec</sub>
:  -9<sub>dec</sub>  = -1×3<sup>2</sup> + 0×3<sup>1</sup> +    0×3<sup>0</sup> = T00<sub>bal3</sub>
:   8<sub>dec</sub>  =  1×3<sup>2</sup> + 0×3<sup>1</sup> + (-1)×3<sup>0</sup> = 10T<sub>bal3</sub>

平衡三进制不需要额外的符号就可以表示负数。左起第一位若非 0 而是 T 的即为负数，若是 1 的則是正数。

在平衡三进制中，各位上的数字之和为偶数的整数是偶数；各位上的数字之和为奇数的整数是奇数。

比如：
{| class="wikitable" style="border: none; text-align:right;"
! 十进制 !! 平衡三进制 !! 轉換展開 !!!! 十进制 !! 平衡三进制 !! 轉換展開
|-
|   0 ||   0 ||      0 ||||     ||     ||
|-
|   1 ||   1 ||     +1 ||||  -1 ||   T ||     -1
|-
|   2 ||  1T ||   +3-1 ||||  -2 ||  T1 ||   -3+1
|-
|   3 ||  10 ||   +3   ||||  -3 ||  T0 ||   -3
|-
|   4 ||  11 ||   +3+1 ||||  -4 ||  TT ||   -3-1
|-
|   5 || 1TT || +9-3-1 ||||  -5 || T11 || -9+3+1
|-
|   6 || 1T0 || +9-3   ||||  -6 || T10 || -9+3
|-
|   7 || 1T1 || +9-3+1 ||||  -7 || T1T || -9+3-1
|-
|   8 || 10T || +9-1   ||||  -8 || T01 || -9+1
|-
|   9 || 100 || +9     ||||  -9 || T00 || -9
|-
|  10 || 101 || +9+1   |||| -10 || T0T || -9-1
|-
|  11 || 11T || +9+3-1 |||| -11 || TT1 || -9-3+1
|-
|  12 || 110 || +9+3   |||| -12 || TT0 || -9-3
|-
|  13 || 111 || +9+3+1 |||| -13 || TTT || -9-3-1
|}

===小数===
平衡三进制和十进制一样，用小数点分隔整数部分和小数部分。

{| class="wikitable"
|-align="center"
! 十进制 !! −0.9 !! −0.8 !! −0.7 !! −0.6 !! −0.5 !! −0.4 !! −0.3 !! −0.2 !! −0.1 !! 0
|-align="center"
! 平衡三进制 
| T.<span style="text-decoration: overline">010T</span>||T.<span style="text-decoration: overline">1TT1</span>|| T.<span style="text-decoration: overline">10T0</span>|| T.<span style="text-decoration: overline">11TT</span>|| 0.<span style="text-decoration: overline">T</span> or T.<span style="text-decoration: overline">1</span> || 0.<span style="text-decoration: overline">TT11</span> || 0.<span style="text-decoration: overline">T010</span> || 0.<span style="text-decoration: overline">T11T</span> || 0.<span style="text-decoration: overline">0T01</span> || 0
|-align="right"
! 十进制 !!  0.9 !!  0.8 !!  0.7 !!  0.6 !!  0.5 !!  0.4 !!  0.3 !!  0.2 !!  0.1 !! 0
|-align="center"
! 平衡三进制 
| 1.<span style="text-decoration: overline">0T01</span>||1.<span style="text-decoration: overline">T11T</span>|| 1.<span style="text-decoration: overline">T010</span>|| 1.<span style="text-decoration: overline">TT11</span>|| 0.<span style="text-decoration: overline">1</span> or 1.<span style="text-decoration: overline">T</span> || 0.<span style="text-decoration: overline">11TT</span> || 0.<span style="text-decoration: overline">10T0</span> || 0.<span style="text-decoration: overline">1TT1</span> || 0.<span style="text-decoration: overline">010T</span> || 0
|}

在平衡三进制中，四舍五入和截位的操作是等效的。

====分数的小数化====
平衡三进制可以像十进制一样，可以用小数来表示分数，例如<big>⅓</big>=0.1<sub>bal3</sub>。

{| class="wikitable"
!十进制分數!!colspan="2"|平衡三进制!!十进制分數!!colspan="2"|平衡三进制
|- align="center"
|1/1||colspan="2"|1||1/11||colspan="2"|0.<span style="text-decoration: overline">01T11</span>
|- align="center"
|1/2||0.<span style="text-decoration: overline">1</span>||1.<span style="text-decoration: overline">T</span>||1/12||colspan="2"|0.0<span style="text-decoration: overline">1T</span>
|- align="center"
|1/3||colspan="2"|0.1||1/13||colspan="2"|0.<span style="text-decoration: overline">01T</span>
|- align="center"
|1/4||colspan="2"|0.<span style="text-decoration: overline">1T</span>||1/14||colspan="2"|0.<span style="text-decoration: overline">01T0T1</span>
|- align="center"
|1/5||colspan="2"|0.<span style="text-decoration: overline">1TT1</span>||1/15||colspan="2"|0.0<span style="text-decoration: overline">1TT1</span>
|- align="center"
|1/6||0.0<span style="text-decoration: overline">1</span>||0.1<span style="text-decoration: overline">T</span>||1/16||colspan="2"|0.<span style="text-decoration: overline">01TT</span>
|- align="center"
|1/7||colspan="2"|0.<span style="text-decoration: overline">0110TT</span>||1/17||colspan="2"|0.<span style="text-decoration: overline">01TTT10T0T111T01</span>
|- align="center"
|1/8||colspan="2"|0.<span style="text-decoration: overline">01</span>||1/18||0.00<span style="text-decoration: overline">1</span>||0.01<span style="text-decoration: overline">T</span>
|- align="center"
|1/9||colspan="2"|0.01||1/19||colspan="2"|0.<span style="text-decoration: overline">00111T10100TTT1T0T</span>
|- align="center"
|1/10||colspan="2"|0.<span style="text-decoration: overline">010T</span>||1/20||colspan="2"|0.<span style="text-decoration: overline">0011</span>
|}

{| class="wikitable" 
|-align="center"
! 十进制分数 !!colspan="2"| 平衡三进制 !! 十进制分数 !!colspan="2"| 平衡三进制
|-align="center"
|  0/1  ||colspan="2"| 0
| 10/11 ||colspan="2"| 1.<span style="text-decoration: overline">0T1TT</span>
|-align="center"
|  1/2  || 0.<span style="text-decoration: overline">1</span> || 1.<span style="text-decoration: overline">T</span> 
| 11/12 ||colspan="2"| 1.0<span style="text-decoration: overline">T1</span>
|-align="center"
|  2/3  ||colspan="2"| 0.1
| 12/13 ||colspan="2"| 1.<span style="text-decoration: overline">0T1</span>
|-align="center"
|  3/4  ||colspan="2"| 0.<span style="text-decoration: overline">1T</span>
| 13/14 ||colspan="2"| 1.<span style="text-decoration: overline">0T101T</span>
|-align="center"
|  4/5  ||colspan="2"| 0.<span style="text-decoration: overline">1TT1</span>
| 14/15 ||colspan="2"| 1.0<span style="text-decoration: overline">T11T</span>
|-align="center"
|  5/6  || 1.0<span style="text-decoration: overline">T</span> || 1.T<span style="text-decoration: overline">1</span> 
| 15/16 ||colspan="2"| 1.<span style="text-decoration: overline">0T11</span>
|-align="center"
|  6/7  ||colspan="2"| 1.<span style="text-decoration: overline">0TT011</span>
| 16/17 ||colspan="2"| 1.<span style="text-decoration: overline">0T111T0101TTT10T</span>
|-align="center"
|  7/8  ||colspan="2"| 1.<span style="text-decoration: overline">0T</span>
| 17/18 || 1.00<span style="text-decoration: overline">T</span> || 1.0T<span style="text-decoration: overline">1</span>
|-align="center"
|  8/9  ||colspan="2"| 1.0T
| 18/19 ||colspan="2"| 1.<span style="text-decoration: overline">00TTT1T0T00111T101</span>
|-align="center"
|  9/10 ||colspan="2"| 1.<span style="text-decoration: overline">0T01</span>
| 19/20 ||colspan="2"| 1.<span style="text-decoration: overline">00TT</span>
|}

与十进制、二进制类似，部分分数有两种表达形式。在十进制、二进制中，最小的数码是0，因此小数点后最右边无限循环的0可以省略掉，从而变成一个整数或有限小数；而在平衡三进制中，小数点后最右边无限循环的T不能省略，因而不能变成整数或有限小数。

====无理数====

无论对于十进制、平衡三进制还是其他以有理数为底数的记数系统，所有的[[无理数|无理数]]都只能表示成[[无限不循环小数|无限不循环小数]]。下表列出了一些[[代数数|代数无理数]]和[[超越数|超越无理数]]的十进制与平衡三进制的表示。

{|class="wikitable"
| align="center" | 代数数
| align="center" | 十进制
| align="center" | '''平衡三进制'''
|-
| align="center" | <math>\sqrt{2}</math>
| 1.41421356237309... (≈ 1.414)
| <small>1.11T1TT00T00T01T0T00T00T01T...</small> 
|-
| align="center" | <math>\sqrt{3}</math>
| 1.73205080756887... (≈ 1.732)
| <small>1T.T1TT10T0000TT1100T0TTT011T...</small> 
|-
| align="center" | <math>\sqrt{5}</math>
| 2.2360679774997... (≈ 2.236)
| <small>1T.1T0101010TTT1TT11010TTT01T...</small> 
|-
| align="center" | [[黄金分割|φ]]（黄金分割，<math> \tfrac{1+\sqrt{5}}{2}</math>）
| 1.6180339887498... (≈ 1.618)
| <small>1T.T0TT01TT0T10TT11T0011T1001...</small> 
|}

{| class="wikitable"
|-
| align="center" | 超越无理数
| align="center" | 十进制
| align="center" |'''平衡三进制'''
|-
| align="center" |''[[圆周率|π]]''（圆周率）
| 3.1415926535897932384626433...(≈ 3.1416)
|<small>10.011T111T000T011T1101T11111...</small>
|-
| align="center" |[[E_(数学常数)|e]]（自然对数的底）
| 2.718281828459045... (≈ 2.718)
|<small>10.T0111TT0T0T111T0111T000T11...</small>
|}


下面是另一个重要常数[[欧拉-马斯刻若尼常数|欧拉-马斯刻若尼常数]]在十进制与平衡三进制中的表示（现在仍无法确定其是有理数还是无理数）：

{|class="wikitable"
| align="center" | 数
| align="center" | 十进制
| align="center" | '''平衡三进制'''
|-
| align="center" | [[欧拉-马斯刻若尼常数|γ]]（欧拉-马歇罗尼常数）
| 0.57721566490153... (≈ 0.577)
| <small>1.TT1TT1T1010001T0T00111TTT0...</small> 
|}

===十进制到平衡三进制的转换===
十进制转化为平衡三进制，可参照下述方法，先圆整后，再分别对整数部分和小数部分进行连除法和连乘法即可。

-25.4
         -25.4,圆整<sup>#</sup>为-25;       ‡                       余,-0.4;♦
    -25÷3=-8⅓, 圆整为- 8;余,-1↑; ‡ -0.4×3=-1.2, 圆整为-1|;余,-0.2;
    - 8÷3=-2⅔, 圆整为- 3;余, 1|; ‡ -0.2×3=-0.6, 圆整为-1|;余, 0.4;
    - 3÷3=-1 , 圆整为- 1;余, 0|; ‡  0.4×3= 1.2, 圆整为 1|;余, 0.2;
    - 1÷3=- ⅓, 圆整为  0;余,-1|; ‡  0.2×3= 0.6, 圆整为 1↓;余,-0.4;跳入循环
        -25.4<sub>10</sub>=T01T.<span style="text-decoration: overline">TT11</span><sub>3</sub>
<small>#圆整到最近的整数</small>

当然，也可以采用另一种方法。
      -25.4<sub>10</sub>=-(1T*101<sup>1</sup>+1TT*101<sup>0</sup>+11*101<sup>T</sup>)
                       =-(1T*101+1TT+11/101)
                       =-10T1.<span style="text-decoration: overline">11TT</span>
                       =T01T.<span style="text-decoration: overline">TT11</span>

===三进制计算机中数的表示===
計算機的初期發展過程中，蘇聯有一些實驗性質的計算機，是以平衡三进制而不是二进制來設計製造的，其中最著名的是由尼古拉·布魯金索夫和謝爾蓋·索博列夫建造的 Сетунь。 與現在通行的二进制相比，平衡三进制的實驗性設計具有許多計算科學上的優勢。 特別是，正負一致性可以加快多位乘法中的進位速率，而捨入截斷當量則會減少對分數做捨入的進位次數。 在平衡三進制中，單一位數的乘法表不需用到進位，而加法表只會有兩個對稱進位而不是三個。

注：以下部分以“'”为十进制数万位分隔符

====基本概念====
位（trit）：对称三进制的数位；

字节（tryte）：莫斯科大学的Сетунь以6位为1个字节，单字节整数的表示范围为：-364~+364；

字（word）：参照二进制，以2个字节为1个字，单字整数的表示范围为：-26'5720~+26'5720;

====整数====
纽约州立大学在1973年开发的测试机Ternac，采用24位表示一个整数，表示范围为-1412'1476'8240~+1412'1476'8240
====定点数====
定点数的表示方法和整数一样。只是会预先指定小数点的位置。

比如采用48位表示一个实数，整数部分、小数部分各24位。则，表示范围为-1412'1476'8240.5~+1412'1476'8240.5，精度为3<sup>-24</sup>（3.54*10<sup>-12</sup>）

====浮点数====
Ternac，采用48位表示一个实数，其中尾数42位，指数6位。

参照IEEE754的浮点数表示法，对称三进制的表示法如下：

1个符号位（整数部分）+尾数域41位（小数部分）+指数域6位

整数部分为1是正的规约数。表示范围为0.5*3<sup>-364</sup>+0.5*3<sup>-405</sup>~0.5*3<sup>365</sup>-0.5*3<sup>323</sup>

整数部分为0的是零附近的数，是非规约数。非规约数的指数固定为-364，指数域并入尾数。表示范围为0.5*3<sup>-411</sup>-0.5*3<sup>-364</sup>~0.5*3<sup>-364</sup>-0.5*3<sup>-411</sup>，精度为0.5*3<sup>-411</sup>。

==逻辑常量==
{| class="wikitable" style="{{float right}} text-align: center"
|-
! 平衡三进制 || 逻辑狀態   || 標準三进制
|-
| 1        || True    || 2
|-
| 0        || Unknown || 1
|-
| T        || False   || 0
|}
三进制计算机，以[[三值逻辑|三值逻辑]]为基础，有三个逻辑狀態值——真、假、未知。我们用 <math>1</math> 表示真、<math>0</math> 表示未知，而 <math>T</math> 則表示假。

==三进制计算机中信息的表示==
三进制计算机中，以平衡三进制为信息进行编码。

我们可以以12位为单位，对文字进行编码作为标准信息交换码（STUCII，Standard Ternary Unified Code for Information Interchange）。其容量为53'1441个字符，约是16bits容量的8.1倍。

==运算==
===加减乘除四则运算===
平衡三进制和二进制一样，乘法运算等效于移位叠加运算。

====单双位平衡三进制加法表、乘法表、除法表====
{|
|-
|
 {| class="wikitable" style="width: 10px; height: 10px; text-align: center;"
 |+ 加法
 |- align="center"
 ! + !! TT !! T0 !! T1 !! !! T !! 0 !! 1 !! !! 1T !! 10 !! 11
 |-
 ! 11 
 | 0 || 1 || 1T || || 10 || 11 || 1TT || ||1T0 || 1T1 || 10T
 |-
 ! 10 
 | T || 0 || 1 || || 1T || 10 || 11 || || 1TT || 1T0 
 |-
 ! 1T 
 | T1 || T || 0 || || 1 || 1T || 10 || ||11 
 |-
 !
 | || || || || || || || 
 |-
 ! 1 
 | T0 || T1 || T || ||  0 || 1 || 1T 
 |-
 ! 0 
 | TT || T0 || T1 || || T || 0 || 1
 |-
 ! T 
 | T11 || TT || T0 || || T1 || T || 0
 |-
 !
 | || || || 
 |-
 ! T1 
 | T10 || T11 || TT 
 |-
 ! T0 
 | T1T || T10 
 |-
 ! TT 
 | T01 
 |}
|
 {| class="wikitable" style="width: 10em; height: 10em; text-align: center;"
 |+ 乘法
 |- align="center"
 ! × !! TT !! T0 !! T1 !! !! T !! 0 !! 1 !! !! 1T !! 10 !! 11
 |-
 ! 11 
 | T11T || TT0 || T01 || || TT || 0 || 11 || || 10T || 110 || 1TT1
 |-
 ! 10 
 | TT0 || T00 || T10 || || T0 || 0 || 10 || || 1T0 || 100 
 |-
 ! 1T 
 | T01 || T10 || TT || || 1 || 0 || IT || || 11 
 |-
 !
 | || || || || || || || 
 |-
 ! 1 
 | TT || T0 || T1 || || T || 0 || 1 
 |-
 ! 0 
 | 0 || 0 || 0 || || 0 || 0 || 0
 |-
 ! T 
 | 11 || 10 || 1T || || 1 || 0 || T
 |-
 !
 | || || || 
 |-
 ! T1 
 | 10T || 1T0 || 11 
 |-
 ! T0 
 | 110 || 100 
 |-
 ! TT 
 | 1TT1 
 |}
|-
|
 {| class="wikitable" style="width: 10em; height: 10em; text-align: center;"
 |+ 减法
 |- align="center"
 ! - !! TT !! T0 !! T1 !! !! T !! 0 !! 1 !! !! 1T !! 10 !! 11
 |-
 ! TT 
 | 0 || T || T1 || || T0 || TT || T11 || || T10 || T1T || T01
 |-
 ! T0 
 | 1 || 0 || T || || T1 || T0 || TT || || T11 || T10 || T1T 
 |-
 ! T1 
 | 1T || 1 || 0 || || T || T1 || T0 || || TT || T11 || T10 
 |-
 !
 | || || || || || || || || || || 
 |-
 ! T 
 | 10 || 1T || 1 || || 0 || T || T1 || || T0 || TT || T11 
 |-
 ! 0 
 | 11 || 10 || 1T || || 1 || 0 || T || || T1 || T0 || TT
 |-
 ! 1 
 | 1TT ||11 || 10 || || 1T || 1 || 0 || || T || T1 || T0 
 |-
 !
 | || || || || || || || || || || 
 |-
 ! 1T 
 | 1T0  || 1TT || 11 || || 10 || 1T || 1 || || 0 || T || T1 
 |-
 ! 10 
 | 1T1  || 1T0  || 1TT || || 11 || 10 || 1T || || 1 || 0 || T  
 |-
 ! 11 
 | 10T || 1T1  || 1T0 ||  || 1TT ||11 || 10 || || 1T || 1 || 0
 |}
|
 {| class="wikitable" style="width: 10em; height: 10em; text-align: center;"
 |+ 除法
 |- align="center"
 ! ÷ !! TT !! T0 !! T1 !! !! T !! 0 !! 1 !! !! 1T !! 10 !! 11
 |-
 ! TT 
 | 1 || 1.1 || 1T || || 11 || -∞ || TT || || T1 || T.T || T
 |-
 ! T0 
 | 1.<span style="text-decoration: overline">T1</span> || 1 || 1.<span style="text-decoration: overline">1</span> || || 10 || -∞ || T0 || || T.<span style="text-decoration: overline">T</span> || T || T.<span style="text-decoration: overline">1T</span>
 |-
 ! T1 
 | 1.<span style="text-decoration: overline">T</span> || 1.T || 1 || || 1T || -∞ || T1 || || T || T.1 ||T.<span style="text-decoration: overline">1</span>
 |-
 !
 | || || || || || || || || || || 
 |-
 ! T 
 | 0.<span style="text-decoration: overline">1T</span> || 0.1|| 0.<span style="text-decoration: overline">1</span> || || 1 || -∞ || T || || 0.<span style="text-decoration: overline">T</span> || 0.T || 0.<span style="text-decoration: overline">T1</span>
 |-
 ! 0 
 | 0 || 0 || 0 || || 0 || <small><small>NaN</small></small> || 0 || ||0 || 0 || 0
 |-
 ! 1 
 | 0.<span style="text-decoration: overline">T1</span> || 0.T || 0.<span style="text-decoration: overline">T</span> || || T || +∞ || 1 || || 0.<span style="text-decoration: overline">1</span> || 0.1 || 0.<span style="text-decoration: overline">1T</span>
 |-
 !
 | || || || || || || || || || || 
 |-
 ! 1T 
 | T.<span style="text-decoration: overline">1</span>  || T.1 || T || || T1 || +∞ || 1T || || 1 || 1.T || 1.<span style="text-decoration: overline">T</span> 
 |-
 ! 10 
 | T.<span style="text-decoration: overline">1T</span>  || T || T.<span style="text-decoration: overline">T</span>  || || T0 || +∞ || 10 || || 1.<span style="text-decoration: overline">1</span>  || 1 || 1.<span style="text-decoration: overline">T1</span> 
 |-
 ! 11 
 | T || T.T || T1 || || TT || +∞ || 11 || || 1T || 1.1 || 1
 |}
|}

<small>注：减法是左列减去顶行，除法是左列除以顶行</small>


<sup>1</sup>从上表中可以看出，双位数相加可能会变成单位数，双位数相减可能会变成三位数，双位数相乘可能可能仍是双位数。这种情况在十进制和二进制中不会发生。
====多位数的加减法====
就是逐位做加减法。
减法，亦可以逐位取反后，换做加法
比如
     
      1TT1TT.1TT1       1TT1TT.1TT1      1TT1TT.1TT1     1TT1TT.1TT1
     +  11T1.T        -   11T1.T         - 11T1.T -> +     TT1T.1
     ------------     --------------                ---------------
      1T0T10.0TT1       1T1001.TTT1                      1T1001.TTT1
     +  1T            +  1  T1                        +   T  T1
     ------------     ----------------               ----------------
      1T1110.0TT1       1110TT.TTT1                      1110TT.TTT1
     +  T             + T   1                         +  T   1
     ------------     ----------------                ----------------
      1T0110.0TT1       01100T.TTT1                      01100T.TTT1

====乘法====
可以采用类似于十进制的各种方法。
比如
     
      1TT1.TT
  ×   T11T.1
  ------------
       1TT.1TT
      T11T.11
     1TT1T.T
    1TT1TT
  +T11T11
  ------------
   0T0000T.10T

====除法====
平衡三进制的除法和十进制的除法类似。

但是，大家已经知道，0.5在平衡三进制中有0.11111…和1.TTTT…两种表达式，也就是说，如果被除数超过除数的一半，商的当前位就要置1或T。

                 1TT1.TT
             -------------        
     T11T.1  ) T0000T.10T        
              T11T1
             --------
               1T1T0
               1TT1T
              --------
                 111T
                1TT1T
               ---------
                  T00.1
                 T11T.1
                ---------
                  1T1.00
                  1TT.1T
                 ---------
                   1T.T1T
                   1T.T1T
                  --------
                        0
====开平方====
平衡三进制开平方和十进制、二进制类似。但和除法一样，要比较的是半除数。例如：
                              1. 1 1 T 1 T T 0 0 ...
                             ------------------------
                            √1T                          1<1T<11, 置 1
                              1
                             -----
                        10    1.0T                       1.0T>0.10, 置 1
                       1T0    1.T0
                             --------
                         110    1T0T                     1T0T>110, 置 1
                        10T0    10T0
                               --------
                         1110    T1T0T                   T1T0T<TTT0, 置 T
                        100T0    T0010
                                ---------
                         111T0    1TTT0T                 1TTT0T>111T0, 置 1
                        10T110    10T110
                                 ----------
                         111T10    TT1TT0T               TT1TT0T<TTT1T0, 置 T
                        100TTT0    T001110
                                  -----------
                         111T1T0    T001TT0T             T001TT0T<TTT1T10, 置 T
                        10T11110    T01TTTT0
                                   ------------
                           111T1TT0    T001T0T           TTT1T110<T001T0T<111T1TT0, 置 0
                                             T
                                      -----------
                          111T1TT00    T001T000T         TTT1T1100<T001T000T<111T1TT00, 置 0
                                               T
                                      -------------
                         111T1TT000    T001T00000T
                                               ...

===逻辑运算===
以下是平衡三进制逻辑运算真值表。
{|
{|
|
 {| class="wikitable" style="width: 8em; text-align: center;"
 |+ 逻辑与
 |- align="right"
 ! ∧ !! T !! 0 !! 1
 |-
 |-
 ! '''T''' 
 | T || T || T
 |-
 ! '''0''' 
 | T || 0 || 0
 |-
 ! '''1''' 
 | T || 0 || 1
 |}
|
 {| class="wikitable" style="width: 8em; text-align: center;"
 |+ 逻辑或
 |- align="right"
 ! ∨ !! T !! 0 !! 1
 |-
 ! '''T'''
 | T || 0 || 1
 |-
 ! '''0'''
 | 0 || 0 || 1
 |-
 ! '''1'''
 | 1 || 1 || 1
 |}
|
 {| class="wikitable" style="width: 8em; text-align: center;"
 |+ 逻辑与非
 |- align="right"
 ! ↑ !! T !! 0 !! 1
 |-
 ! '''T'''
 | 1 || 1 || 1
 |-
 ! '''0'''
 | 1 || 0 || 0
 |-
 ! '''1'''
 | 1 || 0 || T
 |}
|
 {| class="wikitable" style="width: 8em; text-align: center;"
 |+ 逻辑或非
 |- align="right"
 ! ↓ !! T !! 0 !! 1
 |-
 ! '''T'''
 | 1 || 0 || T
 |-
 ! '''0'''
 | 0 || 0 || T
 |-
 ! '''1'''
 | T || T || T
 |}
|
 {| class="wikitable" style="width: 8em; text-align: center;"
 |+ 逻辑异或
 |- align="right"
 ! ⊕ !! T !! 0 !! 1
 |-
 ! '''T'''
 | T || 0 || 1
 |-
 ! '''0'''
 | 0 || 0 || 0
 |-
 ! '''1'''
 | 1 || 0 || T
 |}
|
 {| class="wikitable" style="width: 8em; text-align: center;"
 |+ 逻辑合意
 |- align="right"
 ! ⊠ !! T !! 0 !! 1
 |-
 ! '''T'''
 | T || 0 || 0
 |-
 ! '''0'''
 | 0 || 0 || 0
 |-
 ! '''1'''
 | 0 || 0 || 1
 |}
|
 {| class="wikitable" style="width: 8em; text-align: center;"
 |+ 逻辑调和
 |- align="right"
 ! ⊞ !! T !! 0 !! 1
 |-
 ! '''T'''
 | T || T || 0
 |-
 ! '''0'''
 | T || 0 || 1
 |-
 ! '''1'''
 | 0 || 1 || 1
 |}
|
 {| class="wikitable" style="width: 8em; text-align: center;"
 |+ 逻辑非
 |- align="right"
 ! ¬ !! T !! 0 !! 1
 |-
 |-
 ! 
 | 1 || 0 || T
 |}
|}

==另見==
*[[三進位|三進位]]
*[[三值逻辑|三值逻辑]]
*[[康托尔集|康托尔集]]
*[[Сетунь|Setun計算機]]''

== 參考文獻 ==
{{Reflist}}

==外部链接==
*[http://homepage.cs.uiowa.edu/~jones/ternary/ Standard Ternary Logic] {{Wayback|url=http://homepage.cs.uiowa.edu/~jones/ternary/ |date=20130211055109 }}
*[http://www.mortati.com/glusker/fowler/ternary.htm Balanced-ternary] {{Wayback|url=http://www.mortati.com/glusker/fowler/ternary.htm |date=20180630142600 }}
{{-}}
{{Pns}}

[[Category:進位制|Category:進位制]]
[[Category:三進位電腦|Category:三進位電腦]]