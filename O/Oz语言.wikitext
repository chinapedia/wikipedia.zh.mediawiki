{{Infobox programming language
|name = Oz
|logo =
|paradigm = [[编程范式|多范式]]: [[逻辑编程|逻辑]], [[函数式编程|函数式]], [[指令式编程|指令式]], [[面向对象编程|面向对象]], [[约束编程|约束]], [[分布式计算|分布式]], [[并发计算|并发]]
|year = 1991
|designer = Gert Smolka, his students
|developer = Mozart Consortium
|released = {{Start date and age|1991}}
|latest release version = Oz 1.4.0 (final), Mozart 2.0.1
|latest release date = {{Start date and age|2018|09|05|df=yes}}
|typing = [[类型系统|动态]]
|implementations = 莫扎特编程系统
|license = [[MIT许可证|MIT X11]]<ref>{{cite web |url=https://mozart.github.io/license-info/ |title=Mozart Oz License Info |date=2014-01-16 |accessdate=2014-01-16 |archive-date=2014-01-03 |archive-url=https://web.archive.org/web/20140103011947/http://mozart.github.io/license-info/ |dead-url=no }}</ref>
|dialects = Oz, Mozart
|influenced by = [[Erlang|Erlang]], [[Lisp|Lisp]], [[Prolog|Prolog]]
|influenced = [[Alice_(编程语言)|Alice]], [[Scala|Scala]]
|website = {{URL|mozart.github.io}}
}}
'''Oz'''是多范式编程语言，由Université catholique de Louvain的编程系统实验室开发，主要用于计算机编程语言的教学。它还提供相关语言教材《Concepts, Techniques, and Models of Computer Programming》。

[[Mozart_Programming_System|Mozart Programming System]]是 Oz 语言的主要实现，由Mozart Consortium作为开源软件发布。目前Mozart已经被移植到了不同的操作平台，包括Unix, FreeBSD, Linux, Microsoft Windows, 和 Mac OS X。Mozart-Oz项目本身包括运行虚拟机MVM等，请见于Mozart2-GitHub<ref>[https://github.com/mozart/mozart2/wiki Mozart2-GitHub]{{Wayback|url=https://github.com/mozart/mozart2/wiki |date=20190217120036 }}</ref>。

==语言特性==
Oz大量借鉴了[[Haskell|Haskell]]，[[Lisp|Lisp]]，[[Prolog|Prolog]]，[[C语言|C]]，[[Perl|Perl]]，[[Java|Java]]等语言的特性。他包含绝大多数的主要[[编程范型|编程范型]]，包括逻辑，函数式（包括[[惰性求值|惰性求值]]和[[及早求值|及早求值]]）、[[指令式编程|指令式编程]]、 [[面向对象的程序设计|面向对象]]、[[约束编程|约束编程]]、[[分布式计算|分布式]]以及[[并发计算|并发计算]]等。Oz 的正式语法简单（详见下文提到的书中第 13 章）而实现高效{{Citation needed|date=June 2007}}.  Oz是一个面向[[concurrency_(computer_science)|并行编程]]的语言, 这个名词最开始是由 [[Erlang_(programming_language)|Erlang language]]的主要设计者 [[Joe_Armstrong_(programmer)|Joe Armstrong]]发明。面向并行的编程语言可以让并行变得容易且高效。Oz还支持一个标准的图形界面语言 [https://web.archive.org/web/20130520060646/http://www.mozart-oz.org/home/doc/mozart-stdlib/wp/qtk/html/ QTk]。

在支持多种编程范式的基础上，Oz 的主要优势来自于支持[[约束编程|约束编程]]和[[分布式计算|分布式计算]]。同时受益于模块化设计，Oz 成功得被实现为一种网络透明的分布式计算模型。这种模型使得使用 Oz 编写开放的、[[容错计算机系统|可容错]]的应用变得简单。而在[[约束编程|约束编程]]方面，Oz 引入了“计算空间（computation space）”的概念，从而使得用户定义的搜索和部署策略与约束领域相[[正交|正交]]。
==引用==
{{reflist}}

[[Category:并发编程语言|Category:并发编程语言]]
[[Category:基于原型的编程语言|Category:基于原型的编程语言]]
[[Category:函数式编程语言|Category:函数式编程语言]]
[[Category:逻辑编程语言|Category:逻辑编程语言]]
[[Category:动态类型编程语言|Category:动态类型编程语言]]
[[Category:1991年建立的程式語言|Category:1991年建立的程式語言]]