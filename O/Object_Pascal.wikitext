{{Infobox programming language
| name = Object Pascal
| logo = 
| paradigm = [[指令式編程|指令式]]，[[結構化編程|結構化編程]]，[[面向对象程序设计|面向对象]]，[[函數程式語言|函數程式語言 (仅Delphi支持)]]
| typing = [[Type_system#Static_and_dynamic_typing|static and dynamic]]（dynamic typing through Variants, '''array of const''' and [[執行期型態訊息|RTTI]]）, [[Type_system#Strong_and_weak_typing|strong]], [[Type_system#Safely_and_unsafely_typed_systems|safe]]
| implementations = [[Delphi|Delphi]]（[[x86|x86]] and [[CLI|CLI]]）, {{tsl|en|Oxygene|}}（[[Common_Language_Infrastructure|CLI]]）, [[Free_Pascal|Free Pascal]]（[[x86|x86]], [[x86-64|x86-64]], [[PowerPC|PowerPC]], [[ppc64|ppc64]], [[SPARC|SPARC]] and [[ARM_architecture|ARM]]）, [[Lazarus|Lazarus]]（[[x86|x86]], [[x86-64|x86-64]]), {{tsl|en|Virtual Pascal|}}（[[x86|x86]]）, [[TMT_Pascal|TMT Pascal]]（[[x86|x86]]）, {{tsl|en|Turbo51|}}（[[Intel_8051|Intel 8051]]）
| dialects = Apple, [[Turbo_Pascal|Turbo Pascal]], ''objfpc'', Delphi, Delphi.NET, {{tsl|en|Oxygene|}}
| year = 
| designer = [[Apple_Computer|Apple]], [[Niklaus_Wirth|Niklaus Wirth]], [[Anders_Hejlsberg|Anders Hejlsberg]]
| released = {{Start date and age|1986}}
| latest release version = 
| latest release date = 
| influenced_by = [[Pascal语言|Pascal]], [[Simula|Simula]], [[Smalltalk|Smalltalk]]
| influenced = [[C♯|C#]], [[Java|Java]]
| operating_system = 
| license = 
| website = 
}}

'''Object Pascal'''是[[Pascal_(程式語言)|Pascal编程语言]]的[[面向对象程序设计|面向对象]]的衍生分支，是[[Delphi|Delphi]]支持的主要[[编程语言|编程语言]]。Pascal编译器，包括那些Object Pascal编译器，在生成高[[优化|优化]]代码同时，一般运行非常快。

==版本==
总而言之，'''Object Pascal'''现在笼统地用来指有面向对象编程扩展的Pascal语言的不同方言，虽然这些方言绝大多数与CodeGear实现兼容。
* [[Borland|Borland]]将第一版Delphi的编程语言命名为''Object Pascal''，但是后来将其重命名为''Delphi编程语言''。然而，宣称兼容Object Pascal的[[编译器|编译器]]通常试图兼容Delphi源代码。

* [[CodeGear|CodeGear]]，Borland的前子公司，现在是[[Embarcadero_Technologies|Embarcadero Technologies]]的一部分，将编译Object Pascal代码到Windows上的[[集成开发环境|集成开发环境]]（IDE）出售了。

* .NET存在的对从Delphi 8到Delphi 2005，Delphi 2006和Delphi 2007的支持现在已被另外的语言'''Oxygene'''（参见下面）替代，不完全向后兼容。

* [[Lazarus|Lazarus]]是类似[[Delphi|Delphi]]的Object Pascal语言集成开发环境，使用[[Free_Pascal|Free Pascal]]编译器，是一款开放源代码的自由软件。

* [[Oxygene|Oxygene]]编程语言由[[RemObjects_Software|RemObjects Software]]开发，单独针对[[通用语言架构|通用语言架构]]。Oxygene编译器已纳入Embarcadero拥有的命名为[[Delphi_Prism|Delphi Prism]]的一个新的Delphi开发解决方案，它是[[Microsoft_Visual_Studio|Microsoft Visual Studio]]的基础。

* [[Morfik|Morfik Pascal]]编程语言由[[Morfik|Morfik]]开发，针对支持Ajax的Web应用。Morfik编译器已纳入该公司的AppsBuilder IDE，允许Object Pascal代码用于实现将同时在浏览器和服务器上运行的代码。

* [[open_source|开源]][[Free_Pascal|Free Pascal]]项目允许为广泛的操作系统——包括[[Linux|Linux]]（32位和64位）、[[FreeBSD|FreeBSD]]、[[Mac_OS|Mac OS]]/[[Mac_OS_X|Mac OS X]]、[[Win32|Win32]]、[[Win64|Win64]]和[[Windows_CE|Windows CE]]——和几个不同硬件架构编译该语言。[[Apple_iPhone|iPhone]] [[SDK|SDK]] 2.''x''的第一版Free Pascal已于2009年1月17日发布。<ref name="fpciphone">{{cite web|title=iPhone/iPod development|publisher=Free Pascal development team|url=http://wiki.freepascal.org/iPhone/iPod_development|accessdate=2009-04-13}}</ref>现在它也支持嵌入式（ARM）。

* [[MIDletPascal|MIDletPascal]]旨在Java字节代码平台。

* 开源[[GNU_Pascal|GNU Pascal]]编译器可用于[[GNU|GNU]][[GCC|编译器集合]]的一个前端，它实现了[[ISO|ISO]] 7185 Pascal标准和ISO 10206扩展Pascal标准的“大部分”。

* 也是自由编译器的[http://www.turbo51.com Turbo51]用于为[[Intel_8051|Intel 8051]]芯片生成代码。

* [[WDSybil|WDSybil]]，一个开源的可用于[[Microsoft_Windows|Microsoft Windows]]和[[OS/2|OS/2]]的类Delphi的IDE和编译器，最初由一个叫做Speedsoft的公司发布的商业[[Borland_Pascal|Borland Pascal]]兼容环境，后来在一个叫做Sybil的类Delphi [[RAD|RAD]]里开发，然后在公司关闭时在GPL下开放源代码。

== 在Apple的早期历史 ==
Object Pascal是对[[Pascal|Pascal]]语言的扩展，它是[[Apple_Computer|Apple Computer]]的一个由[[拉里·泰斯勒|拉里·泰斯勒]]领导，Pascal的发明者[[尼克劳斯·维尔特|尼克劳斯·维尔特]]提供咨询的小组开发的。它继承自一个用于[[Apple_Lisa|Lisa]]计算机的称作[[Clascal|Clascal]]的Pascal的面向对象的早期版本。

为了支持一个现在叫做类库的可扩展Macintosh应用框架[[MacApp|MacApp]]，Object Pascal是必要的。Object Pascal扩展和MacApp本身是由Barry Haynes，Ken Doyle和Larry Rosenstein开发的，Dan Allen测试的。[[拉里·泰斯勒|拉里·泰斯勒]]监督该项目，开始于1985年早期，在1986年成为一个产品。

Apple在1994年从Motorola 68K芯片转移到IBM's PowerPC架构时，删除了对Object Pascal的支持。

一个Object Pascal扩展也在Think Pascal IDE里实现过。该IDE包括编译器，一个语法高亮和检查的编辑器，一个强大的调试器和一个类库。许多开发者首选Think Pascal，而不是MacApp，因为它提供了工具的紧密集成。在4.01之后，开发停止了，因为[[Symantec|Symantec]]购买了该公司。开发人员然后离开了该项目。

== Borland和CodeGear的年代 ==
在1986年，[[Borland|Borland]]将也称作Object Pascal的类似扩展引进到Macintosh的[[Turbo_Pascal|Turbo Pascal]]产品里；在1989年，引进到DOS的Turbo Pascal 5.5。

当Borland在1994年将重点从[[MS-DOS|MS-DOS]]调整到[[Microsoft_Windows|Windows]]时，它们创造了Turbo Pascal的一个叫做[[CodeGear_Delphi|Delphi]]的继任者，并引进了创建现在称作Delphi语言的一系列新的扩展。

Delphi的开发开始于1993年，1995年2月14日在美国官方发布了Delphi 1.0。那时，使用Turbo Pascal对象模型的代码仍旧能被编译，Delphi的特性有：先于<code>object</code>使用关键字<code>class</code>的新语法，Create构建器和虚拟的Destroy析构器（并否定了必须调用<code>New</code>和<code>Dispose</code>过程），属性，方法指针和一些其它特性。这些是[[ISO|ISO]]面向对象扩展工作[[draft|草案]]所鼓励的，但是许多与Turbo Pascal方言的差异（例如草案要求所有的方法是虚拟的）被忽略了。

Delphi语言在遍及支持诸如[[64-bit_integer|64位整数]]和[[dynamic_array|动态数组]]的新语言概念的年代里继续演化。

== 编译器 ==
现在有许多[[编译器|编译器]]，绝大多数兼容Delphi的Object Pascal语言。许多是为了让Object Pascal在不同平台上和各种许可下编译而创建的。

* [[Delphi|Delphi]]可能是最知名的编译器了。它针对[[Windows_API#Versions|Win16]]（Delphi 1），[[Windows_API#Versions|Win32]]（Delphi 2+）和[[.NET_Framework|.NET 1.x, 2.0]]（Delphi 8，Delphi 2005 - 2007）。
* [[Kylix_programming_tool|Borland Kylix]]是Delphi的Linux变种，仅针对使用[[Qt_(toolkit)|Qt]]的Intel 32位Linux。它不再更新了。现代分发通常不运行于其箱体外。
* [[Free_Pascal|Free Pascal]]是一个命令行编译器，目标是与Turbo Pascal和Delphi方言的核心特性集的源兼容性。现在的版本，2.2是高兼容Delphi 6或7。{{Citation needed|date=August 2009}} FPC为各种操作系统下的[[x86|x86]]，[[x86-64|x86-64]]，[[PowerPC|PowerPC]]，[[SPARC|SPARC]]和[[ARM_architecture|ARM]]处理器生成代码，这些操作系统包括[[Windows_API#Versions|Win32]]，[[Windows_API#Versions|Win64]]，[[Linux|Linux]]，[[FreeBSD|FreeBSD]]，[[Mac_OS|Mac OS]]和[[Mac_OS_X|Mac OS X]]（包括[[Xcode|Xcode]]集成工具）。除了命令行用法，几个开发环境可用于Free Pascal，尤其是[[Lazarus|Lazarus]] IDE。
* {{tsl|en|GNU Pascal|}}（[[GCC|GCC]]的一个分离分发部分）在正式地不针对Pascal的CodeGear方言的同时，它包含一个Borland Pascal兼容模式，非常慢地纳入一些Delphi语言的特性。它不适于直接重编译Delphi代码的巨大的体，值得注意地是为操作系统和硬件架构提供了丰富的支持。
* {{tsl|en|Virtual Pascal|}}是一个兼容x86 32位Turbo Pascal和Delphi的编译器，主要针对[[OS/2|OS/2]]和Windows，虽然它也开发了一个DOS+ 扩展器和一个实验性的Linux交叉编译器。该编译器的开发在大约Delphi V2层次时停止了；它的站点从2007年关闭，Virtual Pascal的开发也停止了。
* {{tsl|en|Oxygene (programming language)||Oxygene}}（正式地称作''Chrome''）是一个Object Pascal编译器，来自于整合进[[Microsoft_Visual_Studio|Microsoft Visual Studio]]的{{tsl|en|RemObjects Software|}}。它也可用作本地运行在[[Common_Language_Infrastructure|CLI]]上的自由命令行编译器。它针对.NET和Mono平台。
* {{tsl|en|MIDletPascal|}}是一个生成J2ME字节代码的手机应用开发工具。
* {{tsl|en|PocketStudio|}}是一个[[Palm_OS|Palm OS]]的基于Pascal的[[Integrated_development_environment|IDE]]。

== 解释器 ==
[http://www.remobjects.com/ps Pascal Script]（正式地称作InnerFuse）是一个开源的用Delphi编写的Object Pascal [[interpreter|解释器]]/脚本引擎。支持有限的Object Pascal子集。

== "Hello World"程序样本 ==

=== Apple的Object Pascal ===
<syntaxhighlight lang="pascal">
program ObjectPascalExample;

   type
      THelloWorld = object
         procedure Put;
      end;

   var
      HelloWorld: THelloWorld;

   procedure THelloWorld.Put;
   begin
      WriteLn('Hello, World!');
   end;

begin
   New(HelloWorld);
   HelloWorld.Put;
   Dispose(HelloWorld);
end.
</syntaxhighlight>

=== Turbo Pascal的Object Pascal ===
在Delphi和Free Pascal里仍然支持这种Object Pascal。FPC也将自己的（这种Object Pascal）库/单元的替代品打包。Delphi不这样做。Free Pascal 1.0系列和FPC文本模式IDE是这种方言的最大的开发代码库。Free Pascal 2.0以更类似Delphi的方言重写了。

<syntaxhighlight lang="pascal">
program ObjectPascalExample;

   type
      PHelloWorld = ^THelloWorld;
      THelloWorld = object
         procedure Put;
      end;

   var
      HelloWorld: PHelloWorld; {这是一个指向THelloWorld的指针}

   procedure THelloWorld.Put;
   begin
      WriteLn('Hello, World!');
   end;

begin
   New(HelloWorld);
   HelloWorld^.Put;
   Dispose(HelloWorld);
end.
</syntaxhighlight>

=== Delphi和Free Pascal的Object Pascal ===
<syntaxhighlight lang="pascal">
program ObjectPascalExample;

type
  THelloWorld = class
    procedure Put;
  end;

procedure THelloWorld.Put;
begin
  Writeln('Hello, World!');
end;

var
  HelloWorld: THelloWorld;               {这是一个隐式指针}

begin
  HelloWorld := THelloWorld.Create;      {构建器返回一个指针}
  HelloWorld.Put;
  HelloWorld.Free;                       {本行解除引用指针}
end.
</syntaxhighlight>
注意，对象构建器在Delphi和Free Pascal（Delphi兼容模式）里仍然有效。

=== Oxygene的Object Pascal ===
<syntaxhighlight lang="pascal">
namespace ObjectPascalExample;

   interface

   type
      ConsoleApp = class
         class method Main
      end;

      THelloWorld = class
         method Put;
      end;

   implementation

   method THelloWorld.Put;
   begin
      Console.WriteLine('Hello, World!');
   end;

   class method ConsoleApp.Main;
   begin
      var HelloWorld := new THelloWorld;
      HelloWorld.Put;
   end;

end.
</syntaxhighlight>

== 进展 ==
通过扩展Delphi，许多特性已持续地引进Object Pascal，现在Free Pascal也引进了一些特性。为了应对批评，Free Pascal已接纳了泛型，并且Delphi和Free Pascal现在都支持操作符重载（尽管使用不同的语法）。Delphi从版本7<ref name="newftrs">{{cite web|title=New Delphi language features since Delphi 7|publisher=CodeGear|url=http://dn.codegear.com/article/34324|accessdate=2008-07-06}}</ref>也引进了包括泛型的许多其它特性。

== 参见 ==
* [[Borland_Kylix|Borland Kylix]]
* [[编程语言比较|编程语言比较]]
* [[Free_Pascal|Free Pascal]]
* [[Hello_world程序|Hello world程序]]

== 参考 ==
{{reflist|2}}

== 外部链接 ==

=== Embarcadero ===
* [http://www.embarcadero.com/products/delphi Embarcadero Delphi]
* [https://web.archive.org/web/20100628194422/http://www.embarcadero.com/products/delphi-prism .NET的Embarcadero Delphi Prism]
* [http://edn.embarcadero.com/article/34324 Delphi 2006和Delphi 2007里的新语言特性]
* [https://web.archive.org/web/20111120115419/http://www.delphibasics.tk/ Delphi基础——自由源代码]
* [http://www.aboutdelphi.tk 关于Delphi社区]
* [http://delphi.wikia.com Delphi Wiki]
* [http://www.torry.net Torry的Delphi页面]
* [http://delphibasics.googlepages.com Delphi教程]
* [http://www.programmersclub.ru 俄罗斯Delphi俱乐部]
* [http://dn.codegear.com/article/10280 Object Pascal风格指南]

=== RemObjects Software ===
* [http://www.remobjects.com/oxygene RemObjects Oxygene主页]
* [http://wiki.remobjects.com/wiki/Oxygene RemObjects Oxygene官方Wiki]
* [https://web.archive.org/web/20080513210307/http://www.remobjects.com/devcenter/chrome RemObjects Oxygene开发人员资源、文章和视频]

=== Object Pascal介绍 ===
* [http://www.delphi.co.nr Delphi初学者]
* [https://web.archive.org/web/20120526073321/http://www.fundelphi.org/ Delphi初学者信息收集web站点]
* [https://web.archive.org/web/20090705125659/http://www-personal.umd.umich.edu/~ldkronos/delphi/ 探索Delphi]
* [http://www.mactech.com/articles/mactech/Vol.02/02.12/ObjectPascal/ MacTech 1985年12卷第2期]

=== Delphi社区 ===
* [http://www.delphibasics.co.nr Delphi基础论坛，教程和示例]
* [http://www.delphipages.com Delphi页面]
* [http://www.torry.net Torry的Delphi页面]
* [http://sites.google.com/site/delphibasics/ 初学者的自由Delphi源代码]
* [http://delphi.about.com/ About.com的Delphi编程]
* [http://www.delphifaq.net/ Merlin的Delphi锻造]

=== Free Pascal的Object Pascal参考指南 ===
* [https://web.archive.org/web/20060713205007/http://www.freepascal.org/docs/ref.pdf 当前版本的Object Pascal参考指南（PDF）]
* [http://www.freepascal.org/docs-html/ref/ref.html 当前版本的Object Pascal参考指南（html）]
* [https://web.archive.org/web/20091228021135/http://www.freepascal.org/fpcmac.html Free Pascal对Mac Pascal扩展状态页面]

=== Object Pascal工具 ===
* [http://sourceforge.net/projects/mseide-msegui MSEide+MSEgui]
* [http://www.lazarus.freepascal.org/ Lazarus IDE]
* [http://z505.com/powtils/idx.shtml Powtils Web Kit]

=== GNU Pascal ===
* [http://www.gnu-pascal.de GNU Pascal（GPC）信息]
* [http://www.microbizz.nl/gpcdiffs.html GPC与Mac Pascal的区别页面]

=== paxCompiler ===
* [http://www.paxcompiler.com 嵌入式Pascal编译器]

=== WDSybil ===
* [http://www.wdsibyl.org WDSybil主页]

{{Pascal programming language family}}
{{程序设计语言|Python|state=collapsed}}

[[Category:Pascal语言家族|Category:Pascal语言家族]]
[[Category:面向对象的编程语言|Category:面向对象的编程语言]]
[[Category:Borland軟體|Category:Borland軟體]]
[[Category:1986年建立的程式語言|Category:1986年建立的程式語言]]