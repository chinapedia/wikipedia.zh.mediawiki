{{NoteTA|G1=IT}}
{{expand|time=2011-10-23T01:59:55+00:00}}
{{Infobox software
| name                   = Jikes研究虚拟机
| logo                   =
| screenshot             =
| caption                =
| developer              = [http://jikesrvm.org/Project+Organization Jikes RVM Project Organization]
| status                 = 活跃
| latest release version = 3.1.3
| latest release date    = {{start date and age|2013|02|12}}
| latest preview version =
| latest preview date    =
| operating system       = [[类Unix系统|类Unix系统]]
| programming language   = [[Java|Java]]
| genre                  = [[Java虚拟机|Java虚拟机]]
| license                = Eclipse公共许可证
| website                = {{URL|jikesrvm.org}}
}}
'''Jikes研究虚拟机'''（Jikes Research Virtual Machine,简称Jikes RVM)是一种成熟的用于执行[[Java|Java]][[程序|程序]]的[[虚拟机|虚拟机]]，其早期版本与当前版本分别在{{Tsl|en|Common Public License|通用公共许可证}}（CPL）与[[Eclipse公共许可证|Eclipse公共许可证]]（EPL）下开放代码。与其他以Java编写的虚拟机不同的是，Jikes RVM采用了[[元循环求值器|元循环]]技术。

==历史==

*1997年11月，Jalapeño项目作为[[IBM研究院|IBM沃森研究中心]]的一个内部项目启动。

*1999至2000年间，IBM研究人员发布了关于Jikes RVM的新特性的研究资料，一些大学也获得阅览Jikes RVM源代码的权利。

*2001年10月，Jikes RVM 2发布，并以通用公共许可证（CPL）开放源代码。2.0版支持[[PowerPC|PowerPC]]与[[Intel|Intel]]架构，而且也支持许多不同的[[垃圾回收_(计算机科学)|垃圾回收]]算法。

*2002年，2.2版发布，该版的[[垃圾回收_(計算機科學)|垃圾精确回收器]]用流行的内存管理工具包重构。

*2004年，2.4版发布，这一版本的设计尤其注重于用以运行[[Eclipse|Eclipse]]，而稳定性与性能也较之前有一定程度的提高。

*2007年，2.9版开始开发，此版重写大量代码来利用Java5.0的新特性并使用了蚂蚁系统。

*2008年，3.0版发布，这标志了2.9版开发的完结，Jikes RVM的代码基底也再次趋于稳定。

*2009年，3.1版以Eclipse公共许可证（EPL）发布，此版相对于3.0.1版性能大幅提升，并且提供了对原生[[线程|线程]]的切换支持。

==特性==

;引导

Jikes RVM采用了元循环技术，因而其需要运行在一个[[引导|引导]][[Java虚拟机|Java虚拟机]]（JVM）上来创建启动镜像。启动镜像在运行时由一个小型的C装入程序载入，其本质是Jikes RVM启动必须的[[对象|对象]]的集合，这些对象则是利用引导JVM的[[反馈|反馈]]所创建。

;VM Magic

编译器在VM Magic里为一个[[类_(计算机科学)|類別]]生成不同的代码（而非[[字节码|字节码]]）。VM Magic類別允许对内存的直接访问，是影响内存管理工具包的性能的关键所在。VM Magic類別被包含于org.vmmagic包内，同时也为其他的Java项目所使用。

;内存管理工具包

内存管理工具包（MMTk）是在Jikes RVM与其他项目（如Singularity系统和Rotor软件项目<ref>{{Cite web |url=http://jikesrvm.org/Project+Proposals+2009 |title=Jikes RVM Project Proposals 2009 |accessdate=2011-10-25 |archive-date=2012-04-25 |archive-url=https://web.archive.org/web/20120425091723/http://jikesrvm.org/Project+Proposals+2009 |dead-url=no }}</ref>）都有使用的垃圾精确回收器的一个集合。正如Jikes RVM其他部件一样,MMTk是用Java实现的，但主要还是依赖于VM Magic。

;类库

Jikes RVM已经可以使用[[Apache_Harmony|Apache Harmony]]与[[GNU_Classpath|GNU Classpath]]类库，对[[OpenJDK|OpenJDK]]类库的实验性支持也已加入。

;编译器

Jikes RVM使用基线[[编译器|编译器]]来快速地为特定的[[指令集架构|架构]]生成[[代码|代码]]，而后的[[动态自适应编译|动态自适应编译]]利用带有如栈替换等特性的优化编译器重编译代码，其中动态自适应编译系统使用{{Tsl|en|Cost–benefit analysis|成本-收益分析|成本-收益分析模型}}。

;运行时

Jikes RVM的运行时有着许多新颖的特性，例如快速锁定机构，[[调度|协作调度]]机构以及对[[异常处理|异常]]的快速收集与调度的支持。

;处理器支持

Jikes RVM可以支持使用[[Power_PC|Power PC]]（即ppc）与[[IA-32|IA-32]]（即[[x86|x86]]）指令集的[[处理器|处理器]]。

;研究

正如其名所示，Jikes RVM是个研究项目，因而功能侧重于用于研究新技术<ref>{{Cite web |url=http://jikesrvm.org/Publications |title="Jikes RVM research papers" |accessdate=2011-10-23 |archive-date=2011-10-02 |archive-url=https://web.archive.org/web/20111002215511/http://jikesrvm.org/Publications |dead-url=no }}</ref>。

Jikes RVM也出现在了07、08、10、11年的[[Google编程之夏|Google编程之夏]]比赛中<ref>{{Cite web |url=http://jikesrvm.org/Google+Summer+of+Code+2011 |title=Jikes RVM - Google Summer of Code 2011 |accessdate=2011-10-23 |archive-date=2011-10-02 |archive-url=https://web.archive.org/web/20111002103625/http://jikesrvm.org/Google+Summer+of+Code+2011 |dead-url=no }}</ref>。

==参考==
<references />

==外部链接==

*[http://sourceforge.net/projects/jikesrvm/ Jikes RVM在SourceForge的项目] {{Wayback|url=http://sourceforge.net/projects/jikesrvm/ |date=20200418081721 }} {{en}}
*[http://www.dacapobench.org/ DaCapo Benchmarks] {{Wayback|url=http://www.dacapobench.org/ |date=20210109213756 }} {{en}}
*[http://wala.sourceforge.net/ WALA] {{Wayback|url=http://wala.sourceforge.net/ |date=20080905212106 }} {{en}}
*[https://archive.is/20121225093413/http://pearcolator.sourceforge.net/ PearColator] {{en}}
*[http://www.ibm.com/developerworks/cn/java/jalapeno/index.html IBM DevelopWorks中Jikes RVM的介绍] {{Wayback|url=http://www.ibm.com/developerworks/cn/java/jalapeno/index.html |date=20160304085108 }} {{zh}}
{{Java_Virtual_Machine}}

[[Category:虚拟化软体|Category:虚拟化软体]]