{{NoteTA|G1=IT}}
'''JMX'''（{{lang-en|Java Management Extensions}}，即Java管理扩展）是[[Java|Java]]平台上为应用程序、设备、系统等植入管理功能的框架。JMX可以跨越一系列异构[[操作系统|操作系统]]平台、系统[[体系结构|体系结构]]和[[网络传输协议|网络传输协议]]，灵活的开发无缝集成的系统、网络和服务管理应用。

== 托管Bean ==
'''托管Bean'''（{{lang-en|'''Managed Bean'''}}，'''MBean'''）是一种通过[[依赖注入|依赖注入]]创建的[[JavaBean|JavaBean]]。托管Bean主要用在Java管理扩展技术中。在Java EE 6的规范中，对托管Bean做了更具体的规定。 

MBean代表了运行在[[Java虚拟机|Java虚拟机]]上的资源，例如应用程序或Java EE服务（事务监控、JDBC驱动程序等）。其可以用于收集如性能、资源使用率、问题信息等关键的统计信息（通过{{link-en|拉取|Pull technology}}），获取或设置应用程序的配置或属性（通过[[推送|推送]]或{{link-en|拉取|Pull technology}}），以及对故障或状态变化等的通知事件（通过[[推送|推送]]）。

Java EE 6规定，托管Bean是一种[[JavaBeans|Bean类]]。如果一个Java的外部类被其他Java EE规范（例如[[JavaServer_Faces|JavaServer Faces]]规范）定义为托管Bean，或者它满足下述所有条件，那么这个类就是一个托管Bean：
# 它不是一个非静态内部类。 
# 它是一个具体类，或者是被<code>@Decorator</code>[[Java_注解|注解]]。 
# 它没有被EJB组件定义[[Java_注解|注解]][[Java_注解|注解]]，或在<code>ejb-jar.xml</code>中被声明为[[EJB|EJB]] Bean类。
定义托管Bean时无需特殊的声明（如[[Java_注解|注解]]等）。

一个实现了<code>javax.management.NotificationEmitter</code>的MBean，其内部的变化（针对属性）可以通知MBeanServer。对MBean的变化感兴趣的应用程序可以注册一个到MBeanServer的监听器（<code>javax.management.NotificationListener</code>）。注意，JMX并不保证所有通知都会被监听器接收。<ref>{{Cite web |url=http://www.oracle.com/technetwork/java/javase/tech/best-practices-jsp-136021.html |title=Java Management Extensions (JMX) - Best Practices |accessdate=2014-08-23 |archive-date=2019-05-02 |archive-url=https://web.archive.org/web/20190502173809/https://www.oracle.com/technetwork/java/javase/tech/best-practices-jsp-136021.html |dead-url=no }}</ref>

=== 类型 ===
有两种基本类型的MBean：
* 标准MBean（Standard MBeans）：实现了业务接口，其包含属性的getter和setter和操作（即[[方法_(電腦科學)|方法]]）。 
* 动态MBean（Dynamic MBeans）：实现javax.management.DynamicMBean接口，其提供了列出属性和操作，以及获取和设置属性值的方式。 

附加的类型有开放MBean（Open MBeans）、模型MBean（Model MBeans）和监视器MBean（Monitor MBeans）。
开放MBean是限定为基本数据类型的动态MBean，因而可移植性较好。
模型MBean是可以在运行期间配置的动态MBean。一般的MBean类也提供了用于在程序运行期间动态地配置资源的功能。 

MXBean（Platform MBean，平台MBean）是一种特殊类型的MBean，它{{link-en|具体化 (计算机科学)|Reification (computer science)|具体化}}了[[Java虚拟机|Java虚拟机]]子系统，例如[[垃圾回收_(計算機科學)|垃圾回收]]、[[即时编译|即时编译]]、[[内存池|内存池]]、[[线程|多线程]]等。 

MLet（Management applet，管理小程序）是一个实用程序MBean，在MBeanServer用来从[[XML|XML]]描述中加载、实例化和注册MBean。这种XML描述符的格式是：<ref>{{cite news | url=http://java.sun.com/j2se/1.5.0/docs/api/javax/management/loading/MLet.html | title=MLet (Java 2 Platform SE 5.0) | publisher=[[Sun_Microsystems|Sun Microsystems]] | accessdate=2008-06-22 | archive-date=2010-02-10 | archive-url=https://web.archive.org/web/20100210140901/http://java.sun.com/j2se/1.5.0/docs/api/javax/management/loading/MLet.html | dead-url=no }}</ref>
<pre>
 <MLET CODE = ''class'' | OBJECT = ''serfile''
   ARCHIVE = ''archiveList''
   [CODEBASE = ''codebaseURL'']
   [NAME = ''objectName'']
   [VERSION = ''version'']
 >
   [arglist]
 </MLET>
</pre>

== 参见 ==
* [[SNMP,JMX|SNMP,JMX]]
* [[J2EE|J2EE]]

==参考文献==
{{reflist}}

== 外部链接 ==
* [http://java.sun.com/javase/technologies/core/mntr-mgmt/javamanagement/ JMX官方网站] {{Wayback|url=http://java.sun.com/javase/technologies/core/mntr-mgmt/javamanagement/ |date=20110129005140 }}

[[Category:Java_API|Category:Java API]]
[[Category:Java企业平台|Category:Java企业平台]]
[[Category:Java规范请求|Category:Java规范请求]]
[[Category:网络管理|Category:网络管理]]