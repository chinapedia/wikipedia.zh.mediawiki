{{noteTA
|G1=IT
}}
在[[计算机科学|计算机科学]]中，'''整数'''的概念指数学上[[整数|整数]]的一个[[有限|有限]][[子集|子集]]。它也称为整数数据类型，或简称'''整型数'''、'''整型'''<ref>{{cite book|title=The C Programming Language - Second Edition, 43rd printing|publisher=Prentice Hall|author=Kernighan & Ritchie|year=1988|pages=section 2.9|isbn=978-0131103627|quote=C provides six operators for bit manipulation; these may only be applied to integral operands, that is, char, short, int and long, whether signed or unsigned.}}</ref>。 通常是[[程式設計語言|程式設計語言]]的一種[[原始型態|基礎資料型態]]，例如[[java|java]]及[[C程式語言|C]] [[程式語言|程式語言]]的'''int''' [[資料類型|資料類型]]，然而這種基礎資料型態只能表示[[子集|有限的整數]]，其範圍受制於[[電腦|電腦]]的一個[[字_(计算机)|字組]]所包含的[[位元|位元]]數所能表示的[[組合|組合]]總數。當運算結果超出範圍時，即出現[[算術溢出|演算溢位]]，[[微處理器|微處理器]]的狀態暫存器中的溢位旗標（overflow flag）會被設定，而系統則會產生溢位例外（overflow exception）或溢位錯誤（overflow error）。

電腦可處理帶號（signed）及非帶號（unsigned）整數，非帶號整數不包括負數。由於一般情況下要同時處理正數及負數，帶號整數把字組的[[最高有效位元|最高有效位元]]（msb，即最左邊的位元）視為正負號（'''0'''代表正，'''1'''代表負），而數字則以[[二補數|二補數]]形式編碼，以簡化[[二進制|二進制運算]]的[[邏輯電路|邏輯電路]]。

即使電腦字組的位元數有限，仍可透過[[編譯器|編譯器]]及[[直譯器|直譯器]]以[[软件|軟體]]方式結合不同數目的字組以產生新的資料類型來加以擴展，於是在早期的8位元電腦上可處理16及32位元的整數，而在近代的32位元電腦上則可輕鬆地處理64位元的整數了。可變長度的整數（例如[[高精度计算|bignum]]）可以儲存任意大的整數，條件是有足夠記憶體存放。其它類型的整數長度都是固定的，例如某個數目的位元，通常取2的某次方（例如4、8、16等），或者某個固定位數（例如9個位、10個位）。

相反地，理論上的[[電腦|電腦]]（例如[[圖靈機|圖靈機]]）一般可以有無限的容量（但只是[[可數集|可數集]]）。

=== 字組位元數與整數範圍之關係 ===
{| class="wikitable"
|-
!colspan="6" style="text-align: center;" |字组位元数与整数范围之关系
|-
|rowspan="2" | 字组位元数 || colspan="2" style="text-align: center;" |非带号整数  || colspan="2" style="text-align: center;" | 带号整数 ||rowspan="2" | 应用
|-
|  下限 || 上限 || 下限 || 上限
|-
| 8 || 0 || 255 || -128 ||  127  ||[[Intel_8080|8080]]<br />[[Zilog_Z80|Z80]]<br />[[MOS_6502|6502]]
|-
| 16 || 0 ||  [[65535|65535]]  || -32768  || 32767 || [[Intel_8086|8086]]<br />[[80286|80286]]
|-
| 32 || 0 || 4294967295 <br>(2<sup>32</sup>-1) ||  −2147483648 <br>(-2<sup>31</sup>) ||  [[2147483647|2147483647]]<br>(2<sup>31</sup>-1) ||[[Intel_80386|80386]]<br />[[Intel_80486|80486]][[奔騰|Pentium]]系<br />[[摩托罗拉68000|680X0]]
|-
| 64 || 0 || 18,446,744,073,709,551,615 <br>(2<sup>64</sup>-1) || −9,223,372,036,854,775,808<br>(-2<sup>63</sup>) || [[9223372036854775807|9,223,372,036,854,775,807]]<br>(2<sup>63</sup>-1)  ||[[安腾|Itanium]]
|-
| 128  || 0 || 340,282,366,920,938,463,463,374,607,431,768,211,455<br>(2<sup>128</sup>-1)  || −170,141,183,460,469,231,731,687,303,715,884,105,728<br>(-2<sup>127</sup>) || 170,141,183,460,469,231,731,687,303,715,884,105,727<br>(2<sup>127</sup>-1) ||[[IPv6|IPv6]]
|-
|  n ||  0 || (2<sup>n</sup>-1) ||  (-2<sup>n-1</sup>) || (2<sup>n-1</sup>-1)  ||n/a
|}

== 参考文献 ==
{{reflist}}

== 参见 ==
*[[有符號數處理|有符號數處理]]
*[[计算机编码|计算机编码]]
*[[整数|整数]] （数学概念）

{{数据类型}}

[[Category:数据类型|Category:数据类型]]
[[Category:計算機算術|Category:計算機算術]]