{{noteTA
|G1=IT
|1=zh-cn:宏内核; zh-hk:整塊性核心;zh-tw:單核心;
|2=zh-cn:进程; zh-tw:行程;
|3=zh-cn:并发; zh-tw:共時;
|4=zh-cn:内核态; zh-tw:核心空間;
|5=zh-cn:用户态; zh-tw:使用者空間;
|6=zh-cn:微内核; zh-tw:微核心;
|7=zh-cn:混合内核; zh-tw:混核心;
|8=zh-cn:超微内核; zh-tw:奈内核;
|9=zh-cn:内核; zh-tw:核心;
}}
[[File:Kernel-monolithic_zh.svg|thumb]]
[[File:OS-structure2.svg|thumb]]
'''整塊性核心'''（{{lang-en|Monolithic kernel}}），也譯為'''集成式核心'''、'''單體式核心'''，一種[[内核|作業系統核心]]架構，此架構的特性是整個核心程式是一個單一二進位執行檔，在[[核心空間|核心空間]]以監管者模式（Supervisor Mode）來執行。相對於其他類型的作業系統架構，如[[微核心|微核心]]架構或[[混核心|混核心]]架構等，這些核心會定義出一個高階的虛擬介面，由該介面來涵蓋描述整個電腦硬體，這些描述會集合成一組硬體描述用詞，有時還會附加一些[[系統调用|系統调用]]，如此可以用一個或多個模組來實現各種作業系統服務，如[[行程|行程]]管理、共時（Concurrency）控制、[[記憶體管理|記憶體管理]]等。

==概論==
整塊性核心被視作為運行在單一位址空間的單一的行程，核心提供的所有服務，都以特權模式，在這個大型的核心位址空間中運作，這個位址空間被稱為[[核心空間|核心空間]]（kernel space）。它通常是以單一靜態[[二進位檔案|二進位檔案]]的方式被儲存在[[磁碟|磁碟]]，或是[[快取記憶體|快取記憶體]]上，在開機之後被載入記憶體中的核心空間，開始運作。

它的優點是設計簡單。在核心之中的通訊成本很小，核心可以直接調用核心空間內的[[函式|函式]]，跟使用者空間的應用程式呼叫函式一樣，因此它的效能很好。在1980年代之前，所有的作業系統都採用這個方式實作；即使到了現在，主要的作業系統也多採用這個方式。

[[微核心|微核心]]的支持者認為，整塊性核心的移植性不佳，即使有的整塊性核心將其運作從整體性運作拆分成幾個服務模組，並讓各模組各自運作，其作業系統的程式碼依然是高度緊密的，很難修改成其他類型的作業系統架構。此外，所有的模組也都在同一塊定址空間內執行，倘若某個模組有錯誤、瑕疵（Bug），執行時就會損及整個作業系統運作。反過來，如果整塊性架構的作業系統在開發設計時相當完善，並經測試驗證後具有高度可靠性，則作業系統內的各軟體組件因具有高度緊密性，如此在系統的低階運作上將格外有效率。

==可載入性的模組==
{{See also|可載入核心模組}}
現在多數採行整塊性架構設計的作業系統，如[[OpenVMS|OpenVMS]]、[[Linux|Linux]]、[[FreeBSD|FreeBSD]]、以及[[Solaris|Solaris]]等，都已經能在運作執行階段中，以動態方式來載入（Load）、卸載（Unload）可執行的[[可載入核心模組|模組]]，不過這些模組是屬於二進位程式碼的層次，或稱映像層次，而非核心架構的層次。即使整塊性核心進行模組化轉化，也不會與微核心或混核心架構的核心產生區分上的混淆，因為微核心、混核心的模組是屬於系統架構的層次。

就實務上，'''動態載入/卸載模組'''的作法，等於是用一種較簡易的方式來彈性管控執行中的作業系統核心，若沒有動態載入/卸載機制，作業系統的核心想要進行任何的調整、變換，都必須重新開機才能達成。因此模組化是必然且必要的，如此才能讓核心功效輕鬆地擴展、延伸，此外也能適時減輕硬體的執行運作負擔。

另外，有些整塊性作業系統為了讓它的核心空間達到最小化，也會運用動態載入/卸載機制來達成此一目標。

==部分整塊性架構的作業系統舉例==
* 傳統[[UNIX|Unix]]核心
** [[BSD|BSD]]
** [[Solaris|Solaris]]
* [[类Unix系统|类Unix系统]]（Unix-like）的核心
** [[FreeBSD|FreeBSD]]
** [[OpenBSD|OpenBSD]]
** [[NetBSD|NetBSD]]
** [[Linux内核|Linux]]
** [[LynxOS|LynxOS]]
** [[Syllable_Desktop|Syllable Desktop]]
* [[DOS|DOS]]
** [[DR-DOS|DR-DOS]]
** [[MS-DOS|MS-DOS]]
*** Microsoft [[Windows_9x|Windows 9x]]系列（[[Windows_95|95]]、[[Windows_98|98]]、[[Windows_98|98SE]]、[[Windows_Me|Me]]）
** [[FreeDOS|FreeDOS]]
* [[Mac_OS|Mac OS]]（從最初版到[[Mac_OS_8|Mac OS 8.6]]版）
* [[OpenVMS|OpenVMS]]
* [[XTS-400|XTS-400]]

==相關條目==
* [[内核|内核]]（Kernel）
* [[外内核|外内核]]（Exokernel）
* [[混合内核|混合内核]]（Hybrid kernel）
* [[微内核|微内核]]（Microkernel）
* [[超微内核|奈内核]]（Nanokernel）

==参考文献==
<div class="references-small">
* {{cite book|title=作業系統|isbn=957-661-461-9|publisher=國立空中大學|author=鍾斌賢|coauthors=曾煜棋，顏春煌}}
* {{cite book|title=How Windows Work-視窗系統是怎麼運作的|isbn=957-527-867-4|publisher=博碩出版社|author=天野 司（Tsukasa Amano）}} 
</div>
{{操作系统}}

[[Category:操作系统技术|Category:操作系统技术]]
[[Category:操作系统核心|Category:操作系统核心]]