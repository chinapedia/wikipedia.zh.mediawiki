{{TA|G1=IT}}
{{Infobox file format
| name                   = ELF
| icon                   =
| logo                   =
| screenshot             =
| caption                =
| extension              = 无扩展名、<tt>.o</tt>、<tt>.so</tt>、<tt>.elf</tt>、<tt>.prx</tt>、<tt>.axf</tt>、<tt>.bin</tt>、<tt>.puff</tt>、<tt>.ko</tt> 和 <tt>.mod</tt>
| mime                   =
| type code              =
| uniform type           =
| magic                  =<tt>0x7F 'E' 'L' 'F'</tt>
| owner                  = [[Unix_系统实验室|Unix 系统实验室]]
| released               = <!-- {{Start date|YYYY|mm|dd|df=yes}} -->
| latest release version =
| latest release date    = <!-- {{Start date and age|YYYY|mm|dd|df=yes}} -->
|container_for=多种二进制可执行文件格式| genre                  = [[二进制文件|二进制文件]]、[[可执行文件|可执行文件]]、[[目标代码|目标代码]]、[[共享库|共享库]]、[[核心转储|核心转储]]
| standard               =
| free                   =
| url                    =
}}
'''可执行与可链接格式''' （{{lang-en|Executable and Linkable Format}}，缩写 {{lang|en|ELF}}，此前的写法是 '''Extensible Linking Format'''），常被称为 '''ELF格式'''，在[[计算_(计算机科学)|计算]]中，是一种用于[[可执行|可执行]]文件、[[目标代码|目标代码]]、[[共享库|共享库]]和[[核心转储|核心转储]]（core dump）的标准[[文件格式|文件格式]]。首次发布于一个名为 [[System_V_Release_4|System V Release 4]]（SVR4）的 [[UNIX|Unix]] 操作系统版本中关于[[应用二进制接口|应用二进制接口]]（ABI）的规范中，并且此后不久发布于工具接口标准（Tool Interface Standard）<ref>Tool Interface Standard (TIS) [http://refspecs.linuxbase.org/elf/elf.pdf ''Executable and Linking FOrmat (ELF) Specification'']''Version 1.2'' (May 1995)</ref>，随后很快被不同 [[UNIX|Unix]] 发行商所接受。1999 年，这种格式被 [[86open|86open]] 项目选为 x86 架构处理器上的 Unix 和 [[类Unix系统|类 Unix]] 系统的标准二进制文件格式。

按照设计，ELF 格式灵活性高、可扩展，并且[[跨平台|跨平台]]。比如它支持不同的[[字节序|字节序]]和地址范围，所以它不会不兼容某一特别的 [[中央处理器|CPU]] 或[[指令集架構|指令架构]]。这也使得 ELF 格式能够被运行于众多不同平台的各种操作系统所广泛采纳。

==文件格式==   
[[Image:Elf-layout--en.svg|thumb]]所需的''段''，而段首地址表记载了二进制文件中''段''的首地址]]每个 ELF 文件都由一个 ELF 首部和紧跟其后的文件数据部分组成。数据部分可以包含：
*程序头表（Program header table）：描述 0 个或多个[[Memory_segment|内存段]]信息
*分段头表（Section header table）：描述 0 段或多段链接与重定位需要的数据
*程序头表与分段头表引用的数据，比如 .text .data
[[File:ELF_Executable_and_Linkable_Format_diagram_by_Ange_Albertini.png|替代=ELF 文件结构]]
内存段中包含了用于某个 ELF 文件[[執行期|运行时]]执行所需的信息，而片段中包含了用于链接和重定位的重要数据。整个文件中的任何一个字节至多只能属于一个片段，也就是说可能存在不属于任何片段的孤立字节。
{{Quote box|<code>00000000 7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00 {{!}}.ELF............{{!}}</code>
<code>00000010 02 00 3e 00 01 00 00 00 c5 48 40 00 00 00 00 00 {{!}}..>......H@.....{{!}}</code>
ELF 文件首部的 16 进制内容举例|width=100%}}



==工具==
* [[GNU_Binutils|GNU Binutils]] 是用来处理许多格式的目标文件(包括elf文件)一整套的编程语言工具程序，包括readelf，objdump，objcopy, nm, strings, strip, as, ar。
*<code>[[readelf|readelf]]</code>显示elf文件
*<code>[[objdump|objdump]]</code>显示elf和object格式文件，解码elf文件中高级语言语句所对应的机器语言语句段落，汇编语言语句段落。
*<code>[[nm|nm]]</code>显示elf文件中变量名和地址

== 引用 ==
<references />
{{Unix commands}}

{{Executables}}
{{DEFAULTSORT:Executable And Linkable Format}}
[[Category:可执行文件格式|Category:可执行文件格式]]