{{noteTA|T=zh-cn:便携式文档格式; zh-tw:可攜式文件格式;|G1=IT|1=zh-cn:库; zh-tw:函式庫;}}
{{redirect2|PDF|英文字母縮寫相同的其他意思|PDF (消歧義)}}
{{Infobox file format
| name                   = 便攜式文件格式（PDF）
| icon                   = Adobe PDF.svg
| iconcaption            = Adobe PDF图标<div style="padding-top:.3em;">[[File:PDF_file_icon.svg|100px]]</div>
| extension              = .pdf
| mime                   = {{plainlist|
* application/pdf,<ref name="rfc3778">{{citation |url=http://tools.ietf.org/html/rfc3778 |title=The application/pdf Media Type, RFC 3778, Category: Informational |year=2004 |accessdate=2015-01-18 |archive-date=2021-02-24 |archive-url=https://web.archive.org/web/20210224175302/https://tools.ietf.org/html/rfc3778 |dead-url=no }}</ref> 
* application/x-pdf, 
* application/x-bzpdf, 
* application/x-gzpdf
}}
| typecode               = 'PDF '<ref name="rfc3778" />（包含一个空格）
| uniform type           = com.adobe.pdf
| magic                  = <code>%PDF</code>
| owner                  = [[Adobe_Systems|Adobe Systems]]
| released               = {{Start date and age|1993|6|15|df=y}}
| latest release version = 2.0
| latest release date    = <!-- {{Start date and age|YYYY|mm|dd|df=yes}} -->
| genre                  =
| container for          =
| contained by           =
| extended from          =
| extended to            = [[PDF/A|PDF/A]], [[PDF/E|PDF/E]], [[PDF/UA|PDF/UA]], [[PDF/VT|PDF/VT]], [[PDF/X|PDF/X]]
| standard               = ISO 32000-2
| free                   = 是
| url                    = {{URL|https://www.iso.org/standard/63534.html}}
}}
'''便携式文档格式'''（{{Lang-en|'''P'''ortable '''D'''ocument '''F'''ormat}}，缩写：'''PDF'''）是一種用獨立於[[應用程序|應用程序]]、[[计算机硬件|硬件]]、[[操作系統|操作系統]]的方式呈現[[文檔|文檔]]的[[檔案格式|文件格式]]。<ref name="pdf-ref-1.7">Adobe Systems Incorporated, [https://www.adobe.com/devnet/acrobat/pdfs/pdf_reference_1-7.pdf PDF Reference, Sixth edition, version 1.23 (30 MB)] {{Wayback|url=https://www.adobe.com/devnet/acrobat/pdfs/pdf_reference_1-7.pdf |date=20201204221151 }}, Nov 2006, p. 33.</ref>每個PDF文件包含固定布局的平面文檔的完整描述，包括文本、字形、圖形及其他需要顯示的信息。<!-- Today, three dimensional objects can be embedded in PDF documents with Acrobat 3D using [[U3D|U3D]] or [[PRC_(file_format)|PRC]] and various other data formats.<ref name="3d#1" /><ref name="3d#2" /> -->1991年，[[Adobe_Systems|Adobe Systems]]共同創始人約翰·沃諾克提出的名為“Camelot”的系統<ref>{{cite web
|title=The Camelot Project
|last=Warnock
|first=J.
|authorlink=John Warnock
|url=http://www.planetpdf.com/planetpdf/pdfs/warnock_camelot.pdf
|publisher=PlanetPDF
|format=PDF
|year=1991
|quote=This document describes the base technology and ideas behind the project named “Camelot.” This project’s goal is to solve a fundamental problem [...] there is no universal way to communicate and view ... printed information electronically.
|accessdate=2014-05-27
|archive-date=2009-03-04
|archive-url=https://web.archive.org/web/20090304134754/http://www.planetpdf.com/planetpdf/pdfs/warnock_camelot.pdf
|dead-url=no
}}</ref>演變成PDF。
如今，PDF文件除平面的文本和图形外，还可能包括逻辑结构元素，注释、表单、图层、富媒体（包括视频内容）之类的交互元素，使用[[U3D|U3D]]或[[PRC_(file_format)|PRC]]的三维对象，以及多种其他数据内容。PDF规范还提供了启用这些功能时所需的加密功能、[[数字签名|数字签名]]、文档附件和[[元数据|元数据]]等。

== 歷史 ==
{{main|PDF的历史与规范化}}
Adobe Systems在1993年免费提供了PDF规范<ref>{{cite web|url=http://www.planetpdf.com/planetpdf/pdfs/warnock_camelot.pdf|title=The Camelot Project|accessdate=2014-05-27|archive-date=2009-03-04|archive-url=https://web.archive.org/web/20090304134754/http://www.planetpdf.com/planetpdf/pdfs/warnock_camelot.pdf|dead-url=no}}</ref>，當時與PDF一起競逐跨平台文檔格式的，還包括 [[DjVu|DjVu]]（仍在開發中）、{{tsl|en|Envoy (WordPerfect)|Envoy}}、Common Ground Digital Paper、Farallon Replica 及 [[Adobe系統|Adobe]] 自己本身的 [[PostScript|PostScript]]（.ps）格式。在[[萬維網|萬維網]]及[[HTML|HTML]]文本尚未興起時，PDF在[[桌面出版|桌面出版]][[工作流技术|工作流技术]]當中很受歡迎。PDF起初为Adobe所控制的{{link-en|专有格式|proprietary format}}，直到2008年7月1日才被官方以[[开放标准|开放标准]]发行，并由[[国际标准化组织|国际标准化组织]]以 ISO 32000-1:2008 发布。<ref name="iso-standard">{{cite web |url=http://www.iso.org/iso/iso_catalogue/catalogue_tc/catalogue_detail.htm?csnumber=51502 |title=ISO 32000-1:2008 - Document management – Portable document format – Part 1: PDF 1.7 |publisher=Iso.org |date=2008-07-01 |accessdate=2010-02-21 |archive-date=2010-12-06 |archive-url=https://web.archive.org/web/20101206175751/http://www.iso.org/iso/iso_catalogue/catalogue_tc/catalogue_detail.htm?csnumber=51502 |dead-url=no }}</ref><ref>{{cite web | last = Orion | first = Egan | title = PDF 1.7 is approved as ISO 32000 | work = [[The_Inquirer|The Inquirer]] | publisher = [[The_Inquirer|The Inquirer]] | date = 2007-12-05 | url = http://www.theinquirer.net/gb/inquirer/news/2007/12/05/pdf-approved-iso-32000 | accessdate = 2007-12-05 | archive-date = 2007-12-13 | archive-url = https://web.archive.org/web/20071213004627/http://www.theinquirer.net/gb/inquirer/news/2007/12/05/pdf-approved-iso-32000 | dead-url = yes }}; {{cite web | url = http://www.vnunet.com/vnunet/news/2205065/pdf-takes-first-step-towards | title = Adobe wins backing for PDF 1.7 | publisher = vnunet.com | deadurl = yes | archiveurl = https://web.archive.org/web/20071220142959/http://www.vnunet.com/vnunet/news/2205065/pdf-takes-first-step-towards | archivedate = 2007-12-20 | accessdate = 2015-01-18 }}</ref> 此後，標準的控制權便移轉到了產業專家志願者所組的ISO委员会底下。2008年，Adobe在 ISO 32000-1 發佈了公共专利许可，對於製作、使用、銷售及發佈PDF相容的應用所需的專利，皆賦予[[买断式授权|买断式授权]]。<ref>{{citation |url=https://www.adobe.com/pdf/pdfs/ISO32000-1PublicPatentLicense.pdf |title=Public Patent License, ISO 32000-1: 2008 – PDF 1.7 |author=Adobe Systems Incorporated |year=2008 |accessdate=2011-07-06 |archive-date=2020-10-28 |archive-url=https://web.archive.org/web/20201028184013/https://www.adobe.com/pdf/pdfs/ISO32000-1PublicPatentLicense.pdf |dead-url=no }}</ref>

PDF 1.7 含有一些Adobe所定义的专有技术，如Adobe XML表单结构（XFA）和[[JavaScript|JavaScript]]中对Acrobat的扩展。這些技術被 ISO 32000-1 引用為對於該規範之完整實現不可或缺且規範性的，但是它們並沒有被標準化，其規格也只有發佈在Adobe的網站上。<ref>{{cite web |url=http://eur-lex.europa.eu/LexUriServ/LexUriServ.do?uri=SWD:2013:0224:FIN:EN:PDF |title=Guide for the procurement of standards-based ICT – Elements of Good Practice, Against lock-in: building open ICT systems by making better use of standards in public procurement |quote=Example: ISO/IEC 29500, ISO/IEC 26300 and ISO 32000 for document formats reference information that is not accessible by all parties (references to proprietary technology and brand names, incomplete scope or dead web links). |publisher=European Commission |date=2013-06-25 |accessdate=2013-10-20 |archive-date=2020-09-19 |archive-url=https://web.archive.org/web/20200919174545/https://eur-lex.europa.eu/LexUriServ/LexUriServ.do?uri=SWD:2013:0224:FIN:EN:PDF |dead-url=no }}</ref><ref name="iso-meeting-n603">{{citation |url=http://pdf.editme.com/files/pdfREF-meetings/ISO-TC171-SC2-WG8_N0603_SC2WG8_MtgRept_SLC.pdf |title=ISO/TC 171/SC 2/WG 8 N 603 – Meeting Report |quote=XFA is not to be ISO standard just yet. ... The Committee urges Adobe Systems to submit the XFA Specification, XML Forms Architecture (XFA), to ISO for standardization ... The Committee is concerned about the stability of the XFA specification ... Part 2 will reference XFA 3.1 |date=2011-06-27 |accessdate=2014-05-27 |archive-date=2012-11-26 |archive-url=https://web.archive.org/web/20121126013025/http://pdf.editme.com/files/pdfREF-meetings/ISO-TC171-SC2-WG8_N0603_SC2WG8_MtgRept_SLC.pdf |dead-url=no }}</ref><ref>{{cite web |url=http://www.plosone.org/article/fetchSingleRepresentation.action?uri=info:doi/10.1371/journal.pone.0069446.s001 |title=Embedding and publishing interactive, 3-dimensional, scientificfigures in Portable Document Format (PDF) files |quote=... the implementation of the U3D standard was not complete and proprietary extensions were used. |accessdate=2013-10-20 |archive-date=2016-03-04 |archive-url=https://web.archive.org/web/20160304050750/http://www.plosone.org/article/fetchSingleRepresentation.action?uri=info%3Adoi%2F10.1371%2Fjournal.pone.0069446.s001 |dead-url=no }}</ref><ref name="rosenthol-adobe-2012">{{cite web |url=http://cdn.parleys.com/p/5148922a0364bc17fc56c6e5/iSUM2012_00_LRO_presentation.pdf |title=PDF and Standards |author=Leonard Rosenthol, Adobe Systems |year=2012 |accessdate=2013-10-20 |archive-date=2013-09-02 |archive-url=https://web.archive.org/web/20130902000323/http://cdn.parleys.com/p/5148922a0364bc17fc56c6e5/iSUM2012_00_LRO_presentation.pdf |dead-url=yes }}</ref><ref>{{citation |url=http://www.planetpdf.com/enterprise/article.asp?ContentID=Is_PDF_an_open_standard&page=1 |title=Is PDF an open standard? - Adobe Reader is the de facto Standard, not PDF |author=Duff Johnson |date=2010-06-10 |accessdate=2014-01-19 |archive-date=2016-04-16 |archive-url=https://web.archive.org/web/20160416014955/http://www.planetpdf.com/enterprise/article.asp?ContentID=Is_PDF_an_open_standard&page=1 |dead-url=no }}</ref>這些技術大部份也没有被熱門的PDF第三方实现所支持。

2017年7月28日，發佈了 ISO 32000-2:2017（PDF 2.0）。ISO 32000-2 不將任何專有技術當作是規範性引用文件。<ref>{{Cite web|url=https://www.iso.org/standard/63534.html|title=ISO 32000-2 – Document management -- Portable document format -- Part 2: PDF 2.0|website=www.iso.org|language=en|access-date=2017-07-28|archive-date=2020-12-10|archive-url=https://web.archive.org/web/20201210143301/https://www.iso.org/standard/63534.html|dead-url=no}}</ref>

== 技术基础 ==
PDF主要由三項技術組成：
* 衍生自[[PostScript|PostScript]]頁面描述語言的子集，用以生成和輸出圖形。
* [[字型|字型]]嵌入/替換系統，可使字型隨文件一起傳輸。
* 結構化的存儲系統，用以綁定這些元素和任何相關内容到單個檔案，帶有適當的資料[[壓縮|壓縮]]系統。

=== PostScript ===
[[PostScript|PostScript]]是一种运行于[[直譯器|直譯器]]以生成图像的[[页面描述语言|页面描述语言]]，一个需要大量资源的进程。不仅能处理图形，也具有<code>if</code>及<code>loop</code>之类命令的标准[[编程语言|编程语言]]特性。PDF很大程度上基于PostScript，但做了简化，以移除像这样的流控制特性，还保持着<code>lineto</code>之类的图形命令。

通常，类PostScript的PDF代码产生于PostScript源文件。以PostScript代码输出的图形命令被收集并[[词法分析|标记]]；其中文档所引用的任何文件图像或字体也被收集，然后每一件都被压缩成单个文件。由此，整个的PostScript领域（字体、输出、计量）得以保持完整。

作为一个文档格式，PDF相比较于PostScript有一些优势：
* PDF包含已标记和解析的PostScript源代码，以在修改PDF页面描述中的项与修改所产生的页面造型之间直接保持一致。
* PDF（自1.4版）支持真[[阿尔法通道|图形透明度]]；PostScript不支持。
* PostScript是一种带有隐形全局状态的[[直译编程语言|直译编程语言]]，因此伴随着一页的指令能任何后续页面的表现。因此，PostScript文档中所有先前的页面必须经过处理以决定所给出的页面的正确的表现，而PDF文档中的每一页不受其他因素的影响。结果PDF查看器允许用户迅速跳转到长文档的最后一页，而一个PostScript查看器需要在能够显示目标页面之前继续地处理所有的页面（除可选PostScript{{link-en|文档结构规范|Document Structuring Conventions}}已被周密地遵守外）。

== 技术概括 ==

=== 文件结构 ===
PDF文件是COS（"Carousel" Object Structure，Carousel对象结构）格式的子集。COS也伴随着FDF文件。<ref>{{Cite web |url=http://jimpravetz.com/blog/2012/12/in-defense-of-cos/ |title=存档副本 |access-date=2015-01-20 |archive-date=2020-05-08 |archive-url=https://web.archive.org/web/20200508095933/http://jimpravetz.com/blog/2012/12/in-defense-of-cos/ |dead-url=no }}</ref>COS树文件主要由对象组成，其中有八种类型：<ref>Adobe Systems, PDF Reference, p. 51.</ref>
* [[布尔值|布尔值]]，表示true或false
* 数字
* [[字符串|字符串]]
* 名称
* [[数组|数组]]，对象的指令性集合
* [[关联数组|字典]]，按名称索引对象的集合
* [[字串流|字串流]]，通常包含大量数据
* [[指標_(電腦科學)|空]]对象

对象可以是直接（嵌入其他对象）或非直接的。直接对象以对象号及代号编号。称为xref表的索引表赋予每个对象从文件开头起的字节偏移量。<ref>Adobe Systems, PDF Reference, pp. 39–40.</ref>这一设计允许有效的[[隨機存取|隨機存取]]到文件中的对象，还允许无需重写整个文件（增量更新）即可做出小的改动。从PDF 1.5版开始，非直接对象也可位于称为“对象流”的字串流中。这一增加文件大小的技术有大量小的非直接对象，并且对置标PDF特别有用。

PDF文件有两种输出方式：非线性（非“优化”）和线性（“优化”）。非线性PDF文件比线性的占用更小的硬盘空间，即使因为一部分的数据要求文档中的集合页面通过PDF文件分散开而访问更慢。线性PDF文件（也称“优化”或“web优化”PDF文件）以使得网页浏览器插件无需等待下载整个文件来阅读的方式构建，自从它们以线性方式写入硬盘（如同页面顺序）开始。<ref name="pdf-ref">{{cite web |url=https://www.adobe.com/devnet/pdf/pdf_reference.html |title=Adobe Developer Connection: PDF Reference and Adobe Extensions to the PDF Specification |publisher=Adobe Systems |accessdate=2010-12-13 |archive-date=2010-12-03 |archive-url=https://web.archive.org/web/20101203082616/http://www.adobe.com/devnet/pdf/pdf_reference.html |dead-url=no }}</ref>PDF文件可用[[Adobe_Acrobat|Adobe Acrobat]]软件或[[QPDF|QPDF]]优化。

=== 图像模式 ===
[[图形|图形]]在PDF中呈现的基本设计是以非常类似于PostScript中的方式，除了PDF 1.4增添的[[阿尔法通道|透明度]]的使用。

PDF图形使用{{link-en|设备独立性|device independent}}[[笛卡儿坐标系|笛卡儿坐标系]]来描述页面的外观。一个PDF页面描述可使用[[矩阵|矩阵]]来[[缩放|缩放]]、[[旋转|旋转]]或[[错切|错切]]图形元素。PDF中的一个主要概念是图形状态，即是可能会通过页面描述修改、保存或还原的图形参数的集合。PDF有（如在1.6版）24种图形状态属性，其中最重要的有：
* 当前变换矩阵（CTM），决定坐标系
* {{link-en|剪切路径|clipping path}}
* [[色彩空间|色彩空间]]
* {{link-en|阿尔法复合|alpha compositing}}，透明度的关键部分

==== 矢量图 ====
PDF中的[[矢量图|矢量图]]如同在PostScript当中一样，是由路径组成的。路径通常由直线和多项的[[贝兹曲线|贝兹曲线]]组成，但也可以从文本的外廓构建。不同于PostScript，PDF不允许带直线和曲线的单一路径去组合文本外廓。路径可被描绘、填充或用于{{link-en|剪取路径|clipping path|剪取}}。描绘和填充可用任意图形状态中的色彩集，包括式样。

PDF支持多种调色板类型。最简单的是瓷砖式样，其中艺术作品的一部分被指定以被重复地绘制。这可能是彩色瓷砖式样，带有在式样对象中的指定的颜色，或是延迟色别编码到式样已绘制时候的没有颜色的瓷砖式样。从PDF 1.3开始还有了底纹式样, 连续绘制不同的颜色。七种底纹式样中最简单的是轴向底纹（Type 2）和径向底纹（Type 3）。<!-- Pictures desperately needed here! -->

==== 位图 ====
PDF中的[[位图|位图]]（称作Image XObjects）由带相关字串流的字典呈现。字典描述了图像的属性和包含图像数据的流。（少见的是，位图或许会作为一个内嵌图像被直接嵌入于页面描述。）图像通常出于压缩的目的过滤。PDF中支持的图像过滤器包含了常用的过滤器
* '''ASCII85Decode''' 用于把字串流放入7位[[ASCII|ASCII]]的过滤器
* '''ASCIIHexDecode''' 类似于ASCII85Decode，但兼容性低
* '''FlateDecode''' 基于RFC 1950及RFC 1951所定义的[[zlib|zlib]]/[[deflate|deflate]]算法（亦即[[gzip|gzip]]，但不是[[ZIP格式|zip]]）的常用过滤器；引入于PDF 1.2；可用两组预测功能中的一组以进一步兼容zlib/deflate算法：出自[[TIFF|TIFF]] 6.0规格中的Predictor 2和来自[[PNG|PNG]]规格（RFC 2083）的预测器（过滤器）
* '''LZWDecode''' 基于[[LZW|LZW]]算法的过滤器可用两组预测功能中的一组进一步兼容LZW压缩：出自[[TIFF|TIFF]] 6.0规格中的Predictor 2和来自PNG规格的预测器（过滤器）
* '''RunLengthDecode''' 使用[[游程编码|游程编码]]算法和图像指定的过滤器的用于带重复数据的字串流的简单的压缩算法
* '''DCTDecode''' 基于[[JPEG|JPEG]]标准的[[有损数据压缩|有损]]过滤器
* '''CCITTFaxDecode''' 基于ITU-T [[T.4|T.4]]和T.6中定义的Group 3或[[Group_4_compression|Group 4]] [[CCITT|CCITT]]（ITU-T）[[传真|传真]]压缩标准的[[无损数据压缩|无损]][[二值图像|二值]]（黑白）过滤器
* '''JBIG2Decode''' 基于[[JBIG2|JBIG2]]标准的有损或无损二值（黑白）过滤器，引入PDF 1.4
* '''JPXDecode''' 基于[[JPEG_2000|JPEG 2000]]标准的有损或无损过滤器，引入PDF 1.5

通常PDF中包含的所有图像嵌入于图像，但PDF允许图像数据通过使用外部字串流或替代图像存储于外部文件。PDF的标准子集，包括[[PDF/A|PDF/A]]和[[PDF/X|PDF/X]]，禁止这些特性。

==== 文本 ====
文本在PDF中以页面内容字串流中的“文本元素”呈现出来。一个文本元素指定字符应在指定位置描绘。字符用所选字体源的编码指定。

===== 字体 =====
PDF中的字体对象是对数码[[字体|字体]]的描述。可能是字体中的字符的描述，或者是包含嵌入的字体文件。后者叫嵌入字体，前者叫非嵌入字体。所嵌入的字体文件基于广泛使用的标准数码字体文件：'''[[PostScript字体|Type 1]]'''（及其压缩版变种'''CFF'''）、'''[[TrueType|TrueType]]'''和（自PDF 1.6版起）'''[[OpenType|OpenType]]'''。另外PDF支持由PDF图形处理器描述的字体组件中的'''Type 3'''变种。<!--- Type 3 bit is awkward and should be cleaned up --->

===== Standard Type 1字体（Standard 14字体） =====
以Standard 14字体著称的四种字体在文档中PDF有特别的意义：
* [[Times_Roman|Times]]（v3，常规、斜体、粗体和粗斜体）
* [[Courier|Courier]]（常规、斜体、粗体和粗斜体）
* [[Helvetica|Helvetica]]（v3，常规、伪斜体、粗体和粗伪斜体）
* {{link-en|Symbol|Symbol (typeface)}}/{{link-en|Zapf Dingbats|Zapf Dingbats}}
这些字体有时称作Base 14字体。<ref>{{Cite web |url=http://desktoppub.about.com/od/glossary/g/base14fonts.htm |title=Adobe Acrobat Base 14 Fonts |accessdate=2015-01-20 |archive-date=2016-06-14 |archive-url=https://web.archive.org/web/20160614134144/http://desktoppub.about.com/od/glossary/g/base14fonts.htm |dead-url=no }}</ref>这些字体或有相同度量的合适的替代字体，必须能用在所有PDF阅读器上，而且不必嵌入PDF。<ref>{{Cite web |url=http://www.planetpdf.com/planetpdf/pdfs/pdf2k/03e/merz_fontaquarium.pdf |title=The PDF Font Aquarium |accessdate=2015-01-20 |archive-date=2007-06-14 |archive-url=https://web.archive.org/web/20070614010147/http://www.planetpdf.com/planetpdf/pdfs/pdf2k/03e/merz_fontaquarium.pdf |dead-url=no }}</ref>PDF查看器必须掌握这些字体度量。否则字体如果没有嵌入PDF就可能会被替换。

===== 编码 =====
文本字符串中，字符用以编码映射字形于当前字体的字符代码（整数）显示。预定义的编码有多种，包括WinAnsi、MacRoman，以及大量东亚语言编码，而且字体可以有自己的编码。（即使WinAnsi和MacRoman编码取自[[Microsoft_Windows|Windows]]和[[Macintosh|Macintosh]]操作系统中历史上的专有编码，用这类编码的内容在任何平台上都运行的好。）PDF可以指定可以使用的预定义的编码、字体内置编码，或者提供预定义或内置编码的查询表（不对TrueType字体推荐）。<ref>{{cite web |url=https://www.adobe.com/devnet/acrobat/pdfs/pdf_reference_1-7.pdf |title=PDF Referencem Sixth Edition, version 1.7, table 5.11 |access-date=2015-01-18 |archive-date=2020-12-04 |archive-url=https://web.archive.org/web/20201204221151/https://www.adobe.com/content/dam/acom/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf |dead-url=no }}</ref>PDF中的编码机制是为Type 1字体设计的，而且应用到TrueType字体的规则是复合的。

对于大型字体或者带非标准字形的字体，特殊编码Identity-H（用于横写）或Identity-V（用于竖写）被使用。如果关于字符的语义信息被预定义，这类字体有必要提供ToUnicode表。

==== 透明度 ====
PDF的原始图像模型像PostScript的opaque：页面上描绘的每个对象完全替换先前在同一位置标记的任何东西。在PDF 1.4中图像模型被扩展以允许透明度。使用透明度的时候，新对象与先前标记的对象相互作用产生混合的特效。透明度添加到PDF由写到PDF 1.3及早期的规格的产品中被忽略设计的新的扩展方法完成。结果，使用少量透明度的文件在旧的查看器中可能会以被接受地视图查看，但大量用透明度的文件在旧的查看器中会显示不正确而没警告。

透明度扩展基于透明度组、混合模式、形状和alpha的关键概念。这一模式紧密对应[[Adobe_Illustrator|Adobe Illustrator]] 9的特性。混合模式基于当时[[Adobe_Photoshop|Adobe Photoshop]]所用的。PDF 1.4规格出版的时候，用于计算混合模式的公式被Adobe保密。此后它们被公布。<ref>{{Cite web |url=https://www.adobe.com/content/dam/Adobe/en/devnet/pdf/pdfs/pdf_reference_archives/blend_modes.pdf |title=PDF Blend Modes Addendum |access-date=2015-01-20 |archive-date=2016-04-17 |archive-url=https://web.archive.org/web/20160417122939/http://www.adobe.com/content/dam/Adobe/en/devnet/pdf/pdfs/pdf_reference_archives/blend_modes.pdf |dead-url=no }}</ref>

PDF规格中透明度组的概念独立于Adobe Illustrator之类的应用中已有的“组”或“层”的概念。那些反映对象之上的逻辑关系的分组在编辑那些对象的时候有意义，但不是图像模型的一部分。

=== 交互式元素 ===

PDF文件或许包含注释、表单、视频和Flash动画之类的交互式元素。

'''富媒体PDF'''是一个用来描述可以嵌入或链入PDF的交互式内容的术语。这一内容必须用Flash文件格式提供。Adobe收购Macromedia的时候，公司的主业是Flash，而且Flash播放器被嵌入Adobe Acrobat，Adobe Reader，移除了用于Flash、QuickTime或Windows Media之类第三方插件的需。不幸的是，这造成QuickTime视频从PDF被禁这样与苹果公司的裂痕。富媒体专家{{tsl|en|Bob Connolly (Canadian film director)#Books.2C eBooks and Magazine Articles|Robert Connolly}}相信这一事件引发了苹果与Adobe之间Flash iPhone/iPad争论之上的冲突。富媒体PDF将不在苹果的iPad之类的iOS设备上操作，而且交互性受到限制。

'''交互式表单'''是一个添加表单到PDF文件格式的机制。

PDF当前支持用于整合数据和PDF表单的两种不同的办法。两种格式今天并存于PDF规格：<ref name="iso32000">{{citation |url=https://www.adobe.com/devnet/acrobat/pdfs/PDF32000_2008.pdf |title=Document Management – Portable Document Format – Part 1: PDF 1.7, First Edition |author=Adobe Systems Incorporated |date=2008-07-01 |accessdate=2010-02-19 |archive-date=2010-04-09 |archive-url=https://web.archive.org/web/20100409113330/http://www.adobe.com/devnet/acrobat/pdfs/PDF32000_2008.pdf |dead-url=no }}</ref><ref>{{cite web |url=http://gnupdf.org/Forms_Data_Format |title=Gnu PDF - PDF Knowledge - Forms Data Format |archiveurl=https://web.archive.org/web/20130101054615/http://www.gnupdf.org/Forms_Data_Format |archivedate=2013-01-01 |accessdate=2010-02-19 |dead-url=no }}</ref><ref>{{cite web |url=http://livedocs.adobe.com/coldfusion/8/htmldocs/help.html?content=formsPDF_02.html |title=About PDF forms |accessdate=2010-02-19 |deadurl=yes |archiveurl=https://web.archive.org/web/20110429032948/http://livedocs.adobe.com/coldfusion/8/htmldocs/help.html?content=formsPDF_02.html |archivedate=2011-04-29 }}</ref><ref>{{cite web |url=http://forums.adobe.com/thread/301733 |title=Convert XFA Form to AcroForm? |year=2008 |accessdate=2010-02-19 |archive-date=2018-11-18 |archive-url=https://web.archive.org/web/20181118104729/https://forums.adobe.com/thread/301733 |dead-url=no }}</ref>
* '''AcroForms'''（又叫'''Acrobat forms'''）引入PDF 1.2格式规格并包含于所有后来的PDF规格。
* '''{{link-en|XML表单架构|XML Forms Architecture|Adobe XML表单架构}}（XFA）'''的表单，引入PDF 1.5格式规格。XFA规格没有包含于PDF规格，仅仅作为可选特性参考。Adobe XFA表单不与AcroForms兼容。<ref>{{cite web |url=http://partners.adobe.com/public/developer/tips/topic_tip2.html |title=Migrating from Adobe Acrobat forms to XML forms |accessdate=2010-02-22 |deadurl=yes |archiveurl=https://web.archive.org/web/20101006151011/http://partners.adobe.com/public/developer/tips/topic_tip2.html |archivedate=2010-10-06 }}</ref>

==== AcroForms ====
AcroForms于PDF 1.2格式被引入。AcroForms准许使用对象（如[[文本框|文本框]]、[[选择钮|选择钮]]等）及一些代码（如[[JavaScript|JavaScript]]）。

在标准PDF动作类型之外，交互式形式（AcroForms）支持提交、重置和导入数据。“提交”动作传送所选表单字段和值的名称给指定的统一资源定为符（URL）。交互式表单字段名称和值或许会被以任意格式提交（取决于输出格式、提交的PDF和XFDF旗标的设置）：<ref name="iso32000" />
* HTML表单格式（自PDF 1.5起用HTML 4.01规格；1.2起用HTML 2.0）
* 表单数据格式（Forms Data Format，FDF）
* XML表单数据格式（XML Forms Data Format，XFDF）（扩展XFDF规格，2.0版；自PDF 1.5起被支持；在PDF 1.4中替换XML表单提交格式定义）
* PDF（整个文档可以被提交，而不是单独的字段和值）。（PDF 1.4中定义）

AcroForms可以保持表单字段于包含key:value组合的外部的单独的文件。内部的文件可能使用FDF和XFDF文件。<ref>{{cite web |url=http://kb2.adobe.com/cps/325/325874.html |title=Using Acrobat forms and form data on the web |author=Adobe Systems Incorporated |date=2007-10-15 |accessdate=2010-02-19 |archive-date=2021-02-24 |archive-url=https://web.archive.org/web/20210224052517/http://kb2.adobe.com/cps/325/325874.html |dead-url=no }}</ref><ref name="xfdf">{{citation |url=http://partners.adobe.com/public/developer/en/xml/xfdf_2.0.pdf |format=PDF |title=XML Forms Data Format Specification, version 2 |date=September 2007 |accessdate=2010-02-19 |deadurl=yes |archiveurl=https://web.archive.org/web/20091223042129/http://partners.adobe.com/public/developer/en/xml/xfdf_2.0.pdf |archivedate=2009-12-23 }}</ref><ref name="fdf-exchange">{{citation |url=https://www.adobe.com/devnet/acrobat/pdfs/fdf_data_exchange.pdf |format=PDF |title=FDF Data Exchange Specification |date=2007-02-08 |accessdate=2010-02-19 |archive-date=2010-05-24 |archive-url=https://web.archive.org/web/20100524031920/http://www.adobe.com/devnet/acrobat/pdfs/fdf_data_exchange.pdf |dead-url=no }}</ref>使用权（UR）签名定义导入表单数据文件以FDF、XFDF及文本（[[逗号分隔值|CSV]]/{{link-en|定界符分隔值|delimiter-separated values|TSV}}）格式，及以FDF及XFDF格式从数据文件导出文件的权利。<ref name="iso32000" />

===== 表单数据格式（FDF） =====
{{Infobox file format
| name                   = 表单数据格式（FDF）
| icon                   =
| logo                   =
| screenshot             =
| caption                =
| extension              = .fdf
| mime                   = application/vnd.fdf<ref>{{citation |url=http://www.iana.org/assignments/media-types/application/ |title=IANA Application Media Types - vnd.fdf |accessdate=2010-02-22 |archive-date=2011-08-22 |archive-url=https://www.webcitation.org/618DzzC6J?url=http://www.iana.org/assignments/media-types/application/index.html |dead-url=no }}</ref>
| type code              = 'FDF'
| uniform type           =
| magic                  =
| owner                  = [[Adobe_Systems|Adobe Systems]]
| released               = {{Start date|1996}}<!-- {{Start date|YYYY|mm|dd|df=yes}} -->（PDF 1.2）
| latest release version =
| latest release date    = <!-- {{Start date and age|YYYY|mm|dd|df=yes}} -->
| genre                  =
| container for          =
| contained by           =
| extended from          = PDF
| extended to            = XFDF
| standard               = ISO 32000-1:2008
| free                   = 是
| url                    =
}}

表单数据格式（Forms Data Format，FDF）基于PDF，使用同样的句法和基本上一样的文件结构，但比PDF简单，自从FDF文档的主体由只有一个要求的对象组成开始。表单数据格式定义于PDF规格（自PDF 1.2起）。表单数据格式可在表单数据到服务器、接收响应和组合到交互式表单的时候被使用。还可以被用来导出表单数据到能被导回到相应的PDF交互式表单的单独的文件。从PDF 1.3开始，FDF可被用来定义用于从所应用的PDF文档分开的注释的容器。FDF通常封装[[X.509|X.509证书]]之类的信息、要求证书、设置目录、设置时间戳服务器和为网络传输嵌入PDF文件。<ref name="fdf-exchange" />FDF使用MIME内容类型application/vnd.fdf、文件扩展名.fdf，并在Mac OS使用文件类型'FDF'。<ref name="iso32000" />导入和导出独立FDF文件的支持没有被自由或免费PDF软件广泛的实现。例如，Evince、Okular、Poppler、KPDF或Sumatra PDF没有导入/导出的支持，然而，Evince、Okular和Popller填入PDF Acroforms并在PDF中保存已填写数据。导入独立FDF文件的支持在Adobe Reader中得到实现；导入和导出支持（包括在PDF中保存FDF数据）作为示例在Foxit Reader和PDF-XChange Viewer Free中得到实现；PDF文件中FDF数据的保存也被pdftk支持。

===== XML表单数据格式（XFDF） =====
{{Infobox file format
| name                   = XML表单数据格式（XFDF）
| icon                   =
| logo                   =
| screenshot             =
| caption                =
| extension              = .xfdf
| mime                   = application/vnd.adobe.xfdf<ref>{{citation |url=http://www.iana.org/assignments/media-types/application/vnd.adobe.xfdf |title=IANA Application Media Types - Vendor Tree - vnd.adobe.xfdf |accessdate=2010-02-22 |archive-date=2021-02-24 |archive-url=https://web.archive.org/web/20210224165536/http://www.iana.org/assignments/media-types/application/vnd.adobe.xfdf |dead-url=no }}</ref>
| type code              = 'XFDF'
| uniform type           =
| magic                  =
| owner                  = [[Adobe_Systems|Adobe Systems]]
| released               = {{Start date|2003|07|df=yes}}（引用于PDF 1.5）
| latest release version = 3.0
| latest release date    = {{Start date and age|2009|08|df=yes}}
| genre                  =
| container for          =
| contained by           =
| extended from          = PDF、FDF、[[XML|XML]]
| extended to            =
| standard               = ISO 19444-1:2016
| free                   =
| url                    = 
}}

XML表单数据格式（XFDF，XML Forms Data Format）是表单数据格式的XML版，但XFDF只执行FDF内含表单及注释的子集。FDF字典中的一些词条没有等价于XFDF的，像是状态、编码、JavaScript、页面关键字、嵌入式FDF、差异和目标。此外，XFDF不允许在基于已给定的数据的新页面大量生成或者添加；就像使用FDF文件的时候能被完成的一样。XFDF规格被引用于（但不包含于）PDF 1.5规格（及其以后的版本）。它被单独描述为“XML表单数据结构规格”（XML Forms Data Format Specification）。<ref name="xfdf" />PDF 1.4规格允许以XML格式提交表单，但在PDF 1.5规格中以XFDF格式提交取代。XFDF符合XML标准。

到2016年12月，XFDF 3.0在''ISO 19444-1:2016 – Document management – XML Forms Data Format – Part 1: Use of ISO 32000-2 (XFDF 3.0)''的名义下成为ISO/IEC标准。<ref>{{Cite web|url=https://www.iso.org/standard/64911.html|title=ISO 19444-1:2016 – Document management -- XML Forms Data Format -- Part 1: Use of ISO 32000-2 (XFDF 3.0)|website=www.iso.org|language=en|access-date=2017-02-28|archive-date=2021-02-24|archive-url=https://web.archive.org/web/20210224183810/https://www.iso.org/standard/64911.html|dead-url=no}}</ref>这个标准是ISO 32000-2的规范性参考资料。

XFDF可用以和FDF相等的方式，如提交表单数据给服务器，做出修订，然后返回，并且新表单数据被导入到交互式表单。它还可以用来导出表单数据到能被导回到相应的PDF交互式表单的单独的文件。

==== Adobe XML表单架构（XFA） ====
PDF 1.5格式中，[[Adobe_Systems|Adobe Systems]]引入了新的、专有的表单格式，名为Adobe XML表单架构（XFA）。XFA 2.02引用在PDF 1.5规格（及以后的版本），但单独描述为《Adobe XML Forms Architecture (XFA) Specification》，有多个版本。<ref name="xfa-adobe">{{cite web |url=http://partners.adobe.com/public/developer/xml/index_arch.html |title=Adobe XML Forms Architecture (XFA) |author=Adobe Systems Incorporated |accessdate=2010-02-19 |deadurl=yes |archiveurl=https://web.archive.org/web/20091223030550/http://partners.adobe.com/public/developer/xml/index_arch.html |archivedate=2009-12-23 }}</ref>XFA规格没有包括在ISO 32000-1 PDF 1.7并仅仅作为由Adobe创建的外部专有规格引用。在ISO 32000-2（PDF 2.0）当中被弃用。

Adobe XFA表单不与AcroForms兼容。Adobe Reader包含使用XFA表单的“禁用特性”，仅在打开只来自Adobe的可行的技术创建的PDF文档时激活。<ref>{{citation |url=https://www.adobe.com/products/eulas/pdfs/Reader_Player_AIR_WWEULA-Combined-20080204_1313.pdf |format=PDF |title=Adobe Reader - Software license agreement |accessdate=2010-02-19 |archive-date=2012-11-26 |archive-url=https://web.archive.org/web/20121126152807/http://www.adobe.com/products/eulas/pdfs/Reader_Player_AIR_WWEULA-Combined-20080204_1313.pdf |dead-url=no }}</ref><ref>{{cite web |url=https://www.adobe.com/go/readerextensions |title=LiveCycle Reader Extensions ES features and benefits |accessdate=2010-02-19 |deadurl=yes |archiveurl=https://web.archive.org/web/20091219163323/http://www.adobe.com/go/readerextensions |archivedate=2009-12-19 }}</ref>XFA Forms不兼容于Adobe Reader 6以前的版本。

XFA表单可创建或用作PDF文件或作为XDP（{{link-en|XML数据包|XML Data Package}}）文件。PDF中XFA源的格式由XML数据包规格描述。<ref name="iso32000" />XDP可能作为单独的文档，也可能在PDF文档的内部携带。XDP提供打包周边XML容器内部的表单组件的机制。XDP也可以打包一个PDF文件，伴随XML表单和模板数据。<ref name="xfa-adobe" />PDF可能包含XFA（在XDP格式中），XFA也可能包含PDF。<ref name="xfa-adobe" />在用于XFA表单XFA（XML表单架构）语法从一个应用移到另一个应用的时候，它们必须以XML数据包封装。<ref name="xfa25">{{citation |url=http://partners.adobe.com/public/developer/en/xml/xfa_spec_2_5.pdf |format=PDF |title=XML Forms Architecture (XFA) Specification Version 2.5 |date=2007-06-08 |accessdate=2010-02-19 |deadurl=yes |archiveurl=https://web.archive.org/web/20091223041854/http://partners.adobe.com/public/developer/en/xml/xfa_spec_2_5.pdf |archivedate=2009-12-23 }}</ref>

当PDF和XFA结合在一起，结果是任意页面中的XFA表单覆盖了PDF背景。这一架构有时被提作XFAF（XFA Foreground，XFA前景）。替代方法是直接在XFA（不用PDF，或者只用带有PDF标记的最小构造XFA的容器的“外挂PDF”，或用静态XFA表单的预渲染描述作为PDF）展开所有表单，包括样板文件。这有时被称为全XFA。<ref name="xfa25" />

PDF 1.5开始，可变文本字段的文本内容，以及标记注解可能包含格式信息（样式信息）。这些富文本字符串是符合XML表单架构规格2.02（本身是XHTML 1.0规格的子集）定义的富文本惯例的XML文档，扩展了CSS2样式属性中受限的设置。<ref name="iso32000" />PDF 1.6中，PDF支持XML表单架构（XFA）规格2.2定义的富文本元素和属性。PDF 1.7中，PDF支持XML表单架构（XFA）规格2.4定义的富文本元素和属性。<ref name="iso32000" />

多数PDF处理器不处理XFA内容。生成外挂PDF的时候会被建议包含于PDF标记的一个简单的单页PDF图像显示警告（如：“为了查看本文档的全部内容，你需要新版PDF查看器”等。）能渲染XFA内容的PDF处理器应该不现实警示页面图像或者以动态表单内容迅速替换。<ref name="xfa33">{{citation |url=http://partners.adobe.com/public/developer/en/xml/xfa_spec_3_3.pdf |title=XML Forms Architecture (XFA) Specification Version 3.3 |date=2012-01-09 |accessdate=2014-04-09 |deadurl=yes |archiveurl=https://web.archive.org/web/20150706165913/http://partners.adobe.com/public/developer/en/xml/xfa_spec_3_3.pdf |archivedate=2015-07-06 }}</ref>带有一些XFA渲染功能支持的PDF软件的例子包括Adobe Reader for Windows、Linux、Mac OS X（但不是Adobe Reader Mobile for Android / iOS）或Nuance PDF Reader。

=== 逻辑架构与可读性 ===

“標籤”PDF（ISO 32000-1:2008 14.8）含有文档架构和语义信息，以允許可靠的文字抽取及使用。技术上來说，標籤PDF是建立在PDF 1.3 所引入的邏輯結構框架上，對於其格式的程-{}-式化使用 。標籤PDF定义了一组标准结构型別及屬性，允许页面内容（文本、图形和图片）之後被提取並再利用於其他用途。<ref>{{Cite web |url=http://www.planetpdf.com/enterprise/article.asp?ContentID=6067 |title=What is Tagged PDF? |accessdate=2015-01-20 |archive-date=2004-08-07 |archive-url=https://web.archive.org/web/20040807132851/http://www.planetpdf.com/enterprise/article.asp?ContentID=6067 |dead-url=no }}</ref>

當PDF文件僅供列印時，並不要求支援標籤PDF。因為此一特色是非必須的，且 ISO 32000-1 對於標籤PDF的規則相對模糊，所以在消費性裝置當中，包括{{Link-en|輔助技術（AT）|Assistive technology}}，標籤PDF的支援參差不齊。<ref>{{Cite web |url=http://www.washington.edu/doit/Stem/articles?1002 |title=Is PDF Accessible? |access-date=2015-01-20 |archive-date=2014-12-22 |archive-url=https://web.archive.org/web/20141222200828/http://www.washington.edu/doit/Stem/articles?1002 |dead-url=no }}</ref>

一個專門針對可讀性、為ISO標準之子集的PDF規格：[[PDF/UA|PDF/UA]] 於2012年首次發佈。

=== 安全和签名 ===

一份PDF文件可能以用于验证的担保或者数字签名加密。

由Acrobat PDF提供的标准担保以两种不同的方法及两种不同的密码组成，用户密码，加密文件并阻止开启；所有者密码，指定即使文档被解密的时候应该被限制的操作，可以包括：打印、从文档复制文本和图像、修饰文档，或者添加或删除文本注释和[[AcroForm|AcroForm]]字段。用户密码（控制开启）加密文件并要求{{link-en|密码破解|password cracking}}以去除，难度取决于密码长度及加密算法——它可能非常安全（假设好的密码及加密算法没有已知的攻击手法）。所有者密码（控制操作）不加密文件，相反取决于客户端软件以遵循这些限制，并且不安全。所有者密码可以被许多通常可用的PDF破解软件移除，包括一些自由的在线服务。<ref>{{Cite web |url=http://freemypdf.com/ |title=FreeMyPDF - A website that removes PDF user password restrictions |access-date=2015-01-20 |archive-date=2021-02-20 |archive-url=https://web.archive.org/web/20210220014724/https://freemypdf.com/ |dead-url=no }}</ref>由此，文档作者放在PDF文档中的使用限制不安全，而且不能在一旦文件被散布时保证；这一危险在使用Adobe Acrobat软件以创建或编辑PDF文件应用这类限制的时候显现出来。

即使没有移除密码，许多免费或开源PDF阅读器忽略权限“保护”并允许用户打印或者做文本摘要的复制，就像文档没被密码保护限制一样。

一些解决方案像Adobe的LiveCycle Rights Management更强化信息权利管理的方式，不仅能限制谁能打开文档，而且以标准的安全处理程序做不到的方式可靠的执行权限。

==== 使用权 ====
从PDF 1.5起，使用权（UR）签名用来启用在一些PDF查看器应用中不是默认的附加的交互式特性。这一签名用来验证由真实的授权机构赋予的许可。例如，它可以允许用户：<ref name="iso32000" />
* 保存伴有修订表单和/或注释数据的PDF文档
* 从FDF、XFDF和文本（CSV/TSV）格式中的数据文件导入
* 从FDF和XFDF格式中的数据文件导出
* 从数据提交
* 从命名的页面模板具体呈现新页面
* 应用一个[[数码|数码]][[签名|签名]]到已有的[[数码签名|数码签名]]表单字段
* 创建、删除、修正、复制、导入、导出注释

例如，Adobe Systems在Adobe Reader中授权启用附加特性，使用公钥[[密码学|密码学]]。Adobe Reader使用从一个Adobe[[授权|授权]]的权威认证的[[公钥验证|验证]]那个签名。PDF 1.5规格宣称其他PDF阅读器应用可以为他们自己的目的自由使用这一相同机制。<ref name="iso32000" />

=== 文件附件 ===

PDF文件可以有文档级和页面级的文件附件，读者可访问并打开或存储于本地的文件系统。PDF附件可作为示例用[[pdftk|pdftk]]加到已有的PDF文件。Adobe Reader提供对附件的支持，而且基于[[Poppler|Poppler]]的阅读器如[[Evince|Evince]]或[[Okular|Okular]]也有对文档级附件的支持。

=== 元数据 ===
PDF文件可包含两种类型的元数据。<ref>[https://www.adobe.com/devnet/acrobat/pdfs/pdf_reference_1-7.pdf Adobe PDF reference version 1.7] {{Wayback|url=https://www.adobe.com/devnet/acrobat/pdfs/pdf_reference_1-7.pdf |date=20201204221151 }}, section 10.2</ref>第一种是文档信息字典，一套像作者、标题、主题、创建及更新日期的关键字/值字段。这存储于可选的文件尾部。有一小组字段是有定义的，而且如果有需要，可以用附加的文本字段扩充。

后来在PDF 1.4中，对元数据流的支持被加入，用[[XMP|可扩展元数据平台]]（XMP）来添加像在其他文件格式那样的基于XML标准的可扩展的元数据。这允许元数据附加到文档中的任何字串流，诸如关于嵌入式插图的说明，以及整个文档（附加到文档目录），使用可扩展的纲要。

== 相关技术 ==
=== Mars ===
{{See also|页面描述标记语言}}

Adobe曾探索基于XML的下一代PDF，[[代号|代号]]Mars。<ref>{{cite web|url=http://www.gcn.com/blogs/tech/42740.html|title=Adobe plunges PDF into XML|publisher=Government Computer News|date=2006-12-07|accessdate=2008-01-12|first=Joab|last=Jackson|deadurl=yes|archiveurl=https://web.archive.org/web/20080216025801/http://www.gcn.com/blogs/tech/42740.html|archivedate=2008-02-16}}</ref>

Mars的图形元素的格式有时简单地描述为[[可缩放矢量图形|SVG]]，<ref>{{cite web|url=http://blogs.adobe.com/mars/|title=Mars|author=Adobe Systems|accessdate=2014-03-17|archive-date=2020-09-20|archive-url=https://web.archive.org/web/20200920042529/https://blogs.adobe.com/mars/|dead-url=yes}}</ref>但根据2007年11月的0.8版草案规格（§3 Mars SVG Support）这一格式实际上仅仅是接近于SVG：它同时包含SVG新增和移除的部分，因此一般不可被标准SVG工具查看或创建：一些东西在SVG查看器和Mars查看器之间看起来明显不同。

Adobe Systems于2008年停止开发Mars。<ref>{{cite web |url=http://labs.adobe.com/technologies/mars/ |title=存档副本 |accessdate=2011-05-12 |deadurl=yes |archiveurl=https://web.archive.org/web/20110102070420/http://labs.adobe.com/technologies/mars/ |archivedate=2011-01-02 }}</ref>

== 技术问题 ==

=== 扫描的文档 ===
由[[扫描仪|扫描仪]]硬拷贝文档创建的PDF文件包含原始文本没有由相同的文档直接创建的PDF文件那样相同的架构。扫描的文档原本地包含了文档的图片，没有关于文本的信息。只要用户可以看到它只是另一个PDF文件，带有从其他任意地方来的不能区分的名称和扩展名；好的扫描仪或许会精确地视作与原生的PDF文件相同，即使是视觉上质量很差的文件，常常带有扭曲的页面，给出了其本性。然而，文件大小会明显不同，而且不能搜索文本。对于精确质量的扫描可以用带[[光学字符识别|光学字符识别]]（OCR）的合适的软件识别文档中的文本，并嵌入文档中而使其可以检索，取决于OCR的准确性。

=== 可读性 ===
PDF文件可专门为让残疾人阅读而创建。<ref>{{cite web |url=http://www.webaim.org/techniques/acrobat/ |title=PDF Accessibility |publisher=WebAIM |accessdate=2010-04-24 |archive-date=2021-02-24 |archive-url=https://web.archive.org/web/20210224002623/https://webaim.org/techniques/acrobat/ |dead-url=no }}</ref><ref>{{cite web |url=http://www.alistapart.com/articles/pdf_accessibility |title=Facts and Opinions About PDF Accessibility |author=Joe Clark |date=2005-08-22 |accessdate=2010-04-24 |archive-date=2013-01-24 |archive-url=https://web.archive.org/web/20130124140051/http://alistapart.com/articles/pdf_accessibility |dead-url=no }}</ref><ref>{{cite web |url=http://wac.osu.edu/pdf/ |title=Accessibility and PDF documents |publisher=Web Accessibility Center |accessdate=2010-04-24 |deadurl=yes |archiveurl=https://web.archive.org/web/20100427062242/http://wac.osu.edu/pdf/ |archivedate=2010-04-27 }}</ref><ref>{{cite web |url=http://www.bbc.co.uk/guidelines/futuremedia/accessibility/accessible_pdf.shtml |title=PDF Accessibility Standards v1.2 |accessdate=2010-04-24 |archive-date=2020-02-23 |archive-url=https://web.archive.org/web/20200223070210/http://www.bbc.co.uk/guidelines/futuremedia/accessibility/accessible_pdf.shtml |dead-url=no }}</ref><ref>{{citation |url=http://www.csus.edu/training/handouts/workshops/creating_accessible_pdfs.pdf |format=PDF |title=PDF Accessibility |publisher=California State University |accessdate=2010-04-24 |deadurl=yes |archiveurl=https://web.archive.org/web/20100527215445/http://www.csus.edu/training/handouts/workshops/creating_accessible_pdfs.pdf |archivedate=2010-05-27 }}</ref>{{As of|2014|lc=on}}PDF文件格式在使用中可以包含标签（[[XML|XML]]）、替换文本、标题、音频描述等。置标PDF在[[PDF/A|PDF/A]]-1a规格中被要求。<ref>{{citation |url=http://www.aiim.org/documents/standards/PDF-A/19005-1_FAQ.pdf |title=Frequently Asked Questions (FAQs) – ISO 19005-1:2005 – PDF/A-1, Date: July 10, 2006 |format=PDF |date=2006-07-10 |accessdate=2011-07-06 |deadurl=yes |archiveurl=https://web.archive.org/web/20120118031116/http://www.aiim.org/documents/standards/PDF-A/19005-1_FAQ.pdf |archivedate=2012-01-18 }}</ref><ref name="pdfa1-tech">{{cite web |url=http://www.pdfa.org/doku.php?id=artikel:en:pdfa_a_look_at_the_technical-side |title=PDF/A – A Look at the Technical Side |accessdate=2011-07-06 |deadurl=yes |archiveurl=https://web.archive.org/web/20110726045349/http://www.pdfa.org/doku.php?id=artikel:en:pdfa_a_look_at_the_technical-side |archivedate=2011-07-26 }}</ref>一些软件可以自动生成置标PDF，但这个特性不被默认启用。<ref>{{citation |url=http://help.libreoffice.org/Common/Export_as_PDF#PDF.2FA-1a |title=LibreOffice Help - Export as PDF |accessdate=2012-09-22 |archive-date=2021-02-25 |archive-url=https://web.archive.org/web/20210225073007/https://help.libreoffice.org/Common/Export_as_PDF#PDF.2FA-1a |dead-url=no }}</ref><ref>{{citation |url=http://www.oooninja.com/2008/01/generating-pdfa-for-long-term-archiving.html |title=Exporting PDF/A for long-term archiving |date=2008-01-11 |accessdate=2015-01-23 |archive-date=2021-02-24 |archive-url=https://web.archive.org/web/20210224185200/https://www.oooninja.com/2008/01/generating-pdfa-for-long-term-archiving.html |dead-url=no }}</ref>常见的[[螢幕閱讀器|螢幕閱讀器]]，包括[[JAWS|JAWS]]、[[Window-Eyes|Window-Eyes]]、Hal和[[Kurzweil_Educational_Systems|Kurzweil 1000及3000]]可以朗读置标PDF，就像Acrobat和Acrobat Reader后来的版本一样。<ref>{{cite web |url=http://help.adobe.com/en_US/Reader/8.0/help.html?content=WS58a04a822e3e50102bd615109794195ff-7d15.html |title=Adobe Reader 8 - Read a PDF with Read Out Loud |accessdate=2010-04-24 |archive-date=2016-01-18 |archive-url=https://web.archive.org/web/20160118104837/http://help.adobe.com/en_US/Reader/8.0/help.html?content=WS58a04a822e3e50102bd615109794195ff-7d15.html |dead-url=no }}</ref><ref>{{cite news |url=http://gadgetwise.blogs.nytimes.com/2009/04/10/tip-of-the-week-adobe-readers-read-aloud-feature/ |title=Tip of the Week: Adobe Reader’s ‘Read Aloud’ Feature |accessdate=2010-04-24 |work=The New York Times |date=2009-04-10 |first=J.D. |last=Biersdorfer |archive-date=2020-11-22 |archive-url=https://web.archive.org/web/20201122205912/https://gadgetwise.blogs.nytimes.com/2009/04/10/tip-of-the-week-adobe-readers-read-aloud-feature/ |dead-url=no }}</ref><ref>{{citation |url=https://www.adobe.com/accessibility/pdfs/accessing-pdf-sr.pdf |format=PDF |title=Accessing PDF documents with assistive technology: A screen reader user's guide |publisher=Adobe |accessdate=2010-04-24 |archive-date=2013-02-02 |archive-url=https://web.archive.org/web/20130202192224/http://www.adobe.com/accessibility/pdfs/accessing-pdf-sr.pdf |dead-url=no }}</ref>此外，置标PDF可为有视觉障碍的读者重排和放大。问题仍存在于给旧版PDF和从扫描的文档生成的PDF加标记。这些情况下，可读性标记和重排就不可用，而且必须手动或用OCR技术处理。这些过程对于一些残疾人是达不到的。

对PDF可读性的一个重大挑战是PDF文档有三种不同的视图，取决于文档的创建，会和其他视图相矛盾。这些视图有：物理视图、标记视图和内容视图。物理视图可以显示和打印（多数人认为的PDF文档）。标记视图是屏幕阅读器和其他访问技术用来给有障碍的用户带来高质量导航和阅读体验的。内容视图基于PDF内容字串流中的对象的物理排列，并可能由不完全支持标记视图的软件显示，如Adobe Reader的Reflow特性。

基于ISO 32000-1的可阅读PDF国际标准[[PDF/UA|PDF/UA]]在2012年以ISO 14289-1发布，并为可阅读PDF技术建立规范的语言。

=== 病毒和漏洞 ===
{{see also2|[[Adobe_Acrobat#安全|Adobe Acrobat Security]]}}
PDF附件带病毒最先发现于2001年。这种名为OUTLOOK.PDFWorm或Peachy的病毒，会通过Microsoft Outlook以附件的形式将自己发送至Adobe PDF文件。然后会用Adobe Acrobat将自身激活，但不会被Acrobat Reader激活。<ref>Adobe Forums, [http://www.adobeforums.com/webx/.ef39082 Announcement: PDF Attachment Virus "Peachy"], 15 August 2001.</ref>

随着时间推移，新的漏洞在Adobe Reader的多个版本被发现，<ref>{{cite web |url=https://www.adobe.com/support/security/#readerwin |title=Security bulletins and advisories |publisher=Adobe |date= |accessdate=2010-02-21 |archive-date=2013-11-15 |archive-url=https://web.archive.org/web/20131115002036/http://www.adobe.com/support/security/#readerwin |dead-url=no }}</ref>促使企业发出安全性修复。其他PDF阅读器也容易受到影响。一个恶化的因素是PDF阅读器会被配置在网页嵌入PDF时候自动启动，为攻击带来了载体。如果恶意的网页包含一份利用PDF的漏洞感染的PDF文件，系统会无法抵抗，即使浏览器是安全的。其中一些漏洞是由于PDF标准允许PDF文档用JavaScript脚本指令的结果。在PDF阅读器中禁止执行JavaScript有助于缓解那些未来的漏洞，即使这不阻止PDF查看器其他部分的漏洞。安全专家称JavaScript对于PDF阅读器来说不是基本的，而且出于禁止JavaScript的安全保障胜过任何造成的兼容性问题。<ref>{{Cite web |url=http://www.grc.com/sn/sn-187.txt |title=Steve Gibson - SecurityNow Podcast |access-date=2015-01-23 |archive-date=2020-05-08 |archive-url=https://web.archive.org/web/20200508100301/https://www.grc.com/sn/sn-187.txt |dead-url=no }}</ref>阻止PDF文件漏洞的一种方式是有本地或网络服务能在阅读前把文件转换成其他格式。<ref>{{Cite web |url=https://defuse.ca/pdfcleaner.htm |title=PDFCleaner - PDF Exploit Sanitizer |accessdate=2015-01-23 |archive-date=2013-04-30 |archive-url=https://web.archive.org/web/20130430141142/https://defuse.ca/pdfcleaner.htm |dead-url=yes }}</ref>

2010年3月30日安全专家Didier Stevens报告Adobe Reader和福昕阅读器有如果用户经询问允许启动时运行恶意可执行文件的漏洞。<ref>{{Cite web |url=http://blogs.pcmag.com/securitywatch/2010/03/malicious_pdfs_execute_code_wi.php |title=PCmag.com blogs |access-date=2015-01-23 |archive-url=https://web.archive.org/web/20100404034752/http://blogs.pcmag.com/securitywatch/2010/03/malicious_pdfs_execute_code_wi.php |archive-date=2010-04-04 |dead-url=yes }}</ref>

=== 使用限制和显示 ===
PDF可能会被[[加密|加密]]，以致查看或编辑内容时会要求输入密码。PDF参考书同时定义40位和128位加密，都运用[[RC4|RC4]]和[[MD5|MD5]]的复杂系统。PDF参考书还定义第三方可以制定他们自己的PDF加密系统的方式。

PDF文件或许还包含嵌入的[[数字版权管理|DRM]]限制，提供限制复制、编辑或打印的进一步控制。复制、编辑或打印的限制取决于阅读软件遵循他们，因此他们提供的安全机制是有限的。

PDF参考书有面向最终用户概览的技术细节。<ref>{{cite web |url=http://createpdf.adobe.com/cgi-feeder.pl/help_security?BP=&LOC=en_US |title=Create Adobe PDF Online - Security Settings Help |publisher=Createpdf.adobe.com |date= |accessdate=2010-02-21 |deadurl=yes |archiveurl=https://web.archive.org/web/20091223033059/http://createpdf.adobe.com/cgi-feeder.pl/help_security?BP=&LOC=en_US |archivedate=2009-12-23 }}</ref>就像HTML文件一样，PDF文件可以向网络服务器提交信息。这可以被用来追踪客户端PC的[[IP地址|IP地址]]，这一过程被称作[[背景連線通訊|背景連線通訊]]。Acrobat Reader升级到7.0.5以后，用户会被提示“...via a dialogue box that the author of the file is auditing usage of the file, and be offered the option of continuing”。<ref>{{Cite web |url=http://kb.adobe.com/selfservice/viewContent.do?externalId=332208&sliceId=2 |title=New features and issues addressed in the Acrobat 7.0.5 Update (Acrobat and Adobe Reader for Windows and Mac OS) |accessdate=2015-01-23 |archive-date=2007-08-12 |archive-url=https://web.archive.org/web/20070812051407/http://kb.adobe.com/selfservice/viewContent.do?externalId=332208&sliceId=2 |dead-url=yes }}</ref>

Adobe通过[[Adobe_LiveCycle|LiveCycle安全服务器]]提供针对特定文档设置安全策略的方法。这可以包括要求用户认证并限制文档可被离线打开的时候可以被访问或者载入的时期。PDF文档一旦被绑定到策略服务器和指定策略，这一策略可以被所有者更改或撤销。这一策略控制文档，否则就是“在自然状态下”。每个文档打开或关闭事件也可以被策略服务器追踪。策略服务器可以由个人设置，或Adobe通过Adobe在线服务提供公共服务。和其他DRM形式一样，依附这些策略和限制有可能会，也有可能不会被阅读器软件执行。

=== 默认的显示设置 ===
PDF文档可以包含显示设置，包括页面显示输出和缩放级别。打开文档的时候Adobe Reader用这些设置去替换用户的默认设置。<ref>{{cite web | title=Getting Familiar with Adobe Reader > Understanding Preferences | url=http://www.adobepress.com/articles/article.asp?p=412914 | accessdate=2009-04-22 | archive-date=2021-02-24 | archive-url=https://web.archive.org/web/20210224115827/https://www.adobepress.com/articles/article.asp?p=412914 | dead-url=no }}</ref>免费的Adobe Reader不能移除这类限制。

== 内容 ==
PDF文件通常混合了[[矢量图形|矢量图形]]、文本和[[位图|位图]]。PDF的基本内容包括：
* 文本存储为内容字符串（就是不是文本本身）
* 由图形和线条组成的用于说明和设计的矢量图形
* 由相片和其他类型的图片组成的位图

在近期PDF标准修订中，PDF文档还支持链接（文档内部或网页）、表单、JavaScript（可通过Acrobat 3.0的插件启用），或者其他任意类型的能用插件控制的可嵌入内容。

PDF 1.6支持互动式3D文档嵌入PDF——3D绘图可用[[U3D|U3D]]或[[PRC_(文档格式)|PRC]]及其他多种格式嵌入。<ref name="3d#1">{{cite web |url=https://www.adobe.com/manufacturing/resources/3dformats/ |title=3D supported formats |publisher=Adobe |date=2009-07-14 |accessdate=2010-02-21 |deadurl=yes |archiveurl=https://web.archive.org/web/20100212072951/http://www.adobe.com/manufacturing/resources/3dformats/ |archivedate=2010-02-12 }}</ref><ref name="3d#2">{{cite web |url=https://www.adobe.com/devnet/acrobat3d/ |title=Acrobat 3D Developer Center |publisher=Adobe |date= |accessdate=2010-02-21 |archive-date=2010-06-29 |archive-url=https://web.archive.org/web/20100629004928/http://www.adobe.com/devnet/acrobat3d/ |dead-url=no }}</ref>

在电脑屏幕上看起来相似的两个PDF文件有可能大小不同。例如，一个高分辨率位图比低分辨率的占更多的存储空间。通常更高的分辨率更适宜打印文档而不是显示于屏幕。其他可能影响文件大小的可能有嵌入全部字体，尤其是东亚字体，以及将文字存为图片。

== 软件 ==
{{Details|PDF軟體列表}}
PDF通常免费提供，而且许多版本可以从多个来源获得。

有许多软件选项用来创建PDF，包括内建于[[Mac_OS_X|Mac OS X]]及多数[[Linux|Linux]]发行版、[[LibreOffice|LibreOffice]]、[[Microsoft_Office_2016|Microsoft Office 2016]]、<ref>{{cite web|url=http://support.microsoft.com/kb/953195|title=Description of 2007 Microsoft Office Suite Service Pack 2 (SP2)|publisher=[[Microsoft|Microsoft]]|accessdate=2009-05-09|archive-date=2009-04-29|archive-url=https://web.archive.org/web/20090429212434/http://support.microsoft.com/kb/953195|dead-url=no}}</ref>[[WordPerfect|WordPerfect]] 9、[[Scribus|Scribus]]许多适用于[[Microsoft_Windows|Microsoft Windows]]的PDF打印驱动、[[pdfTeX|pdfTeX]]排版系统、[[DocBook|DocBook]] PDF工具、围绕[[Ghostscript|Ghostscript]]及[[Adobe_Acrobat|Adobe Acrobat]]本身开发的应用以及[[Adobe_FrameMaker|Adobe FrameMaker]]的PDF排印功能。[[Google|Google]]的在线办公套件[[Google_Docs|Google Docs]]也允许上传、保存为PDF。

[[光栅图像处理器|光栅图像处理器]]（RIPs）用于转换PDF文件为[[位图|位图格式]]以适应于成像在纸上及其他媒体的打印机、数字生产用印刷机以及一种被称为[[栅格化|栅格化]]的进程中的[[印前|印前]]。有直接处理PDF能力的RIP包括在出自[[Adobe_Systems|Adobe Systems]]和Jaws<ref>{{Cite web |url=http://www.globalgraphics.com/products/jaws_rip/ |title=www.globalgraphics.com/products/jaws_rip/ |access-date=2015-01-20 |archive-date=2016-03-05 |archive-url=https://web.archive.org/web/20160305090728/http://globalgraphics.com/products/jaws_rip |dead-url=no }}</ref>的Adobe PDF排印引擎<ref>{{Cite web |url=https://www.adobe.com/products/pdfprintengine/overview.html |title=Adobe PDF Print Engine 2 |access-date=2015-01-20 |archive-date=2013-08-22 |archive-url=https://web.archive.org/web/20130822034446/http://www.adobe.com/products/pdfprintengine/overview.html |dead-url=no }}</ref>与出自[[Global_Graphics|Global Graphics]]的[[Harlequin_RIP|Harlequin RIP]]当中。

有一些软件可以直接创建空白的 PDF 文档，例如 Adobe 官方的 [[Adobe_Acrobat|Adobe Acrobat DC]] ，但是通常意义不大；因为 Adobe Acrobat 并不擅长于对文档进行排版。

因为 PDF 具有完美展现文件原貌的功能，因此市面上也有一部分软件并非为 PDF 而生，但是通过一些开发库或者图形绘制框架也具有 PDF 的导出功能。

{{Expand section|date=2010年7月|reason=[[hybrid_PDF|hybrid PDF]], a variant of [[LibreOffice|LibreOffice]] isn't mentioned}}
一些用于编辑PDF文件的特殊软件，通过受很多限制并且比创建和编辑标准可编辑文档格式更昂贵的选择。[[Inkscape|Inkscape]] 0.46及以后版本允许通过[[Poppler|Poppler]]加入中间的转译步骤编辑PDF。

[[Adobe_Acrobat|Adobe Acrobat DC]] 允许用户对一个未加密的 PDF 文件或者具有相关权限用户对 PDF 文件进行编辑，同时还自带了 OCR 识别、注释、表单预备、合并，数字签名等十分完善的功能<ref>{{Cite web|title=Pro 與 Standard 的 PDF 功能 {{!}} Adobe Acrobat DC|url=https://acrobat.adobe.com/tw/zh-Hant/acrobat/features.html|accessdate=2021-01-21|work=acrobat.adobe.com|archive-date=2020-11-23|archive-url=https://web.archive.org/web/20201123171826/https://acrobat.adobe.com/tw/zh-Hant/acrobat/features.html|dead-url=no}}</ref>

[[Serif_PagePlus|Serif PagePlus]]可打开、编辑和保存已有的PDF文档，以及软件包中创建的文档的发布。

[[Microsoft_Office_Word|Microsoft Office Word]]也支援打开、编辑和保存已有的PDF文档的編輯功能。

[[Enfocus|Enfocus]] PitStop Pro，Acrobat的插件，允许PDF文件的手动和自动编辑，<ref>{{Cite web |url=http://www.enfocus.com/product.php?id=855 |title=存档副本 |access-date=2015-01-20 |archive-date=2012-06-14 |archive-url=https://web.archive.org/web/20120614065248/http://www.enfocus.com/product.php?id=855 |dead-url=no }}</ref>同时免费的Enfocus Browser可以使编辑PDF的低级别架构成为可能。<ref>{{Cite web |url=http://www.enfocus.com/product.php?id=4530 |title=存档副本 |access-date=2015-01-20 |archive-date=2013-01-30 |archive-url=https://web.archive.org/web/20130130132942/http://www.enfocus.com/product.php?id=4530 |dead-url=no }}</ref>

大多数的 {{TeX}} 文件经过编译系统后默认输出格式为 PDF 文件

=== 注释 ===
<!--{{See also|Comparison of notetaking software}}-->
[[Adobe_Acrobat|Adobe Acrobat]]是允许用户给已创建的PDF文件注释、高亮和添加笔记的专有软件的一个案例。作为[[自由软件|自由软件]]可用的（[[GNU通用公共许可协议|GNU通用公共许可协议]]许可下）一个UNIX应用是[[PDFedit|PDFedit]]。另一个GPL授权的原生UNIX应用是[[Xournal|Xournal]]。Xournal允许以不同的字体和颜色注释，以及用于为文本或段落的快速下划及高亮线条的规则。Xournal还有一个用于方形、矩形和圆形的形状识别工具。Xournal中的注释可以被移动、复制或粘贴。[[免费软件|免费软件]][[福昕阅读器|福昕阅读器]]，适用于[[Microsoft_Windows|Microsoft Windows]]，允许注释文档。Tracker Software的[[PDF-XChange_Viewer|PDF-XChange Viewer]]的免费版允许不受限制的注释和标记。[[苹果公司|苹果]][[Mac_OS_X|Mac OS X]]内置PDF阅读器Preview也可以像免费软件[[Skim|Skim]]那样注释，后者支持与[[LaTeX|LaTeX]]、SyncTeX和PDFSync集成，以及与[[BibDesk|BibDesk]]参考文献管理软件集成。免费软件[[Qiqqa|Qiqqa]]可以创建总结所有注释的报告，而且笔记通过他们的PDF库做出来。

对于移动版的注释，[[iAnnotate_PDF|iAnnotate PDF]]（来自Branchfire）和[[GoodReader|GoodReader]]（来自Aji）允许对PDF注释以及导出注释的摘要。

还有一些支持注释PDF及其他文档格式[[web注释|web注释]]系统，如[[A.nnotate|A.nnotate]]、[[crocodoc|crocodoc]]、[[WebNotes|WebNotes]]。

在PDF被期望拥有纸质文档的全部功能的地方，墨水注释会被要求。一些接受来自鼠标的墨水输入的程序可能不足以对应平板上的手写输入。PC上已有的解决方案包括[[PDF_Annotator|PDF Annotator]]和[[Qiqqa|Qiqqa]]。

=== 其他 ===
PDF软件作为在线服务的例子包括用于查看和存储的[[Scribd|Scribd]]、用于在线编辑的[[Pdfvue|Pdfvue]]和用于PDF转换的[[Zamzar|Zamzar]]。

1993年出自[[Global_Graphics|Global Graphics]]的Jaws位图处理器成为第一个不用转换到其他格式原生产生PDF的销售用的印前RIP。公司在1997年给他们的Harlequin RIP发布了一个有同样兼容性的更新。<ref>{{cite web|url=http://www.globalgraphics.com/products/harlequin-multi-rip|title=Harlequin MultiRIP|accessdate=2014-03-02|deadurl=yes|archiveurl=https://web.archive.org/web/20140209215413/http://www.globalgraphics.com/products/harlequin-multi-rip/|archivedate=2014-02-09}}</ref>

[[爱克发-吉华|爱克发-吉华]]1997年推介并出售Apogee，第一个基于PDF的印前工作流系统。

许多商业的胶印机接受递交发布就绪的PDF文件作为印刷来源，特别是PDF/X-1a子集和相同的变种。<ref>[http://www.prepressx.com Press-Ready PDF Files] {{Webarchive|url=https://archive.is/20090317075743/http://www.prepressx.com/ |date=2009-03-17 }} "For anyone interested in having their graphic project commercially printed directly from digital files or PDFs." (last checked on 2009-02-10).</ref>发布就绪的PDF文件的提交是对接收已收集本地文件工作的不确定性需求的替代。

PDF被选为Mac OS X的“本地”{{link-en|元文件|metafile}}格式，取代早期[[Mac_OS|Mac OS]]的{{link-en|PICT|PICT}}格式。[[Quartz_(OS_X)|Quartz]]图形层的图像模式基于[[Display_PostScript|Display PostScript]]和PDF共有的模式，产生了昵称Display PDF。Preview应用与[[Safari|Safari]]网页浏览器2.0及以后版本都可以显示PDF文件。对PDF的系统级支持使得Mac OS X应用可以自动创建PDF文档，给它们提供OS标准的打印架构支持。文件可以按文件标头输出为PDF 1.3格式。在Mac OS X 10.0到10.3版截图时，图像也可以截取为PDF；后来的版本保存截图为[[PNG|PNG]]文件，虽然这一行为若有需要可以重新设置为PDF。

一些桌面打印机也支持直接打印PDF，可以不用额外的辅助生成PDF数据。目前，所有PDF兼容打印机也支持PostScript，但多数PostScript打印机不直接支持PDF打印{{Citation needed}}。

[[自由软件基金会|自由软件基金会]]曾认为他们的一个[[高优先级自由软件计划|高优先级计划]]“提供自由、高质量和全功能的一组软件库及程序实现PDF文件格式及ISO 32000标准的相关技术”。<ref>On 2014-04-02, a note dated 2009-02-10 referred to [http://www.fsf.org/campaigns/priority.html Current FSF High Priority Free Software Projects] {{Wayback|url=http://www.fsf.org/campaigns/priority.html |date=20070810230457 }} as a source. Content of the latter page, however, changes over time.</ref><ref>{{cite web |url=http://gnupdf.org/Goals_and_Motivations |title=Goals and Motivations |authors=GNUpdf contributors |publisher=''GNUpdf'' |date=2007-11-28 |website=gnupdf.org |accessdate=2014-04-02 |archive-date=2014-07-04 |archive-url=https://web.archive.org/web/20140704114405/http://www.gnupdf.org/Goals_and_Motivations |dead-url=no }}</ref>而在2011年，[[GNU_PDF|GNU PDF]]计划从“高优先级”列表中被移除，因为[[Poppler|Poppler库]]的完善，<ref>{{cite web|title=GNU PDF project leaves FSF High Priority Projects list; mission complete!|url=http://www.fsf.org/blogs/community/gnu-pdf-project-leaves-high-priority-projects-list-mission-complete|date=2011-10-06|first=Matt|last=Lee|publisher=Free Software Foundation|website=fsf.org|accessdate=2014-04-02|archive-date=2014-12-28|archive-url=https://web.archive.org/web/20141228050435/http://www.fsf.org/blogs/community/gnu-pdf-project-leaves-high-priority-projects-list-mission-complete|dead-url=no}}</ref>激励了像[[Evince|Evince]]之类的应用与[[GNOME|GNOME]]桌面环境的广泛应用。Poppler基于[[Xpdf|Xpdf]]<ref>[http://poppler.freedesktop.org/ Poppler homepage] {{Wayback|url=http://poppler.freedesktop.org/ |date=20150108235708 }} "Poppler is a PDF rendering library based on the xpdf-3.0 code base." (last checked on 2009-02-10)</ref><ref>[http://cgit.freedesktop.org/poppler/poppler/tree/README-XPDF Xpdf license] {{Webarchive|url=https://archive.is/20130414194348/http://cgit.freedesktop.org/poppler/poppler/tree/README-XPDF |date=2013-04-14 }} "Xpdf is licensed under the GNU General Public License (GPL), version 2 or 3." (last checked on 2012-09-23).</ref>代码。[[PDF軟體列表|PDF軟體列表]]亦列出可用的商业开发用软件库。

[[Apache软件基金会|Apache软件基金会]]的{{link-en|Apache PDFBox|Apache PDFBox}}计划是一款用于处理PDF文档的开放源代码Java库。PDFBox以[[Apache许可证|Apache许可证]]授权发布。<ref>[http://incubator.apache.org/pdfbox/ The Apache PDFBox project] {{Wayback|url=http://incubator.apache.org/pdfbox/ |date=20091109042522 }} . Retrieved 2009-09-19.</ref>

一个名为 [https://github.com/devongovett Devon Govett] {{Wayback|url=https://github.com/devongovett |date=20210207162725 }} 的 [[Adobe|Adobe]] 员工在 [[GitHub|GitHub]] 上开源了一款用于 JavaScript 的 PDF 操作库 [https://github.com/foliojs/pdfkit PDFKit] {{Wayback|url=https://github.com/foliojs/pdfkit |date=20201125031723 }}

Apple 开发者早期使用 [[Quartz|Quartz]] 的 [https://developer.apple.com/documentation/coregraphics/cgpdfdocument CGPDFDocument] {{Wayback|url=https://developer.apple.com/documentation/coregraphics/cgpdfdocument |date=20210205124849 }} 来绘制一个 PDF 文档，但是因为使用较为底层的图形库绘制 PDF 文档和查看十分麻烦，因此在 2017 年的 [[苹果全球开发者大会|WWDC]] 大会上 Apple 引进了 [https://developer.apple.com/documentation/pdfkit/ PDFKit] {{Wayback|url=https://developer.apple.com/documentation/pdfkit/ |date=20210207171701 }} 来让开发者在 Apple 产品的操作系统上让自己的 App 支持绘制，查看，标注 PDF 等等功能<ref>{{Cite web|title=Introducing PDFKit on iOS - WWDC 2017 - Videos|url=https://developer.apple.com/videos/play/wwdc2017/241/|accessdate=2021-01-21|work=Apple Developer|language=en|archive-date=2020-10-31|archive-url=https://web.archive.org/web/20201031085254/https://developer.apple.com/videos/play/wwdc2017/241/|dead-url=no}}</ref>

== 参考文献 ==
{{reflist|2}}

== 参见 ==
{{portal|软件}}
*[[XML纸张规范|XML纸张规范]]
*[[PostScript|PostScript]]
*[[DjVu|DjVu]]
*[[PDF/A|PDF/A]]
*[[PDF軟體列表|PDF軟體列表]]

== 外部链接 ==
*Adobe PDF官方介绍：-{zh-cn:[http://www.adobe.com/cn/zh-Hans/products/acrobat/adobepdf.html PDF文件，Adobe可移植文档格式]{{Dead link|date=2018年7月 |bot=InternetArchiveBot |fix-attempted=no }};zh-tw:[https://acrobat.adobe.com/tw/zh-Hant/why-adobe/about-adobe-pdf.html 什麽是PDF？Adobe可攜式文件格式] {{Wayback|url=https://acrobat.adobe.com/tw/zh-Hant/why-adobe/about-adobe-pdf.html |date=20170704233732 }}}-
* [http://www.quora.com/PDF-file-format/How-was-the-PDF-format-created How was the PDF format created? Quora]
* [https://web.archive.org/web/20200102134456/https://www.pdfa.org/ PDF Association] - PDF Association是软件开发者创作及处理PDF文档的产业协会
* [https://web.archive.org/web/20101007220449/http://partners.adobe.com/public/developer/tips/topic_tip31.html Adobe PDF 101: Summary of PDF]
* [https://web.archive.org/web/20080516062756/http://www.adobe.com/print/features/psvspdf/main.html Adobe: PostScript vs. PDF] – 官方介绍的PS、EPS与PDF的比较
* {{Wayback |date=20110424013530 |url=http://www.aiim.org/Resources/Archive/Magazine/2007-Jul-Aug/33448 |title=''PDF Standards....transitioning the PDF specification from a de facto standard to a de jure standard''}} – 有关可访问文档格式的PDF/E及PDF/UA规格的信息
* [http://www.iso.org/iso/iso_catalogue/catalogue_tc/catalogue_detail.htm?csnumber=38920 ISO 19005-1:2005]{{Wayback|url=http://www.iso.org/iso/iso_catalogue/catalogue_tc/catalogue_detail.htm?csnumber=38920 |date=20110606163301 }} [[国际标准化组织|国际标准化组织]]发布的PDF/A-1 ISO标准<!--(chargeable)-->
* [https://www.adobe.com/devnet/pdf/pdf_reference.html PDF Reference and Adobe Extensions to the PDF Specification]{{Wayback|url=https://www.adobe.com/devnet/pdf/pdf_reference.html |date=20101203082616 }}
* [http://www.mactech.com/articles/mactech/Vol.15/15.09/PDFIntro/ Portable Document Format: An Introduction for Programmers] {{Wayback|url=http://www.mactech.com/articles/mactech/Vol.15/15.09/PDFIntro/ |date=20160317034701 }} – 对比PDF、PostScript及PDF构件的介绍（升级到v1.3）
* [http://www.planetpdf.com/enterprise/article.asp?ContentID=6519 The Camelot Paper]{{Wayback|url=http://www.planetpdf.com/enterprise/article.asp?ContentID=6519 |date=20190422013101 }} – John Warnock概述的创建PDF的项目
* [http://river-valley.zeeba.tv/everything-you-wanted-to-know-about-pdf-but-were-afraid-to-ask/ Everything you wanted to know about PDF but were afraid to ask]{{Wayback|url=http://river-valley.zeeba.tv/everything-you-wanted-to-know-about-pdf-but-were-afraid-to-ask/ |date=20160118105015 }} - Leonard Rosenthol（Adobe Systems）在TUG 2007上的谈话记录
* [http://www.data2type.de/en/xml-xslt-xslfo/xsl-fo/ How to produce PDF with XSL-FO] {{Wayback|url=http://www.data2type.de/en/xml-xslt-xslfo/xsl-fo/ |date=20200920002530 }}
*[[善用佳软|善用佳软]]：[http://xbeta.info/pdf-software.htm 全面接触PDF:最好用的PDF软件汇总] {{Wayback|url=http://xbeta.info/pdf-software.htm |date=20201103065902 }}

{{Adobe Systems}}
{{Office document file formats}}
{{ISO}}
{{电子书}}

[[Category:图形文件格式|Category:图形文件格式]]
[[Category:页面描述语言|Category:页面描述语言]]
[[Category:文件格式|Category:文件格式]]
[[Category:矢量图形|Category:矢量图形]]
[[Category:Adobe_Systems|Category:Adobe Systems]]