{{Expert|time=2012-06-30}}
'''半呼叫模型'''（Half Call Model），是電話系的一種呼叫模式。

== 概述 ==
在电信系统中，一个典型的呼叫模型是由一个中心交换机（Switch Node）将两个用户终端（UE，其中一个做主叫，一个为被叫）连接起来。如下图：

[[File:Half_call_example1.jpg|File:Half call example1.jpg]]
 
在实际应用中，在[[中心交换机|中心交换机]]（Switch Node）内部，一个完整的呼叫被分成两个Half Call，并在实现上，分别由两个不同的逻辑实体完成。两个Half Call，一个叫Originator Call，一个叫Terminator Call。也就是下图所示的结构。其实，在早期的电话交换系统中，“接线员”的作用，正是起着连接ORI和TER两个逻辑实体的作用。其中ORI和TER为本文对于Originator和Terminator的缩写，并非行业术语。

[[File:Half_call_example2.jpg|File:Half call example2.jpg]]
 
引入这种结构的好处在于，可以使中心交换机，根据高级指令，分别针对主叫行为和被叫行为，发出不同的或更加复杂的呼叫控制指令。而这个指令，可以由第三方节点发出。一个很好的例子，就是在GSM环境中的SCP/SSP即扮演了“第三方节点”的角色，由它分别发指令给中心交换的ORI逻辑实体和TER逻辑实体，以完成不同的业务逻辑。如下图：

[[File:Half_call_example3.jpg|File:Half call example3.jpg]]

同样的原理，反映在IMS环境中，我们便可以将上述Half call模式，对应在IMS环境的节点中，如下图，2个Half Call在CSCF中通过，组成了一个完整的呼叫。

[[File:Half_call_example4.jpg|File:Half call example4.jpg]]

当主被叫不在同一个AS和CSCF下的时候（呼叫如下图所示），我们注意到，无论是主叫CSCF还是被叫CSCF，都只有一个逻辑实体（ORI或TER）在工作，也就是说，流经CSCF的，只是一个Half Call（即Originator Call和Terminator Call）。

[[File:Half_call_example5.jpg|File:Half call example5.jpg]]

上图所示的呼叫场景中，如果我们考虑一个CSCF所要处理的SIP信令量，通常会以一个Half Call作参考，而这里的一个Half Call表征为一个典型的SIP Dialog，即以INVITE开始以BYE结束的SIP Dialog，若以CSCF内部的逻辑实体ORI/TER为参考点看，流经CSCF节点的INVITE消息和BYE消息各为2个（图中未将BYE消息示出）。在这里，之所以不考虑SIP会话中的其他消息，其原因有两点：
# 其他消息如UPDATE、PRACK等并非在每种场景中都能出现，且对于其他SIP消息，AS并非必须；
# INVITE和BYE都属于Request消息，符合逻辑上的Half Call定义。

因此，Half Call概念的引入， 使得呼叫控制能力以及与之紧密相关的业务能力得到增强。同时，Half Call引起的节点内部处理机制的变化，对于我们评估设备的Capacity，也起着重要作用。

[[Category:电信|B]]