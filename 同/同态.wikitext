{{NoteTA|G1=Math}}

[[抽象代数|抽象代数]]中，'''同态'''是两个[[代数结构|代数结构]]（例如[[群|群]]、环、或者[[向量空间|向量空间]]）之间的保持结构不变的[[映射|映射]]。英文的同态(''homomorphism'')来自[[希腊语|希腊语]]:''{{lang|el|ὁμός}} (homos)''表示"相同"而''{{lang|el|μορφή}} (morphe)''表示"形态"。注意相似的词根''{{lang|el|ὅμοιος}} (homoios)''表示"相似"出现在另一个数学概念[[同胚|同胚]]的英文(homeomorphism)中。

==非正式表述==
因为抽象代数研究带有能产生有意义的集合上的结构或者属性的[[运算|运算]]的[[集合_(數學)|集合]]，最有意义的[[函数|函数]]就是能够保持这些运算不变的那些。它们被称为'''同态'''。

例如，考虑带加法运算的[[自然数|自然数]]。保持加法不变的函数有如下性质：''f''(''a'' + ''b'') = ''f''(''a'') + ''f''(''b'').例如''f''(''x'') = 3''x''就是这样的一个同态，因为''f''(''a'' + ''b'') = 3(''a'' + ''b'') = 3''a'' + 3''b'' = ''f''(''a'') + ''f''(''b'')。注意这个同态从自然数映射回自然数。

同态不必从集合映射到带相同运算的集合。例如，存在保持运算的从带加法的实数集到带乘法的正实数集。保持运算的函数满足：''f''(''a'' + ''b'') = ''f''(''a'') * ''f''(''b'')，因为加法是第一个集合的运算而乘法是第二个集合的运算。[[冪#运算律|指数]]定律表明''f''(''x'') = e<sup>''x''</sup>满足如下条件 : 2 + 3 = 5变为e<sup>''2''</sup> * e<sup>''3''</sup> = e<sup>''5''</sup>.

同态的一个特别重要的属性是如果[[幺元|幺元]]存在，它将被保持，也即，被映射为另一个集合中的幺元。注意第一个例子中''f''(0) = 0,而零是加法幺元。第二个例子中，''f''(0) = 1，因为0是加法幺元，而1是乘法幺元。

若考虑集合上的多个运算，则保持所有运算的函数可以视为同态。虽然集合相同，相同的函数可以是[[群论|群论]]（只考虑带一个运算的集合）中的同态，而非[[环论|环论]]（带两个相关运算的集合）中的同态，因为它可能不保持环论中需要的另外那个运算。

==形式化定义==
'''同态'''是从一个[[代数结构|代数结构]]到同类[[代数结构|代数结构]]的[[映射|映射]]，它保持所有相关的结构不变；也即，所有诸如[[幺元|幺元]]、[[逆元|逆元]]、和[[二元运算|二元运算]]之类的属性不变。

:<small>注意：有些作者在更广的意义下使用''同态''一词，而不仅是在代数中。有些人将它作为任何保持结构的映射的名称（例如[[拓扑学|拓扑学]]上的[[连续函数|连续函数]]），或者抽象的一般称为[[范畴论|范畴论]]中的[[态射|态射]]的映射。本条目只考虑代数学上的同态。更广义的用法请参看[[态射|态射]]条目。</small>

例如，考虑两个有单一[[二元运算|二元运算]]的集合<math>X</math>和<math>Y</math>(称为[[原群|原群]]的代数结构），同态就是映射<math>\phi: X \rightarrow Y</math>使得
:<math>\phi(u \cdot v) = \phi(u) \circ \phi(v)</math>
其中<math>\cdot</math>是<math>X</math>上的运算而<math>\circ</math>是<math>Y</math>上的运算。

每类代数结构有它的同态。特定的定义参看：
*[[群同态|群同态]]
*[[环同态|环同态]]
*[[模同态|模同态]]
*[[线性算子|线性算子]]（[[向量空间|向量空间]]上的同态）
*[[代数同态|代数同态]]

同态的概念在研究所有[[代数结构|代数结构]]共有的思想的[[泛代数|泛代数]]中可以给一个形式化的定义。这个情况下，同态<math>\phi: A \rightarrow B</math>是两个同类代数结构之间的映射，使得
:<math>\phi(f_A(x_1, \ldots, x_n)) = f_B(\phi(x_1), \ldots, \phi(x_n))\,</math>
对于所有''n''元运算<math>f</math>和所有<math>A</math>中的<math>x_i</math>成立。

== 同态的类型 ==

* '''[[同构|同构]]'''（isomorphism）：就是[[双射|双射]]的同态。两个对象称为同构的，如果存在相互间的同构映射。同构的对象就其上的结构而言是无法区分的。
* '''[[满同态|满同态]]'''（epimorphism）：就是[[满射|满射]]的同态。
*'''[[单同态|单同态]]'''（monomorphism）：（有时也称[[扩张|扩张]]）是[[单射|单射]]的同态。
*'''[[双同态|双同态]]'''（bimorphism）：若''f''既是满同态也是单同态，则称''f''为'''双同态'''。
*'''[[自同态|自同态]]'''（endomorphism）：任何同态''f'' : ''X'' → ''X''称为''X''上的一个'''自同态'''。
*'''[[自同构|自同构]]'''（automorphism）：若一个自同态也是同构的，那么称之为'''自同构'''。

上面的术语也适用于[[范畴论|范畴论]]。但是[[范畴论|范畴论]]中的定义更微妙一些：细节参看[[态射|态射]]条目。

注意在保结构映射的意义下，定义同构为双同态是不够的。必须要求逆也是同类的态射。在代数意义上（至少在[[泛代数|泛代数]]的意义下）这个额外的条件是自动满足的。

:[[File:Morphisms.svg|300px]]
:''各类同态之间的关系。<br> H = 同态的集合， M = 单同态的集合， <br>P = 满同态的集合， S = 同构的集合， <br>N = 自同态的集合， A = 自同构的集合.<br> 注意: M ∩ P = S, S ∩ N = A, <br>(M ∩ N) \ A 并且 (P ∩ N) \ A 只包含无限代数结构到自身的同态.''

== 同态的核==
{{main|核 (代数)}}

任意同态 ''f'' : ''X'' → ''Y'' 都定义了一个 ''X'' 上的[[等价关系|等价关系]] ~ 。 ''X'' 中元素 ''a'' ~ ''b'' 当且仅当 ''f''(''a'') = ''f''(''b'')。等价关系被称为 ''f'' 的'''核'''。这个关系也是 ''X'' 上的一个同余关系，因此在其[[商集|商集]] ''X''/~ 上也可以自然地定义一个结构：[''x''] * [''y''] =  [''x'' * ''y'']。这时，''X'' 通过同态 ''f'' 在 ''Y'' 中的像必然[[同构|同构]]于 ''X''/~。这就是所谓的[[同构基本定理|同构基本定理]]之一。注意到在有些情况下（比如说在[[群|群]]结构或环结构时），仅仅一个[[等价类|等价类]] ''K'' 就可以决定商集的结构，因此这时我们可以将它记作 ''X''/''K''（一般读作 ''X'' [[同余|模]] ''K'' ）。在这种情况下，一般将 ''K''，而不是 ~，称作 ''f'' 的核（参见[[正规子群|正规子群]]和[[理想_(环论)|理想]]）。

== 关系结构的同态 ==

[[模型论|模型论]]中，代数的结构推广到同时涉及运算和关系的结构上。令''L''为由函数和关系符号组成的标识，而''A'',''B''为两个''L''-结构。则从''A''到''B''的'''同态'''是映射''h''：从''A''的域到''B''的域，使得
*''h''(''F''<sup>''A''</sup>(''a''<sub>1</sub>,…,''a''<sub>''n''</sub>)) = ''F''<sup>''B''</sup>(''h''(''a''<sub>1</sub>),…,''h''(''a''<sub>''n''</sub>))对于每个''L''中的''n''元函数符号''F''成立， 
*''R''<sup>''A''</sup>(''a''<sub>1</sub>,…,''a''<sub>''n''</sub>)推出''R''<sup>''B''</sup>(''h''(''a''<sub>1</sub>),…,''h''(''a''<sub>''n''</sub>))对于每个''L''中的''n''元关系符号''R''成立。
在只有一个二元关系的特殊情况，这就是[[图同态|图同态]]的概念。

==同态和形式语言理论中的无幺元同态==
同态也被用于[[形式语言|形式语言]]的研究中。<ref>[[Seymour_Ginsburg|Seymour Ginsburg]], ''Algebraic and automata theoretic properties of formal languages'', North-Holland, 1975, ISBN 0-7204-2506-9.</ref>给定字母表<math>\Sigma_1</math>和<math>\Sigma_2</math>，函数''h'' : <math>\Sigma_1^*</math> → <math>\Sigma_2^*</math>使得<math>h(uv)=h(u)h(v)</math>对于所有<math>\Sigma_1^*</math>中的''u''和''v''成立，则称为<math>\Sigma_1^*</math>上的''同态''.<ref>在形式化语言的同态中，*运算是[[Kleene星号|Kleene星号]]。<math>\cdot</math>和<math>\circ</math>都是[[拼接|拼接]]，通常用连写表示。</ref>令''e''表示空词。若''h''为<math>\Sigma_1^*</math>上同态，<math>h(x) \ne e</math>对于<math>\Sigma_1^*</math>上所有<math>x \ne e</math>成立，则''h''成为无幺元同态（''e-free homomorphism''）。

==参看==
* [[态射|态射]]
* [[图同态|图同态]]
* [[连续函数|连续函数]]
* [[同胚|同胚]]
* [[微分同胚|微分同胚]]
*[[同态秘密共享|同态秘密共享]] - 一种简单的分布式投票机制。

==参考==
<div class="references-small">
<references/>
免费在线专著：
* Burris, Stanley N., and H.P. Sankappanavar, H. P., 1981. ''[http://www.thoralf.uwaterloo.ca/htdocs/ualg.html A Course in Universal Algebra.]{{Wayback|url=http://www.thoralf.uwaterloo.ca/htdocs/ualg.html |date=20050123031934 }}''  Springer-Verlag. ISBN 3-540-90578-2.
</div>
== 外部連結 ==

{{ModernAlgebra}}

[[Category:态射|Category:态射]]