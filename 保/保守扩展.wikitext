'''保守扩展'''是[[逻辑|逻辑]]中的一个概念。一个知识库K'是K的扩展，如果K是K'的一个子集；K'是K的保守扩展，如果对所有-{只}-用K中的名字构造的命题<math>\alpha</math>, K'<math>\vDash \alpha</math> 当且仅当 K<math>\vDash \alpha</math>。换句话说，保守扩展不会改变原有的知识库的结构。保守扩展在许多领域都有应用，如[[模块化本体|模块化本体]]和敏感知识的保护。

在逻辑和推导机制中，I和J分别是一个解释(Interpretation),如果J是I的保守扩展，必须满足以下条件:
*1) 解释I作用在语言集合L中，解释J必须作用在语言集合L'中,并且L'包含L
*2) 解释I的域(Domain)等于解释J的域
*3) 对于任何在语言集合L中的元素e，I(e) = J(e)

那么我们说J是I的保守扩展。

==补充说明==
在逻辑语言语法(Syntax)中

*一个语言集合的组成元素:
**1) 常数符号a,b,c,d,........
**2) 函数符号f,g,...... 并且每个函数符号标有所带参数的个数 注意当函数f不带有参数时 这时就变成了一个常数符号
**3）命题逻辑符号 P,Q,(或p,q)........
**4) 谓词关系逻辑符号 P,Q（或p,q）,........ 并且每个谓词标有所带参数的个数 注意当谓词关系逻辑符号P不带有参数时，就变成命题逻辑符号 P

这里的参数在逻辑语言中叫做项(Term)
(项是一个最小有限集合)
*一个项可以是:
**1) 一个变量符号(通常我们用小写字母x,y,z等表达) 比如 x,y,z,x1,x2,x3,..........
**2) 一个常数符号(通常我们用小写字母a,b,c,d等表达) 比如 a,b,c,d,a1,b1,c3,...........
**3) 一个函数符号并且该函数标有所带参数(通常我们用小写字母f,g,q等表达） f(t1,t2,t3,......tn),其中所带的参数t1,t2,.......,tn也是由项组成

他是最小的有限的集合,换句话说一个项是一个有限树，他的叶子个数是有限的
比如 f(x,b,f(y,c,g(z)))  他是一个项 其中 x,y,z是变量，b,c是常数，f,g是函数符号
            f
            |
        x   b   f
                |
             y  c  g
                   |
                   z  

但是 比如 如果函数f的项是f自己本身,这时候就不是项了，因为一个项必须是一个有限树(如上图所示)
而此时的情况就变成了一个无限表达 f(f(f(f(f(f(f(f.......)))))))，就不符合最小有限集合的定义

在项(Term)的基础上我们构筑式子集合(Set of Formula)
式子集合也是一个最小有限集合,这样定义也是避免一个式子的无限性表达，避免如同上面的例子
*一个基于一个语言集合L的式子(记作L-formula)可以是:
**1) ⊥ （永假符号） 是一个式子 (永假的含义是一个式子在任何解释中，永远是假命题，我们记作⊥   
***比如 P(x)∧˥P(x) 在任何解释I中,该命题永远是假命题，注意，前提中解释I必须有一个非空解释域
**2) T   (永真符号)  是一个式子 （解释如上，永真表示一个式子永远是真命题）
**3) 如果P表示一个命题符号，那么P就是一个式子
**4) 如果P表示一个谓词关系符号，并且他带有n个参数(也就是带有n个项Term)，那么 P(t1,t2,t3,......,tn)是一个式子,其中t1,......,tn是n个项
**5) 如果φ是一个式子，那么˥φ也是一个式子
**6) 如果φ和ψ都是式子，那么φ*ψ也是式子，其中*符号表示∧(conjonction),∨(disjonction),⇔(equivalence),⇒(implication) 符号中的任何一种
**7) 如果φ是一个式子，x是一个变量，那么(∃x)φ是一个式子
***  ∃表示存在量词符号 比如 (∃x) (P(x)∧P(y))  含义是至少存在一个变量x的值在式子(P(x)∧P(y))中起作用  注意到x是φ的约束变量,y是φ的自由变量
**8) 如果φ是一个式子，x是一个变量，那么(∀x)φ是一个式子 
***  ∀表示所有量词符号 比如 (∀x) (P(x)∧P(y))  含义是对所有变量x的值在式子(P(x)∧P(y))中起作用
**9) *如果t1和t2是两个项，那么t1=t2是式子 (由于要涉及处理相等问题的原则和公理，所以这里的所有式子不涉及t1=t2情况)


*几个注意点
**  一个变量x叫做φ式子的约束变量,当有存在量词或所有量词在φ给于限定变量x,反之叫做自由变量
**  注意存在量词符号或所有量词符号的作用域
*** 比如 φ = (∃x p(x))∨q(x)  此时存在量词仅作用于p(x),不作用于q(x),p(x)中的x是约束变量，q(x)的x是自由变量


以上的简单语法规则构筑了一阶逻辑，我们之所以要通过以上的语法规则构筑的式子，是想知道是否我们构筑的式子是否有意思或有意思，在逻辑语法(Syntax)中我们无法解释，因此我们必须通过逻辑语言语义(Semantic)来说明是否一个式子有意义或有意思,在逻辑语言语义(Semantic)中我们引入(Interpretation)解释(记作I)

在逻辑语言语义(Semantic)中
我们用一个解释（Interpretation）I 赋予一个式子(formula)以意思，

*一个解释I在语言集合L中是这样定义的:
**1) 解释I必须有一个非空（领）域做为解释的基础，用符号D来表示,  比如我们说用全体自然数集合来作位解释I的域来解析分析一个由语言集合L中的元素组成的式子(formula)
**2) 解释I是一个联系函数，他的定义如下:
***1) 语言集合中的常数a I(a) 属于解释I的域，记作 I(a) = Ia  且 Ia 属于 D
***2) 对于函数f(t1,t2,......tn)， If 是从 Dn*Dn*Dn.....Dn（N个Dn） 到 Dn 的映射,其中Dn分别是t1,.....,tn和f域
***3) 对于逻辑命题P Ip 是{True,False}中的一个元素， 也就是所命题逻辑的结果要么是真命题（记作 T），要么是假命题(记作 F)
***4) 对于谓词逻辑P(t1,.......tn) Ip 是一个从 Dn*Dn*.......*Dn(N个Dn) 到 {True , False} 的映射 其中Dn是每个项ti（i=1,2,......n）的解释域

[[Category:模型论|Category:模型论]]