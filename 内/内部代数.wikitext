{{NoteTA
|G1 = IT
|G2 = Math
}}
在[[抽象代数|抽象代数]]中，'''内部代数'''是采用了集合的拓扑[[内部|内部]]概念的特定类型的[[代数结构|代数结构]]。内部代数之对于[[拓扑学|拓扑]]和[[模态逻辑|模态逻辑]] '''S4''' 如同[[布尔代数|布尔代数]]之对于[[集合论|集合论]]和普通[[命题逻辑|命题逻辑]]。内部代数形成了[[模態代數|模態代數]]的一个[[簇_(泛代数)|簇]]。

==定义==
'''内部代数'''是带有如下标识(signature)的[[代数结构|代数结构]]< ''S'', ·, +, ', 0, 1, <sup>I</sup> >，其中< ''S'', ·, +, ', 0, 1 >是[[布尔代数|布尔代数]]，后缀 <sup>I</sup> 是[[一元运算|一元运算]]'''[[内部算子|内部算子]]'''，它满足如下恒等式：
# ''x''<sup>I</sup> ≤ ''x''
# ''x''<sup>II</sup> = ''x''<sup>I</sup>
# (''xy'')<sup>I</sup> = ''x''<sup>I</sup>''y''<sup>I</sup>
# 1<sup>I</sup> = 1
''x''<sup>I</sup> 叫做 ''x'' 的'''内部'''。

内部算子的[[对偶性_(序理论)|对偶]]是'''[[闭包算子|闭包算子]]'''<sup>C</sup>，定义为 ''x''<sup>C</sup> = ((''x'' ')<sup>I</sup> )'。''x''<sup>C</sup> 叫做 ''x'' 的'''闭包'''。通过[[对偶性_(序理论)|对偶原理]]，闭包算子满足如下恒等式:
# ''x''<sup>C</sup> ≥ ''x''
# ''x''<sup>CC</sup> = ''x''<sup>C</sup>
# (''x'' + ''y'')<sup>C</sup> = ''x''<sup>C</sup> + ''y''<sup>C</sup>
# 0<sup>C</sup> = 0

如果闭包算子被选取为原始的，则内部算子可以定义为 ''x''<sup>I</sup> = ((''x'' ' )<sup>C</sup>)'。所以内部代数的理论可以使用闭包算子替代内部算子来形式化，这种情况下，考虑的是形如 < ''S'', ·, +, ', 0, 1, <sup>C</sup> > 的'''闭包代数'''，这里的 < ''S'', ·, +, ', 0, 1 > 是布尔代数而 <sup>C</sup> 是满足上述恒等式的闭包算子。闭包代数和内部代数形成了[[对偶性_(序理论)|对偶]]对，它们是“带有算子的布尔代数”的例证。关于这个主题(主要是波兰拓扑学)的早期文献涉及了闭包算子，但是内部算子的形式化最终成为标准。

== 开放和闭合元素 ==

内部代数的元素被称为'''[[开集|开]]'''的，当且仅当''x''<sup>I</sup> = ''x''，开元素的[[补集|补]]被称为'''[[闭集|闭]]'''的并，这也等价于''x''<sup>C</sup> = ''x''。显然，一个元素的内部总是开的而闭包总是闭的。

既开又闭的元素叫做'''[[闭开集|闭开]]'''的。显然，0 和 1 是闭开的。

闭元素的内部称为'''[[正规开集|正规开]]'''的，开元素的闭包称为'''正规闭'''的。

内部代数称为'''布尔的'''，若它的元素都是开的(因此是闭开的)。布尔内部代数可以同一于普通布尔代数，因为它们的内部和闭包算子不提供有意义的额外结构。特殊情况是'''平凡'''内部代数类，它们是特征化为恒等式 0 = 1 的单一元素的内部代数。

== 内部代数的态射 ==
=== 同态 ===

内部代数作为[[代数结构|代数结构]]的优点是有[[同态|同态]]。给定两个内部代数 ''A'' 和 ''B''，映射 ''f'' : ''A'' → ''B'' 是'''内部代数同态'''，[[当且仅当|当且仅当]] ''f'' 是底层布尔代数 ''A'' 和 ''B'' 之间的同态，它还保持内部和闭包。所以:
*''f''(''x''<sup>I</sup>) = ''f''(''x'')<sup>I</sup>；
*''f''(''x''<sup>C</sup>) = ''f''(''x'')<sup>C</sup>。

=== 拓扑态射 ===

拓扑态射(topomorphism)是另一种重要的更一般性的在内部代数之间的[[态射|态射]]。映射 ''f'' : ''A'' → ''B'' 是拓扑态射，当且仅当 ''f'' 是在底层布尔代数 ''A'' 和 ''B'' 上的同态，并且还保持 ''A'' 的开放和闭合元素。所以:
* 如果 ''x'' 在 ''A'' 中开放的，则 ''f''(''x'') 在 ''B'' 中是开放的；
* 如果 ''x'' 在 ''A'' 中闭合的，则 ''f''(''x'') 在 ''B'' 中是闭合的。

所有内部代数同态都是拓扑态射，当时不是所有拓扑态射都是内部代数同态。

== 与其他数学领域的关系 ==
=== 拓扑学 ===

给定一个[[拓扑空间|拓扑空间]] '''''X''''' = < ''X'', ''T'' >，你可以形成 ''X'' 的[[幂集|幂集]]布尔代数:

: < ''P''(''X''), ∩, ∪, ', ø, ''X'' >

并扩展它为一个内部代数

:'''''A'''''('''''X''''') = < ''P''(''X''), ∩, ∪, ', ø, ''X'', <sup>I</sup> >

这里的 <sup>I</sup> 是普通的拓扑内部算子，定义为

:''S'' <sup>I</sup> = <math>\cup</math> { ''O'' ∈ ''T'' : ''O'' ⊆ ''S'' } 对于所有的 ''S'' ⊆ ''X''

对应的闭包算子定义为

:''S'' <sup>C</sup> = <math>\cap</math> { ''C'' : ''S'' ⊆ ''C'' 并且 ''C'' 闭合在 '''''X''''' 中} 对于所有的 ''S'' ⊆ ''X''

在 '''''X''''' 中 ''S'' <sup>I</sup> 是 ''S'' 的最大开子集而 ''S'' <sup>C</sup> 是 ''S'' 的最小闭超集。内部代数 '''''A'''''('''''X''''') 的开放、闭合、正规开放、正规闭合和闭开元素就是 '''''X''''' 在通常拓扑学意义上开集、闭集、正规开集、正规闭集和闭开集。

所有[[完全性_(序理论)|完全]]的[[原子_(序理论)|原子]]内部代数都[[同构|同构]]于为某个[[拓扑空间|拓扑空间]] '''''X''''' 形成的 '''''A'''''('''''X''''') 内部代数。此外所有内部代数都可以被[[嵌入_(数学)|嵌入]]到给内部代数以'''[[集合域|集合的拓扑域]]'''表示的那样一个内部代数中。结构 '''''A'''''('''''X''''') 的性质就是定义内部代数的真正动机。因为这种与拓扑学的亲密联系，内部代数也叫做'''拓扑布尔代数'''。

给定在两个拓扑空间之间的[[连续映射|连续映射]]

:''f'' : '''''X''''' → '''''Y'''''

我们可以定义[[完全性_(序理论)|完全]]拓扑态射

:'''''A'''''(''f'') : '''''A'''''('''''Y''''') → '''''A'''''('''''X''''')

为

:'''''A'''''(''f'')(''S'') = ''f'' <sup>-1</sup>[''S'']

对于 '''''Y''''' 的所有子集 ''S''。在两个完全原子内部代数之间的所有完全拓扑态射可以以这种方式导出。如果 '''Top''' 是拓扑空间和连续映射的范畴而 '''Cit''' 是完全原子内部代数和完全拓扑态射的[[范畴论|范畴]]，则 '''Top''' 和 '''Cit''' 是对偶同构而 '''''A''''' : '''Top''' → '''Cit''' 是作为范畴的对偶同构的[[函子|逆变函子]]。'''''A'''''(''f'') 是同态当且仅当 ''f'' 是连续[[开映射|开映射]]。

在这种范畴的对偶同构下很多自然的拓扑概念对应于代数性质，特别是连通性对应于不可简约性质:

*'''''X''''' 是[[空集|空]]的当且仅当 '''''A'''''('''''X''''') 是平凡的
*'''''X''''' 是[[不可分空间|不可分]]的当且仅当 '''''A'''''('''''X''''') is [[单纯代数|单纯]]的
*'''''X''''' 是[[离散空间|离散]]的当且仅当 '''''A'''''('''''X''''') 是布尔的
*'''''X''''' 是[[几乎离散空间|几乎离散]]的当且仅当 '''''A'''''('''''X''''') 是[[半单纯|半单纯]]的
*'''''X''''' 是[[Alexandrov拓扑|有限生成]]的(Alexandrov)当且仅当 '''''A'''''('''''X''''') 是'''算子完备'''的，就是说它的内部和闭包算子分别分配于任意交和并之上。
*'''''X''''' 是[[连通空间|连通]]的当且仅当 '''''A'''''('''''X''''') 是[[直接不可分解|直接不可分解]]的
*'''''X''''' 是[[超连通空间|超连通]]的当且仅当 '''''A'''''('''''X''''') 是[[有限次直接不可分解|有限次直接不可分解]]的
*'''''X''''' 是[[紧致空间|紧致]]超连通的当且仅当 '''''A'''''('''''X''''') 是[[次直接不可分解|次直接不可分解]]的

==== 广义拓扑 ====

依据开子集的[[拓扑空间|拓扑]]的拓扑空间的现代公式化，激发了内部代数的可供选择的公式化: '''广义拓扑空间'''是如下形式的[[代数结构|代数结构]]

:< ''B'', ·, +, ', 0, 1, ''T'' >

这里的 < ''B'', ·, +, ', 0, 1 > 是普通的布尔代数，而 ''T'' 是在 ''B'' 上的一元关系(''B'' 的子集)使得:

#0,1 ∈ ''T''
#''T'' 闭合在任意并之下(就是说，如果 ''T'' 的任意子集的并存在则它就在 ''T'' 中)
#''T'' 闭合在有限交之下
#对于所有 ''B'' 的元素 ''b''，并 ∑{''a'' ∈''T'' : ''a'' ≤ ''b''} 存在

''T'' 被称为在布尔代数中的'''广义拓扑'''。

给定一个内部代数它的开放元素形成了广义拓扑。反过来给定一个广义拓扑空间

:< ''B'', ·, +, ', 0, 1, ''T'' >

我们可以定义 ''B'' 上的一个内部算子为 ''b'' <sup>I</sup> = ∑{''a'' ∈''T'' : ''a'' ≤ ''b''} 因此生成了其开放元素正好都是 ''T'' 的内部代数。所以广义拓扑空间等价于内部代数。

把内部代数考虑为广义拓扑空间，拓扑态射接着是带有增加的算子的布尔代数的标准同态，所以可以应用来自[[泛代数|泛代数]]的标准结果。

==== 邻域函数和邻域半格 ====

[[邻域|邻域]]的拓扑概念可以推广到内部代数：元素y被称为是元素x的'''邻域'''，当且仅当x ≤ y<sup>I</sup>。x 的所有邻域的集合 N(x) 构成形成邻域[[滤子_(数学)|滤子]]。这也导致了内部代数的另一种公式化:

在布尔代数上的'''邻域函数'''是从它的底层集合B到它的滤子的集合的映射N使得：

#对于所有 ''x'' ∈ ''B''，max { ''y'' ∈ ''B'' : ''x'' ∈ ''N(y)'' } 存在
#对于所有 ''x'',''y'' ∈ ''B''，''x'' ∈ ''N(y)'' 当且仅当有 ''z'' ∈ ''B'' 使得 ''y'' ≤ ''z'' ≤ ''x'' 并且 ''z'' ∈ ''N(z)''。

内部代数的元素到它的邻域的滤子的映射 ''N'' 是在内部代数底层的布尔代数上的邻域函数。此外，给定带有底层集合 ''B'' 的布尔代数上邻域函数 ''N''，我们可以定义一个内部算子为 ''x''<sup>I</sup> = max { y ∈ ''B'' : ''x'' ∈ ''N(y)'' } 从而获得一个内部代数。接着 ''N(x)'' 正好就是这个内部代数内 ''x'' 在的领域的滤子。所以内部代数等价于带有指定邻域函数的布尔代数。

依据领域函数，开放元素正好就是那些元素 ''x'' 使得 ''x'' ∈ ''N(x)''。依据开元素 ''x'' ∈ ''N(y)'' 当且仅当有开元素 ''z'' 使得 ''y'' ≤ ''z'' ≤ ''x''。

领域函数可以更一般的定义在[[半格|(交)-半格]]上生成叫做[[邻域半格|邻域半格]]的结构。内部代数可以被看作就是'''布尔邻域格'''，就是说底层半格形成布尔代数的领域格。

=== 模态逻辑 ===

给定在[[模态逻辑|模态逻辑]] '''S4'''中一个理论(形式句子的集合) ''M''，我们可以形成它的 [[Lindenbaum-Tarski代数|Lindenbaum-Tarski代数]]:

:'''''L'''''(''M'') = < ''M'' / ~, ∧, ∨, ¬, ''F'', ''T'', □ >

这里的 ~ 是在 ''M'' 中的句子的等价关系，''p'' ~ ''q'' 当且仅当 ''p'' 和 ''q'' 在 ''M'' 中是逻辑等价的，而 ''M'' / ~ 是在这个关系下等价类的集合。则 '''''L'''''(''M'') 是内部代数。在这种情况下的内部算子对应于[[模态算子|模态算子]] □('''必然性''')，而闭包算子对应于 ◊('''可能性''')。这种结构是[[模态代数|模态代数]]和[[模态逻辑|模态逻辑]]的更一般结果的特殊情况。

'''''L'''''(''M'') 的开放元素对应于只在必然为真时为真的那些句子，而闭合元素对应于只在必然为假时为假的那些句子。

因为它们与 '''S4''' 的关系，内部代数有时叫做 '''S4 代数'''或 '''Lewis 代数'''，得名于[[逻辑学家|逻辑学家]] [[Clarence_Irving_Lewis|C. I. Lewis]]，他首先提议了[[模态逻辑|模态逻辑]] '''S4''' 和 '''[[S5_(模态逻辑)|S5]]'''。

=== 预序 ===

因为内部代数是带有[[一元算子|算子]]的(正常)[[布尔代数|布尔代数]]，它们可以被表示为在适当关系结构上[[集合域|集合域]]。特别是，因为它们是[[模态代数|模态代数]]，它们可以被表示为在叫做 [[Kripke语义|模态框架]]的一个单一[[二元关系|二元关系]]上的集合的域。对应于内部代数的模态框架正好就是[[预序关系|预序集合]]。预序集合(也叫做“S4-框架”)提供了[[模态逻辑|模态逻辑]] '''S4''' 的 [[Kripke语义|Kripke语义]]，而在内部代数和预序之间的联系密切关联于它们与[[模态逻辑|模态逻辑]]的联系。

给定一个[[预序关系|预序集合]] '''''X''''' = < ''X'', « > 我们可以构造一个内部代数

: '''''B'''''('''''X''''') = < ''P''(''X''), ∩, ∪, ', ø, ''X'', <sup>I</sup> >

从 ''X'' 的[[幂集|幂集]][[布尔代数|布尔代数]]，这里的内部算子 <sup>I</sup> 定义为

:''S'' <sup>I</sup> = { ''x'' ∈ ''X'' : 对于所有 ''y'' ∈ ''X'', ''x'' « ''y'' 蕴涵 ''y'' ∈ ''S'' } 对于所有 ''S'' ⊆ ''X''。

对应的闭包算子定义为

:''S'' <sup>C</sup> = { ''x'' ∈ ''X'' : 存在 ''y'' ∈ ''S'' 使得 ''x'' « ''y'' } 对于所有 ''S'' ⊆ ''X''。

''S'' <sup>I</sup> 是从 ''S'' 之外的“[[可能世界|世界]]”不可[[可及关系|访问]]的所有“世界”的集合，而 ''S'' <sup>C</sup> 是从在 ''S'' 之内的某个“世界”可以访问的所有“世界”的集合。所有内部代数都可以[[嵌入_(数学)|嵌入]]为某个[[预序关系|预序集合]] '''''X''''' 形成内部代数 '''''B'''''('''''X''''')    中，给予上述提及的作为[[集合域|集合域]]('''预序域''')的表示。

这个构造和表示定理是对[[模态代数|模态代数]]和模态框架的更一般结果的特殊情况。在这种考虑下，内部代数有着特定价值，因为它们联系于[[拓扑学|拓扑学]]。这种构造提供了带有[[拓扑空间|拓扑]]的[[预序关系|预序集合]] '''''X''''' ，这个[[Alexandrov拓扑|Alexandrov拓扑]]生成[[拓扑空间|拓扑空间]] '''''T'''''('''''X''''')，它的开集是:

:{ ''O'' ⊆ ''X'' : 对于所有 ''x'' ∈ ''O'' 和所有 ''y'' ∈ ''X'', ''x'' « ''y'' 蕴涵 ''y'' ∈ ''O'' }。

对应的闭集是:

:{ ''C'' ⊆ ''X'' : 对于所有 ''x'' ∈ ''C'' 和所有 ''y'' ∈ ''X'', ''y'' « ''x'' 蕴涵 ''y'' ∈ ''C'' }。

换句话说，开集的“世界”从外部('''上部集合''')是不可访问的，而闭集从内部('''下部集合''')是不能访问所有外部“世界”的。此外 '''''B'''''('''''X''''') = '''''A'''''('''''T'''''('''''X'''''))。

=== 一元布尔代数 ===

任何[[一元布尔代数|一元布尔代数]]都可以被认为是内部算子是全称量词而闭包算子是存在量词的内部代数。一元布尔代数正好就是满足恒等式 ''x''<sup>IC</sup> = ''x''<sup>I</sup> 的内部代数的一个[[簇_(泛代数)|簇]]。换句话说，它们正好是其中所有开放元素都是闭合的，或者等价的说所有闭合元素都是开发的内部代数。此外，这种内部代数正好是[[半单纯|半单纯]]内部代数。它们也是对应于[[模态逻辑|模态逻辑]] '''S5''' 的内部代数，所以也叫做 '''S5 代数'''。

由于预序集合和内部代数之间的联系，它们对应的预序是[[等价关系|等价关系]]，反映了这种预序集合为 '''S5''' 提供了 Kripke 语义的事实。这还反映了在量化的[[一元逻辑|一元逻辑]](一元布尔代数为它提供了[[Lindenbaum-Tarski代数|代数描述]])和 '''S5''' 之间的联系，这里的模态算子 □('''必然性''')和 ◊('''可能性''')可以在使用模态全称和存在量化的 Kripke 语义中解释，而不需要借助可及关系。

=== Heyting代数 ===

内部代数的开放元素形成了[[Heyting代数|Heyting代数]]而闭合元素形成了[[对偶性_(序理论)|对偶]] Heyting 代数。正规开放元素和正规闭合元素分别对应于这些代数的伪补元和对偶的伪补元，因而形成了布尔代数。闭开元素对应于补元素，因而形成了这些布尔代数和这个内部代数自身的公共子代数。所有 [[Heyting代数|Heyting代数]]可以被表示为内部代数的开放元素。

Heyting 代数对[[直觉逻辑|直觉逻辑]]扮演了内部代数对于[[模态逻辑|模态逻辑]] '''S4''' 和[[布尔代数|布尔代数]]对于[[命题逻辑|命题逻辑]]的[[Lindenbaum-Tarski代数|相同角色]]。在 Heyting 代数和内部代数之间的联系反映了在直觉逻辑和 '''S4''' 之间的联系，直觉逻辑的理论可以被解释为闭合在[[模态逻辑|必然性]]下的 '''S4''' 理论。

=== 导出代数 ===

给定一个内部代数 '''''A'''''，闭包算子服从[[导出代数|导出算子]] <sup>D</sup>  的公理。因此通过采用闭包算子为导出算子，可以形成与 '''''A''''' 有相同底层布尔代数的[[导出代数|导出代数]] '''''D'''''('''''A''''')。

所以内部代数是[[导出代数|导出代数]]。从这个角度看，它们正好是满足恒等式 ''x''<sup>D</sup> ≥ ''x'' 的导出代数的一个[[簇_(泛代数)|簇]]。导出代数为[[模态逻辑|模态逻辑]] '''WK4''' 提供了适当的[[Lindenbaum-Tarski代数|代数语义]]。所以导出代数对应于拓扑[[导出集合|导出集合]]和 '''WK4'''，如同内部/闭包代数的对应于拓扑内部/闭包和 '''S4'''。
 
给定带有导出算子 <sup>D</sup> 的[[导出代数|导出代数]] '''''V'''''，我们可以形成与 '''''V''''' 有相同底层布尔代数的一个内部代数 '''''I'''''('''''V''''')，带有内部和闭包算子分别定义为 ''x''<sup>I</sup> = ''x''·''x'' ' <sup>D</sup> ' 和 ''x''<sup>C</sup> = ''x'' + ''x''<sup>D</sup>。所以所有[[导出代数|导出代数]]都可以被当作内部代数。此外给定一个内部代数 '''''A'''''，我们有 '''''I'''''('''''D'''''('''''A''''')) = '''''A'''''。但是，'''''D'''''('''''I'''''('''''V''''')) = '''''V''''' '''不'''对于所有导出代数 '''''V''''' 成立。

==元数学==

Gregorczyk 证明了闭包代数的基本理论的[[决定性问题|不可决定性]]。<ref>[[Andrzej_Gregorczyk|Andrzej Gregorczyk]] (1951) "Undecidability of some topological theories," ''Fundamenta Mathematicae 38'': 137-52.</ref>

==引用==
{{reflist}}
* Blok, W.A., 1976, ''Varieties of interior algebras,'' Ph.D. thesis, University of Amsterdam. 
* Esakia, L., 2004, "Intuitionistic logic and modality via topology," ''Annals of Pure and Applied Logic 127'': 155-70.
* McKinsey, J.C.C.  and [[Alfred_Tarski|Alfred Tarski]], 1944, "The Algebra of Topology," ''Annals of Mathematics 45'': 141-91.
* Naturman, C.A., 1991, ''Interior Algebras and Topology'', Ph.D. thesis, University of Cape Town Department of Mathematics.

[[Category:代数逻辑|N]]
[[Category:布尔代数|N]]
[[Category:闭包算子|N]]
[[Category:模态逻辑|N]]