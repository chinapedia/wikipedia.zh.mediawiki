{{noteTA
|T=zh-hans:构建自动化; zh-cn:构建自动化; zh-sg:组建自动化; zh-tw:組建自動化; zh-hk:組建自動化;
|1=zh:程序; zh-hans:程序; zh-hant:程式;
|2=zh-hans:网络; zh-cn:网络; zh-tw:網路; zh-hk:網路;
|3=zh-hans:软件; zh-cn:软件; zh-tw:軟體; zh-hk:軟件;
|4=zh-hans:计算机; zh-cn:计算机; zh-tw:電腦; zh-hk:電腦;
|5=zh-hans:链接; zh-cn:链接; zh-tw:連結; zh-hk:連結;
|6=zh-hans:服务器; zh-cn:服务器; zh-sg:伺服器; zh-tw:伺服器; zh-hk:伺服器;
|7=zh-hans:持续集成; zh-cn:持续集成; zh-tw:持續整合; zh-hk:持續整合;
|8=zh-hans:配置管理; zh-cn:配置管理; zh-tw:組態管理; zh-hk:組態管理;
|9=zh-hans:软件包管理系统; zh-cn:软件包管理系统; zh-tw:軟件套件管理系統; zh-hk:軟件套件管理系統;
|10=zh-hans:包;zh-hant:套件;
|11=zh-hans:脚本; zh-cn:脚本; zh-tw:手稿; zh-hk:手稿;
|12=zh-hans:命令行界面; zh-hant:命令列介面;
|13=zh-hans:源代码; zh-cn:源代码; zh-sg:原始码; zh-tw:原始碼; zh-hk:原始碼;
|G1=IT
}}
{{软件开发过程}}
'''组建自动化'''（{{lang-en|Build automation}}，又称'''构建自动化'''、'''自动化构建'''、'''構建系統'''）指自动创建[[软件组建|软件组建]]的一组进程，包括将计算机[[源代码|源代码]][[编译器|编译]]成{{link-en|二进制码|binary code}}、將二进制码[[软件包管理系统|包装]]成[[软件包|软件包]]以及运行[[测试自动化|自动化测试]]。

==概要==
组建自动化原先是通过创建[[make|makefile]]来完成的，如今则主要使用两大类工具完成组建<ref>{{cite book |last=Ceruzzi |first=Paul E. |date=2003 |title=A history of Modern computing  |url=https://archive.org/details/historyofmodernc00ceru_0 |publisher= The MIT Press |isbn=978-0262532037}}</ref>：

;组建自动化工具（如[[Make|Make]]、Rake、Cake、MS build、[[Apache_Ant|Ant]]、[[Gradle|Gradle]]、[[CMake|CMake]]等）:  这些工具的主要目的是通过编译和链接源代码等活动来生成组建工件。
;组建自动化服务器: 这些基于Web的通用工具能够在预定或触发的基础上执行组建自动化实用程序。[[持续集成|持续集成]]是组建自动化服务器的类型之一。

根据自动化程度的不同有如下分类：
*Makefile
** 基于Make的工具
** 不基于Make的工具
* 构建脚本（或Makefile）生成工具
* [[持续集成|持续集成]]工具
* [[组态管理|组态管理]]工具
* 元构建工具或[[软件包管理系统|软件包管理系统]]
* 其他
<!--每个分类下的相关软件可以在{{link-en|组建自动化软件列表|List of build automation software}}（英文）中找到。-->

==组建自动化工具==
组建自动化工具允许自动化简单且重复的任务，这些工具会通过以正确的、特定的顺序执行任务并运行每个任务来计算如何达到目标。其又可分为任务导向工具与产品导向工具：任务导向工具用以描述网络在特定集合任务方面的依赖性；产品导向工具则根据其生成的的产品来描述事物<ref>{{cite book |last=Clark |first=Mike |date=2004 |title=Pragmatic Project Automation: How to Build, Deploy, and Monitor Java Apps  |publisher= The Pragmatic Programmers. |isbn=978-0974514031}}</ref>。

==组建自动化服务器==
虽然组建服务器早在持续集成服务器出现之前就已存在，但组建服务器（{{lang-en|build servers}}）通常与持续集成服务器（{{lang-en|continuous integration servers}}）在英语上是同义词。组建服务器也可以并入[[軟體生命週期管理|軟體生命週期管理]]（ALM）工具以及{{link-en|应用发布自动化|Application release automation}}（ARA）工具中。

'''服务器类型'''
* '''按需自动化'''（'''On-demand automation'''）：如在[[命令行界面|命令行界面]]中运行[[脚本语言|脚本]]的用户；
* '''计划自动化'''（'''Scheduled automation'''） ：如运行每日构建的[[持续集成|持续集成]]服务器；
* '''触发自动化'''（'''Triggered automation'''） ：如运行每次提交到[[版本控制|版本控制]]系统的构建的持续集成服务器。
==分散式組建自動化==
自動化是透過許多的編譯器來達成，可能是工具在每一個步驟執行不同的編譯器，或是用分散式編譯<ref>{{cite journal |last= Enos |first= Joe |date= 2013 |title= Automated Builds: The Key to Consistency |url= http://www.infoq.com/articles/Automated-Builds |journal= InfoQ |publisher= C4Media Inc. |access-date= September 16, 2015 |archive-date= 2021-10-22 |archive-url= https://web.archive.org/web/20211022094115/https://www.infoq.com/articles/Automated-Builds/ |dead-url= no }}</ref>。分散式組建流程需要有機器智能，瞭解程式碼的相依性，以便用正確的順序進行分散式組建。
==和持續交付和持續整合的關係==
組建自動化是朝向[[持續交付|持續交付]]（CD）和[[DevOps|DevOps]]的第一步。組建自動化若結合[[持續整合|持續整合]]（CI）、[[软件部署|软件部署]]、{{le|應用程式發佈自動化|application-release automation}}等程序，可以讓組織漸漸的建立軟件交付的最佳實務<ref>{{cite book |last1=Bashan |first1=Shmuel |last2=Bellagio |first2= David E. |date=2011 |title=Work Item Management with IBM Rational ClearQuest and Jazz: A customization Guide  |publisher= IBM Press |isbn=978-0137001798}}</ref>{{how|date=January 2018}}。

==好處==
在軟體開發專案中，導入組建自動化的好處如下：
* 要進行持續整合和{{le|持續測試|continuous testing}}的必要條件
* 提昇產品品質
* 加速編譯和連結的處理
* 消除重複的任務
* 減少「不良的組建」
* 消除關鍵人員的相依性
* 建立組建歷史以及發佈歷史，在調查問題時更方便
* 因為上述的原因，可以節省時間和金錢<ref>{{cite web|url=http://www.denverjug.org/meetings/files/200410_automation.pdf |title=Archived copy |access-date=2008-09-19 |url-status=dead |archive-url=https://web.archive.org/web/20081123044304/http://www.denverjug.org/meetings/files/200410_automation.pdf |archive-date=2008-11-23 }}</ref>

==相關條目==
{{div col|colwidth=30em|content=
* {{le|應用程式發佈自動化|application-release automation}}（ARA）
* {{le|持續組態自動化|Continuous configuration automation}}（CCA）
* [[持續整合|持續整合]]（CI）
* [[持續交付|持續交付]]（CD）
* {{le|持續測試|continuous testing}}
* [[DevOps|DevOps]]
* {{le|Product family engineering}}
* {{le|發佈工程|Release engineering}}
* [[软件配置管理|软件配置管理]] (SCM)
* [[单元测试|单元测试]]
}}

== 參考資料 ==
{{reflist}}

{{DEFAULTSORT:Build Automation}}
[[Category:自动化构建|*]]