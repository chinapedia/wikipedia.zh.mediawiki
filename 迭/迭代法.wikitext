{{unreferenced|time=2017-05-28T06:57:31+00:00}}
{{NoteTA
|T=zh-hans:迭代法;zh-hant:疊代法;
|1=zh-hans:迭代;zh-hant:疊代;
|G1 = Math
}}

'''迭代法'''（{{lang-en|Iterative Method}}），在[[计算数学|计算数学]]中，'''迭代'''是通过从一个[[初始|初始]][[估计|估计]]出发寻找一系列[[近似解|近似解]]来解决问题（一般是解[[方程|方程]]或者[[方程组|方程组]]）的[[数学|数学]]过程，为实现这一过程所使用的方法统称。

跟迭代法相对应的是[[直接法|直接法]]（或者称为[[一次解法|一次解法]]），即一次性解决问题，例如通过开方解决方程<math>x^2=4</math>。一般如果可能，直接解法总是优先考虑的。但当遇到复杂问题时，特别是在未知量很多，方程为非线性时，我们无法找到直接解法（例如五次以及更高次的[[代数方程|代数方程]]没有[[解析解|解析解]]，参见[[阿贝尔定理|阿贝尔定理]]），这时候或许可以通过迭代法寻求方程（组）的近似解。

最常见的迭代法是[[牛顿法|牛顿法]]。其他还包括[[梯度下降法|梯度下降法]]、[[共轭迭代法|共轭迭代法]]、[[变尺度迭代法|变尺度迭代法]]、[[最小二乘法|最小二乘法]]、[[线性规划|线性规划]]、[[非线性规划|非线性规划]]、[[单纯型法|单纯型法]]、[[惩罚函数法|惩罚函数法]]、[[斜率投影法|斜率投影法]]、[[遗传算法|遗传算法]]、[[模拟退火|模拟退火]]等等。

== 线性系统 ==
求解线性方程系统的迭代方法主要分为两类，分别是定常迭代法和Krylov子空间法。

=== 定常迭代法 ===
这种方法易于推导，方便实现和分析，但只能保证某些特定形式矩阵求解的收敛性。定常迭代法的例子包括[[雅可比法|雅可比法]]，[[高斯-赛德尔迭代|高斯-赛德尔迭代]]，以及[[逐次超松弛迭代法|逐次超松弛迭代法]]（SOR）。线性定常迭代法又称为[[松弛法|松弛法]]。

=== Krylov子空间法 ===
通过在子空间上最小化余量来得到近似解。Krylov子空间法的原型是是[[共轭梯度法|共轭梯度法]]（CG），其它方法还包括[[广义最小残量法|广义最小残量法]]（GMRES）和[[双共轭梯度方法|双共轭梯度方法]]（BiCG）。

=== Krylov子空间法的收敛性 ===

== 参见 ==
*[[迭代|迭代]]
*[[迭代函数|迭代函数]]
*[[逼近|逼近]]
*[[数值分析|数值分析]]
==外部連結==

{{求根演算法}}
{{数学小作品}}

[[Category:数值分析|Category:数值分析]]