{{多個問題|
{{expand|time=2016-12-23T03:39:37+00:00}}
{{unreferenced|time=2016-05-10T01:41:54+00:00}}
{{copyedit|time=2016-05-10T01:41:54+00:00}}
}}
{{NoteTA
|G1 = IT
}}
{{图搜索算法}}
'''迭代深化深度优先搜索''' （iterative deepening depth-first search (IDS or IDDFS))）是对状态空间的搜索策略。它重复地运行一个有深度限制的[[深度优先搜索|深度优先搜索]]，每次运行结束后，它增加深度并迭代，直到找到目标状态。

IDDFS 与[[广度优先搜索|广度优先搜索]]有同样的时间复杂度，而空间复杂度远优。

IDDFS 第一次访问节点的累积顺序是广度优先的。

<br />

== 例子 ==
[[File:Graph.traversal.example.svg|链接=https://en.wikipedia.org/wiki/File:Graph.traversal.example.svg]]

走这张图

深度0

A，没了

深度1

ABCE，没了

深度2

A, B, D, F,

这时该往回走

C, G, E,完了， F（F撞了）

深度3

A, B, D, F, E, 

这时该往回走

C, G,完了， E, F, B（这三个撞了）

== 算法 ==
以下虛擬码展示了由递归地使用限制深度的 DFS (深度优先搜索) 算法来实现的 IDDFS 算法 (叫作 DLS).

 '''procedure''' IDDFS(root)
     '''for''' depth '''from''' 0 '''to''' ∞
         found ← DLS(root, depth)
         '''if''' found ≠ null
             '''return''' found
 
 '''procedure''' DLS(node, depth)
     '''if''' depth = 0 '''and''' node is a goal
         '''return''' node
     '''else if''' depth > 0
         '''foreach''' child of node
             found ← DLS(child, depth−1)
             '''if''' found ≠ null
                 '''return''' found
     '''return''' null

{{算法}}
[[Category:图算法|Category:图算法]]
[[Category:搜尋演算法|Category:搜尋演算法]]