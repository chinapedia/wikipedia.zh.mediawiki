{{Multiple issues|
{{Expand language|1=en|time=2021-11-29T02:37:50+00:00}}
{{Refimprove|time=2021-11-29T02:37:50+00:00}}
}}
{{NoteTA|G1=IT}}
'''拥塞控制'''是一种用来调整[[传输控制协议|传输控制协议]]（TCP）连接单次发送的分组数量（'''单次发送量'''，在英文文献和程序代码中常叫做cwnd）的算法。它通过增减单次发送量逐步调整，使之逼近当前网络的承载量。如果单次发送量为1，此协议就退化为[[混合式自動重送請求#.E5.81.9C.E7.AD.89.E5.8D.8F.E8.AE.AE|停等协议]]。单次发送量是以字节来做单位的；但是如果假设TCP每次传输都是按照[[最大报文段|最大报文段]]来发送数据的，那么也可以把数据包个数当作单次发送量的单位，所以有时我们说单次发送量增加1也就是增加相当于1个最大报文段的字节数。

== 算法 ==
拥塞控制假设[[分组|分组]]的丢失都是由网络繁忙造成的。拥塞控制有三种动作，分别对应主机感受到的情况：
# 收到一条'''新[[ACK|确认]]'''。这很好，表明当前的单次发送量小于网络的承载量。
# 收到三条对同一分组的确认，即'''三条重复的确认'''。单次发送量往往大于3，例如发送序号为<font color=red>0</font>、<font color=orange>10</font>、<font color=green>20</font>、<font color=blue>30</font>、<font color=Purple>40</font>的5条长度为10字节的分组，其中序号20的丢了，则返回的确认是<font color=red>10</font>、<font color=orange>20</font>、<font color=blue>20</font>、<font color=purple>20</font>。3个20就是重复的确认。
# 对某一条分组的确认迟迟未到，即'''超时'''。例如发送序号为<font color=red>0</font>、<font color=orange>10</font>、<font color=green>20</font>、<font color=blue>30</font>、<font color=Purple>40</font>的5条长度为10字节的分组，其中序号30的丢了，则返回的确认是<font color=red>10</font>、<font color=orange>20</font>、<font color=green>30</font>、<font color=purple>30</font>。这才只有两条重复确认。然而刚刚说过，单次发送量往往大于3，所以超时更可能是因为不止一条分组或确认丢失而引起的，这说明网络比上一情况中的更加繁忙。

当主机收到一条新确认，此时可以增加单次发送量。若当前单次发送量小于'''倍增阈限'''（在英文文献和程序代码中常叫做ssthresh），则单次发送量加倍（乘以2），即'''指数增长'''；否则单次发送量加1，即'''线性增长'''。

当主机收到三条重复的确认——单次发送量减半，倍增阈限等于单次发送量。（进入线性增长期）

当主机探测到超时——倍增阈限=单次发送量÷2，单次发送量=1。

== 参考 ==
{{cite book |title=《计算机网络——自顶向下方法与Internet特色》 |url=https://archive.org/details/jisuanjiwanglaoz0000meik |year=2006 |publisher=机械工业出版社|isbn=978-7-111--16505-7 }}


[[Category:传输层协议|Category:传输层协议]]
[[Category:技术问题|Category:技术问题]]
[[Category:封包|Category:封包]]