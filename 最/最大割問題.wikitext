[[File:Max-cut.svg|右]]
最大割問題（{{lang-en|Maximum Cut}}）是 [[NP完备|NP完备]] 问题。給定一張[[cmn:图_(数学)|圖]]，求一種分割方法，將所有[[顶点_(图论)|頂點]]（{{lang|en|Vertex}}）分割成两群，同时使得被切斷的邊（{{lang|en|Edge}}）數量最大。

此問題還有另一個變形的版本：每條邊上有各自的權重，要使得被切斷的邊的權重之和最大。

== 多項式時間的演算法 ==
雖然最大割問題是 NP-hard 問題，但如果[[cmn:图_(数学)|圖]]本身滿足一些條件之下，是存在多項式時間的演算法的。

=== 圖沒有正邊時（權重都是負的）===
可以將圖中所有邊都變號（乘上-1），將最大割問題轉成{{tsl|en|Minimum_cut|最小割問題}}。再使用{{tsl|en|Karger's_algorithm|Karger's algorithm}}求解

===圖是平面圖（planar graphs）時===
[http://epubs.siam.org/doi/abs/10.1137/0204019 Hadlock在1975提出一個演算法]，可將最大割問題轉化成[[郵遞員問題|郵遞員問題]]求解。

== 近似演算法 ==
由於 max cut 的問題屬 於 NP-hard 問題，為了確保其效率，Nguyen 等人提出了一套根據 [[最小生成树|Maximum Spanning Tree]](MST)的演算法<ref>{{Cite web|url=http://bigwww.epfl.ch/publications/nguyen1501.pdf|title=Downsampling of Signals on Graphs Via Maximum Spanning Trees|accessdate=2016-07-01|author=Ha Q. Nguyen and Minh N. Do, Fellow, IEEE|date=2015-01-01|publisher=|archive-date=2018-07-21|archive-url=https://web.archive.org/web/20180721040340/http://bigwww.epfl.ch/publications/nguyen1501.pdf|dead-url=no}}</ref>來處理，不過使用 MST 大多只能找到相對平均高的切割數，而非真正的最大切割數。

== 應用 ==

=== 壓縮圖訊號（Compress Graph Signals）===
定義在[[圖_(數學)|圖]]（{{lang|en|Graph}}）上的資料，因為圖的連結方法可以十分的複雜以及不規則，使得要處理這樣的一種資料時，不像傳統的 1-D 或 2-D 訊號的結構固定，必須根據其圖的結構，進而分析其資料。一種方法是將任意的圖轉換為二分圖（[[cmn:二分图|Bipartite Graph]]）<ref>{{Cite web|url=http://ieeexplore.ieee.org/xpl/login.jsp?tp=&arnumber=5947281&url=http%3A%2F%2Fieeexplore.ieee.org%2Fxpls%2Fabs_all.jsp%3Farnumber%3D5947281|title=Downsampling graphs using spectral theory|accessdate=2016-07-01|author=|date=|publisher=}}</ref>,而後有人<ref>{{Cite web|url=http://ieeexplore.ieee.org/xpl/login.jsp?tp=&arnumber=5651072&url=http%3A%2F%2Fieeexplore.ieee.org%2Fxpls%2Fabs_all.jsp%3Farnumber%3D5651072|title=Local two-channel critically sampled filter-banks on graphs|accessdate=2016-07-01|author=|date=|publisher=}}</ref>提出了證明，如果可以在轉換後保留越多的邊（Edges），這二分圖就與原先的圖性質越相近。如果可以解決最大割問題，就能使得二分圖與原始圖性質變相近。

=== 通孔最小化問題（Via Minimization Problem）===

=== 理論物理學（Theoretical Physics）===

=== 二次最佳化（Optimization）===

== 引用 ==
{{reflist}}

== 外部連結 ==
*[http://link.springer.com/article/10.1007%2FBF02115753 Quadratic 0–1 Optimization] {{Wayback|url=http://link.springer.com/article/10.1007%2FBF02115753 |date=20181127021455 }}


[[Category:组合优化|Category:组合优化]]
[[Category:NP完全问题|Category:NP完全问题]]