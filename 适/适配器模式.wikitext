{{Unreferenced|time=2020-07-02T02:04:11+00:00}}
{{noteTA|G1=IT
|1=zh-cn:类; zh-tw:類別;
|2=zh-cn:类型; zh-tw:類型;
}}
在[[设计模式_(计算机)|設計模式]]中，'''适配器模式'''（英語：adapter pattern）有时候也称包装样式或者包装（{{lang-en|wrapper}}）。将一个[[类_(计算机科学)|类]]的接口轉接成用户所期待的。一个适配使得因接口不兼容而不能在一起工作的类能在一起工作，做法是将类自己的接口包裹在一个已存在的类中。

== 结构 ==
有两种类型的适配器模式：

=== 对象适配器模式 ===
在这种适配器模式中，适配器容纳一个它包裹的类的实例。在这种情况下，适配器调用被包裹对象的物理实体。

[[File:ObjectAdapter.png|thumb]]表示的对象适配器模式。 The adaptor ''hides'' the adaptee's interface from the client.]]
[[File:Adapter(Object)_pattern_in_LePUS3.png|thumb]]

=== 类适配器模式 ===
这种适配器模式下，适配器继承自己实现的类（一般多重继承）。

[[File:ClassAdapter.png|thumb]] 
<!--
[[File:Adapter(Class)_pattern_in_LePUS3.png|thumb]]]]
-->


{{软件设计模式}}
[[Category:軟體設計模式|Category:軟體設計模式]]