{{Rough translation}}
{{noteTA
|G1 = IT
}}
{{Infobox file format
| name = 可擴展標記語言
| icon = 
| logo =
| screenshot = [[File:XML.svg|200px]]
| _nomimecode = on
| extension = .xml
| mime = {{ublist |<code>application/xml</code> |<code>text/xml</code>{{lower|0.2em|<ref>{{cite web |url=http://www.rfc-editor.org/rfc/rfc7303.txt |title=XML Media Types, RFC 7303 |publisher=Internet Engineering Task Force |date=July 2014 |access-date=2016-07-06 |archive-date=2022-04-18 |archive-url=https://web.archive.org/web/20220418065026/https://www.rfc-editor.org/rfc/rfc7303.txt }}</ref>}} }}
| type code =
| uniform type = public.xml
| conforms to = public.text
| magic =
| owner = {{nowrap|[[万维网联盟|万维网联盟]]}}
| genre = [[标记语言|标记语言]]
| container for = 
| contained_by =
| extended from = [[SGML|SGML]]
| extended to = {{hlist|list_style=line-height:1.35em; |[[XHTML|XHTML]] |[[RSS|RSS]] |[[Atom_(标准)|Atom]] |[[KML|KML]]}}
| standard =
      {{Unbulleted list |item_style=padding:0.1em 0;line-height:1.2em;<!--(longitem)-->
       | [http://www.w3.org/TR/2008/REC-xml-20081126/ 1.0（第五版）]<br />{{nowrap|{{smaller|({{release date and age|2008|11|26}})}}}}
       | [http://www.w3.org/TR/2006/REC-xml11-20060816/ 1.1（第二版）]<br />{{nowrap|{{smaller|({{release date and age|2006|08|16}})}}}}
      }}
|free = 是
}}

'''可扩展标记语言'''（{{lang-en|E'''x'''tensible '''M'''arkup '''L'''anguage}}，简称：{{lang|en|'''XML'''}}）是一种[[标记语言|标记语言]]。XML是从[[标准通用标记语言|标准通用标记语言]]（SGML）中简化修改出来的。它主要用到的有可扩展标记语言、[[可扩展样式语言|可扩展样式语言]]（XSL）、[[XBRL|XBRL]]和[[XPath|XPath]]等。

== 历史 ==

1960年代，IBM開始發展的'''[[通用标记语言|GML]]'''（{{lang|en|'''G'''eneralized '''M'''arkup '''L'''anguage}}）。

GML的重要概念：
* 文件中能夠明確的將標示與內容分開
* 所有文件的標示使用方法均一致

1978年，[[ANSI|ANSI]]將GML加以整理規範，發佈成為SGML（{{lang|en|The '''S'''tandard '''G'''eneralized '''M'''arkup '''L'''anguage}}）。1986年，XML的前身起為[[ISO|ISO]] 8879，当时被廣泛地運用在各種大型的文件計劃中，但是SGML是一種非常嚴謹的文件描述法，導致過於龐大複雜，其標準手冊就有500多頁，这使它難以理解和學習，進而影響了推廣與應用。

同時W3C也發現到HTML的問題：
* 不能解決所有解釋資料的問題 - 像是影音檔或化學公式、音樂符號等其他形態的內容。
* 效能問題 - 需要下載整份文件，才能開始搜尋文件中的内容。
* 擴充性、彈性、易讀性均不佳。

為了解決以上問題，專家們使用SGML精簡製作，並依照HTML的發展經驗，產生出一套使用上規則嚴謹，但是簡單的描述資料語言：XML。XML從1995年開始有其雛形，並向[[W3C|W3C]]（[[全球資訊網聯盟|全球資訊網聯盟]]）提案，而在1998年二月發佈為W3C的標準（XML1.0）XML是在一個這樣的背景下誕生的——為了有一個更中立的方式，讓客戶端自行決定要如何消化、呈現從服務端所提供的資訊。

XML被廣泛用來作為跨平台之間交互數據的形式，主要針對數據的內容，通過不同的格式化描述手段（XSLT，CSS等）可以完成最終的形式表達（生成對應的HTML，PDF或者其他的文件格式）。

== 用途 ==

[[File:RecipeBook_XML_Example.svg|右]], [[Portable_Document_Format|PDF]]以及[[Rich_Text_Format|Rich Text Format]]並使用[[程式語言|程式語言]]或[[可擴充套件樣式語言|XSL]]。]]

XML设计是用来传送和携带数据信息，不用于表现和展示数据，[[HTML|HTML]]則用来表现数据，所以XML用途的焦点是在于说明数据是什么以及携带数据信息。

* 富文档（Rich Documents）- 自定文件描述并使其更丰富
** 属于文件为主的XML技术应用
** 标记是用来定义一份资料应该如何呈现
* 元数据（Metadata）- 描述其它文件或网络资讯
** 属于资料为主的XML技术应用
** 标记是用来说明一份资料的意义
* 配置文档（Configuration Files）- 描述软件設定的参数
== 重要术语 ==

=== 字符（characters） ===
XML 1.0规范允许的（转义后的最终解码值）合法字符： #x9（水平制表符）、#xA（回车符）、#xD（换行符）、#x20-#xD7FF、#xE000-#xFFFD、#x10000-#x10FFFF。即任何Unicode字符，不包含surrogate blocks, FFFE,  FFFF。

XML规范定义了5个"预定义实体"来表示特殊字符. XML也允许在每个文档定义任意数量的其它命名实体.

下表列出了5个XML预定义实体. 通过名字引用这些实体的格式为<code>&name;</code>，例如, <code>&amp;</code> 将绘制为&. 

{| class="wikitable"
|- style="background: #efefef;"
! 名字
! 字符
! Unicode[[码位|码位]](十进制)
! 标准
! 描述
|-
| quot
| "
| U+0022 (34)
| XML 1.0
| [[双引号|双引号]]
|-
| amp
| &
| U+0026 (38)
| XML 1.0
| [[&|&]]
|-
| apos
| '
| U+0027 (39)
| XML 1.0
| [[撇号|撇号]]
|-
| lt
| <
| U+003C (60)
| XML 1.0
| [[小于号|小于号]]
|-
| gt
| >
| U+003E (62)
| XML 1.0
| [[大于号|大于号]]
|}

=== 處理器（Processor）與应用（application） ===
XML处理器（Processor，也称作XML parser）分析标记语言并传递结构化信息给应用（application）。

=== 标记（Markup）与内容（content） ===
XML文档的字符分为标记（Markup）与内容（content）两类。标记通常以<code><</code>开头，以<code>></code>结尾；或者以字符<code>&</code> 开头，以<code>;</code>结尾。不是标记的字符就是内容。但是[[CDATA|CDATA]]部分，分解符号<code><![CDATA[</code>与<code>]]></code>是标记，二者之间的文本为内容。 最外界的空白符是标记。

=== 標籤（Tag） ===
一个''tag''属于标记结构，以<code><</code>开头，以<code>></code>结尾。Tag名字是大小写敏感，不能包括任何字符 !"#$%&'()*+,/;<=>?@[\]^`{|}~， 也不能有空格符， 不能以"-"或"."或数字开始。可分为三类：
:* ''start-tag''，如<code><section></code>;
:* ''end-tag''，如<code></section></code>;
:* ''empty-element tag''，如<code><line-break /></code>.

=== 元素（Element） ===
元素是文档逻辑组成，或者在start-tag与匹配的end-tag之间，或者仅作为一个empty-element tag。例如：<code><greeting>Hello, world!</greeting></code>. 另一个例子是： <code><line-break /></code>.

单个根（root）元素包含所有的其他元素。
=== 属性（Attribute） ===
属性是一种标记结构，在start-tag或empty-element tag内部的“名字-值对”。例如：<code><img src="madonna.jpg" alt="Madonna" /></code>。每个元素中，一个属性最多出现一次，一个属性只能有一个值。

如果属性有多个值，这需要采取XML协议以外的方式来表示，如采用逗号或分号间隔，对于[[CSS|CSS]]类或标识符的名字可用空格来分隔。 

=== XML 声明（declaration） ===
XML文档如果以''XML declaration''开始，则表述了文档的一些信息。如<code><?xml version="1.0" encoding="UTF-8"?></code>.

== 例 ==
XML定义结构、存储信息、传送信息。下例為小张发送给大元的便条，存储为XML。
<syntaxhighlight lang="xml" line="1">
<?xml version="1.0"?>
  <小纸条>
    <收件人>大元</收件人>
    <發件人>小張</發件人>
    <主題>問候</主題>
    <具體內容>早啊，飯吃了沒？ </具體內容>
  </小纸条>
</syntaxhighlight>
这XML文档仅是纯粹的信息标签，这些标签意义的展开依赖于应用它的程序。

=== 结构 ===

每个XML文档都由XML声明开始，在上面的代码中的第一行就是XML声明，<?xml version="1.0"?>。这一行代码会告诉解析器或浏览器，这个文件应该按照XML规则进行解析。

但是，根元素到底叫<小纸条>还是<小便条>，则是由[[文档类型定义|文档类型定义]]（DTD）或[[XML_Schema|XML纲要]]（XML Schema）定义的。如果DTD规定根元素必须叫<小便条>，那么若写作<小纸条>就不符合要求。这种不符合DTD或XML纲要的要求的XML文档，被称作'''不合法的XML'''，反之则是'''合法的XML'''。

XML文件的第二行并不一定要包含文档元素；如果有注释或者其他内容，文档元素可以迟些出现。

最常見的PI（processing instruction,像XML序言, 卻是不同類型的語法）是用來指定XML文件的樣式表, 这个PI一般会直接放在XML序言之后，通常由Web浏览器使用，来将XML数据以特殊的样式显示出来。

XML的结构有一个缺陷，那就是不支持分帧（framing）。当多条XML消息在TCP上传输的时候，无法基于XML协议来确定一条XML消息是否已经结束。

== 参考文献 ==
{{Reflist}}

== 延伸閱讀 ==
{{refbegin}}
* Annex A of ISO 8879:1986 (SGML)
* {{cite journal|ssrn=900616|author=Lawrence A. Cunningham|title=Language, Deals and Standards: The Future of XML Contracts|journal=Washington University Law Review|year=2005}}
* {{cite journal |last1=Bosak |first1=Jon |first2=Tim |last2=Bray |title=XML and the Second-Generation Web |journal=Scientific American |date=May 1999 |url=http://www.scientificamerican.com/article.cfm?id=xml-and-the-second-genera |archive-url=https://web.archive.org/web/20091001200447/http://www.scientificamerican.com/article.cfm?id=xml-and-the-second-genera |archive-date=2009-10-01 |access-date=2018-01-19 |dead-url=no }}
* {{cite web|url=http://www.developer.com/xml/article.php/10929_3583081_1|title=Making Mistakes with XML|last=Kelly|first=Sean|date=2006-02-06|work=Developer.com|accessdate=2010-10-26|archive-date=2013-01-02|archive-url=https://archive.today/20130102101245/http://www.developer.com/xml/article.php/10929_3583081_1}}
* {{cite web|url=http://www.oreillynet.com/xml/blog/2003/02/five_years_later_xml.html|title=Five years later, XML..|last=St. Laurent|first=Simon|date=2003-02-12|work=O'Reilly XML Blog|publisher=[[O'Reilly_Media|O'Reilly Media]]|accessdate=2010-10-26|archive-date=2013-12-03|archive-url=https://web.archive.org/web/20131203032545/http://www.oreillynet.com/xml/blog/2003/02/five_years_later_xml.html}}
* {{cite web|url=http://www.w3.org/2008/02/xml10-pressrelease|title=W3C XML is Ten!|date=2008-02-12|publisher=[[World_Wide_Web_Consortium|World Wide Web Consortium]]|accessdate=2010-10-26|archive-date=2022-02-12|archive-url=https://web.archive.org/web/20220212215424/https://www.w3.org/2008/02/xml10-pressrelease}}
* {{cite web |url=http://wam.inrialpes.fr/courses/PG-MoSIG12/xml.pdf |title=Introduction to XML |date=October 2012 |work=Course Slides |publisher=[[Pierre_Geneves|Pierre Geneves]] |archiveurl=https://web.archive.org/web/20151016053704/http://wam.inrialpes.fr/courses/PG-MoSIG12/xml.pdf |archivedate=2015-10-16 |df= |accessdate=2018-01-19 |dead-url=no }}
{{refend}}

== 外部链接 ==
* [https://web.archive.org/web/20060501114434/http://xml.ascc.net/zh/utf-8/gloss.html XML及SGML名词英汉翻译表] {{zh-tw}}
* [https://quackertools.ambrosesoft.com/zh/xml XML格式化工具 (中文)] {{Wayback|url=https://quackertools.ambrosesoft.com/zh/xml |date=20210815025118 }}
* [https://codebeautify.org/xmlvalidator XML验证器] {{Wayback|url=https://codebeautify.org/xmlvalidator |date=20220418065110 }} {{en}}
* [https://jsonformatter.pro/cn/xml-formatter XML在线格式化工具]{{Dead link|date=2019年11月 |bot=InternetArchiveBot |fix-attempted=yes }} {{zh}}

== 参见 ==
* [[XHTML|XHTML]]
* [[文件类型描述|DTD]]
* [[XML_Schema|XML Schema]]
* [[XLink|XLink]]
* [[SVG|SVG]]
* [[XSLT|XSLT]]
* [[X3D|X3D]]
* [[HTML|HTML]]
* [[CSS|CSS]]
* [[資源描述框架|RDF]]
* [[RSS|RSS]]
** [[Unicode|Unicode]]
* [[MXML|MXML]]
{{-}}

{{W3C规范和标准}}
{{Data Exchange}}
{{网页浏览器}}
{{网页技术与标准}}

{{Authority control}}

[[Category:XML|]]
[[Category:W3C标准|Category:W3C标准]]
[[Category:文件格式|Category:文件格式]]
[[Category:标记语言|Category:标记语言]]
[[Category:数据序列化格式|Category:数据序列化格式]]
[[Category:带有代码示例的条目|Category:带有代码示例的条目]]