{{noteTA
|G1=IT
}}
{{lowercase}}
'''x86-64'''（又稱'''x64'''，即英文詞'''64'''-bit e'''x'''tended，64位元拓展的簡寫）是一個[[中央处理器|處理器]]的[[指令集架構|指令集架構]]，基於[[x86|x86]][[指令集架構|架構]]的[[64位|64位]]拓展，[[向后相容|向后相容]]於[[16位|16位]]及[[32位|32位]]的x86架構。x64於1999年由[[AMD|AMD]]設計，AMD首次公開64位元集以擴充給x86，稱為「'''AMD64'''」。其後也為[[英特爾|英特爾]]所採用，現時英特爾稱之為「'''Intel 64'''」，在之前曾使用過「Clackamas Technology」 (CT)、「IA-32e」及「EM64T」。

[[蘋果公司|蘋果公司]]和[[RPM套件管理員|RPM套件管理員]]以「x86-64」或「x86_64」稱呼此64位架構。[[甲骨文公司|甲骨文公司]]及[[Microsoft|Microsoft]]稱之為「x64」。[[BSD|BSD]]家族及其他[[Linux發行版|Linux發行版]]則使用「amd64」，32位元版本則稱為「i386」（或 i486/586/686），[[Arch_Linux|Arch Linux]]及其衍生发行版用x86_64稱呼此64位元架構。

== AMD64 ==
[[File:Logo_AMD64.svg|thumb]]
'''AMD64'''指令集被應用在[[Athlon_64|Athlon 64]]、[[Athlon_64_FX|Athlon 64 FX]]、[[Athlon_64_X2|Athlon 64 X2]]、[[Turion_64|Turion 64]]、[[Turion_64_X2|Turion 64 X2]]、[[Opteron|Opteron]]、[[Sempron|Sempron]]、[[Phenom|Phenom]]、[[Athlon_II|Athlon II]]、[[Phenom_II|Phenom II]]、[[AMD_APU|AMD APU]]、[[AMD_FX|AMD FX]]、[[AMD_Ryzen|AMD Ryzen]]、[[AMD_Epyc|AMD Epyc]]等處理器上。

=== 架構特色 ===
在x86-64出現以前，英特爾與[[惠普|惠普]]聯合設計出[[IA-64|IA-64]]架構；惟IA-64並不與x86兼容，且市場反應較冷淡，同時受制於多個[[專利權|專利權]]，使其他廠商不能模仿，規模沒有很大。與x86兼容的AMD64架構便應運而生，其主要特點如名稱所述，既有支援64位通用[[暫存器|暫存器]]、64位整數及邏輯運算、以及64位[[虛擬位址|虛擬位址]]，設計人員又為架構作出不少改進，部份重大改變如下：

*新增暫存器
*地址闊度加長
* [[SSE|SSE2]]、[[SSE|SSE3]]指令
*[[NX位元|NX位元]]：AMD64其中一個特色是擁有「禁止執行」（No-Execute）的位元，可在一定程度上防止[[蠕虫病毒|蠕蟲病毒]]以[[緩衝區溢位|緩衝區溢位]]的方式來進行攻擊。

=== 市場分析 ===
AMD64代表AMD放棄了跟隨Intel標準的一貫作風，選擇了像把16位的[[Intel_8086|Intel 8086]]擴充成32位的[[80386|80386]]般，去把[[x86|x86]]架構擴充成64位版本，且兼容原有標準，沒想到比Intel自己發表的64位元架構還要被認同。因為AMD64架構在[[IA-32|IA-32]]上新增了64位暫存器，並兼容早期的16位和32位軟件，可使現有以x86為對象的[[編譯器|編譯器]]容易轉為AMD64版本。除此之外，[[NX_bit|NX bit]]也是引人注目的特色之一。

不少人認為，像[[DEC_Alpha|DEC Alpha]]般的64位[[RISC|RISC]]晶片，最終會取代現有過時及多變的[[x86|x86]]架構。但事實上，為x86系統而設的應用軟件實在太龐大，成為Alpha不能取代x86的主要原因，AMD64能有效地把[[x86|x86]]架構移至64位的環境，並且能兼容原有的x86應用程式，顯然得到了多數開發者的歡迎。

== Intel 64 ==
'''Intel 64'''指令集被應用於[[Pentium_4|Pentium 4]]、[[Pentium_D|Pentium D]]、[[Pentium_Extreme_Edition|Pentium Extreme Edition]]、[[Celeron|Celeron]]、[[Xeon|Xeon]]、[[Pentium_Dual-Core|Pentium Dual-Core]]、[[Intel_Core_2|Intel Core 2]]、[[Intel_Core_i3|Intel Core i3]]、[[Intel_Core_i5|Intel Core i5]]、[[Intel_Core_i7|Intel Core i7]]及[[Intel_Core_i9|Intel Core i9]]處理器上。

=== 概要 ===
Intel 64計劃的歷史可謂相當長及複雜，其原因主要是因為Intel自身的內政問題。該計劃開始時，其代號為「Yamhill」，不過Intel一直對外宣稱其計劃不存在；至2004年初，Intel才改口承認，並把代號改為CT（Clackamas Technology）。在宣佈CT計劃的數個星期內，Intel為計劃給予多個新名稱。在2004年春季的[[Intel開發者論壇|Intel開發者論壇]]後，Intel將之命名為「IA-32E」，意即[[IA-32|IA-32]]的延伸；在數星期後，才改稱為EM64T。

Intel曾長時間把該計劃保持機密，其原因有以下兩點。第一，Intel不想給客戶混淆信息，把未來Itanium [[IA-64|IA-64]]處理器的展望與x86混為一談；但在Intel眼見使用AMD64的Opteron及Athlon 64取得成功，便需要對競爭者的威脅作出迎擊。而第二個原因，是Intel為了自身的面子，必然不會承認使用了對手AMD的技術，因此Intel把該技術以EM64T這個名字來推出，雖然核心與AMD64幾乎相同，猶如一對孿生兄弟，但如果Intel使用了AMD64這名字，等於在幫對手做廣告宣傳。在以往Intel的行銷中，Intel總把AMD的產品貶為自家技術的[[仿製品|仿製品]]；不過這回AMD率先開發民用64位元技術，Intel需要反過來吸納AMD的技術，使Intel在研發x86處理器技術的領導地位受到重挫，因此Intel在造勢方面便需要使用更多的人力物力。Intel主席{{link-en|Craig Barrett|Craig Barrett (chief executive)}}之後也承認，在[[保密|保密]]方面，這個機密算是保護得最差的。

在Intel 64（EM64T）的文件中，對於其指令集的起源隻字不提；因此有媒體為它起了「iAMD64」這個別名，諷刺Intel在迎擊AMD的民用64位元技術上，使用了AMD的技術，直接把AMD64吸納過來，並以新名重新包裝使用。後來Intel索性將此技術正式命名為'''Intel 64'''。

=== 架構特色 ===
Intel 64可使處理器直接存取超過4GB的記憶體，容許執行更大的應用程式。而'''x86-64'''架構也加入了額外的暫存器及其他改良在指令集上。透過64位的記憶體位址上限，其理論記憶體大小上限達16,777,216TB（16EB），不過在初期的應用上並未能支援完整的64位地址。

Intel在之前已在[[Itanium|Itanium]]處理器上使用了自家的64位[[IA-64|IA-64]]技術，雖然說Intel 64也是64位元，但兩者並不兼容，即IA-64的軟件不能直接在Intel 64上執行。Intel 64所用的x86-64是IA-32指令集的延伸，而IA-64則是另一款獨立的架構，沒有任何IA-32的影子。雖然IA-64可透過模擬來執行IA-32的指令，但指令在執行前需經轉換，才能在IA-64上執行，導致其速度變慢。由於x86-64是從IA-32衍生而來，因此執行IA-32與64位程式的表現也顯得綽綽有餘。

首顆使用Intel 64技術的處理器屬於[[Xeon|Xeon]]型號，支援雙處理器，其核心名稱為Nocona。由於Xeon是直接建基於桌上型[[Pentium_4|Pentium 4]]的架構上，因此Pentium 4主機板也可使用Intel 64，如使用[[超執行緒|超執行緒]]（Hyper-Threading）等。不過Intel 64在初期的Prescott版本尚未啟用，其原因大概是當時其尚未完善。在使用Prescott核心E0更新版本的Pentium 4處理器已可使用Intel 64，被稱為Pentium 4 F。再者，E0更新版本加入了「禁止執行」位元，稱為XD bit（eXecute Disable），相當於AMD64的[[NX_bit|NX bit]]。

== VIA x86-64  ==
[[VIA|VIA]]在[[Centaur|Centaur]]研发部门五年的研发后，发布了其第一款x86-64改进架构<ref>{{cite web |title= VIA to launch new processor architecture in 1Q08 |publisher= [[DigiTimes|DigiTimes]] |url= http://www.digitimes.com/news/a20070725PD206.html |accessdate= 2007-07-25 |format= subscription required |archive-date= 2008-12-03 |archive-url= https://web.archive.org/web/20081203201340/http://www.digitimes.com/news/a20070725PD206.html }}</ref>，微架构研发代号"Isaiah", 而64位微架构于2008年1月24日首次展示<ref>{{cite web|title       = Isaiah revealed: VIA's new low-power architecture|publisher       = Ars Technica|url       = https://arstechnica.com/articles/paedia/cpu/via-cpu-isaiah.ars|accessdate       = 2008-01-24|first       = Jon|last       = Stokes|date       = 2008-01-23|archive-date       = 2008-01-27|archive-url       = https://web.archive.org/web/20080127095807/http://arstechnica.com/articles/paedia/cpu/via-cpu-isaiah.ars}}</ref>，并在5月29日以[[VIA_Nano|VIA Nano]]品牌发布产品。<ref>{{cite press release
 |title        = VIA Launches VIA Nano Processor Family
 |publisher    = [[VIA_Technologies|VIA]]
 |url          = http://www.viatech.com/en/2008/05/via-launches-via-nano-processor-family/
 |accessdate   = May 25, 2017
 |date         = May 29, 2008
 |archive-date = 2019-02-03
 |archive-url  = https://web.archive.org/web/20190203072901/https://www.viatech.com/en/2008/05/via-launches-via-nano-processor-family/
}}</ref>

该处理器支持一类VIA专为提高低功率应用情景下的效率而研发的x86扩展指令集。
Isaiah微架构预计与前一代架构[[Esther|Esther]]相比，同[[时钟频率|时钟频率]]下，在整数运算表现上会有两倍提性能提升升， [[浮点|浮点]]运算上会有四倍性能提升。而在功耗上，处理器 [[TDP|TDP]]设置为5 W到 25 W。<ref>{{cite web
 |publisher   = [[VIA_Technologies|VIA]]
 |url         = http://www.via.com.tw/en/downloads/presentations/processors/pb_via-isaiah_080124.pdf
 |title       = VIA Isaiah Architecture Introduction
 |format      = PDF
 |accessdate  = 2013-07-31
 |date        = 2008-01-23
 |dead-url    = yes
 |archiveurl  = https://web.archive.org/web/20080907181213/http://www.via.com.tw/en/downloads/presentations/processors/pb_via-isaiah_080124.pdf
 |archivedate = 2008-09-07
 }}</ref>
此外，对于前代产品 [[VIA_C7|VIA C7]]系列尚不支持的[[x86虚拟化|x86虚拟化]]技术,该架构也作了支持，同时也保留了加密扩展。

== 虛擬地址空間的細節 ==
儘管虛擬地址有64位的寬度，但-{zh-cn:目前; zh-hans:當前; zh-tw:目前}-的實現機制（以及任何已知處在計劃階段的芯片）并不允許整個16EB的虛擬地址空間都被使用。大多數的-{zh-hans:操作系统; zh-tw:作業系統}-和應用程序在可見的未來都用不到如此巨大的地址空間（比如，Windows在AMD64上的實現僅應用了256TB，即48位的寬度），所以實現如此巨大的地址寬度只會增加系統的複雜度和地址轉換的成本，帶不來任何好處。AMD因此決定，在對這一架構的首次實現中，-{只}-有虛擬地址的最低48位才會在地址轉換（頁表查詢）時被使用。但是，任何虛擬地址的48位至63位必須與47位一致（按照[[符號位擴展|符號位擴展]]的方式），否則處理器將會報告一個異常。符合這一規則的地址被稱作“傳統格式”。傳統格式將從0至00007FFF`FFFFFFFF，以及從FFFF8000`00000000至FFFFFFFF`FFFFFFFF總計256TB的地址範圍作為可以使用的虛擬地址空間。

這種“古怪”的規則為日後擴展到真正的64位尋址保留了一個重要的特性：很多的-{zh-hans:操作系统; zh-tw:作業系統}-（包括但不限於Windows NT系列）將地址空間的高半部分（被稱作內核空間）留給自己，将低半部分（用戶空間）留給應用程序代碼、用戶態棧、堆和其他數據區。這種“傳統地址”的設計保證了每一個符合AMD64的實現都擁有兩個內存片段：低半段從00000000`00000000開始，隨著更多的虛擬地址位元變得可用而“向上生長”；高半部分被“懸掛”在地址空間的頂部而“向下生長”。同樣，將未被使用的地址位元內容固定下來防止被-{zh-hans:操作系统; zh-tw:作業系統}-用作標誌位、特權級標號等其他用途，是爲了避免當架構擴展至52, 56, 60和64位的時候出現問題。

{| align="center" class="wikitable" style="text-align:center"
|-
| -{zh-cn:目前; zh-hans:當前; zh-tw:目前}-48位的實現方式
[[File:AMD64-canonical--48-bit.svg|File:AMD64-canonical--48-bit.svg]]
| 57位的實現方式
[[File:AMD64-canonical--57-bit.svg|File:AMD64-canonical--57-bit.svg]]
| 完全64位的實現方式
[[File:AMD64-canonical--64-bit.svg|File:AMD64-canonical--64-bit.svg]]
|-
| colspan="3" |（非按比例繪製）
|}

64位尋址模式（[[長模式|長模式]]），是[[物理地址擴展|物理地址擴展]]（PAE）的超集；因此，-{zh-cn:内存页; zh-hans:內存頁; zh-tw:記憶體分頁}-大小可以是4KB，2MB，或1GB。但是，與系統在PAE模式下使用的三級[[分頁表|分頁表]]機制不同，[[長模式|長模式]]下系統使用四級[[分頁表|分頁表]]：PAE的頁目錄指針表的表項從4個擴展到了512個，而且附加了一個第四級頁面映射表（Page-Map Level 4 Table，PML4 Table），包含512個采用48位實現的表項。整個48位地址空間的4KB頁面完整映射層級將會占據略多於512GB的-{zh-hans:内存; zh-tw:記憶體}-（256TB虛擬地址空間的0.196%）。在提供更大虛擬地址的實現中，這個表被一個更高的映射层級所映射，即第五级页面映射表（PML5<ref>{{Cite web |url=https://software.intel.com/sites/default/files/managed/2b/80/5-level_paging_white_paper.pdf |title=存档副本 |access-date=2018-05-05 |archive-date=2018-12-05 |archive-url=https://web.archive.org/web/20181205041235/https://software.intel.com/sites/default/files/managed/2b/80/5-level_paging_white_paper.pdf }}</ref>），可以提供52位物理地址（4PiB）和57位虚拟地址（128PiB）的实现。

== 运行模式 ==
{| class="wikitable"
|- bgcolor="#cccccc"
! colspan="2" | 运行模式
! [[操作系统|操作系统]]要求
! 已编译程序重新构建
! 默认地址长度（位元）
! 默认操作數长度（位元）
! 寄存器扩展
! 典型[[通用寄存器|通用寄存器]]宽度（位元）
|- align="center"
| rowspan="3" | [[长模式|长模式]]<br />（IA-32e）
| 64位元模式
| 64位元
| style="background: #ffdddd" | {{{1|需要}}}
| 64
| rowspan="2" |32
| style="background: #ddffdd" | {{{1|可用}}}
| 64
|- align="center"
| rowspan="2" | 兼容模式
| rowspan="2" | 64位元(拓展)
| rowspan="2" style="background: #ddffdd" | {{{1|不需要}}}
| 32
| rowspan="2" style="background: #ffdddd" | {{{1|不可用}}}
| rowspan="3" | 32
|- align="center"
| colspan="2" | 16
|- align="center"
| rowspan="4" | 遺留模式
| rowspan="2" | [[保护模式|保护模式]]
| 遺留32位元
| rowspan="4" style="background: #ddffdd" | {{{1|不需要}}}
| colspan="2" | 32
| rowspan="4" style="background: #ffdddd" | {{{1|不可用}}}
|- align="center"
| 遺留16位元
| colspan="2" rowspan="3" |16
| 16 或 32
|- align="center"
| [[虚拟8086模式|虚拟8086模式]]
| 遺留32位元
| 16
|- align="center"
| [[真实模式|真实模式]]
| 遺留16位
| 16 或 32
|}

== 作業系統支援 ==
以下作業系統均支援[[長模式|長模式]]（long mode）的x86-64架構。

=== DOS ===
在[[DOS|DOS]]環境下可透過DOS Extender（例如[[DOS4GW|DOS4GW]]）來進入保護模式。

=== FreeBSD ===
[[FreeBSD|FreeBSD]]在5.1正式版曾為x86-64作試驗，至6.0正式版解決了在x86-64執行32位程式出現的一些問題，以及能支援不少驅動程式。

=== Linux ===
[[Linux|Linux]]在2.6版本的內核開始加入長模式，支援x86-64，能兼容32位程式及模擬32位系統，容許在32位的環境下，把程式編譯為64位版本。

=== macOS ===
[[Mac_OS_X_v10.6|Mac OS X 10.6 ''Snow Leopard'']]开始提供64位[[内核|内核]]，并可以在[[Mac_OS_X_Snow_Leopard#64位构架|部分处理器]]上打开64位内核。64位内核只支持64位的[[内核扩展|内核扩展]]，反之亦然；但对于普通应用程序，无论32位或64位内核均可以支持两种位宽的应用程序，但32位程序只能使用4GB的内存空间<ref name="arstechnicaMacOSX64bit">{{cite web
 |url=http://arstechnica.com/apple/reviews/2009/08/mac-os-x-10-6.ars/5
 |title=Mac OS X 10.6 Snow Leopard: the Ars Technica review
 |publisher=Ars Technica LLC
 |author=[[John_Siracusa|John Siracusa]]
 |accessdate=2010-06-20
 |archive-date=2012-08-13
 |archive-url=https://www.webcitation.org/69swuj0Ua?url=http://arstechnica.com/apple/2009/08/mac-os-x-10-6/5/
 |dead-url=no
 }}</ref><ref name="Apple64Bit">{{cite web 
 |url=http://www.apple.com/macosx/technology/ 
 |title=Mac OS X Technology 
 |publisher=Apple 
 |accessdate=2010-05-24 
 |deadurl=yes 
 |archiveurl=https://web.archive.org/web/20091112005921/http://www.apple.com/macosx/technology/ 
 |archivedate=2009-11-12 
 }}</ref>   。

[[Mac_OS_X_v10.5|Mac OS X 10.5 ''Leopard'']]在Intel与[[PowerPC|PowerPC]]上提供对[[Cocoa|Cocoa]], [[Quartz|Quartz]], [[OpenGL|OpenGL]]与[[X11|X11]]的GUI程序的64位支持<ref>{{Cite web |url=http://www.apple.com/macosx/technology/64bit.html |title=Apple - Mac OS X Leopard - Technology - 64 bit |accessdate=2010-09-18 |archive-date=2009-01-12 |archive-url=https://web.archive.org/web/20090112055017/http://www.apple.com/macosx/technology/64bit.html |dead-url=no }}</ref>，并支持全部的命令行库和程序。但内核仍只有32位版本。

Mac OS X使用[[通用二进制|通用二进制]]文件格式将32位和64位程序和库代码包装在同一文件中，在加载时自动选择最合适的版本。在Mac OS X 10.6中，内核和内核扩展也使用通用二进制格式以同时支持两种构架。

[[蘋果公司|蘋果公司]]於2018年4月起，在[[macOS_High_Sierra|macOS High Sierra]]作業系統內執行32位元應用程式時，會提醒訊息。並已在2018年6月的[[WWDC|WWDC]]上宣佈[[macOS_Mojave|macOS Mojave]]將是最後一版支援32位元應用程式的macOS<ref>{{Cite web |url=https://9to5mac.com/2018/06/05/macos-mojave-32-bit-support/ |title=macOS Mojave will officially be the last release to support 32-bit apps |access-date=2018-09-18 |archive-date=2022-04-23 |archive-url=https://web.archive.org/web/20220423010926/https://9to5mac.com/2018/06/05/macos-mojave-32-bit-support/ }}</ref>。

=== MenuetOS ===
x86-64版本的[[MenuetOS|MenuetOS]]系統於2005年6月推出，雖然原有的32位版本Menuet以GPL授權，但x86-64版本則維持專屬，並以[[免費軟件|免費軟件]]方式發佈，以及提供部分元件的原始碼。

=== NetBSD ===
x86-64版本的[[NetBSD|NetBSD]]最早於2001年6月19日被提出，至2004年12月9日推出的NetBSD 2.0已能完全支援x86-64。

=== OpenBSD ===
[[OpenBSD|OpenBSD]]自2004年5月1日推出的3.5版起，已支援x86-64。

=== Solaris ===
昇陽的[[Solaris|Solaris]]自版本10開始已支援x86-64。

=== Windows ===
供用戶端使用的[[Windows_XP_Professional_x64_Edition|Windows XP Professional x64 Edition]]以及供伺服器使用的[[Windows_Server_2003_x64_Edition|Windows Server 2003 x64 Edition]]均已於2005年3月推出。[[Windows_Vista|Windows Vista]]、[[Windows_Server_2008|Windows Server 2008]]、[[Windows_Server_2012|Windows Server 2012]]、[[Windows_Server_2012_R2|Windows Server 2012 R2]]、[[Windows_Server_2016|Windows Server 2016]]、[[Windows_Server_2019|Windows Server 2019]]、[[Windows_7|Windows 7]]、[[Windows_8|Windows 8]]、[[Windows_8.1|Windows 8.1]]以及[[Windows_10|Windows 10]]均有对应的64位版本。從[[Windows_Server_2008_R2|Windows Server 2008 R2]]開始的[[Windows_Server|Windows Server]]作業系統只提供64位版本，从[[Windows_11|Windows 11]]開始的面向消费者的[[Windows|Windows]]作業系統只提供64位版本。

== 业界称谓惯例 ==
由于AMD64和Intel64基本上一致，很多软硬件产品都使用一种不倾向任何一方的词汇来表明它们对两种架构的同时兼容。出于这个目的，AMD对这种CPU架构的原始称呼——“x86-64”被不时地使用，还有变体“x86_64”。其他公司如[[微软|微软]]和[[昇陽電腦|昇陽電腦]]在营销资料中使用“x64”作为对“x86-64”的缩写。

许多操作系统及产品，尤其那些是在Intel进入这块市场之前就引入“x86-64”支持的，使用“AMD64”或“amd64”同时指代AMD64和Intel64。

* [[BSD|BSD]]系统（如[[FreeBSD|FreeBSD]]、[[NetBSD|NetBSD]]和[[OpenBSD|OpenBSD]]）和一些[[Linux|Linux]]發行版（如[[Debian|Debian]]、[[Ubuntu|Ubuntu]]、和[[Gentoo_Linux|Gentoo]]）将AMD64和Intel64都称作“amd64”。[[Red_Hat|Red Hat]]的[[RPM_Package_Manager|RPM]]將x86-64稱為x86_64或x86-64，將32位元的[[IA-32|IA-32]]稱為i*86（*為數字3-6，比如i386）。[[Arch_Linux|Arch Linux]]將x86-64稱為x86_64。
* [[Fedora_(作業系統)|Fedora]] [[PackageKit|PackageKit]]称64位架构为“x86_64”。
* [[JDK|Java Development Kit]]（JDK）：包含x86-64文件的目录命名为“amd64”。
* [[Mac_OS_X|Mac OS X]]：终端下的命令arch以及开发人员文档都表明苹果称64位架构为“x86_64”。
* [[Microsoft_Windows|Microsoft Windows]]：稱在IA-32处理器上使用64位技术為“x64”，但一些相關目錄使用AMD64來标明。例如，Windows x64版安装CD上的系统目录命名为“AMD64”，而32位版本上用“i386”。
* [[Solaris_(作業系統)|Solaris]]：操作系统的命令isalist将AMD64和Intel64都定义成“amd64”。

== 應用產品 ==
以下處理器產品使用了x86-64技術，截至2018年9月，幾乎等同於市場上所有消費級產品皆使用x86-64技術。

* [[AMD_K8|AMD K8]] (AMD64)微處理器架構
** AMD [[Athlon_64|Athlon 64]]
** AMD [[Athlon_64_X2|Athlon 64 X2]]
** AMD [[Athlon_64_FX|Athlon 64 FX]]
** AMD [[Opteron|Opteron]]
** AMD [[Turion_64|Turion 64]]
** AMD [[Sempron|Sempron]]（限使用E6步進以後的Palermo、全數Manila型號和全數Sparta型號）
* AMD [[K10|K10]]微處理器架構
** AMD [[Phenom|Phenom]]
** AMD [[Athlon|Athlon]]
** AMD [[Sempron|Sempron]]
* [[AMD推土機微架構|AMD 推土机]]微處理器架構
** AMD [[AMD_FX|FX-Series]]
* [[AMD_Fusion|AMD Fusion]] (APU)
**[[AMD_Bobcat|AMD Bobcat]]微處理器架構的CPU核心
*** AMD [[AMD_Fusion#Ontario(40nm)|Ontario]]
*** AMD [[AMD_Fusion#Zacate(40nm)|Zacate]]
**[[AMD_K10|AMD K10]]微處理器架構的CPU核心
*** AMD [[AMD_Fusion#Llano(32nm)|Llano]]
* AMD [[Ryzen|Ryzen]]
*Intel [[NetBurst|NetBurst]] (Intel 64)
** [[Intel_Xeon|Intel Xeon]]（自"Nocona"起的部分型號）
**[[Celeron_D|Celeron D]]（自"Prescott"起的部分型號）
**[[Pentium_4|Pentium 4]]（自"Prescott"起的部分型號）
**[[Pentium_D|Pentium D]]
**[[Pentium_Extreme_Edition|Pentium Extreme Edition]]
* [[Intel_Core微處理器架構|Intel Core微處理器架構]]
** [[Intel_Xeon|Intel Xeon]] ("Woodcrest")
** Intel [[Core_2|Core 2]]
** Intel [[Pentium_Dual-Core|Pentium Dual-Core]]
** [[Intel_Celeron|Intel Celeron]]
* Intel [[Nehalem#特點|Nehalem]]微處理器架構
** [[Intel_Xeon|Intel Xeon]]
** [[Intel_Core_i7|Intel Core i7]]
** [[Intel_Core_i5|Intel Core i5]]
** [[Intel_Core_i3|Intel Core i3]]
** [[Intel_Pentium|Intel Pentium]]
** [[Intel_Celeron|Intel Celeron]]
* Intel [[Sandy_Bridge#特點|Sandy Bridge]]微處理器架構
** [[Intel_Xeon|Intel Xeon]]
** [[Intel_Core_i7|Intel Core i7]]
** [[Intel_Core_i5|Intel Core i5]]
** [[Intel_Core_i3|Intel Core i3]]
** [[Intel_Pentium|Intel Pentium]]
** [[Intel_Celeron|Intel Celeron]]
* Intel [[Ivy_Bridge#特點|Ivy Bridge]]微處理器架構
** [[Intel_Xeon|Intel Xeon]]
** [[Intel_Core_i7|Intel Core i7]]
** [[Intel_Core_i5|Intel Core i5]]
** [[Intel_Core_i3|Intel Core i3]]
** [[Intel_Pentium|Intel Pentium]]
** [[Intel_Celeron|Intel Celeron]]
* Intel [[Haswell微架構|Haswell]]微處理器架構
** [[Intel_Xeon|Intel Xeon]]
** [[Intel_Core_i7|Intel Core i7]]
** [[Intel_Core_i5|Intel Core i5]]
** [[Intel_Core_i3|Intel Core i3]]
** [[Intel_Pentium|Intel Pentium]]
** [[Intel_Celeron|Intel Celeron]]
* Intel [[Broadwell微架構|Broadwell]]微處理器架構
** [[Intel_Xeon|Intel Xeon]]
** [[Intel_Core_i7|Intel Core i7]]
** [[Intel_Core_i5|Intel Core i5]]
** [[Intel_Core_i3|Intel Core i3]]
* Intel [[Skylake微架構|Skylake]]微處理器架構
** [[Intel_Xeon|Intel Xeon]]
** [[Intel_Core_i9|Intel Core i9]]
** [[Intel_Core_i7|Intel Core i7]]
** [[Intel_Core_i5|Intel Core i5]]
** [[Intel_Core_i3|Intel Core i3]]
** [[Intel_Pentium|Intel Pentium]]
** [[Intel_Celeron|Intel Celeron]]
* Intel [[Kaby_Lake微架構|Kaby Lake]]微處理器架構
** [[Intel_Xeon|Intel Xeon]]
** [[Intel_Core_i9|Intel Core i9]]
** [[Intel_Core_i7|Intel Core i7]]
** [[Intel_Core_i5|Intel Core i5]]
** [[Intel_Core_i3|Intel Core i3]]
** [[Intel_Pentium|Intel Pentium]]
** [[Intel_Celeron|Intel Celeron]]
* Intel [[Coffee_Lake微架構|Coffee Lake]]微處理器架構
** [[Intel_Xeon|Intel Xeon]]
** [[Intel_Core_i9|Intel Core i9]]
** [[Intel_Core_i7|Intel Core i7]]
** [[Intel_Core_i5|Intel Core i5]]
** [[Intel_Core_i3|Intel Core i3]]
** [[Intel_Pentium|Intel Pentium]]
** [[Intel_Celeron|Intel Celeron]]
* [[Intel_Atom|Intel Atom]](部分)
* [[威盛電子|VIA]]/[[兆芯|兆芯]]<ref>{{Cite web|title=PC/嵌入式处理器 - 兆芯 - 好用的电脑芯！|url=https://www.zhaoxin.com/zh.aspx?nid=3&typeid=87|access-date=2022-02-10|work=www.zhaoxin.com|archive-date=2022-04-23|archive-url=https://web.archive.org/web/20220423010934/https://www.zhaoxin.com/zh.aspx?nid=3&typeid=87}}</ref>
** [[VIA_Nano|VIA Nano]]
** ZX-C 系列
** ZX-C+ 系列
** KX-5000 系列
** KX-6000 系列
** KH-20000 系列
** KH-30000系列

==参考文献==
{{reflist}}

== 參見 ==
* [[NX_bit|NX bit]]
* [[AMD_K8|AMD K8]]
* [[AMD_K10|AMD K10]]（由於K9在英語發音上不好聽（Canine，狗類），因此[[AMD|AMD]]在K8代號後，直接使用K10為代號）
* [[IA-64|IA-64]]
* [[x86|x86]]

== 外部連結 ==
*[https://web.archive.org/web/20130716090237/http://developer.amd.com/resources/documentation-articles/developer-guides-manuals/ AMD Developer Guides & Manuals] 
*[http://www.intel.com/content/www/us/en/processors/architectures-software-developer-manuals.html Intel 64 and IA-32 Architectures Software Developer Manuals] {{Wayback|url=http://www.intel.com/content/www/us/en/processors/architectures-software-developer-manuals.html |date=20120126002939 }}
<!--
* [http://www.x86-64.org/ x86_64官方网站]
* [http://www.amd.com/us-en/Processors/ProductInformation/0,,30_118_4699_7980%5E875%5E4622,00.html AMD64 Technology: Overview of the AMD64 Architecture]
* [http://www.intel.com/content/www/us/en/architecture-and-technology/microarchitecture/intel-64-architecture-general.html Intel.com - Intel® 64 Architecture]
* [http://www.amd.com AMD]
* [http://www.amd.com.cn AMD（中國）]
* [http://www.amd.com.hk AMD（香港）]
* [http://www.amd.com/tw/ AMD（台灣）]
* [http://www.intel.com 英特爾]
* [http://www.intel.com/cn/ 英特爾（中國）]
* [http://www.intel.com/cd/corporate/home/apac/zht/84295.htm 英特爾（台灣）]
-->

{{AMD CPU}}
{{Intel处理器列表}}

[[Category:X86架構|Category:X86架構]]
[[Category:微處理器|Category:微處理器]]
[[Category:電腦架構|Category:電腦架構]]