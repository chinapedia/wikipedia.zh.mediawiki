在[[遺傳演算法|遺傳演算法]]和[[遺傳編程|遺傳編程]]裡面，'''定義長度'''(defining length)<ref>web.nchu.edu.tw/~sychou/DataMining/Genetics.ppt</ref> L(H) 是指在一個[[架構_(遺傳演算法)|架構]]"H"裡面，兩個定義符號(defining symbol)最遠的距離 (這裡的定義符號是指有一個固定值的符號， 對應有一些符號—— 一般以#或*表示 ——可以代表任意值) 。在樹GP(tree GP，GP代表遺傳演算法)架構裡面, L(H)則是在架構H裡面，包含所有不是"="的符號，最小樹片段的連接數。<ref name="UCL1">{{cite web|title=Foundations of Genetic Programming|url=http://www.cs.ucl.ac.uk/staff/W.Langdon/FOGP/|publisher=UCL UK|accessdate=13 July 2010|archive-date=2010-10-17|archive-url=https://web.archive.org/web/20101017135723/http://www.cs.ucl.ac.uk/staff/W.Langdon/FOGP/|dead-url=no}}</ref>

=== 範例 ===
架構 "00##0"，"1###1"，"01###"，和 "##0##" 的定義長度分別為4，4，1和0。換句話說，將最後一個出現的定義符號減去第一個出現的定義符號的位置所算出來的值。

在[[遺傳演算法|遺傳演算法]]內，當預期的解答其定義長度增加時，依靠[[突變_(遺傳演算法)|突變]]或[[交配_(遺傳演算法)|交配]]<ref>http://homepage.fudan.edu.cn/~pandeng/index/pub/Genetic%20Algorithm%20with%20Multiple%20Individuals%20Crossover.pdf{{dead link|date=2017年12月 |bot=InternetArchiveBot |fix-attempted=yes }}</ref>(英文: [[交叉_(遗传算法)|交叉 (遗传算法)]])能獲得解答的機會也會隨之下降。

== 參考資料 ==
{{reflist}}

[[Category:遺傳演算法|Category:遺傳演算法]]