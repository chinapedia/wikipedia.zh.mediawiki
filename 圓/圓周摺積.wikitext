{{NoteTA
|G1=Signals and Systems
}}
兩個函數的'''圓周摺積'''是由他們的[[週期延伸|週期延伸]]所來定義的。週期延伸意思是把原本的函數平移某個週期 ''T'' 的整數倍後再全部加起來，所產生的新函數。<math>x(t)</math> 的週期延伸可以寫成

:<math>x_T(t) \ \stackrel{\mathrm{def}}{=} \ \sum_{k=-\infty}^{\infty} x(t - kT) = \sum_{k=-\infty}^{\infty} x(t + kT).</math>

兩個函數 <math>x(t)</math> 與 <math>h(t)</math> 的'''圓周摺積''' <math>(x \otimes h)(t)</math> 可用兩種互相等價的方式來定義

:<math>
\begin{align}
y(t) &= \int_{t_o}^{t_o+T} h_T(\tau)\cdot x_T(t - \tau)\,d\tau \\
&= \int_{-\infty}^{\infty} h(\tau)\cdot x_T(t - \tau)\,d\tau
\quad = \quad (x_T * h)(t),
\end{align}
</math>

其中 <math>*</math> 表示原本的（線性）[[卷积|摺積]]。


類似地，對於離散信號（數列），可以定義週期 ''N'' 的圓周摺積 <math>(x \otimes h)[n]</math> 為

:<math>
\begin{align}
(x_N * h)[n] &= \sum_{m=-\infty}^{\infty} h[m] \cdot x_N[n-m] \\
&= \sum_{m=-\infty}^{\infty} \left( h[m] \cdot \sum_{k=-\infty}^{\infty} x[n -m -kN] \right).\,
\end{align}
</math>


離散信號的圓周摺積可以經由[[卷积定理|圓周摺積定理]]使用[[快速傅立葉變換|快速傅立葉變換]]（FFT）而有效率的計算。因此，若原本的（線性）[[卷积|摺積]]能轉換成圓周摺積來計算，會遠比直接計算更快速。考慮到長度 <math>L</math> 和長度 <math>M</math> 的有限長度離散信號，做[[卷积|摺積]]之後會成為長度 <math>L+M-1</math> 的信號，因此只要把兩離散信號補上適當數目的零（zero-padding）成為 ''N'' 點信號，其中  <math>N\ge L+M-1\,</math>  ，則它們的圓周摺積就與[[卷积|摺積]]相等。即可接著用 ''N'' 點 FFT 作計算。

用以上方法計算[[卷积|摺積]]時，若兩個信號長度相差很多，則較短者須補上相當多的零，太不經濟。而且在某些情況下，例如較短的 <math>h[n]</math> 是一個 [[有限脉冲响应|FIR 濾波器]]而較長的 <math>x[n]</math> 是未知長度的輸入（像[[語音|語音]]）時，直接用以上方法要等所有的輸入都收到後才能開始算輸出信號，太不方便。這時可以把 <math>x[n]</math> 分割成許多適當長度的區塊（稱為 block convolution），然後一段一段的處理。經過濾波後的段落再仔細的連接起來，藉由輸入或輸出的<u>重疊</u>來處理區塊連接的部份。這兩種做法分別稱為[[重疊-儲存之摺積法|重疊-儲存之摺積法]]和[[重疊-相加之摺積法|重疊-相加之摺積法]]。

==相關條目==

*[[卷积|摺積]]
*[[卷积定理|圓周摺積定理]]
*[[离散傅里叶变换#DFT与圆周卷积|DFT與圓周摺積]]

== 參考文獻 ==
*{{Cite book
 | author=Rabiner, Lawrence R.; Gold, Bernard
 | authorlink=
 | coauthors=
 | title=Theory and application of digital signal processing
 | date=1975
 | publisher=Prentice-Hall
 | location=Englewood Cliffs, N.J. 
 | isbn=0-13-914101-4
 | pages=pp 63-67
}}.
*{{Cite book 
 | author=Oppenheim, Alan V.; Schafer, Ronald W.; Buck, John A. 
 | authorlink= 
 | coauthors= 
 | title=Discrete-time signal processing 
 | date=1999 
 | publisher=Prentice Hall 
 | location=Upper Saddle River, N.J.  
 | isbn=0-13-754920-2 
 | pages=
}}.

==外部連結==

[http://cnx.org/content/m10786/latest/ cnx] {{Wayback|url=http://cnx.org/content/m10786/latest/ |date=20120622233748 }}

[[Category:信号处理|Category:信号处理]]
[[Category:泛函分析|Category:泛函分析]]
[[Category:二元运算|Category:二元运算]]