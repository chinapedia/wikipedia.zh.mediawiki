{{noteTA
|G1=IT
}}
{{redirect2|SCA|缩写同为SCA的航天飞机运输机（Shuttle Carrier Aircraft）|航天飞机运输飞机}}
'''服务组件架构'''（{{lang|en|Service Component Architecture}}，简称'''SCA'''，也译作'''服务构件架构'''， '''服务组件体系结构'''）是新出现的但非常重要的由主要的[[Java_EE|Java EE]]技术厂商鼓吹的技术规范，提倡者认为SCA能够适合发布符合[[面向服务架构|面向服务架构]]的原则的应用。

==支持者==
支持的厂商包括：
*最初的成员 [[BEA|BEA]]，[[IBM|IBM]]，[[IONA_Technologies|IONA Technologies]]，[[甲骨文公司|甲骨文公司]]，[[SAP公司|SAP公司]]，[[Sybase|Sybase]]，[http://www.xcalia.com Xcalia] {{Wayback|url=http://www.xcalia.com/ |date=20100509155602 }}和[[Zend_Technologies|Zend Technologies]]。
*2006年7月26日宣布加入的成员： [[Cape_Clear_(software_company)|Cape Clear]]，[[Interface21|Interface21]]，[[普元软件|普元软件]]，[[Progress_Software|Progress Software]]，[[Red_Hat|Red Hat]]，[[Rogue_Wave_Software|Rogue Wave Software]]，[[Software_AG|Software AG]]，[[升阳|太阳微系统公司]]和[[TIBCO软件公司|TIBCO软件公司]]。<ref>Technology vendors extend collaboration on SOA technologies http://www.hoise.com/primeur/06/articles/monthly/E-PR-08-06-92.html{{dead link|date=2018年3月 |bot=InternetArchiveBot |fix-attempted=yes }}</ref>

== 定义 == 

发布的规范<ref>{{Cite web |url=http://www-128.ibm.com/developerworks/library/specification/ws-sca/ |title=存档副本 |access-date=2007-06-27 |archive-date=2009-02-01 |archive-url=https://web.archive.org/web/20090201085043/http://www-128.ibm.com/developerworks/library/specification/ws-sca/ |dead-url=no }}</ref> 在许多方面看起来都很模糊不清，但是随着新规范<ref>{{Cite web |url=http://www.osoa.org/display/Main/Service+Component+Architecture+Specifications |title=存档副本 |access-date=2007-06-27 |archive-url=https://web.archive.org/web/20071012184346/http://osoa.org/display/Main/Service+Component+Architecture+Specifications |archive-date=2007-10-12 |dead-url=yes }}</ref> 的演变，SCA迅速地成熟起来（但某些方面仍然存在致命问题<ref name="ke-jin.blogspot.com">https://web.archive.org/web/20080224210629/http://ke-jin.blogspot.com/2007/11/service-component-architecture-sca.html</ref>）。规范指出使用SCA设计的应用程序应当具有以下特性：
* 将服务的实现和服务的组合与基础设施能力相分离。
* 应该能与多数语言一起工作包括[[C++|C++]]，[[Java|Java]]，[[COBOL|COBOL]]和[[PHP|PHP]]，以及[[XML|XML]]，[[BPEL|BPEL]]。 [[XSLT|XSLT]]。
*需要能够与不同的消息构造一起工作， 包括单向，异步，调用-返回，通知。
* 基础设施能力，例如安全事务，和可靠消息的使用应该能够通过编写元数据应用。
* 数据应以[[服务数据对象|服务数据对象]]标识。
* 在SCA中定义的组件应该很容易重用。
* 服务的本地调用应该更加紧耦合，减少为了在网络上传输而创建和解析消息的开支。

== 进一步分析 ==

[[Gartner集团|Gartner集团]]曾发布研究结果，认为SCA以及[[服务数据对象|服务数据对象]] (SDO)技术已经成熟将被快速的采用。<ref>{{Cite web |url=http://www.gartner.com/resources/136600/136687/new_soa_specification_will_f_136687.pdf |title=存档副本 |access-date=2007-06-27 |archive-date=2015-12-24 |archive-url=https://web.archive.org/web/20151224001412/http://www.gartner.com/resources/136600/136687/new_soa_specification_will_f_136687.pdf |dead-url=no }}</ref>

优势：
* 迎合所有现存的[[Java|Java平台]]技术和C++（然而SCA的C++组件模型定义存在致命问题<ref name="ke-jin.blogspot.com"/>）
* 较少的技术依赖性 - 不需要依赖于[[Java|Java程序设计语言]]和[[XML|XML]]技术
* 使用服务数据对象，服务数据对象是SOA的数据访问的唯一工业标准。
* 缺少[[微软|微软]]的支持，使得潜在用户可以在大量提供商之中选择SOA解决方案。b
劣势：
* 缺少[[微软|微软]]的支持，这减少了SCA与大量潜在用户的关系。
* 规范并未解决SOA应用的性能问题，这将持续阻碍SCA被采用。

==实现==
* [http://www.fabric3.org Fabric3] {{Wayback|url=http://www.fabric3.org/ |date=20200813175509 }}
* [https://web.archive.org/web/20070614135457/http://www.roguewave.com/hydra/hydra.cfm Rogue Wave HydraSCA]
* [[Covansys|Covansys]]的服务组建架构框架<ref>{{cite web |url=http://www.covansys.com/what/SCAFrameworkforSOA.htm |title=存档副本 |accessdate=2007-06-27 |deadurl=yes |archiveurl=https://web.archive.org/web/20070621211535/http://www.covansys.com/what/SCAFrameworkforSOA.htm |archivedate=2007-06-21 }}</ref>
* [[Apache_Tuscany|Apache Tuscany]]
* [http://www.paremus.com Paremus Infiniflow] {{Wayback|url=http://www.paremus.com/ |date=20210208062508 }}：分布式的，动态的，轻量级的SCA和OSGi运行平台
* [https://web.archive.org/web/20060624161915/http://newton.codecauldron.org/ Newton]开源的分布式SCA和OSGi
* [[SCA_and_SDO_for_PHP|SCA and SDO for PHP]]
* [https://web.archive.org/web/20071119030902/http://www.pocomatic.com/docs/whitepapers/webservices/#sca-as-a-dsm PocoCapsule SCA组装容器（C++）] 该GPL开源实现基于[[控制反转|控制反转]]（IoC）及[[领域特定建模|领域特定建模]]（DSM），并附带丰富的[https://web.archive.org/web/20071119030836/http://www.pocomatic.com/docs/cpp-examples/#webservices 应用实例]（包括SCA著名的BigBank）

==脚注==
<div class="references-small" style="-moz-column-count:1; column-count:1;">
<references/>
</div>

==参见==
* [[Semantic_service_oriented_architecture|Semantic service oriented architecture]]
* [https://web.archive.org/web/20080224210629/http://ke-jin.blogspot.com/2007/11/service-component-architecture-sca.html SCA被认为是有害的！]

== 外部链接 ==
* [http://www-128.ibm.com/developerworks/library/specification/ws-sca/ SCA 0.9版规范] {{Wayback|url=http://www-128.ibm.com/developerworks/library/specification/ws-sca/ |date=20090201085043 }}
* [https://web.archive.org/web/20071012184346/http://osoa.org/display/Main/Service+Component+Architecture+Specifications SCA 0.96版规范]
* [https://web.archive.org/web/20070902023753/http://www.osoa.org/display/Main/Home Open Service Oriented Architecture .org -- SCA规范相关信息的官方网站]
* [http://incubator.apache.org/tuscany/ Apache SCA规范的开源实现] {{Wayback|url=http://incubator.apache.org/tuscany/ |date=20080614071659 }}
* [http://xml.coverpages.org/SCA-Announce200512.html SCA Announcements at OASIS web site] {{Wayback|url=http://xml.coverpages.org/SCA-Announce200512.html |date=20110224112525 }}
* [https://web.archive.org/web/20080517095801/http://www.bea.com/dev2dev/assets/sdo/Next-Gen-Data-Programming-Whitepaper.pdf Service Data Objects initial work by BEA and IBM]
* [http://www.davidchappell.com/HTML_email/Opinari_No15_12_05.html Comparing WCF and SCA] {{Wayback|url=http://www.davidchappell.com/HTML_email/Opinari_No15_12_05.html |date=20110104151545 }}
* [http://xml.coverpages.org/ni2005-12-07-a.html#summarySCA Summary of SCA] {{Wayback|url=http://xml.coverpages.org/ni2005-12-07-a.html#summarySCA |date=20110222145425 }}
* [http://khanderaotech.blogspot.com/2007/02/bpel-in-sca-assembly-model.html BPEL in SCA assembly] {{Wayback|url=http://khanderaotech.blogspot.com/2007/02/bpel-in-sca-assembly-model.html |date=20181004154714 }}
* [https://web.archive.org/web/20071119030902/http://www.pocomatic.com/docs/whitepapers/webservices/#sca-as-a-dsm PocoCapsule SCA组装容器（C++）] 该GPL开源实现基于[[控制反转|控制反转]]（IoC）及[[领域特定建模|领域特定建模]]（DSM），并附丰富的[https://web.archive.org/web/20071119030836/http://www.pocomatic.com/docs/cpp-examples/#webservices 应用实例]（包括SCA著名的BigBank）
* [http://www.eclipse.org/stp/sca/index.php Eclipse STP SCA Tools] {{Wayback|url=http://www.eclipse.org/stp/sca/index.php |date=20080919011221 }}

[[Category:企业应用集成|Category:企业应用集成]]