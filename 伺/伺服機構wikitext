[[image:Servomotor.jpg|thumb]]]]
'''伺服機構'''（{{lang|en|servomechanism}}）係指經由[[反馈|閉迴路控制]]方式達到一個機械-{系}-統位置、速度、或加速度控制的系統。{{R|交}}

==發展歷史==
伺服機構理論（''servomechansim theory''）起源於[[二次世界大戰|二次世界大戰]]期間，[[美軍|美軍]]為了發展具有[[自動控制|自動控制]]功能的[[雷達|雷達]]追蹤系統，委託了[[麻省理工學院|麻省理工學院]]發展控制機械系統的閉迴路控制技術，以強化[[火控系統|火控系統]]的精準度，此一發展奠定了後來伺服機構理論的基礎。而[[微處理器|微處理器]]及[[積體電路|積體電路]]的不斷進化，不僅帶動了[[資訊|資訊]]產業的發展，也間接帶動了伺服驅動技術的發展。{{R|交}}

==構造==

一個伺服系統的構成通常包含受控體（plant）、[[致動器|致動器]]（actuator）、[[傳感器|傳感器]]（sensor）、[[控制器|控制器]]（controller）等幾個部分。受控體係指被控制的物件，例如一個機械手臂，或是一個機械工作平台。致動器的功能在於主要提供受控體的動力，可能以[[氣壓|氣壓]]、油壓、或是電力驅動的方式呈現，若是採用油壓驅動方式，則為油壓伺服系統。目前絕大多數的伺服系統採用電力驅動方式，致動器包含了[[馬達|馬達]]與功率[[放大器|放大器]]，例如應用於伺服系統的特別設計馬達稱之為[[伺服馬達|伺服馬達]]（servo motor），其裝置內含位置回授裝置，如光電編碼器（optical encoder）或是解角器（resolver）。一個傳統伺服機構系統的組成，伺服驅動器主要包含功率放大器與伺服控制器。

以伺服馬達為例，其伺服控制器通常包含速度控制器與[[力矩|扭矩]]控制器，馬達通常提供類比式的速度回授信號，控制界面採用±10V的類比訊號，經由外迴路的[[類比|類比]]命令，可直接控制馬達的轉速或扭矩。採用這種伺服驅動器，通常必須再加上一個位置控制器（position controller），才能完成位置控制。

目前主要應用於工業界的伺服馬達包括直流伺服馬達、永磁交流伺服馬達、與感應交流伺服馬達，其中又以永磁交流伺服馬達佔絕大多數。控制器的功能在於提供整個伺服系統的閉路控制，如扭矩控制、速度控制、與位置控制等。目前一般工業用[[伺服驅動器|伺服驅動器]]（servo drive）通常包含了控制器與[[功率放大器|功率放大器]]。伺服驅動器包含了伺服控制器與功率放大器，伺服馬達提供解析度的光電編碼器回授信號。
===多軸運動控制系統===
精密伺服系統多應用於多軸運動控制系統，如工業[[機器人|機器人]]、[[工具機|工具機]]、電子零件組裝系統、PCB自動插件機、PCB鑽孔機等等。

工作物件的位置控制可藉由平台的移動來達成，平台位置的偵測有兩種方式，一種是藉由伺服馬達本身所安裝的光電編碼器，由於是以間接的方式回授工作物件的位置，再藉由閉迴路控制達到位置控制的目的，因此也稱之為間接位置控制（indirect position control）。另一種方式是直接將位置感測元件安裝在平台上，如光學尺、雷射位置感測計等等，直接回授工作物件的位置，再藉由閉迴路控制達到位置控制的目的，稱之為直接位置控制（direct position control）。一個多軸運動控制系統由高階的運動控制器（motion controller）與低階的伺服驅動器（servo drive）所組成，運動控制器負責運動控制命令解碼、各個位置控制軸彼此間的相對運動、加減速輪廓控制等等，其主要關鍵在於降低整體系統運動控制的路徑誤差；伺服驅動器負責伺服馬達的位置控制，主要關鍵在於降低伺服軸的追隨誤差。一個雙軸運動控制系統在一般的情況下x-軸與y-軸的動態響應特性會有相當大的差異，在高速輪廓控制時（contouring control），會造成顯著的[[誤差|誤差]]，因此必須設計一個運動控制器以整體考量的觀點解決此一問題。

===網路分散式伺服系統===
隨著網路通訊技術的進步，採用即時網路通訊技術的伺服系統也隨之發展，利用SERCOS即時通訊網路技術（real-time network communication）所發展的網路控制分散式伺服系統，目前已有多種採用不同[[通訊協定|通訊協定]]的分散式運動控制系統，如SERCOS、Real-Time Ethernet、Real-Time CAN bus。應用高速網路技術於分散式伺服系統有許多優點，諸如更靈活的系統應用、更佳的系統整合控制效果等等。

===環狀多回路控制架構===
一個實際的伺服系統通常採用環狀多迴路控制架構。此種控制架構，具有先天的[[解耦|解耦]]控制效果，可以分層負責的完成一個伺服系統中所需要的位置、速度、加速度控制。

==伺服技術==
===伺服系統整合技術===
伺服系統具有[[綜效|綜效]]技術（synergy technology）的本質。伺服系統設計必須整合多項關鍵技術，如自動控制、運動控制、[[數位控制|數位控制]]、馬達控制、電力電子、微處理器軟[[硬體|硬體]]設計等等，伺服系統設計工程師必須針對系統的應用需求，整合多項不同的技術，而此一系統整合的特質，會隨著微[[電子技術|電子技術]]的進展，更明顯的以『[[即時|即時]][[多工|多工]][[韌體|韌體]]控制技術』的方式呈現。
 
===數位伺服控制技術===
隨著高性能微處理器、數位信號處理器的發展，數位伺服控制技術已成為工業伺服系統的主流。
 
===DSP數位伺服控制技術===
[[數字信號處理器|數字信號處理器]]（DSP）可視為一個具有強大計算能力的微處理器，舉凡微處理器可以應用的場合，如需要更快速的計算能力，則可考慮使用DSP。但值得注意的是，[[單片機|單晶片微控器]]（microcontroller）已廣泛應用於工業控制領域，其關鍵主要在於完整的[[I/O|I/O]]界面，而一般的DSP並不具備這些功能。但近年來，已發展出特別針對伺服馬達控制的單晶片DSP控制器，例如[[德州儀器|德州儀器]]的TMS320F24xx、TMS320F2812等等，不僅計算性能強大、具備馬達控制所需要的I/O界面，同時價格也相當便宜，因此直接帶動了以DSP為核心的DSP數位馬達控制技術的發展。{{R|交}}

===電腦輔助伺服系統設計===
由於伺服系統設計包含多項不同技術的整合，也使得其設計過程顯得更為複雜。因此利用[[電腦輔助設計|電腦輔助設計]]與即時線上控制模擬成為現代伺服系統設計重要的方法。{{R|交}}

==實務問題==
一個現代的伺服系統的設計包含了機械設計、馬達控制、電力電子、伺服控制、運動控制、[[程式設計|程式設計]]、網路通訊協定、[[雜訊|雜訊]]防制、實務應用等技術與經驗，其核心技術在於整合微電子與電力電子技術實現伺服控制技術。{{R|交}}

一些重要的實務設計考量包括： 
*高解析度光電編碼器的介面電路設計 
*如何從增量回授信號計算轉速？ 
*伺服系統的[[頻寬|頻寬]]要求 
*功率放大器[[電壓|電壓]]輸出與[[電流|電流]]輸出對伺服系統頻寬所造成的限制 
*數位伺服系統採用[[定點|定點]]（[[整數|整數]]）或是[[浮點|浮點]]運算？ 
*控制迴路取樣頻率的選擇？ 
*電流回授信號的的取樣方式與ADC轉換器（analog-to-digital converter）的[[解析度|解析度]]要求為何？

==未來發展==
任何动体都需要控制，電力驅動仍將是未來主要的驅動方式，隨著[[微機電系統|微機電系統]]、電力電子、網路通訊技術的發展，各種形式的微型馬達將可以通过有線或[[無線|無線]]的網路通訊技術予以連接，伺服技術將進一步結合[[微電子|微電子]]與電力電子技術以韌體控制的方式呈現，伺服技術的發展也將向單晶片控制、智慧控制、網路連線的方向發展。未來智慧型電子寵物、家庭機器人的市場需求，將進一步促進伺服技術的發展，具有網路介面的智慧型伺服控制晶片是一個值得投入研發的領域。{{R|交}}

== 參見 ==
*[[伺服馬達|伺服馬達]]
*{{le|同步器|Synchro}}（使用於伺服機構馬達的傳輸器與接收器） 
*[[運動控制|運動控制]]（Motion control）
*[[伺服頻寬|伺服頻寬]]

==參考文獻==
{{reflist|refs=
<ref name="交">{{cite web | language = zh-tw | publisher = 交通大學 | title = 伺服技術之發展 | url = http://pemclab.cn.nctu.edu.tw/W3news/%E6%8A%80%E8%A1%93%E5%A0%B1%E5%91%8A/TR-SV01.%E3%80%90%E4%BC%BA%E6%9C%8D%E7%B3%BB%E7%B5%B1%E3%80%91%E4%BC%BA%E6%9C%8D%E6%8A%80%E8%A1%93%E4%B9%8B%E7%99%BC%E5%B1%95/index.htm | author = 鄒應嶼 | date = 2004年11月22日 | accessdate = 2011-05-24 | deadurl = yes | archiveurl = https://web.archive.org/web/20090316083930/http://pemclab.cn.nctu.edu.tw/W3news/%E6%8A%80%E8%A1%93%E5%A0%B1%E5%91%8A/TR-SV01.%E3%80%90%E4%BC%BA%E6%9C%8D%E7%B3%BB%E7%B5%B1%E3%80%91%E4%BC%BA%E6%9C%8D%E6%8A%80%E8%A1%93%E4%B9%8B%E7%99%BC%E5%B1%95/index.htm | archivedate = 2009年3月16日 }}</ref>

}}

==外部連結==
* [https://web.archive.org/web/20070714213822/http://www.rane.com/par-s.html#servo_loop Rane Pro Audio Reference definition of "servo-loop"]
* [http://www.seattlerobotics.org/guide/servos.html Seattle Robotics Society's "What is a Servo?"]{{Wayback|url=http://www.seattlerobotics.org/guide/servos.html |date=20070711010745 }}
* [https://web.archive.org/web/20070717061442/http://www.openservo.com/ Community-based project for creating a low-cost digital servo]
* [http://www.societyofrobots.com/actuators_servos.shtml Servo Tutorial for Robotics]{{Wayback|url=http://www.societyofrobots.com/actuators_servos.shtml |date=20070705102700 }}
* [http://www.societyofrobots.com/actuators_modifyservo.shtml Tutorial on how to modify a servo for full 360 degree rotation]{{Wayback|url=http://www.societyofrobots.com/actuators_modifyservo.shtml |date=20070618055731 }}

{{Authority control}}
[[Category:放大器|Category:放大器]]
[[Category:控制論|Category:控制論]]
[[Category:自動控制|Category:自動控制]]
[[Category:機械工程|Category:機械工程]]
[[Category:機械運動控制|Category:機械運動控制]]