{{编程范式}}
'''概率编程'''（'''PP'''）是一种[[编程范型|编程范型]]，在其中指定了[[概率模型|概率模型]]并自动进行这些模型的[[推断统计学|推断]]<ref name=physorg>{{cite news
 | url=http://phys.org/news/2015-04-probabilistic-lines-code-thousands.html
 | title=Probabilistic programming does in 50 lines of code what used to take thousands
 | work=phys.org
 | date=April 13, 2015
 | accessdate=2015-04-13
 | archive-date=2021-01-28
 | archive-url=https://web.archive.org/web/20210128194524/https://phys.org/news/2015-04-probabilistic-lines-code-thousands.html
 | dead-url=no
 }}</ref>。它代表了统一概率模型和传统通用编程的一种尝试，使前者更加容易并更广泛的应用<ref>{{cite web|url=http://probabilistic-programming.org/wiki/Home|title=Probabilistic Programming|work=probabilistic-programming.org|access-date=December 24, 2013|archive-url=https://web.archive.org/web/20160110035042/http://probabilistic-programming.org/wiki/Home|archive-date=January 10, 2016}}</ref><ref name="Pfeffer2014">Pfeffer, Avrom (2014), ''Practical Probabilistic Programming'', Manning Publications. p.28. {{ISBN|978-1 6172-9233-0}}</ref>。它可以用于建立系统帮助在面对不确定时作出决定。

用于概率编程的编程语言被称为“概率编程语言”（PPL）。

== 应用 ==
概率推理已经广泛用于各种任务，比如预测股价、推荐电影、诊断计算机、检测网络入侵和图像检查<ref name="kurzweilai">{{cite news|url = http://www.kurzweilai.net/short-probabilistic-programming-machine-learning-code-replaces-complex-programs-for-computer-vision-tasks|title = Short probabilistic programming machine-learning code replaces complex programs for computer-vision tasks|date = April 13, 2015|work = KurzweilAI|access-date = 27 Nov 2017|archive-date = 2021-02-12|archive-url = https://web.archive.org/web/20210212021500/https://www.kurzweilai.net/short-probabilistic-programming-machine-learning-code-replaces-complex-programs-for-computer-vision-tasks|dead-url = no}}</ref>。但是直到最近（部份由于计算能力的限制），概率编程范围有限，并且多数推断算法对每个任务都必须手工编写。

尽管如此，在2015年一个50行的概率[[计算机视觉|计算机视觉]]程序被用于基于人脸的2D图像来生成这些人脸的3D模型。这个程序使用反向（inverse）图作为推断方法的基础，并使用[[Julia_(编程语言)|Julia]]的Picture包来建造<ref name="kurzweilai"/>。这使得“用50行代码写出过去千行代码的程序”成为可能<ref>{{cite web |url=https://news.mit.edu/2015/better-probabilistic-programming-0413 |title=Graphics in reverse |first=Larry |last=Hardesty |date=April 13, 2015 |access-date=2021-01-16 |archive-date=2021-01-22 |archive-url=https://web.archive.org/web/20210122000847/https://news.mit.edu/2015/better-probabilistic-programming-0413 |dead-url=no }}</ref><ref>{{cite web|url=https://www.theregister.co.uk/2015/04/14/mit_shows_off_machinelearning_script_to_make_creepy_heads/|title=MIT shows off machine-learning script to make CREEPY HEADS|access-date=2021-01-16|archive-date=2019-09-20|archive-url=https://web.archive.org/web/20190920214451/https://www.theregister.co.uk/2015/04/14/mit_shows_off_machinelearning_script_to_make_creepy_heads/|dead-url=no}}</ref>。Gen概率编程库（也用Julia写成）已经被用于视觉和机器人任务<ref>{{Cite web|url=https://venturebeat.com/2019/06/27/mits-gen-programming-system-allows-users-to-easily-create-computer-vision-statistical-ai-and-robotics-programs/|title=MIT's Gen programming system flattens the learning curve for AI projects|date=2019-06-27|website=VentureBeat|language=en-US|access-date=2019-06-27|archive-date=2021-01-24|archive-url=https://web.archive.org/web/20210124040028/https://venturebeat.com/2019/06/27/mits-gen-programming-system-allows-users-to-easily-create-computer-vision-statistical-ai-and-robotics-programs/|dead-url=no}}</ref>。

最近，概率编程系统Turing.jl已经被用于各种制药和经济应用<ref name="pharma-turing">{{Citation|date=2019|title=Predicting Drug-Induced Liver Injury with Bayesian Machine Learning|url=https://pubs.acs.org/doi/10.1021/acs.chemrestox.9b00264|accessdate=2021-01-16|archive-date=2020-08-06|archive-url=https://web.archive.org/web/20200806163618/https://pubs.acs.org/doi/10.1021/acs.chemrestox.9b00264|dead-url=no}}</ref>。Julia中的概率编程已经结合于[[可微分编程|可微分编程]]，通过组合Julia包Zygote.jl和Turing.jl<ref name="diffprog-zygote">{{Citation|date=2019|title=∂P: A Differentiable Programming System to Bridge Machine Learning and Scientific Computing|arxiv=1907.07587}}</ref>。

== 概率编程语言 ==
概率编程语言（PPL）经常从基础语言扩展而来。底层基础语言的选择依赖于模型与基础语言[[本体_(信息科学)|本体]]的类似性，还有商业考虑和个人偏好。例如Dimple<ref name="DMPL"/>和Chimple<ref name="CHMPL"/>基于了[[Java|Java]]，{{en-link|Infer.NET|}}基于了[[.NET框架|.NET框架]]<ref name="INFET"/>，而PRISM扩展自[[Prolog|Prolog]]<ref name="PRISM"/>。但是，一些PPL比如{{en-link|WinBUGS|}}和{{en-link|Stan (软件)|Stan (software)|Stan}}，提供了独立的语言，没有明显起源自另一种语言<ref name="BUGS"/><ref name="Stan"/>。

一些PPL正在活跃开发中，包括在beta测试中的那些。两个最流行的工具是Stan和[[PyMC3|PyMC3]]<ref>{{Cite web|url=http://blog.fastforwardlabs.com/2017/01/30/the-algorithms-behind-probabilistic-programming.html|title=The Algorithms Behind Probabilistic Programming|access-date=2017-03-10|archive-date=2021-01-29|archive-url=https://web.archive.org/web/20210129014013/https://blog.fastforwardlabs.com/2017/01/30/the-algorithms-behind-probabilistic-programming.html|dead-url=no}}</ref>。

=== 关系 ===
'''概率关系编程语言'''（PRPL）专门设计来描述和推论{{en-link|概率关系模型|Statistical relational learning#Representation formalisms}}（PRM）的概率编程语言（PPL）。

PRM的开发通常具有一组算法，用于关注的分布的归约、推理和发现，它们被嵌入到对应的PRPL中。

== 概率编程语言列表 ==

{| class="wikitable sortable"
|-
! 名字 !! 扩展自 !! 宿主语言
|-
| {{en-link|Analytica|Analytica (software)|Analytica}}<ref name="Analytica"/> || || C++
|-
| bayesloop<ref name="bayesloop"/><ref name="bayesloop2"/> || Python || Python
|-
| CuPPL<ref name = "CuPPL"/> || NOVA<ref name="nova"/> ||
|-
| Venture<ref name="Venture"/> || [[Scheme|Scheme]] || C++
|-
| Probabilistic-C<ref name="Probabilistic-C"/> || [[C语言|C]] || C
|-
| Anglican<ref name="Anglican"/> || [[Clojure|Clojure]] || Clojure
|-
| IBAL<ref name="IBAL"/> || [[OCaml|OCaml]] ||
|-
| BayesDB<ref name="BAYESDB"/> || [[SQLite|SQLite]], [[Python|Python]] || 
|-
| PRISM<ref name="PRISM"/>  || {{en-link|B-Prolog|}} ||
|-
| {{en-link|Infer.NET|}}<ref name="INFET"/> || .NET框架 || .NET框架
|-
| dimple<ref name="DMPL"/> || [[MATLAB|MATLAB]], [[Java|Java]] ||
|-
| chimple<ref name="CHMPL"/> || MATLAB, Java ||
|-
| BLOG<ref name="BLOG"/> || Java ||
|-
| delSAT<ref name="delSAT"/> || [[回答集编程|回答集编程]], [[布尔可满足性问题|SAT (DIMACS CNF)]] ||
|-
| PSQL<ref name="PSQL"/> || [[SQL|SQL]] ||
|-
| BUGS<ref name="BUGS"/> ||  ||
|-
| FACTORIE<ref name="FACTORIE"/> || [[Scala|Scala]] ||Scala
|-
| PMTK<ref name="PMTK"/> || MATLAB || MATLAB
|-
| Alchemy<ref name="Alchemy"/> || [[C++|C++]] ||
|- 
| Dyna<ref name="Dyna"/> || [[Prolog|Prolog]] ||
|-
| Figaro<ref name="Figaro"/> || Scala ||Scala
|-
| {{en-link|Church (编程语言)|Church (programming language)|Church}}<ref name="Church"/> || Scheme || 各种: JavaScript, Scheme
|-
| ProbLog<ref name="ProbLog"/> || Prolog ||Python, Jython
|-
| ProBT<ref name="ProBT"/> || C++, [[Python|Python]] ||
|-
| {{en-link|Stan|Stan (software)|Stan}}<ref name="Stan"/> ||  || C++
|-
| Hakaru<ref name="Hakaru"/> || [[Haskell|Haskell]] || Haskell
|-
| {{en-link|BAli-Phy|}} <ref name="BAli-Phy"/> || Haskell ||  C++
|-
| ProbCog<ref name="ProbCog"/> ||  || Java, Python
|-
| Gamble<ref name="Gamble"/> ||  || Racket
|-
| PWhile<ref name="PWhile"/> || While || Python
|-
| Tuffy<ref name="Tuffy"/> ||  || Java
|-
|-Pomegranate || Python || Cython
|-
| [[PyMC3|PyMC3]]<ref name="PyMC3"/> || Python, [[Theano|Theano]]|| Python
|-
| PyMC4<ref name="PyMC4">{{Cite web|url=https://pymc-devs.medium.com/the-future-of-pymc3-or-theano-is-dead-long-live-theano-d8005f8a0e9b|title=The Future of PyMC3, or: Theano is Dead, Long Live Theano|quote=PyMC4, which is based on TensorFlow, will not be developed further.|last=Developers|first=PyMC|date=2020-10-26|website=PyMC Developers|access-date=2021-01-17|archive-date=2021-01-15|archive-url=https://web.archive.org/web/20210115104613/https://pymc-devs.medium.com/the-future-of-pymc3-or-theano-is-dead-long-live-theano-d8005f8a0e9b|dead-url=no}}</ref> || Python, [[TensorFlow|TensorFlow Probability]]|| Python
|-
| Rainier<ref>{{Citation|title=stripe/rainier|date=2020-08-19|url=https://github.com/stripe/rainier|publisher=Stripe|access-date=2020-08-26|archive-date=2021-02-19|archive-url=https://web.archive.org/web/20210219125042/https://github.com/stripe/rainier|dead-url=no}}</ref><ref>{{Cite web|title=Rainier · Bayesian inference for Scala|url=https://samplerainier.com/|access-date=2020-08-26|website=samplerainier.com}}</ref> || Scala
| Scala
|-
|greta<ref>{{Cite web|url=https://greta-dev.github.io/greta/|title=greta: simple and scalable statistical modelling in R|website=GitHub|access-date=2018-10-02|archive-date=2018-10-03|archive-url=https://web.archive.org/web/20181003061743/https://greta-dev.github.io/greta/|dead-url=yes}}</ref>
|TensorFlow
|[[R语言|R]]
|-
|pomegranate<ref>{{Cite web|url=https://pomegranate.readthedocs.io/en/latest/index.html|title=Home — pomegranate 0.10.0 documentation|website=pomegranate.readthedocs.io|language=en|access-date=2018-10-02|archive-date=2021-01-22|archive-url=https://web.archive.org/web/20210122010931/https://pomegranate.readthedocs.io/en/latest/index.html|dead-url=no}}</ref>
|Python
|Python
|-
| Lea<ref name="Lea"/> || Python || Python
|-
| WebPPL<ref name="WebPPL"/>||JavaScript||JavaScript
|-
|Let's Chance<ref>{{Cite web|title=Let's Chance: Playful Probabilistic Programming for Children {{!}} Extended Abstracts of the 2020 CHI Conference on Human Factors in Computing Systems|url=https://dl.acm.org/doi/abs/10.1145/3334480.3383071|access-date=2020-08-01|website=dl.acm.org|language=EN|doi=10.1145/3334480.3383071|archive-date=2021-01-22|archive-url=https://web.archive.org/web/20210122002048/https://dl.acm.org/doi/abs/10.1145/3334480.3383071|dead-url=no}}</ref>
|Scratch
|JavaScript
|-
| Picture<ref name="kurzweilai"/>
| Julia
| Julia
|-
| Turing.jl<ref name="Turingjl"/>
| [[Julia_(编程语言)|Julia]]
| Julia
|-
| Gen<ref>{{Cite web|url=https://probcomp.github.io/Gen/|title=Gen: A General Purpose Probabilistic Programming Language with Programmable Inference|access-date=2019-06-17|archive-date=2020-11-12|archive-url=https://web.archive.org/web/20201112010200/https://probcomp.github.io/Gen/|dead-url=no}}</ref>
| [[Julia_(编程语言)|Julia]]
| [[Julia_(编程语言)|Julia]]
|-
|-
| 低层一阶PPL<ref name="LFPPL"/> || Python, Clojure, Pytorch ||  各种: Python, Clojure
|-
|Troll<ref name="Troll"/>
|
|Moscow ML
|-
|Edward<ref>{{Cite web|url=http://edwardlib.org/|title=Edward – Home|website=edwardlib.org|access-date=2017-01-17|archive-date=2020-11-08|archive-url=https://web.archive.org/web/20201108131645/http://edwardlib.org/|dead-url=no}}</ref>
|[[TensorFlow|TensorFlow]]
|Python
|-
|TensorFlow Probability<ref>{{Cite web|url=https://medium.com/tensorflow/introducing-tensorflow-probability-dca4c304e245|title=Introducing TensorFlow Probability|last=TensorFlow|date=2018-04-11|website=TensorFlow|access-date=2018-10-02|archive-date=2021-01-22|archive-url=https://web.archive.org/web/20210122012405/https://medium.com/tensorflow/introducing-tensorflow-probability-dca4c304e245|dead-url=no}}</ref>
|TensorFlow
|Python
|-
|Edward2<ref>{{Cite web|url=https://github.com/tensorflow/probability/tree/master/tensorflow_probability/python/edward2|title='Edward2' TensorFlow Probability module|website=GitHub|language=en|access-date=2018-10-02|archive-date=2020-01-08|archive-url=https://web.archive.org/web/20200108143651/https://github.com/tensorflow/probability/tree/master/tensorflow_probability/python/edward2|dead-url=no}}</ref>
|TensorFlow Probability
|Python
|-
|Pyro<ref>{{Cite web|url=http://pyro.ai|title=Pyro|website=pyro.ai|language=en|access-date=2018-02-09|archive-date=2021-01-19|archive-url=https://web.archive.org/web/20210119202938/http://pyro.ai/|dead-url=no}}</ref>
|[[PyTorch|PyTorch]]
|Python
|-
|Saul<ref>{{Cite web| url= https://cogcomp.org/page/software_view/Saul| title= CogComp - Home| access-date= 2021-01-16| archive-date= 2018-01-16| archive-url= https://web.archive.org/web/20180116081258/https://cogcomp.org/page/software_view/Saul| dead-url= yes}}</ref>
|Scala
|Scala
|-
|Stan<ref>{{Cite web| url= https://mc-stan.org/| title= Stan is a state-of-the-art platform for statistical modeling and high-performance statistical computation.| access-date= 2021-01-16| archive-date= 2021-04-02| archive-url= https://web.archive.org/web/20210402050713/https://mc-stan.org/| dead-url= no}}</ref>
|C++, Python, R
|-
|RankPL<ref>{{Citation|last=Rienstra|first=Tjitze|title=RankPL: A qualitative probabilistic programming language based on ranking theory|date=2018-01-18|url=https://github.com/tjitze/RankPL|accessdate=2018-01-18|archive-date=2020-11-09|archive-url=https://web.archive.org/web/20201109022417/https://github.com/tjitze/RankPL|dead-url=no}}</ref>
|
|Java
|-
|Birch<ref>{{Cite web|url=http://birch-lang.org/|title=Probabilistic Programming in Birch|website=birch-lang.org|access-date=2018-04-20|archive-date=2021-01-29|archive-url=https://web.archive.org/web/20210129174357/https://birch-lang.org/|dead-url=no}}</ref>
|
|C++
|-
|PSI<ref>{{Cite web|url=https://psisolver.org/|title=PSI Solver - Exact inference for probabilistic programs|website=psisolver.org|access-date=2019-08-18|archive-date=2021-01-23|archive-url=https://web.archive.org/web/20210123005134/https://psisolver.org/|dead-url=no}}</ref>
|
|D
|}

== 困难 ==
推理按概率分布的变量给初学编程者带来困难，但是这些困难可以通过使用嵌入到源代码编辑器中的变量分布的[[贝叶斯网络|贝叶斯网络]]可视化和图来解决<ref>{{Cite book|last=Gorinova|first=Maria I.|last2=Sarkar|first2=Advait|last3=Blackwell|first3=Alan F.|last4=Syme|first4=Don|date=2016-01-01|title=A Live, Multiple-Representation Probabilistic Programming Environment for Novices|journal=Proceedings of the 2016 CHI Conference on Human Factors in Computing Systems|series=CHI '16|location=New York, NY, USA|publisher=ACM|pages=2533–2537|doi=10.1145/2858036.2858221|isbn=9781450333627}}</ref>。

==参见==
* {{en-link|统计关系学习|Statistical relational learning}}
* [[归纳编程|归纳编程]]
* {{en-link|贝叶斯编程|Bayesian programming}}

==注释==
{{Reflist|30em|refs= 
<ref name="nova">{{cite web|url=https://dl.acm.org/citation.cfm?id=2627375|title=NOVA: A Functional Language for Data Parallelism|work=acm.org}}</ref>
<ref name="CuPPL">{{cite web|url=https://popl19.sigplan.org/event/lafi-2019-probabilistic-programming-with-cuppl|title=Probabilistic Programming with CuPPL|work=popl19.sigplan.org|access-date=2021-01-16|archive-date=2019-01-21|archive-url=https://web.archive.org/web/20190121232606/https://popl19.sigplan.org/event/lafi-2019-probabilistic-programming-with-cuppl|dead-url=no}}</ref>
<ref name="BAYESDB">{{cite web|url=https://github.com/probcomp/bayeslite|title=BayesDB on SQLite. A Bayesian database table for querying the probable implications of data as easily as SQL databases query the data itself|work=GitHub|access-date=2021-01-16|archive-date=2020-09-21|archive-url=https://web.archive.org/web/20200921032213/https://github.com/probcomp/bayeslite|dead-url=no}}</ref>
<ref name="bayesloop">{{cite web|url=http://bayesloop.com/|title=bayesloop: Probabilistic programming framework that facilitates objective model selection for time-varying parameter models|access-date=2021-01-16|archive-date=2020-12-01|archive-url=https://web.archive.org/web/20201201083445/http://bayesloop.com/|dead-url=no}}</ref>
<ref name="bayesloop2">{{cite web|url=https://github.com/christophmark/bayesloop|title=GitHub -- bayesloop|access-date=2021-01-16|archive-date=2020-09-28|archive-url=https://web.archive.org/web/20200928085417/https://github.com/christophmark/bayesloop|dead-url=no}}</ref>
<ref name="Analytica">{{cite web|url=http://www.analytica.com|title=Analytica-- A Probabilistic Modeling Language|work=lumina.com|access-date=2022-01-03|archive-date=2021-01-28|archive-url=https://web.archive.org/web/20210128111822/https://analytica.com/|dead-url=no}}</ref>
<ref name="Venture">{{cite web|url=http://probcomp.csail.mit.edu/venture/|title=Venture -- a general-purpose probabilistic programming platform|work=mit.edu|access-date=September 20, 2014|archive-url=https://web.archive.org/web/20160125130827/http://probcomp.csail.mit.edu/venture/|archive-date=January 25, 2016}}</ref>
<ref name="Anglican">{{cite web|url=https://github.com/probprog/anglican-infcomp|title=The Anglican Probabilistic Programming System|work=ox.ac.uk|access-date=2021-01-16|archive-date=2020-10-26|archive-url=https://web.archive.org/web/20201026185945/https://github.com/probprog/anglican-infcomp|dead-url=no}}</ref>
<ref name="Probabilistic-C">{{cite web|url=http://www.robots.ox.ac.uk/~brooks/probabilistic-c/|title=Probabilistic C|work=ox.ac.uk|access-date=March 24, 2015|archive-url=https://web.archive.org/web/20160104201746/http://www.robots.ox.ac.uk/~brooks/probabilistic-c/|archive-date=January 4, 2016}}</ref>
<ref name="IBAL">{{cite web|url=http://www.eecs.harvard.edu/~avi/IBAL/|title=IBAL Home Page|archive-url=https://web.archive.org/web/20101226131239/http://www.eecs.harvard.edu/~avi/IBAL/|archive-date=December 26, 2010}}</ref>
<ref name="PRISM">{{cite web|url=http://rjida.meijo-u.ac.jp/prism/|title=PRISM: PRogramming In Statistical Modeling|website=rjida.meijo-u.ac.jp|access-date=July 8, 2015|archive-url=https://web.archive.org/web/20150301155729/http://rjida.meijo-u.ac.jp/prism/|archive-date=March 1, 2015}}</ref>
<ref name="INFET">{{cite web|url=http://research.microsoft.com/en-us/um/cambridge/projects/infernet/|title=Infer.NET|publisher=Microsoft|work=microsoft.com|access-date=2021-01-16|archive-date=2016-12-06|archive-url=https://web.archive.org/web/20161206161021/http://research.microsoft.com/en-us/um/cambridge/projects/infernet/|dead-url=no}}</ref>
<ref name="DMPL">{{cite web|url=https://github.com/analog-garage/dimple|title=Dimple Home Page|work=analog.com|access-date=2021-01-16|archive-date=2020-10-14|archive-url=https://web.archive.org/web/20201014105958/https://github.com/analog-garage/dimple|dead-url=no}}</ref>
<ref name="CHMPL">{{cite web|url=https://github.com/analog-garage/chimple|title=Chimple Home Page|work=analog.com|access-date=2021-01-16|archive-date=2020-11-07|archive-url=https://web.archive.org/web/20201107040923/https://github.com/analog-garage/chimple|dead-url=no}}</ref>
<ref name="BLOG">{{cite web|url=http://people.csail.mit.edu/milch/blog/|title=Bayesian Logic (BLOG)|work=mit.edu|archive-url=https://web.archive.org/web/20110616214423/http://people.csail.mit.edu/milch/blog/|archive-date=June 16, 2011}}</ref>
<ref name="delSAT">{{cite web|url=https://github.com/MatthiasNickles/delSAT/|title=delSAT (probabilistic SAT/ASP)|access-date=2021-01-16|archive-date=2020-10-15|archive-url=https://web.archive.org/web/20201015130315/https://github.com/MatthiasNickles/delSAT|dead-url=no}}</ref>
<ref name="PSQL">{{cite journal|title=PSQL: A query language for probabilistic relational data|doi=10.1016/S0169-023X(98)00015-9 | volume=28|journal=Data & Knowledge Engineering|pages=107–120|year = 1998|last1 = Dey|first1 = Debabrata|last2=Sarkar |first2=Sumit }}</ref>
<ref name="BUGS">{{cite web|url=http://www.mrc-bsu.cam.ac.uk/bugs/|title=The BUGS Project - MRC Biostatistics Unit|work=cam.ac.uk|access-date=January 12, 2011|archive-url=https://web.archive.org/web/20140314080841/http://www.mrc-bsu.cam.ac.uk/bugs/|archive-date=March 14, 2014}}</ref>
<ref name="FACTORIE">{{cite web|url=http://code.google.com/p/factorie/|title=Factorie - Probabilistic programming with imperatively-defined factor graphs - Google Project Hosting|work=google.com|access-date=2021-01-16|archive-date=2012-04-14|archive-url=https://web.archive.org/web/20120414163549/http://code.google.com/p/factorie/|dead-url=no}}</ref>
<ref name="PMTK">{{cite web|url=http://code.google.com/p/pmtk3/|title=PMTK3 - probabilistic modeling toolkit for Matlab/Octave, version 3 - Google Project Hosting|work=google.com|access-date=2021-01-16|archive-date=2011-04-10|archive-url=https://web.archive.org/web/20110410235830/http://code.google.com/p/pmtk3/|dead-url=no}}</ref>
<ref name="Gamble">{{cite web|url=https://github.com/rmculpepper/gamble|title=gamble: Probabilistic Programming|first=Ryan|last=Culpepper|date=January 17, 2017|via=GitHub|access-date=2021-01-16|archive-date=2020-11-06|archive-url=https://web.archive.org/web/20201106101114/https://github.com/rmculpepper/gamble|dead-url=no}}</ref>
<ref name="Alchemy">{{cite web|url=http://alchemy.cs.washington.edu/|title=Alchemy - Open Source AI|work=washington.edu|access-date=2021-01-16|archive-date=2008-06-16|archive-url=https://web.archive.org/web/20080616111428/http://alchemy.cs.washington.edu/|dead-url=no}}</ref>
<ref name="Dyna">{{cite web|url=http://www.dyna.org/|title=Dyna|website=www.dyna.org|access-date=January 12, 2011|archive-url=https://web.archive.org/web/20160117155947/http://dyna.org/|archive-date=January 17, 2016}}</ref>
<ref name="Figaro">{{cite web|url=http://www.cra.com/figaro|title=Charles River Analytics - Probabilistic Modeling Services|work=cra.com}}</ref>
<ref name="Church">{{cite web|url=http://projects.csail.mit.edu/church/wiki/Church|title=Church|work=mit.edu|access-date=April 8, 2013|archive-url=https://web.archive.org/web/20160114182510/http://projects.csail.mit.edu/church/wiki/Church|archive-date=January 14, 2016}}</ref>
<ref name="ProbLog">{{cite web|url=http://dtai.cs.kuleuven.be/problog|title=ProbLog: Probabilistic Programming|website=dtai.cs.kuleuven.be|access-date=2021-01-16|archive-date=2020-11-08|archive-url=https://web.archive.org/web/20201108094313/https://dtai.cs.kuleuven.be/problog/|dead-url=no}}</ref>
<ref name="ProBT">{{cite web|url=http://www.probayes.com/fr/Bayesian-Programming-Book/downloads/|title=ProbaYes - Ensemble, nous valorisations vos données|author=ProbaYes|work=probayes.com|access-date=November 26, 2013|archive-url=https://web.archive.org/web/20160305000751/http://www.probayes.com/fr/Bayesian-Programming-Book/downloads/|archive-date=March 5, 2016}}</ref>
<ref name="Stan">{{cite web|url=http://mc-stan.org/|archive-url=https://web.archive.org/web/20120903133321/http://mc-stan.org/|archive-date=2012-09-03|title=Stan|work=mc-stan.org}}</ref>
<ref name="Hakaru">{{cite web|url=https://hakaru-dev.github.io/|title=Hakaru Home Page|work=hakaru-dev.github.io/|access-date=2021-01-16|archive-date=2020-11-08|archive-url=https://web.archive.org/web/20201108101812/https://hakaru-dev.github.io/|dead-url=no}}</ref>
<ref name="BAli-Phy">{{cite web|url=http://www.bali-phy.org/|title=BAli-Phy Home Page|work=bali-phy.org|access-date=2021-01-16|archive-date=2021-03-22|archive-url=https://web.archive.org/web/20210322183842/http://www.bali-phy.org/|dead-url=no}}</ref>
<ref name="ProbCog">{{cite web|url=https://github.com/opcode81/ProbCog/wiki/Features|title=ProbCog|work=GitHub|access-date=2021-01-16|archive-date=2020-11-29|archive-url=https://web.archive.org/web/20201129043616/https://github.com/opcode81/ProbCog/wiki/Features|dead-url=no}}</ref>
<ref name="Tuffy">{{cite web|url=http://i.stanford.edu/hazy/tuffy/home|title=Tuffy: A Scalable Markov Logic Inference Engine|work=stanford.edu|access-date=2021-01-16|archive-date=2020-07-22|archive-url=https://web.archive.org/web/20200722223634/http://i.stanford.edu/hazy/tuffy/home|dead-url=no}}</ref>
<ref name="PyMC3">{{cite web|url=https://pymc-devs.github.io/pymc3/|title=PyMC3|author=PyMC devs|work=pymc-devs.github.io|access-date=2021-01-16|archive-date=2017-08-16|archive-url=https://web.archive.org/web/20170816190843/https://pymc-devs.github.io/pymc3/|dead-url=no}}</ref>
<ref name="Lea">{{cite web|url=https://bitbucket.org/piedenis/lea|title=Lea Home Page|work=bitbucket.org|access-date=2021-01-16|archive-date=2021-01-21|archive-url=https://web.archive.org/web/20210121190224/https://bitbucket.org/piedenis/lea|dead-url=no}}</ref>
<ref name="WebPPL">{{cite web|url=http://dippl.org/|title=WebPPL Home Page|work=github.com/probmods/webppl|access-date=2021-01-16|archive-date=2020-12-29|archive-url=https://web.archive.org/web/20201229191652/http://dippl.org/|dead-url=no}}</ref>
<ref name="Turingjl">{{cite web|url=https://github.com/yebai/Turing.jl|title=The Turing language for probabilistic programming}}</ref>
<ref name="Troll">{{cite web|url=http://topps.diku.dk/torbenm/troll.msp|title=Troll dice roller and probability calculator|access-date=2021-01-16|archive-date=2021-01-25|archive-url=https://web.archive.org/web/20210125023354/https://topps.diku.dk/torbenm/troll.msp|dead-url=no}}</ref>
<ref name="PWhile">{{cite web|url=https://github.com/zz5013/pwCompiler|title=PWhile Compiler|work=GitHub|access-date=2021-01-16|archive-date=2020-10-17|archive-url=https://web.archive.org/web/20201017002516/https://github.com/zz5013/pwCompiler|dead-url=no}}</ref>
<ref name="LFPPL">{{cite web|url=https://github.com/bradleygramhansen/PyLFPPL|title=LF-PPL: A Low-Level First Order Probabilistic Programming Language for Non-Differentiable Models|work=ox.ac.uk}}</ref>
}}

== 外部链接 ==
*[http://anyall.org/blog/2009/12/list-of-probabilistic-model-mini-language-toolkits/ List of Probabilistic Model Mini Language Toolkits] {{Wayback|url=http://anyall.org/blog/2009/12/list-of-probabilistic-model-mini-language-toolkits/ |date=20100105030932 }}
*[https://web.archive.org/web/20160110035042/http://probabilistic-programming.org/wiki/Home Probabilistic programming wiki]

[[Category:概率模型|Category:概率模型]]
[[Category:数学软件|Category:数学软件]]
[[Category:编程典范|Category:编程典范]]