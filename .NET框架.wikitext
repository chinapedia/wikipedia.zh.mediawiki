{{Otheruses|subject=[[微软|微软]]公司的一项技术|other=顶级域名|.net}}
{{多個問題|
{{Expert|time=2018-07-10}}
{{update|time=2018-06-03T17:24:45+00:00}}
{{refimprove|time=2015-08-06T07:07:11+00:00}}
}}
{{noteTA
|G1=IT
|G2=Windows
|G3=free license
|T=zh-hans:.NET框架; zh-hant:.NET Framework;
|1=zh-hans:.NET框架; zh-hant:.NET Framework;
|2=zh-hans:平台无关性; zh-hant:平臺獨立性;
|3=zh-hans:通用语言运行时; zh-hant:通用語言執行層;
|4=zh-hans:Java编程语言; zh-hant:Java程式語言;
|5=zh-hans:創意者更新; zh-hant:創作者更新;
}}
{{Infobox Software
| name                   = .NET Framework
| logo                   = Microsoft .NET.png
| logo size              = 120px
| screenshot             = DotNet.svg
| caption                = .NET Framework的组件堆栈
| developer              = [[微軟|Microsoft]]
| released               = {{Start date and age|2002|02|13}}
| latest_release_version = 4.8.0
| latest_release_date    = {{Release date and age|2019|07|25}}
| operating_system       = [[Windows_98|Windows 98]]或更新<br />[[Windows_NT_4.0|Windows NT 4.0]]或更新
| genre                  = [[軟體框架|軟體框架]]
| license                = [[專有軟體|專有軟體]]<br />{{tsl|en|Framework Class Library|FCL}}採用微軟Ms-RSL[[共享源代碼|共享源代碼]]授權<ref name="sourcerelease">{{cite web |url=http://weblogs.asp.net/scottgu/archive/2007/10/03/releasing-the-source-code-for-the-net-framework-libraries.aspx |title=Releasing the Source Code for the NET Framework |author=[[Scott_Guthrie|Scott Guthrie]] |date=2007-10-03 |accessdate=2010-09-15 |archiveurl=https://web.archive.org/web/20100907233621/http://weblogs.asp.net/scottgu/archive/2007/10/03/releasing-the-source-code-for-the-net-framework-libraries.aspx |archivedate=2010-09-07 |deadurl=yes }}</ref><br />部份採取[[MIT許可證|MIT許可證]]<ref name=netcore-oss>{{cite web|title=.NET Core is Open Source|url=http://blogs.msdn.com/b/dotnet/archive/2014/11/12/net-core-is-open-source.aspx|website=.NET Framework Blog|publisher=Microsoft|accessdate=2014-11-12|archive-date=2014-12-31|archive-url=https://web.archive.org/web/20141231222952/http://blogs.msdn.com/b/dotnet/archive/2014/11/12/net-core-is-open-source.aspx|dead-url=no}}</ref><ref name=zdnet-moreopensource>{{cite web|last1=Foley|first1=Mary Jo|title=Microsoft to open source more of .NET, and bring it to Linux, Mac OS X|url=http://www.zdnet.com/microsoft-to-open-source-more-of-net-and-bring-it-to-linux-mac-os-x-7000035716/|website=ZDNet|accessdate=2014-11-12|archive-date=2014-11-12|archive-url=https://web.archive.org/web/20141112190924/http://www.zdnet.com/microsoft-to-open-source-more-of-net-and-bring-it-to-linux-mac-os-x-7000035716/|dead-url=no}}</ref>
|website                  = {{URL|https://www.microsoft.com/net}}
}}
-{zh-hans:'''.NET框架'''（{{lang-en|.NET Framework}}）;zh-hant:'''.NET Framework'''}-是由[[微軟|微軟]]開發，一個致力於[[敏捷軟體開發|敏捷軟體開發]]（agile software development）、[[快速應用開發|快速應用開發]]（rapid application development）、[[跨平臺|平臺獨立性]]和[[網路透明化|網路透明化]]的[[軟體框架|軟體框架]]。.NET是微軟為2000年代對[[伺服器|伺服器]]和[[個人電腦|桌上型]][[軟體工程|軟體工程]]邁出的第一步。.NET包含許多有助於[[互聯網|互聯網]]和[[內部網|內部網]]應用迅捷開發的技術。

.NET框架是[[微軟|微軟]]公司繼[[Windows_DNA|Windows DNA]]之後的新開發平臺。.NET框架是以一種採用系統虛擬機運行的編程平臺，以[[公共語言運行庫|通用語言運行庫]]（Common Language Runtime）為基礎，支援多種語言（[[C＃|C#]]、[[F＃|F#]]、[[Visual_Basic_.NET|VB.NET]]、[[C++|C++]]、[[Python|Python]]等）的開發。

.NET也為[[應用程式介面|應用程式介面]]（API）提供了新功能和開發工具。這些革新使得程式設計員可以同時進行[[Microsoft_Windows|Windows]][[應用軟體|應用軟體]]和[[萬維網|網路]][[應用軟體|應用軟體]]以及[[軟體組件|元件]]和服務（[[web服務|web服務]]）的開發。.NET提供了一個新的[[反射式编程|反射性的]]且[[物件導向程式設計|物件導向程式設計]]編程介面。.NET設計得足夠通用化從而使許多不同[[高階語言|高階語言]]都得以被[[編譯器|彙集]]。

[[甲骨文公司|甲骨文公司]]的[[Java|Java程式語言]]和[[J2EE|Java平臺企業版]]技術是.NET平臺的競爭對手之一。

2014年11月12日，微軟宣布將完全開放.NET Framework的原始碼，並提供給Linux和macOS使用。<ref>{{cite web|title=Announcing Open Source of .NET Core Framework, .NET Core Distribution for Linux/OSX, and Free Visual Studio Community Edition|url=http://weblogs.asp.net/scottgu/announcing-open-source-of-net-core-framework-net-core-distribution-for-linux-osx-and-free-visual-studio-community-edition|publisher=microsoft|accessdate=2014-11-12|archive-date=2014-11-12|archive-url=https://web.archive.org/web/20141112221339/https://weblogs.asp.net/scottgu/announcing-open-source-of-net-core-framework-net-core-distribution-for-linux-osx-and-free-visual-studio-community-edition|dead-url=no}}</ref>

== 版本 ==
{|class="wikitable" style="text-align: center;"
|+.NET框架版本歷史一覽
!colspan="2" rowspan="2"|版本!!rowspan="2"|[[CLR|公共語言執行時]]!!rowspan="2"|發佈時間!!rowspan="2"|隨同分發於Visual Studio!!colspan="2"|預安裝於Windows!!rowspan="2"|包含之前版本
|-
!客戶端版!!伺服器版
|-
| colspan="2"| 1.0{{Ref label|o|0|none}}||1.0||2002年2月13日||[[Visual_Studio|.NET]]||{{N/A}}||{{N/A}}||rowspan="3" style="text-align:center; background:#ECECEC; color:grey; font-size: 84%"|不適用
|-
| colspan="2"|1.1||1.1||2003年4月24日||[[Visual_Studio|.NET 2003]]||{{N/A}}||[[Windows_Server_2003|2003]]
|-
| colspan="2"|2.0||rowspan="6"|2.0||2005年11月7日||[[Visual_Studio|2005]]||{{N/A}}||[[Windows_Server_2003|2003 R2]]
|-
| colspan="2"|3.0||2006年11月6日||{{N/A}}||[[Windows_Vista|Vista]]||{{N/A}}||2.0
|-
| rowspan="4"|3.5||3.5||2007年11月19日||[[Visual_Studio|2008]]||{{N/A}}||{{N/A}}||rowspan="2"|3.0 SP1 (2.0 SP1)
|-
| 3.5.1||2008年2月4日||{{N/A}}||{{N/A}}||[[Windows_Server_2008|2008]]
|-
| 3.5 SP1||2008年8月11日||[[Visual_Studio|2008 SP1]]||{{N/A}}||{{N/A}}||rowspan="2"|3.0 SP2 (2.0 SP2)
|-
| 3.5.1 SP1||2009年7月22日||{{N/A}}||[[Windows_7|7]]||[[Windows_Server_2008_R2|2008 R2]]
|-
|rowspan="11"| 4 ||4.0||rowspan="11"|4.0||2010年4月12日||[[Visual_Studio|2010]]||{{N/A}}||{{N/A}}||rowspan="11" style="text-align:center; background:#ECECEC; color:grey; font-size: 84%"|不適用<br />（置位更新）
|-
|4.5||2012年8月15日||[[Visual_Studio|2012]]||[[Windows_8|8]]
||[[Windows_Server_2012|2012]]
|-
|4.5.1||2013年10月17日||[[Visual_Studio|2013]]||[[Windows_8.1|8.1]]||[[Windows_Server_2012|2012 R2]]
|-
|4.5.2||2014年5月5日||{{N/A}}||{{N/A}}||{{N/A}}
|-
|4.6||2015年7月20日||[[Visual_Studio|2015]]||[[Windows_10|10]]||{{N/A}}
|-
|4.6.1||2015年11月30日||[[Visual_Studio|2015 Update 1]]||[[Windows_10|10 v1511]]||{{N/A}}
|-
|4.6.2||2016年8月2日||{{N/A}} ||[[Windows_10|10 v1607]]||[[Windows_Server|2016]]
|-
|4.7||2017年4月5日||[[Visual_Studio|2017 v15.3]]||[[Windows_10|10 v1703]]||{{N/A}}
|-
|4.7.1||2017年10月17日||[[Visual_Studio|2017 v15.5]]||[[Windows_10|10 v1709]]||[[Windows_Server|v1709]]
|-
|4.7.2||2018年4月30日||[[Visual_Studio|2019]]||[[Windows_10|10 v1803]]||[[Windows_Server|v1803]]
|-
|4.8||2019年4月18日||{{N/A}}||[[Windows_10|10 v1909]]||[[Windows_Server|v1909]]
|}

{|class="wikitable" style="text-align: center;"
|+平台支援信息一覽
!rowspan="2"|版本!!rowspan="2"|[[指令集架構|指令集架構]]!!colspan="2"|視窗版本
|-
!客戶端!!伺服器
|-
|1.0||[[IA-32|IA-32]]||[[Windows_98|98]], [[Windows_ME|ME]], [[Windows_NT_4.0|NT 4.0 SP6a]], [[Windows_2000|2000]], [[Windows_XP|XP]]||[[Windows_NT_4.0|NT 4.0 SP6a]], [[Windows_2000|2000]]
|-
|1.1||[[IA-32|IA-32]]{{Ref label|a|1|none}}||[[Windows_NT_4.0|NT 4.0 SP6a]], [[Windows_2000|2000]], [[Windows_XP|XP]],[[Windows_Vista|Vista]]||[[Windows_NT_4.0|NT 4.0 SP6a]], [[Windows_2000|2000]], [[Windows_Server_2003|2003]], [[Windows_Server_2008|2008]]
|-
|2.0 ~ 3.5||[[IA-32|IA-32]], [[IA-64|Itanium]], [[x86-64|x86-64]]||[[Windows_XP|XP]], [[Windows_Vista|Vista]], [[Windows_7|7]], [[Windows_8|8]], [[Windows_8.1|8.1]], [[Windows_10|10]]||[[Windows_Server_2003|2003]], [[Windows_Server_2003|2003 R2]], [[Windows_Server_2008|2008]], [[Windows_Server_2008_R2|2008 R2]], [[Windows_Server_2012|2012]], [[Windows_Server_2012|2012 R2]], [[Windows_Server_2016|2016]], [[Windows_Server_2019|2019]]
|-
|4.0||[[IA-32|IA-32]], [[IA-64|Itanium]]{{Ref label|b|2|none}},[[x86-64|x86-64]]||[[Windows_XP|XP SP3]], [[Windows_Vista|Vista SP1]], [[Windows_7|7]], [[Windows_8|8]], [[Windows_8.1|8.1]], [[Windows_10|10]]||[[Windows_Server_2003|2003 SP2]], [[Windows_Server_2003|2003 R2 SP2]], [[Windows_Server_2008|2008]], [[Windows_Server_2008_R2|2008 R2]], [[Windows_Server_2012|2012]], [[Windows_Server_2012|2012 R2]], [[Windows_Server_2016|2016]], [[Windows_Server_2019|2019]]
|-
|4.5{{Ref label|c|3|none}} ~ 4.6|| rowspan="3" |[[IA-32|IA-32]], [[x86-64|x86-64]]|| [[Windows_Vista|Vista SP2]], [[Windows_7|7 SP1]], [[Windows_8|8]], [[Windows_8.1|8.1]], [[Windows_10|10]]||[[Windows_Server_2008|2008 SP2]], [[Windows_Server_2008_R2|2008 R2 SP1]], [[Windows_Server_2012|2012]], [[Windows_Server_2012|2012 R2]], [[Windows_Server_2016|2016]], [[Windows_Server_2019|2019]]
|-
|4.6.1 || [[Windows_7|7 SP1]], [[Windows_8|8]], [[Windows_8.1|8.1]], [[Windows_10|10]]|| rowspan="2" | [[Windows_Server_2008_R2|2008 R2 SP1]], [[Windows_Server_2012|2012]], [[Windows_Server_2012|2012 R2]], [[Windows_Server_2016|2016]], [[Windows_Server_2019|2019]]
|-
|4.6.2 ~ 4.8 || [[Windows_7|7 SP1]], [[Windows_8.1|8.1]], [[Windows_10|10 v1607起]]
|}
{{Refbegin}}
<small>
:0.{{Note label|o||none}} 自SP1起所有Windows XP分发光碟或镜像中均包含1.0版的安装包，并且這個版本作為Windows XP Tablet PC和Media Center版的必要組成元素。
:1.{{Note label|a||none}} .Net Framework 1.1 可以部署於Itanium和x86-64平台， 由WOW64支援。
:2.{{Note label|b||none}} 在Itanium平台上有些功能不被支援，比如WPF。
:3.{{Note label|c||none}} 從版本4.5起，随同Windows RT, Windows RT 8.1運用於ARM v7平台，由於是精簡版，未列於此表。
</small>
{{Refend}}

== 發行歷史 ==
{{Split section|.NET框架版本历史}}
;主條目：{{link-en|.NET框架版本历史|.NET Framework version history}}
=== .NET Framework 1.0 ===
完整版號 - 1.0.3705

這是最早的.NET架構，於2002年發行。它可以以一個獨立且可重新分發的包的形式或在一個軟體發展工具包集中被獲得。它也是第一個微軟[[Visual_Studio_.NET|Visual Studio .NET]]的發行版的一部分（也被稱作Visual Studio .NET 2002）。

=== .NET Framework 1.1 ===
完整版號 - 1.1.4322

這是首個主要的.NET框架升級版本，發行於2003年。它可以以一個獨立的可重新分發的包的形式或在一個軟體發展工具包集中被獲得。它也是第二個微軟[[Visual_Studio_.NET|Visual Studio .NET]]版本的一部分（也被稱作Visual Studio .NET 2003）。它也是首個被[[Microsoft_Windows|Windows作業系統]]-[[Windows_Server_2003|Windows Server 2003]]所內置的.NET框架版本。

自1.0版本以來的改進：

* 內建了對mobile ASP.NET控制項的支援。這在1.0版本是以附加功能方式實現的，現在已經集成到框架的內部。
* 安全方面的變更 - 使得Windows表單代碼以可靠的行為執行，從而可以在Internet環境內安全運行，並且加入了ASP.NET應用程式的代碼安全訪問功能。
* 內建了對[[ODBC|ODBC]]和[[Oracle|Oracle]]資料庫的支援。這在1.0版本是以附加功能方式實現的，現在已經集成到框架的內部。
* [[.NET_Compact_Framework|.NET Compact Framework]]- 這是一個用於智慧設備（例如[[Pocket_PC|Pocket PC]]或者[[智慧手機|SmartPhone]]）的.NET框架的子集。
* 對[[IPv6|IPv6]]的支持。
* 大量的API變更<ref name="gotdotnet.com">{{cite web |url=http://www.gotdotnet.com/team/upgrade/apiChanges.aspx |title=存档副本 |accessdate=2006-12-15 |deadurl=yes |archiveurl=https://web.archive.org/web/20070110202750/http://www.gotdotnet.com/team/upgrade/apiChanges.aspx |archivedate=2007-01-10 }} GotDotNet: API Changes between versions of the .NET Framework</ref>。

=== .NET Framework 2.0 ===
完整版號 - 2.0.50727.42，發行於2005年10月27日。

.NET Framework 2.0的元件都包含在 Visual Studio 2005和SQL Server 2005里面。通過[[Microsoft_Developer_Network|MSDN]] Universe版可以免費下載[[RTM|RTM]]版本。

自1.1版本以來的改進：

* 大量的API變更<ref name="gotdotnet.com"/>。
* 新的API讓需要管理.NET運行庫實例的非.NET的應用程式可以做到這點。這個新的API對.NET運行庫的各種功能，包括：多線程、記憶體分配、代碼載入等<ref>{{cite web |url=http://winfx.msdn.microsoft.com/library/en-us/dv_fxunmanref/html/703b8381-43db-4a4d-9faa-cca39302d922.asp |title=存档副本 |accessdate=2006-12-15 |deadurl=yes |archiveurl=https://web.archive.org/web/20051119145053/http://winfx.msdn.microsoft.com/library/en-us/dv_fxunmanref/html/703b8381-43db-4a4d-9faa-cca39302d922.asp |archivedate=2005-11-19 }} 詳細說明</ref>，提供了很好的控制。它最初是為[[Microsoft_SQL_Server|Microsoft SQL Server]]能夠有效率的使用.NET運行庫而設計的，因為Microsoft SQL Server擁有它自己的日程管理器和記憶體管理器。

=== .NET Framework 3.0 ===
{{Main|.NET Framework 3.0}}
發佈日期2006/11/21。曾用名「WinFX」。依然使用.NET Framework 2.0版本的[[公共語言運行庫|公共語言運行庫]]（CLR），並加入了適應未來軟體發展方向的4個框架：

* [[Windows_Presentation_Foundation|Windows Presentation Foundation]]（[[WPF|WPF]]）：提供更佳的用戶體驗，用來開發Windows Forms程式以及浏览器應用程式（參見[[Microsoft_Silverlight|WPF/E]]）.
* [[Windows_Communication_Foundation|Windows Communication Foundation]]（[[WCF|WCF]]）：提供SOA（面向服務的軟體構架）支援的安全的網路服務（Web Service）框架。
* [[Windows_Workflow_Foundation|Windows Workflow Foundation]]（[[WF|WF]]）：提供一個設計與發展工作流程導向（Workflow-oriented）應用程式基礎支援的應用程式介面。
* [[Windows_CardSpace|Windows CardSpace]]：提供一個SSO的解決方案，每個使用者都有各自的[[CardSpace|CardSpace]]。

=== .NET Framework 3.5 ===
這個版本將包含一個支持C#和VB.Net中心的語言特性的[[編譯器|編譯器]]，以及對[[語言整合查詢|語言整合查詢]]（LINQ, Language-Integrated Query）的支援。該版本隨[[Visual_Studio_.NET#Visual_Studio_2008|Visual Studio 2008]]一起發佈。

同时，.NET Framework 3.5自动包含.NET Framework 2.0 SP1以及.NET Framework 3.0 SP1，用于为这两个版本提供安全性修复，以及少量新增的类库（如System.DateTimeOffest），此版本提供的新功能有：

* [[扩展方法|扩展方法]]（Extension Method）属性（Attribute），用于为扩展方法提供支持
* [[LINQ|LINQ]]支持，包括[[LINQ_to_Object|LINQ to Object]]、[[LINQ_to_ADO.NET|LINQ to ADO.NET]]以及[[LINQ_to_XML|LINQ to XML]]
* [[表达式目录树|表达式目录树]]（Expression Tree），用于为[[Lambda表达式|Lambda表达式]]提供支持
* 与语言集成查询（LINQ）和数据感知紧密集成。借助这个新功能，您可以使用相同的语法，在任何支持LINQ的语言中编写相关代码，以筛选和枚举多种类型的SQL数据、集合、XML和数据集，以及创建它们的投影。
* 利用ASP.NET AJAX可以创建更有效、更具交互性、高度个性化的Web体验，这些体验在所有最流行的浏览器上都能实现。
* 用于生成WCF服务的全新Web协议支持，包括AJAX、JSON、REST、POX、RSS、ATOM和若干新的WS-*标准。
* Visual Studio 2008中面向WF、WCF和WPF的完整工具支持，其中包括支持工作流的服务这一新技术。
* .NET Framework 3.5基类库（BCL）中的新类可满足许多常见的客户请求。

==== .NET Framework 3.5 SP1 ====
.NET Framework 3.5 SP1自动包含.NET Framework 2.0 SP2以及.NET Framework 3.0 SP2。该版本随[[Visual_Studio_.NET#Visual_Studio_2008_SP1|Visual Studio 2008 SP1]]发布，此版本提供了下列的新功能：

* 新增的ASP.NET功能包括ASP.NET动态数据和ASP.NET AJAX附加功能，前者提供了无需编写代码就可实现数据驱动的快速开发的丰富支架框架，后者为管理浏览器历史记录提供了支持（后退按钮支持）。
* ADO.NET Entity Framework。
* 对SQL Server 2008的数据提供程序支持。
* [[.NET_Framework客户端配置文件|.NET Framework客户端配置文件]]是完整版.NET Framework的子集，面向客户端应用程序。这改善了尚未安装.NET Framework的计算机上的安装体验。
* 改进Windows Presentation Foundation的性能，其中包括启动速度的位图效果性能的提高。为Windows Presentation Foundation增加的功能包括对业务线应用程序的更好支持、本机闪屏支持、DirectX像素着色器支持以及新的WebBrowser控件。
* ClickOnce应用程序发布者可以根据具体情况决定是否取消签名和散列，开发人员可以以编程方式安装显示自定义署名的ClickOnce应用程序，ClickOnce错误对话框支持指向网络上特定于应用程序的支持站点的链接。
* 用于SQL Server的.NET Framework数据提供程序（System.Data.SqlClient）完全支持SQL Server 2008数据库引擎的所有新功能。有关.NET Framework对SQL Server 2008的支持的更多信息，请参见SQL Server中的新功能（ADO.NET）。ADO.NET数据平台是一种多版本策略，它使开发人员能够针对概念性实体数据模型进行编程，从而减轻他们的编码和维护工作。此平台提供了ADO.NET Entity Framework、实体数据模型（EDM）、对象服务、LINQ to Entities、Entity SQL、EntityClient、ADO.NET数据服务及实体数据模型工具。
* Windows Communication Foundation现在提供了改进的互操作性支持，增强了部分信任方案中的调试体验，并扩展了整合协议支持以更广泛地应用于Web 2.0应用程序，从而使DataContract序列化程序更易于使用。
* Microsoft.VisualBasic.PowerPacks命名空间引入了新的DataRepeater控件，该控件以可自定义的列表格式显示数据。此命名空间还包含新的矢量形状。

=== .NET Framework 4.0 ===
*.NET Framework 4.0主要增加了并行支持，英文版於2010年4月12日推出。<ref>{{cite web|title=What's New in the .NET Framework 4|url=http://msdn.microsoft.com/zh-tw/library/ms171868%28v=vs.100%29.aspx|work=MSDN Library|publisher=Microsoft|accessdate=2013-09-09|archive-date=2013-10-21|archive-url=https://web.archive.org/web/20131021135518/http://msdn.microsoft.com/zh-tw/library/ms171868%28v=vs.100%29.aspx|dead-url=no}}</ref>
*新增System.Lazy <T>，做為延遲初始化時使用。<ref>{{cite web|title=Lazy<T> Class|url=http://msdn.microsoft.com/zh-tw/library/dd642331%28v=vs.100%29.aspx|work=MSDN Library|publisher=Microsoft|accessdate=2013-09-09|archive-date=2013-10-21|archive-url=https://web.archive.org/web/20131021143612/http://msdn.microsoft.com/zh-tw/library/dd642331(v=vs.100).aspx|dead-url=no}}</ref>
*新增大整數的System.Numerics.BigInteger<ref>{{cite web|title=BigInteger Structure|url=http://msdn.microsoft.com/en-us/library/system.numerics.biginteger%28v=vs.100%29.aspx|work=MSDN Library|publisher=Microsoft|accessdate=2013-09-09|archive-date=2014-01-12|archive-url=https://web.archive.org/web/20140112055756/http://msdn.microsoft.com/en-us/library/system.numerics.biginteger(v=vs.100).ASPX|dead-url=no}}</ref>與複數的System.Numerics.Complex<ref>{{cite web|title=Complex Structure|url=http://msdn.microsoft.com/en-us/library/system.numerics.complex%28v=vs.100%29.aspx|work=MSDN Library|publisher=Microsoft|accessdate=2013-09-09|archive-date=2012-12-12|archive-url=https://web.archive.org/web/20121212014708/http://msdn.microsoft.com/en-us/library/system.numerics.complex(v=vs.100).aspx|dead-url=no}}</ref>（使用時需加入參考System.Numerics.dll）
*微軟於2016年1月12開始停止對.NET 4.0, 4.5, 4.5.1的安全性更新及技術支援

=== .NET Framework 4.5 ===
.NET Framework 4.5是.NET Framework 4高相容性的置位更新（in-place update）。搭配C# 或Visual Basic程式設計語言使用.NET Framework 4.5，即可編寫Windows Store風格的應用程式。.NET Framework 4.5可提升效能、可靠度及安全性。於2012年8月15日推出。但請注意，.NET Framework 4.5只支援Windows Vista SP2以上版本的作業系統。<ref>{{cite web|title=Download Microsoft .NET Framework 4.5 from Official Microsoft Download Center|url=http://www.microsoft.com/en-us/download/details.aspx?id=30653|publisher=microsoft|accessdate=2014-04-15|archive-date=2014-04-15|archive-url=https://web.archive.org/web/20140415215620/http://www.microsoft.com/en-us/download/details.aspx?id=30653|dead-url=no}}</ref>
*微軟於2016年1月12開始停止對.NET 4.0, 4.5, 4.5.1的安全性更新及技術支援

==== .NET Framework 4.5.1====
.NET Framework 4.5.1於2013年10月17日隨著Visual Studio 2013發布。<ref>{{cite web|title=.NET Framework 4.5.1 RTM => start coding|url=http://blogs.msdn.com/b/dotnet/archive/2013/10/17/net-framework-4-5-1-rtm-gt-start-coding.aspx|work=.NET Framework Blog|publisher=[[Microsoft|Microsoft]]|accessdate=2013-11-18|date=2013-10-17|archive-date=2013-11-22|archive-url=https://web.archive.org/web/20131122042500/http://blogs.msdn.com/b/dotnet/archive/2013/10/17/net-framework-4-5-1-rtm-gt-start-coding.aspx|dead-url=no}}</ref>此版本需要Windows Vista SP2或更新的環境，<ref>{{cite web|title=Microsoft .NET Framework 4.5.1 (Offline Installer)|url=http://www.microsoft.com/en-us/download/details.aspx?id=40779|work=Download Center|publisher=[[Microsoft|Microsoft]]|accessdate=2013-11-18|date=2013-10-12|archive-date=2013-11-28|archive-url=https://web.archive.org/web/20131128023006/http://www.microsoft.com/en-us/download/details.aspx?id=40779|dead-url=no}}</ref>並且包含在Windows 8.1和Windows Server 2012 R2中。.NET Framework 4.5.1的新功能有：<ref name="net451_features">{{cite web|title=.NET Framework 4.5.1 RTM => start coding|url=https://blogs.msdn.microsoft.com/dotnet/2013/10/17/net-framework-4-5-1-rtm-start-coding/|website=MSDN Blogs|publisher=Microsoft|accessdate=2016-10-04|archive-date=2016-10-09|archive-url=https://web.archive.org/web/20161009180408/https://blogs.msdn.microsoft.com/dotnet/2013/10/17/net-framework-4-5-1-rtm-start-coding/|dead-url=no}}</ref>

* 偵錯器支持X64編輯和繼續（EnC）
* 偵錯器支持查看託管返回值
* “Call Stack”和“Task”視窗中的異步感知偵錯
* 偵錯器支持分析.NET內存轉儲（在Visual Studio Ultimate SKU中）
* 適用於Performance 及 Diagnostics中心的.NET開發者工具
* 代碼分析UI改進
* ADO.NET空閒連接彈性

==== .NET Framework 4.5.2====
.NET Framework 4.5.2的發表宣佈於2014年5月5日。<ref name="net452_release">{{cite web|title=Announcing the .NET Framework 4.5.2|url=https://blogs.msdn.microsoft.com/dotnet/2014/05/05/announcing-the-net-framework-4-5-2/|website=MSDN Blogs|publisher=Microsoft|accessdate=2014-06-11|archive-date=2017-03-14|archive-url=https://web.archive.org/web/20170314154349/https://blogs.msdn.microsoft.com/dotnet/2014/05/05/announcing-the-net-framework-4-5-2/|dead-url=no}}</ref>此版本需要Windows Vista SP2及更新版本。<ref>{{cite web|title=Microsoft .NET Framework 4.5.2 (Offline Installer)|url=http://www.microsoft.com/en-us/download/details.aspx?id=42642|work=Download Center|publisher=[[Microsoft|Microsoft]]|accessdate=2017-05-06|date=2014-05-06|archive-date=2017-05-04|archive-url=https://web.archive.org/web/20170504193816/http://www.microsoft.com/en-us/download/details.aspx?id=42642|dead-url=no}}</ref>對於Windows Forms應用程序，對高DPI方案進行了改進。對於ASP.NET，可以使用更高可靠性的HTTP開頭檢查和修改方法，這是一種規劃背景異步工作任務的新方法。<ref name="net452_release" />

=== .NET Framework 4.6===
.NET Framework 4.6 是在2014年11月12月宣佈，<ref name="net46">{{cite web|url=http://blogs.msdn.com/b/dotnet/archive/2014/11/12/announcing-net-2015-preview-a-new-era-for-net.aspx|title=Announcing .NET 2015 Preview: A New Era for .NET|author=.NET Team|accessdate=2015-02-27|archive-date=2015-02-28|archive-url=https://web.archive.org/web/20150228142502/http://blogs.msdn.com/b/dotnet/archive/2014/11/12/announcing-net-2015-preview-a-new-era-for-net.aspx|dead-url=no}}</ref>而在2015年7月20日發行。<ref name=":0">{{cite web|last1=Lander|first1=Rich|title=Announcing .NET Framework 4.6|url=http://blogs.msdn.com/b/dotnet/archive/2015/07/20/announcing-net-framework-4-6.aspx|website=.NET Blog|publisher=[[Microsoft|Microsoft]]|date=2015-07-20|quote=The team is updating the System.Security.Cryptography APIs to support the Windows CNG cryptography APIs [...] since it supports modern cryptography algorithms [Suite B Support], which are important for certain categories of apps.|accessdate=2018-07-10|archive-date=2015-07-20|archive-url=https://web.archive.org/web/20150720161043/http://blogs.msdn.com/b/dotnet/archive/2015/07/20/announcing-net-framework-4-6.aspx|dead-url=no}}</ref> 它對64位元系統支援一個新的[[即時編譯|即時編譯]]（JIT），稱之為 RyuJIT，呈現較佳的性能，並支援[[SSE2|SSE2]]與[[AVX2|AVX2]]指令集。WPF 與 Windows Forms 都獲得更新以達成較高的 DPI 情境。支援[[傳輸層安全性協定|TLS]] 1.1 與 TLS 1.2 的功能已經被加入 WCF。<ref name=":0" /> 此版本需要[[Windows_Vista|Windows Vista]] SP2 或更新的版本。<ref name="SysReq">{{cite web|title=.NET Framework System Requirements|url=https://msdn.microsoft.com/en-us/library/8z6watww(v=vs.110).aspx|website=MSDN|publisher=[[Microsoft|Microsoft]]|accessdate=2016-08-18|archive-date=2016-08-06|archive-url=https://web.archive.org/web/20160806131605/https://msdn.microsoft.com/en-us/library/8z6watww(v=vs.110).aspx|dead-url=no}}</ref>

==== .NET Framework 4.6.1====
.NET Framework 4.6.1 發行的訊息在2015年11月30日宣佈。<ref name="net461_release">{{cite web|title=.NET Framework 4.6.1 is now available!|url=https://blogs.msdn.microsoft.com/dotnet/2015/11/30/net-framework-4-6-1-is-now-available/|website=MSDN Blogs|publisher=Microsoft|accessdate=2016-02-19|archive-date=2016-08-27|archive-url=https://web.archive.org/web/20160827123538/https://blogs.msdn.microsoft.com/dotnet/2015/11/30/net-framework-4-6-1-is-now-available/|dead-url=no}}</ref>這個版本需要 [[Windows_7|Windows 7]] SP1 或更新的版本。<ref name="SysReq" />新的功能與 API 包括：

* WPF改進了拼寫檢查，支援用戶自定義詞典，並改進觸控性能。
* 增強支援橢圓曲線數字簽名算法（ECDSA）X509 認證。
* 當連接Azure SQL數據庫時，添加了對AlwaysOn、Always Encrypted的SQL連接，並改進連接開放彈性。
* Azure SQL數據庫現在使用更新的System.Transactions API支援分散式處理。
* RyuJIT、GC、WPF和WCF中的許多其他性能、穩定性和可靠性相關修復。

==== .NET Framework 4.6.2====
.NET Framework 4.6.2 的預覽在2016年3月30日宣佈，<ref>{{cite web|title=Announcing the .NET Framework 4.6.2 Preview|url=https://blogs.msdn.microsoft.com/dotnet/2016/03/30/announcing-the-net-framework-4-6-2-preview/|website=.NET Blog|publisher=Microsoft|accessdate=2018-07-10|archive-date=2018-07-10|archive-url=https://web.archive.org/web/20180710164840/https://blogs.msdn.microsoft.com/dotnet/2016/03/30/announcing-the-net-framework-4-6-2-preview/|dead-url=no}}</ref>發行日期則為2016年8月2日。<ref>{{cite web|title=Announcing .NET Framework 4.6.2|url=https://blogs.msdn.microsoft.com/dotnet/2016/08/02/announcing-net-framework-4-6-2/|website=.NET Blog|publisher=Microsoft|accessdate=2018-07-10|archive-date=2016-10-24|archive-url=https://web.archive.org/web/20161024011115/https://blogs.msdn.microsoft.com/dotnet/2016/08/02/announcing-net-framework-4-6-2/|dead-url=no}}</ref>此版本需要 [[Windows_7|Windows 7]] SP1 或更新版。<ref name="SysReq" /> New features include:

* 支援超過260個字符的路徑
* 支援X.509認證的[[数字签名算法|FIPS 186-3 DSA]]
* TLS 1.1 / 1.2支援 ClickOnce
* 支援 ASP.NET 數據註釋的本地化
* 啟用具備 Project Centennial 的 .NET桌面應用程序
* 針對WPF支援軟鍵盤和每個監視器DPI

=== .NET Framework 4.7 ===
2017年4月5日，微軟宣佈 .NET Framework 4.7 將被整合到 [[Windows_10#版本_1703（創意者更新）|Windows 10 創作者更新]], 承諾為其他Windows版本提供獨立安裝程式。同日，發行一個 [[Visual_Studio_2017|Visual Studio 2017]] 更新版以加強支援標的物 .NET Framework 4.7。<ref>{{cite web|last1=Lander|first1=Rich|title=Announcing the .NET Framework 4.7|url=https://blogs.msdn.microsoft.com/dotnet/2017/04/05/announcing-the-net-framework-4-7/|website=.NET Blog|publisher=[[Microsoft|Microsoft]]|date=2017-04-05|accessdate=2018-07-10|archive-date=2018-07-10|archive-url=https://web.archive.org/web/20180710163441/https://blogs.msdn.microsoft.com/dotnet/2017/04/05/announcing-the-net-framework-4-7/|dead-url=no}}</ref> 所承諾的 Windows 7 及更新版本獨立安裝程式在2017年5月2日發行，<ref>{{cite web|title=Microsoft .NET Framework 4.7 (Offline Installer)|url=https://www.microsoft.com/en-us/download/details.aspx?id=55167|website=Download Center|publisher=[[Microsoft|Microsoft]]|date=2017-05-02|accessdate=2018-07-10|archive-date=2018-07-10|archive-url=https://web.archive.org/web/20180710163806/https://www.microsoft.com/en-us/download/details.aspx?id=55167|dead-url=no}}</ref> 但有一些重要成份不包含在內。<ref>{{cite web|title=The .NET Framework 4.7 installation is blocked on Windows 7, Windows Server 2008 R2 and Windows Server 2012 because of a missing d3dcompiler update|url=https://support.microsoft.com/en-us/help/4020302/the-net-framework-4-7-installation-is-blocked-on-windows-7-windows-ser|website=Support|publisher=[[Microsoft|Microsoft]]|date=2017-05-03|accessdate=2018-07-10|archive-date=2018-07-28|archive-url=https://web.archive.org/web/20180728150401/https://support.microsoft.com/en-us/help/4020302/the-net-framework-4-7-installation-is-blocked-on-windows-7-windows-ser|dead-url=no}}</ref>

.NET Framework 4.7 的新功能包括：<ref>{{cite web|title=What's New in the .NET Framework|url=https://docs.microsoft.com/en-us/dotnet/articles/framework/whats-new/index#v47|website=docs.microsoft.com|publisher=[[Microsoft|Microsoft]]|accessdate=2017-04-28}}</ref>

* 使用[[橢圓曲線密碼學|橢圓曲線密碼學]]的增強加密
* 改進對[[傳輸層安全性協定|傳輸層安全性協定]]（TLS）的支援，尤其是對於1.2版
* 支援Windows Forms 的高DPI感知支援
* 在 WPF 中對觸控和手寫的更多支援
* WPF 的新印表 API

==== .NET Framework 4.7.1 ====
.NET Framework 4.7.1 在2017年10月17日發行。<ref>{{cite web |url=https://blogs.msdn.microsoft.com/dotnet/2017/10/17/announcing-the-net-framework-4-7-1/ |title=Announcing the .NET Framework 4.7.1 |last=Krishna |first=Preeti |date=2017-10-17 |website=.NET Blog |publisher=[[Microsoft|Microsoft]] |accessdate=2018-12-21 |archive-date=2017-12-31 |archive-url=https://web.archive.org/web/20171231121950/https://blogs.msdn.microsoft.com/dotnet/2017/10/17/announcing-the-net-framework-4-7-1/ |dead-url=no }}</ref>在修復程式和新功能中，它修正了d3dcompiler依賴性問題。 
<ref>{{cite web|url=https://blogs.msdn.microsoft.com/dotnet/2017/10/17/announcing-the-net-framework-4-7-1/#comment-381526|title=Announcing the .NET Framework 4.7.1|author=|date=|website=microsoft.com|accessdate=2018-12-21|archive-date=2017-12-31|archive-url=https://web.archive.org/web/20171231121950/https://blogs.msdn.microsoft.com/dotnet/2017/10/17/announcing-the-net-framework-4-7-1/#comment-381526|dead-url=no}}</ref>它還增加了與.NET Standard 2.0開箱即用的相容性。<ref>{{Citation|last=Immo Landwerth|title=.NET Standard - .NET Framework 4.7.1|date=2017-09-27|url=https://www.youtube.com/watch?v=u67Eu_IgEMs|accessdate=2018-04-25|archive-date=2018-09-19|archive-url=https://web.archive.org/web/20180919205350/https://www.youtube.com/watch?v=u67Eu_IgEMs|dead-url=no}}</ref>

==== .NET Framework 4.7.2 ====
.NET Framework 4.7.2 在2018年4月30日發行。<ref>{{Cite news|url=https://blogs.msdn.microsoft.com/dotnet/2018/04/30/announcing-the-net-framework-4-7-2/|title=Announcing the .NET Framework 4.7.2|access-date=2018-06-12|language=en-US|archive-date=2018-06-12|archive-url=https://web.archive.org/web/20180612144949/https://blogs.msdn.microsoft.com/dotnet/2018/04/30/announcing-the-net-framework-4-7-2/|dead-url=no}}</ref>主要的異動是改進 ASP.NET、BCL、CLR、ClickOnce、Networking、SQL、WCF、Windows Forms、Workflow 及 WPF。<ref>{{cite web|url=https://docs.microsoft.com/en-us/dotnet/framework/whats-new/index#v472|title=What's new in the .NET Framework|author=|date=|website=microsoft.com|accessdate=2018-07-10|archive-date=2017-11-29|archive-url=https://web.archive.org/web/20171129170445/https://docs.microsoft.com/en-us/dotnet/framework/whats-new/index#v472|dead-url=no}}</ref>

== CLR與CLI ==
[[File:Overview_of_the_Common_Language_Infrastructure.svg|thumb]]

.NET的初級組成是CLI和CLR。[[通用語言架構|CLI]]是一套運作環境規範，包括一般系統、基礎類庫和與機器無關的中間代碼，全稱為Common Language Infrastructure。CLR則是確認操作密碼符合CLI的平臺。在[[通用中間語言|通用中間語言]]（CIL）執行前，CLR必須將指令及時編譯轉換成原始[[機械碼|機械碼]]。

所有CLI都可經由.NET自我表述。CLR檢查元資料以確保正確的方法被調用。元資料通常是由語言編譯器生成的，但開發人員也可以通過使用客戶屬性創建他們自己的元資料。

如果一種語言實現生成了CLI，它也可以通過使用CLR被調用，這樣它就可以與任何其他.NET語言生成的資料相交互。CLR也被設計為[[作業系統|作業系統]]無關性。

當一個彙編體被載入時，CLR執行各種各樣的測試。其中的兩個測試是確認與核查。在確認的時候，CLR檢查彙編體是否包含有效的元資料和CIL，並且檢查內部表的正確性。核查則不那麼精確。核查機制檢查代碼是否會執行一些“不安全”的操作。核查所使用的演算法非常保守，導致有時一些“安全”的代碼也通不過核查。不安全的代碼只有在彙編體擁有“跳過核查”許可的情況下才會被執行，通常這意味著代碼是安裝在本機上的。

通過.NET，你可以用[[SOAP|SOAP]]和不同的[[web服務|web服務]]進行交互。

== 標準化和版權 ==
2000年8月，[[微軟|微軟]]、[[惠普公司|惠普]]和[[英代爾|英特爾]]共同制定[[通用中间语言|CLI]]和[[C＃|C#]]程式語言的標準規格。2001年12月，以上兩者通過並成為[[Ecma_International|ECMA]]標準規格。（[http://www.ecma-international.org/publications/standards/Ecma-335.htm ECMA 335]{{WebCite|url=https://www.webcitation.org/6HfXxFXH8?url=http://www.ecma-international.org/publications/standards/Ecma-335.htm |date=20130626173319 |dateformat=iso }}和[http://www.ecma-international.org/publications/standards/Ecma-334.htm ECMA 334]{{Wayback|url=http://www.ecma-international.org/publications/standards/Ecma-334.htm |date=20101031042906 }}）。[[國際標準化組織|ISO]]亦於[[2003年4月|2003年4月]]跟隨（[http://www.iso.org/iso/en/CatalogueDetailPage.CatalogueDetail?CSNUMBER=36769 ISO/IEC 23271]{{Wayback|url=http://www.iso.org/iso/en/CatalogueDetailPage.CatalogueDetail?CSNUMBER=36769 |date=20070224200941 }}和[http://www.iso.org/iso/en/CatalogueDetailPage.CatalogueDetail?CSNUMBER=36768 ISO/IEC 23270]{{Wayback|url=http://www.iso.org/iso/en/CatalogueDetailPage.CatalogueDetail?CSNUMBER=36768 |date=20061209020242 }}）。

這會有一定的風險，但它可以鼓勵標準聯合的實現，以提供一座橋樑來把非Windows的軟體轉變為微軟.NET。將此推廣為標準的一個團體是[[INETA|國際.NET聯合會]]（INETA）。

儘管微軟及其他合作夥伴持有CLI及C#的專利，ECMA和ISO要求所有專利都應該遵守“[[合理與非歧視準則|合理與非歧視準則]]”。除此之外，這些公司亦同意讓使用者免費使用這兩項專利。

不過，這並不包括.NET Framework內並不為ECMA/ISO標準涵蓋的範圍，這包括了：[[Windows_Forms|Windows Forms]]、[[ADO.NET|ADO.NET]]及[[ASP.NET|ASP.NET]]。微軟對上述部件所持有的專利，使開發者未必能夠為非微軟平臺開發出一套完整的作品。

2014 年11月13日，微軟新任執行長[[薩帝亞·納德拉|薩帝亞·納德拉]]決心下，該公司釋出的{{lang|en|.NET}}原始碼包含了伺服器部分的核心，如{{lang|en|.NET Framework Libraries}}、{{lang|en|.NET Core Framework Libraries}}和{{lang|en|RyuJit VM}}，正式對外[[開放原始碼|開放原始碼]]。<ref>[http://technews.tw/2014/11/13/visual-studio-and-net-go-cross-platform/ 微軟果然走向開放，.NET 開放原始碼可望開發 Linux 與 OS X 軟體] {{Wayback|url=http://technews.tw/2014/11/13/visual-studio-and-net-go-cross-platform/ |date=20141116045942 }}，TechNews 科技新報，2014-11-13</ref>

== .NET与Java EE ==
公共語言基礎（CLI），通用中間語言（CIL）以及C#與甲骨文公司的[[Java|Java]]虛擬機和Java之間有不少的相似之處，因此它們無疑是強烈的競爭者。它們兩者都使用它們各自的中間碼（在微軟，它們叫做[[通用中間語言|通用中間語言]]，而在Oracle，它們叫[[Java字节码|位元組碼]]）。通用中間語言被設計來[[JIT|即時編譯]]（JIT），而Java的位元組碼在最初的時候則是設計成用於解釋運行，而非即時編譯。.NET現在只在Windows上被完美地支持，而Java則可在很多平臺上被完好支持。然而，現在一些正在開發中的實現版本例如[[Mono|Mono]]或者[[Shared_Source_Common_Language_Infrastructure|Shared source CLI]]可以用於在類Unix作業系統例如[[Linux|Linux]]，[[FreeBSD|FreeBSD]]和[[Mac_OS_X|Mac OS X]]上運行.NET應用程式。甲骨文公司的一個產品，[[J2EE|J2EE]]提供與微軟的一些捆綁於Windows中的技術例如[[Component_Object_Model#COM.2B|COM+]]（先前的[[Microsoft_Transaction_Server|MTS]]）和[[MSMQ|MSMQ]]等效的功能。

Java和.NET可經由[[IKVM|IKVM]]，一個在.NET平臺上實作的Java虛擬機作更多的溝通。

Java有其專門的[[遠端程序呼叫|遠端程式呼叫]]技術[[Java_RMI|RMI]]（Remote Method Invocation）, RMI的另一版本[[RMI-IIOP|RMI-IIOP]]更可相容[[CORBA|CORBA]]。

然而，.NET與Java之間的競爭關係，在.NET Core出現後，一切都改觀了。

== .NET与COM ==
{{Dablink|'''注意'''：请不要將[[網域名稱|網域名稱]]中的[[.com|.com]]、[[.net|.net]]與這裡的[[組件對象模型|COM]]、.NET混淆在一起。}}

前一版[[軟體元件|軟體元件]]技術由Microsoft所提出的COM，該技術被用來建立大型（large-scale）的軟體系統上，使用COM+ 或MTS對於傳統分散式元件有強化的作用。當.NET將COM-objects封裝成.NET元件以及將.NET元件封裝成COM-objects後，Microsoft分別將他命名為Runtime Callable Wrapper（RCW）和COM Callable Wrapper（CCW）。很明顯的，Microsoft最終將以.NET全面取代COM成為軟體元件的架構。{{来源请求}}Microsoft希望開發者能夠在[[Win32|Win32]]平臺上使用.Net取代COM，而已經存在的服務則透過抽象介面來使用（如：目前交易的.Net元件仍然使用COM+）。

== .Net Remoting与XML WebServices ==
.NET remoting屬於行程（process）內溝通的抽象方法。

[[Microsoft®_.NET_Remoting|Microsoft® .NET Remoting]]提供一個豐富可擴充的框架給存在兩個不同AppDomain中的Object，使得在不同行程（[[行程|行程]]）和不同機器中能夠進行無縫地溝通。.NET Remoting提供一種強大但簡單的可程式化模型並且在執行階段支援資料交換。

XML Web services將基礎的功能區塊佈署到網路的不同電腦上。開放標準的通訊協定以及人和應用程式可以透過Web Services整合應用程式的環境來合作。應用程式可以從不同的來源使用多個XML Web Services來建構應用程式而不需要知道他們在哪裡以及如何來運作。

== .NET的語言 ==
CLI被設計成支援任何物件導向的程式語言，分享共同物件模型與大型共同類別庫。.NET支援超過40種程式語言。這些編譯器大都是免費的（软件廠商仅开发出售[[集成开发环境|集成开发环境]]）。

大部分的語言都做了重大改變以搭配.NET Framework。廠商通常利用這個機會來同時改變語言的其他特性。

=== 微軟開發的.NET平臺編程語言 ===
* [[C＃|C#]]，一個以[[C++|C++]]和[[Java|Java]]語法為基礎開發的一個全新的[[面向对象程式設計|物件導向語言]]，是.NET開發的首選語言。
* [[Visual_Basic_.NET|Visual Basic .NET]]，一個加強了[[面向对象程式設計|物件導向]]支持的，支持[[多線程|多線程]]的[[Visual_Basic|Visual Basic]]版本。
* [[C++/CLI|C++/CLI]]，一個[[C++|C++]]的.NET平臺版本變種。
* [[JScript_.NET|JScript .NET]]，一個編譯版本的Microsoft[[JScript|JScript]]語言。
* [[J_Sharp|J#]]，一個對應於[[Java|Java]]和J++（微軟自己開發的[[Java|Java]]變種）的.NET平臺版本，但是由于知识产权问题，目前微软公司已经停止其开发应用。
* [[F_Sharp|F#]]，[[ML語言|ML語言]]家族的一員。
* [[Microsoft_Small_Basic|Microsoft Small Basic]]

=== 第三方使用.NET的編程語言 ===
* [[Ada|Ada]]，參閱[[A_Sharp|A#]]。
* [[APL|APL]]
* [[Boo|Boo]]，基於[[Python|Python]]。
* [[COBOL|COBOL]]
* [[Component_Pascal|Component Pascal]]，基於部件的Pascal，比起[[Pascal|Pascal]]來更接近於[[Oberon|Oberon]]。
* [[Delphi|Delphi 8 and Delphi 2005]]以及现在的delphi xe2都采用.net
* [[Eiffel|Eiffel]]
* [[Forth|Forth]]
* [[Fortran|FORTRAN]]
* [[IKVM|IKVM]]，[[Java|Java]]。
* [[IronPython|IronPython]]，基於[[Python|Python]]。
* [[IronRuby|IronRuby]]，基于[[Ruby|Ruby]]。
* [[Lexico|Lexico]]，基於西班牙語的面向物件編程語言。
* [[LISP|Lisp]]
* [[Mercury|Mercury]]
* [[Mondrian|Mondrian]]為了便於腳本部件編程而開發的功能型語言。
* [[Nemerle|Nemerle]]函數式／指令式混合語言。
* [[Oberon|Oberon]]
* [[Perl|Perl]]
* [[Phalanger|Phalanger]]，[[PHP|PHP]]的.net编译器。
* [[RPG語言|RPG]]
* [[Smalltalk|Smalltalk]]
* [[TclBridge|TclBridge]]，基于[[Tcl|Tcl]]。
* [[PowerBuilder.NET|PowerBuilder.NET]] powerbuilder 11.5及以后的版本都采用.net技术，但这种语言目前停止开发了。

=== ASP.NET & ADO.NET ===
{{Main|ASP.NET|ADO.NET}}

ASP.NET是內含於.NET Framework中，專門用來發展Web應用程式的一組類別庫集。

ADO.NET是內含於.NET Framework中，專門處理與資料來源溝通的[[資料存取|資料存取]]類別庫集，被[[Windows_Forms|Windows Forms]]與[[ASP.NET|ASP.NET]]應用程式大量使用，可說是.NET Framework中唯一的資料存取介面。

== 可供選擇的實現版本 ==
微軟的.NET Framework是.NET技術的旗艦級實現版本，在此之外還有一些其他實現版本。

* [[.NET_Core|.NET Core]] 是微軟開發的跨平台 ([[Windows|Windows]]、[[Mac_OSX|Mac OSX]]、[[Linux|Linux]]) 的應用程式開發框架（Application Framework）

* 微軟开发了一个称为[[共享源码公共语言基础|共享源码公共语言基础]]（Shared Source Common Language Infrastructure，Shared Source CLI；即今[[ECMA|ECMA]]—[[通用语言架构|通用语言架构]]），是微軟的.NET Framework（[[Common_Language_Runtime|共通語言執行平臺]]）的一個[[shared_source|源碼共用]]的實現架构，可運行於[[Windows_XP|Windows XP]]，[[FreeBSD|FreeBSD]]，和[[Mac_OS_X|Mac OS X]]10.2。

* [[Mono|Mono]]是一個[[開放源代碼|開源]]的.NET運行時和開發庫實現版本。Mono現正由[[xamarin|xamarin]]公司和開源軟體發展社區負責開發。它正迅速發展成熟，現已經包含了對ASP.NET和ADO.NET的支持，对[[Windows_Forms|Windows Forms]]庫的支持也较充分。它提供了一個C#編譯器，而一個VB.NET編譯器現在也已經處於pre-beta階段。Mono項目還包含了一些新的庫和技術的開發：
** [[GTK+#|Gtk]]：一個[[GTK+|GTK+]][[Graphical_user_interface|GUI]]工具包的.NET封裝。
** [[xSP|xSP]]：一個用C#編寫的支持運行ASP.NET應用程式的網頁伺服器軟體。
** [[MonoDevelop|MonoDevelop]]：[[SharpDevelop|SharpDevelop]]的一個移植版本，是一個符合[[GNU通用公共許可證|GPL]]標準的面向Gtk#和Mono的.NET集成開發環境。
** Novell.Directory.Ldap類庫：[[Lightweight_Directory_Access_Protocol|Lightweight Directory Access Protocol]]（LDAP）for .NET的一個免費的實現版本。
** [[SerialPortNet|SerialPortNet]]：A[[serial_port|serial port]]library for .Net & Mono implementing .NET 2.0 specifications.
** [[Mono_for_Android|Mono for Android]]和[[MonoTouch_for_iOS|MonoTouch for iOS]]：Mono在移动平台Android和iOS上的移植，使开发者可以在Android和iOS平台上使用C#和Mono框架开发应用。Xamarin Forms是这些实现的核心，可以根据系统不同生成符合该系统风格的界面。
** [[MonoMac|MonoMac]]：Mono对于一些OS X原生Step API的封装。

* [[Portable.NET|Portable.NET]]不及[[Mono|Mono]]成熟，這得歸因於[[Portable.NET|Portable.NET]]並不是在最初的時候就使用了微軟的開發框架。提供了一个可以从C编译到[[通用中间语言|通用中间语言]]的编译器。

== 參見 ==
{{Portal box|微軟|软件|计算机程序设计}}
* [[C♯|C#]]
* [[VB.NET|VB.NET]]
* [[ASP.NET|ASP.NET]]
* [[AJAX|AJAX]]
* [[COM_Interop|COM Interop]]
* [[Windows_API|Windows API]]
* [[.NET_Compact_Framework|.NET Compact Framework]]
* [[.NET_Micro_Framework|.NET Micro Framework]]

== 参考文献 ==
{{Reflist|30em}}

== 外部链接 ==
* {{Official website}}
* [https://msdn.microsoft.com/en-us/library/zw4w595w.aspx Overview of .NET Framework (MSDN)]{{Wayback|url=https://msdn.microsoft.com/en-us/library/zw4w595w.aspx |date=20161231073549 }}{{en}}
** [https://docs.microsoft.com/zh-cn/dotnet/framework/get-started/overview .NET Framework 概述]{{Wayback|url=https://docs.microsoft.com/zh-cn/dotnet/framework/get-started/overview |date=20181227230308 }}{{zh-cn}}
** [https://docs.microsoft.com/zh-tw/dotnet/framework/get-started/overview .NET Framework 的概觀]{{Wayback|url=https://docs.microsoft.com/zh-tw/dotnet/framework/get-started/overview |date=20181227230200 }}{{zh-tw}}
* [https://github.com/Microsoft/dotnet .NET Github repository]{{Wayback|url=https://github.com/Microsoft/dotnet |date=20181229071948 }}

{{-}}
{{DotNET}}
{{Microsoft APIs}}
{{Microsoft}}
{{視窗元件}}

[[Category:.NET|]]
[[Category:微軟開發工具|Category:微軟開發工具]]
[[Category:微軟API|Category:微軟API]]