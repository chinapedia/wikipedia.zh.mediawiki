{{NoteTA|G1=IT}}
{{Infobox programming language
|name = FreeBASIC
|logo = [[File:Fblogo.gif|The FreeBASIC Logo]]
|paradigm = [[过程式编程|面向过程]] / [[面向对象程序设计|面向对象]]
|year = 2004
|designer = Andre Victor
|developer = [[The_FreeBASIC_Development_Team|The FreeBASIC Development Team]]
|latest_release_version = 1.08.1
|latest_release_date = {{release date|2021|07|09}}
|typing = [[类型系统|静态]]
|implementations =
|dialects =
|influenced_by = [[QuickBASIC|QuickBASIC]]，[[C语言|C]]
|operating_system = [[DOS|DOS]]，[[Linux|Linux]]，[[Microsoft_Windows|Microsoft Windows]], [[FreeBSD|FreeBSD]]
|license = [[GNU_General_Public_License|GNU GPL]]，[[GNU_Lesser_General_Public_License|Standard libraries licensed under the GNU LGPL]]
|website = http://www.freebasic.net
}}
'''FreeBASIC''' 是一个 [[BASIC|BASIC]] 语言的[[编译器|编译器]]<ref name="about">{{cite web |url=http://freebies.about.com/od/computerfreebies/qt/freebasic.htm |title=FreeBASIC the Successor to QuickBASIC |date= |accessdate=2008-08-17 |author=Lee Seats |publisher=About.com |deadurl=yes |archiveurl=https://web.archive.org/web/20081019112105/http://freebies.about.com/od/computerfreebies/qt/freebasic.htm |archivedate=2008-10-19 }}</ref>，可运行在[[Microsoft_Windows|Microsoft Windows]]、保护模式的[[DOS|DOS]]（[[DOS扩展器|DOS扩展器]]）、[[Linux|Linux]]以及[[Xbox|Xbox]]上。

FreeBASIC通过使用"QB"关键字可以在高级别上支持用[[QBASIC|QBASIC]]编写的[[程序|程序]]。许多用QBASIC写的程序可以在不需任何修改的情况下编译和运行在这个模式下。但是如果使用默认的参数来编译的话，大部分的程序还是要进行一些修改的。

== 特性 ==

=== 平台支持 ===
FreeBASIC 现在可以运行在64位和32位的 Windows、GNU/Linux，以及16位的 DOS系统。也可以为 Xbox 创建应用程序。越来越多的平台将会被支持。运行时库被设计成可移植的。所有第三方工具均使用来自 GNU Binutils。系统上编译器 100% 用 FreeBASIC 代码写成，使得可以简单的自举而不需要依赖太多的不可移植工具。

=== 现代编程语言特性支持 ===
FreeBASIC作为一种高级编程语言，支持面向过程、面向对象和元编程。

=== 调试支持 ===
完全支持GDB（GNU 调试器），数组越界检查（只有使用 -exx 命令行选项），[[空指针|空指针]]检查（同上）。

=== 图形界面支持 ===
该项目提供了与常见程序库的简单的绑定，比如：C 运行时库、Allegro、SDL、OpenGL、GTK+、Windows API等，同时也提供了一些示例程序。

它使用[[GNU_Binutils|GNU Binutils]][[软件开发工具|软件开发工具]]作为[[后端|后端]]，除了动态和静态[[库|库]]，还可以制作控制台和图形／[[GUI|GUI]]可执行文件。FreeBASIC完全支持[[C语言|C]]库和部分[[C++|C++]]库。这使得程序员可以使用和创建C和许多其他语言的库。

FreeBASIC还不是一个[[优化编译器|优化编译器]]，但是它的速度被认为接近主流工具，如[[GCC|GCC]]<ref>{{cite web |title=The Computer Language Benchamarks Game FreeBASIC vs.gcc |url=http://shootout.alioth.debian.org/gp4/benchmark.php?test=all&lang=fbasic |accessdate=2008-04-28 |format= |work= |deadurl=yes |archiveurl=https://web.archive.org/web/20080412041709/http://shootout.alioth.debian.org/gp4/benchmark.php?test=all&lang=fbasic |archivedate=2008-04-12 }}</ref>。

== 语法 ==
FreeBASIC语法试图尽量保持接近[[BASIC|BASIC]]语法，特别是[[QuickBASIC|QuickBASIC]]。虽然语法上试图保持与其前辈一致，FreeBASIC还是遵循了一些现代的标准和编码实现。具有标准的过程特性以及[[面向对象|面向对象]]特性，如[[对象_(计算机科学)|对象]]、[[运算符重载|运算符重载]]、[[函数重载|函数重载]]和[[命名空间|命名空间]]等等，已经被加入到FreeBASIC中。

FreeBASIC的行在遇到[[行尾|行尾]]字符或[[冒号|冒号]]时结束。因此不需要使用特殊字符（如[[C语言|C语言]]中的[[分号|分号]]）来通知编译器此行结束。多条语句可以通过冒号<code>:</code>分割写在一行里。

FreeBASIC支持块[[注释|注释]]和行尾注释。整行注释使用一个[[撇号|撇号]]<code>'</code>，块注释从<code>/'</code>开始，到<code>'/</code>结束。

=== 兼容性 ===
FreeBASIC继承自[[QuickBASIC|QuickBASIC]]<ref name ="about"/>。为了使FreeBASIC与现代的工具兼容并且具有高级编程特性，在开发FreeBASIC的时候还是进行了一些修改的。而''-lang''选项的设置使得FreeBASIC编译器也能够适应[[GCC|GCC]]和QuickBASIC兼容语言。

* 当选择FB语言设置时（[[命令行参数|命令行参数]]为''-lang fb''），将开启所有的FreeBASIC新特性，并且不允许使用QuickBASIC的"hackish"特性（该特性不符合现代编程实践）。

* FB-Lite语言设置（''-lang fblite''）提供了访问大多数FreeBASIC中新的非面向对象的特性，但是允许使用与老版本BASIC类似的代码风格。语法规则，如允许隐变量、后缀、<code>[[GOSUB|GOSUB]]</code> / <code>RETURN</code>、[[行号|行号]]等等。

* QB语言设置（''-lang qb''）与''-lang fblite''类似，但是它更专注于复制[[QBASIC|QBASIC]]式的行为。''-lang qb''被设计用来使为QBASIC写的程序能够更容易地运行，在有的情况下''-lang fblite''的兼容性不够好，这时''-lang qb''就会很有用。

=== 示例代码 ===
和QBasic一样，在屏幕上写入一行文本的程序可以写成如下的简单语句：
<syntaxhighlight lang="freebasic">
Print "Hello, World!"
Sleep
</syntaxhighlight>
而且也加入一些面向对象的性质，例如动态连接库，运算符重载，以下是面向对象的例子代码：
<syntaxhighlight lang="freebasic">


/'A Vector motion class'/
Type Vector
	W as Integer
	H as Integer
	Declare Constructor (nW as Integer, nH as Integer)
End Type
 
Constructor Vector (nW as Integer, nH as Integer)
	W = nW
	H = nH
End Constructor
 
/'Create an object class'/
Type Object
	Private:
		X as Integer
		Y as Integer
		Movement as Vector Pointer
	Public:
		/'Create public methods, including a destructor for automated cleanup'/
		Declare Constructor (nX as Integer, nY as Integer)
		Declare Destructor ()
		Declare Sub SetMotion (Motion as Vector Pointer)
		Declare Sub Move ()
		Declare Property GetX as Integer
End Type
 
/'Set initial coordinates'/
Constructor Object (nX as Integer, nY as Integer)
	X = nX
	Y = nY
End Constructor
 
/'Clean up allocated memory'/
Destructor Object ()
	delete Movement
End Destructor
 
/'Set the motion Vector'/
Sub Object.SetMotion (Motion as Vector Pointer)
	Movement = Motion
End Sub
 
/'Move the object based on its motion Vector'/
Sub Object.Move ()
	X += Movement->W
	Y += Movement->H
End Sub
 
/'A getter for X, as it's private'/
Property Object.GetX as Integer
	Return X
End Property
 
	/'MAIN CODE'/
 
/'Create a new instance of Object at coordinates 100, 100'/
Dim Player as Object = Type<Object>(100, 100)
 
/'Dynamically allocate a new Vector object
moving left 10 units and down 5'/
Player.SetMotion(new Vector (-10, 5))
 
/'Make the Player update its location'/
Player.Move()
 
/'Display new X, 90'/
Print Player.GetX
 
/'Because Player is a local variable, it's destructor is
called at the end of scope automatically'/

</syntaxhighlight>

== 图形库 ==
FreeBASIC拥有一个内置的2D软件[[图形库|图形库]]，与QuickBASIC兼容，为用户提供了简单的图形元素（如矩形，线和圆）、[[位块传输|位块传输]]以及一些QuickBASIC的图形库中没有的附加特性。图形库本身并不依赖于操作系统，因此可以跨平台使用。

虽然图形库是内置的，但是只有在选择使用时才会被包含，这可以简单地通过调用FBgfx <code>SCREEN</code>命令来实现。通用库（如[[OpenGL|OpenGL]]+）为了[[硬件加速|硬件加速]]使用[[API|API]]（Windows、Linux等）来创建一个[[窗口|窗口]]可以不包含FreeBASIC的图形库。

== 未来的开发 ==
FreeBASIC仍然继续开发，目标是成为一个[[GCC|GCC]]前端<ref>{{cite web |title=FreeBASIC Todo List on Sourceforge |url=http://fbc.svn.sourceforge.net/viewvc/fbc/trunk/FreeBASIC/src/compiler/TODO.txt?view=markup |accessdate=2007-07-31 |format= |work= }}{{dead link|date=2017年11月 |bot=InternetArchiveBot |fix-attempted=yes }}</ref>，这将带来许多[[C++|C++]]和其他[[面向对象编程语言|面向对象编程语言]]中的新特性，高级[[优化|优化]]技术，以及可以移植到任何现代系统上的能力。

0.17版中已经加入了面向对象程序设计的[[类|类]]，扩展了基本的[[数据类型|数据类型]]。还有更多的新特性值得期待。

== 参考 ==
{{reflist}}

{{portal|Free software|Free Software Portal Logo.svg}}

== 外部链接 ==
*[http://www.freebasic.net/ FreeBASIC官方网站]{{Wayback|url=http://www.freebasic.net/ |date=20060613035225 }}
*[http://www.freebasic.net/wiki/wikka.php?wakka=DocToc FreeBASIC官方文档]{{Wayback|url=http://www.freebasic.net/wiki/wikka.php?wakka=DocToc |date=20161020202158 }}
*[https://web.archive.org/web/20060613035225/http://www.freebasic.net/forum/ FreeBASIC官方论坛]
*[http://sourceforge.net/projects/fbc/ FreeBASIC 托管在 SourceForge 的页面]{{Wayback|url=http://sourceforge.net/projects/fbc/ |date=20080725105728 }}
*[http://www.freebasic.net/wiki/ FreeBASIC wiki]{{Wayback|url=http://www.freebasic.net/wiki/ |date=20080820214753 }}

{{BASIC}}

[[Category:BASIC编译器|Category:BASIC编译器]]
[[Category:自由编译器与解释器|Category:自由编译器与解释器]]
[[Category:SourceForge專案|Category:SourceForge專案]]
[[Category:面向对象的编程语言|Category:面向对象的编程语言]]
[[Category:过程程序设计语言|Category:过程程序设计语言]]
[[Category:自由發展元件與函式庫|Category:自由發展元件與函式庫]]
[[Category:自托管软件|Category:自托管软件]]
[[Category:带有BASIC代码示例的条目|Category:带有BASIC代码示例的条目]]
[[Category:2004年建立的程式語言|Category:2004年建立的程式語言]]