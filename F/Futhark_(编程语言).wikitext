{{NoteTA|G1=IT}}
{{Infobox programming language
|name = Futhark
|paradigm = [[阵列编程|阵列式]], [[函数式编程|函数式]]
|year = {{start date and age|2014}}
|designer = Troels Henriksen, Cosmin Oancea, Martin Elsman
|developer =
|latest release version =  0.21.12
|latest release date = {{start date and age|2022|05|19}}
|typing = [[静态类型|静态]], [[强类型|强类型]]
|family = [[ML语言|ML]]
|implementations =
|dialects = 
|influenced_by = [[APL语言|APL]], [[Haskell|Haskell]], {{en-link|NESL}}, [[Standard_ML|Standard ML]]
|influenced = 
|operating_system = [[跨平台|跨平台]]
|license = [[ISC许可证|ISC许可证]]
|website = https://futhark-lang.org
}}

'''Futhark'''是一个[[函数式编程|函数式]]、[[数据并行|数据并行]]、[[阵列编程|阵列]][[编程语言|编程语言]]，最初于[[哥本哈根大学|哥本哈根大学]]{{en-link|UCPH计算机科学系|UCPH Department of Computer Science|理学院计算机科学系}}（DIKU）作为HIPERFIT（财务信息技术的函数式高性能计算）计划的一部份而开发<ref>{{Cite web |url=http://hiperfit.dk/ |title=存档副本 |access-date=2022-05-12 |archive-date=2014-10-22 |archive-url=https://web.archive.org/web/20141022114855/http://hiperfit.dk/ }}</ref>。它聚焦于确使以函数式风格书写的数据并行程序，可以高性能的执行于大规模并行硬件上，特别是在[[GPGPU|GPU]]上。Futhark受到{{en-link|NESL}}的强烈启发，但是为了确使更具进取性的编译器优化，对如何表达并行施加了约束。特别是，不支持非正规的嵌套数据并行<ref>{{cite conference|url=https://futhark-lang.org/publications/pldi17.pdf|title=Futhark: Purely Functional GPU-Programming with Nested Parallelism and In-Place Array Updates|last1=Henriksen|first1=Troels|last2=Serup|first2=Niels G. W.|last3=Elsman|first3=Martin|last4=Henglein|first4=Fritz|last5=Oancea|first5=Cosmin|date=2017|publisher=ACM|book-title=Proceedings of the 38th ACM SIGPLAN Conference on Programming Language Design and Implementation|conference=PLDI 2017|access-date=2021-02-28|archive-date=2020-09-20|archive-url=https://web.archive.org/web/20200920221407/https://www.futhark-lang.org/publications/pldi17.pdf}}</ref>。

== 引用 ==
<!-- Inline citations added to your article will automatically display here. See en.wikipedia.org/wiki/WP:REFB for instructions on how to add citations. -->
{{reflist}}
{{程序设计语言}}

{{Compu-lang-stub}}
[[Category:函数式编程语言|Category:函数式编程语言]]
[[Category:ML语言家族|Category:ML语言家族]]
[[Category:阵列编程语言|Category:阵列编程语言]]
[[Category:GPGPU|Category:GPGPU]]