{{NoteTA|G1=IT}}
{{expand|time=2007-09-26T20:15:36Z}}
'''分部類別'''是{{lang|en|[[c_sharp|C#]] 2.0}}版的新語言特色，主要的功能是可以讓[[程式設計師|程式設計師]]，將[[类别_(计算机科学)|-{zh-hans:类; zh-hant:類別}-]]定義在不同的程式檔中，以便[[程式碼|程式碼]]的維護。
==簡介==
'''分部類別'''，這項新寫法的提出主要是針對[[物件導向程式|物件導向程式]]因為功能需求越來越多，導致[[程式碼|程式碼]]越來越龐大。為了保持容易管理與分類的目的。允許使用者可以將[[類_(電腦科學)|類別]]的定義，分別寫在不同的檔案中，以方便作管理。具體來說，利用分部類別這項新語法，可以把[[類_(電腦科學))|-{zh-hans:类; zh-hant:類別}-]]的[[程式碼|程式碼]]定義在跨越多個[[程式檔|程式檔]]中。相對於其他的[[程式語言|程式語言]]，例如 [[C++|C++]]，[[Java|Java]] 等只能把類別定義在單一的檔案。分部類別語言特色的提出，可算是改善一個檔案中包含過多[[程式碼|程式碼]]的問題。<br /> 

一般來說，在程式檔中包含適量的[[程式碼|程式碼]]對於程式的[[除錯|除錯]]與維持程式碼的簡潔性，具有一定的幫助。<br/>

==使用時機==
當在[[類_(電腦科學)|類別]]中的[[程式碼|程式碼]]過長或有必要分類時，就可以使用分部類別這個新的語言特色。利用這個特色，包含巨量[[程式碼|程式碼]]的類別或包含許多不同功能的複雜類別，可以根據需要定義在不同的檔案中，以方便日後做程式碼的管理與除錯。<br />

==程式範例==
*File1.cs
<syntaxhighlight lang="csharp">
   public partial class MyClass
   {
       public MyClass() // MyClass 類別的建構子
       {
           // implementation
       }
   }
</syntaxhighlight>

*File2.cs
<syntaxhighlight lang="csharp">
   public partial class MyClass
   {
       public SomeMethod() // MyClass 類別的某一個方法
       {
           // implementation
       }
   }
</syntaxhighlight>

==相關資料==
{{sectstub}}
{{電腦小作品}}

[[Category:面向对象的程序设计|Category:面向对象的程序设计]]