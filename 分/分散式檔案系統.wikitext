{{noteTA
|G1=IT
}}

相對於本機端的檔案系統而言，'''分散式檔案系統'''（{{lang-en|Distributed file system}}, DFS），或是'''網路檔案系統'''（{{lang-en|Network File System}}），是一種允許[[檔案|檔案]]透過網路在多台主機上分享的[[檔案系統|檔案系統]]，可讓多機器上的多使用者分享檔案和儲存空間。

在這樣的檔案系統中，客戶端並非直接存取底層的資料[[儲存區塊|儲存區塊]]，而是透過網路，以特定的[[網路傳輸協定|通訊協定]]和伺服器溝通。藉由通訊協定的設計，可以讓客戶端和伺服器端都能根據[[存取控制串列|存取控制清單]]或是授權，來限制對於檔案系統的存取。

相對地，在一個[[分享磁碟檔案系統|分享的磁碟檔案系統]]中，所有節點對資料儲存區塊都有相同的存取權，在這樣的系統中，存取權限就必須由客戶端程式來控制。

分散式檔案系統可能包含的功能有：透通的{{link-en|資料複製|replication (computer science)}}與[[容錯|容錯]]。也就是說，即使系統中有一小部份的節點離線，整體來說系統仍然可以持續運作而不會有{{link-en|資料損失|data loss}}。

分散式檔案系統和[[分散式資料儲存|分散式資料儲存]]的界線是模糊的，但一般來說，分散式檔案系統是被設計用在[[區域網路|區域網路]]<ref>Silberschatz, Galvin (1994). ''Operating System concepts'', chapter 17 ''Distributed file systems''. Addison-Wesley Publishing Company. ISBN 0-201-59292-4.</ref>，比較強調的是傳統檔案系統概念的延伸，並透過軟體方法來達成容錯。而分散式資料儲存，則是泛指應用分散式運算技術的檔案和資料庫等提供資料儲存服務的系統。

==歷史==
第一個[[檔案伺服器|檔案伺服器]]在1970年代被發展出來。在1976年[[迪吉多|迪吉多]]公司設計出{{link-en|File Access Listener|File Access Listener}}（FAL）做為第二代{{link-en|DECnet|DECnet}}的一部分。這個系統實作了Data Access Protocol，是第一個被廣為使用的網路檔案系統。在1985年[[昇陽電腦|昇陽電腦]]建立了[[網路檔案系統|網路檔案系統]]（Network File System，NFS），這是第一個基於[[網際協議|網際協議]]（Internet Protocol）而被廣泛使用的網路檔案系統。在相關技術的演進過程中，其他值得一提的網路檔案系統還有[[安德魯檔案系統|安德魯檔案系統]]（AFS）、[[Apple_Filing_Protocol|Apple Filing Protocol]]（AFP）、[[NetWare核心協定|NetWare核心協定]]（NCP）、和一般被稱為[[網路文件共享系統|網路文件共享系統]]（CIFS）的[[伺服器訊息區塊|伺服器訊息區塊]]（Server Message Block，SMB）等。

==透通性==
分散式檔案系統通常都內建有透通性，讓實際上是透過網路來存取檔案的動作，由程式與使用者看來，就像是存取本地的磁碟一般。伺服器與儲存裝置之間的架構多樣性與分離性，因此被隱藏了起來。而定位檔案在系統中的位置與資料傳輸的機制，就有賴網路檔案系統的設計了。

==效能==
一個普遍用來[[量度|量測]]網路檔案系統[[效能|效能]]的方式是：它需要用多少時間來完成服務請求？在傳統的系統中，完成請求所需要的時間包括了實際的硬碟存取時間，和一小部份的[[中央處理器|中央處理器]]處理時間。但在一個網路檔案系統中，由於分散式架構的關係，遠端存取動作會產生額外的{{link-en|經常性成本|Overhead|經常性負擔}}，包括：把請求從客戶端送到伺服器端的時間、把回應從伺服器端傳回客戶端的時間、以及這兩個傳輸過程中用來執行[[網路傳輸協定|網路傳輸協定]]的中央處理處時間。一個網路檔案系統的效能，可被視為是評估它透通性的一個[[維度|維度]]，拿來與本地磁碟進行充分的對比。

==同時更新檔案==
當多個使用者或客戶端同時存取並更新同一個檔案的時候，[[并发控制|并发控制]]即會成為一個議題。一個客戶端對於檔案的更新，應該不能干涉另一個客戶端對該檔案的存取與更新。並發控制或[[锁_(计算机科学)|鎖定]]機制可以內建在檔案系統中，或是透過擴增協定來提供。

==CAP定理==
著名的[[CAP定理|CAP定理]]指出：在一個分散式資料儲存架構中，資料的一致性（Consistency）、可用性（Availability）、和網路分隔的容忍程度（Partition tolerance）只能取二來做最佳化，無法三者兼具。當代的分散式資料儲存服務均是各自針對服務的內容和性質來作取捨，很難說有哪一個是通用的最佳解。

==參見==
{{colbegin}}
* [[文件系统列表#分布式文件系统|檔案系統列表的分散式檔案系統小節]]
* {{link-en|Ceph|Ceph (software)}}
* [[共享资源|共享资源]]
* {{link-en|BeeGFS|BeeGFS}}
* [[Gopher_(网络协议)|Gopher]]
* [[GlusterFS|GlusterFS]]
* [[Lustre|Lustre]]
* {{link-en|MooseFS|Moose File System}}
* {{link-en|OneFS|OneFS distributed file system}}
* [[基于Web的分布式编写和版本控制|WebDAV]]
* {{link-en|XtreemFS|XtreemFS}}
* [[Apache_Hadoop|HDFS]]
* [[Google檔案系統|Google檔案系統]]
* [[云计算|云计算]]
{{colend}}

==參考文件==

{{reflist}}

==外部連結==
* [http://purl.fcla.edu/fcla/etd/UFE0001123 ''A distributed file system for distributed conferencing system''] ("A ''DFS'' for the ''DCS''") by Philip S Yeager, Thesis, University of Florida, 2003.（pdf）

[[Category:分散式檔案系統|]]
[[Category:數據管理|Category:數據管理]]
[[Category:分散式數據儲存|Category:分散式數據儲存]]
[[Category:网络文件系统|Category:网络文件系统]]
[[Category:文件系统|Category:文件系统]]