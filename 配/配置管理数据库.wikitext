'''配置管理数据库'''（configuration management database）簡稱'''CMDB'''，是[[信息技术基础架构库|信息技术基础架构库]]（ITIL）用語，是組織用來儲存軟體硬體資產（常稱為[[形態項目|形態項目]]，CI）資訊的[[数据库|数据库]]。配置管理数据库可以將形態項目拆解到對應的邏輯層<ref>{{Cite web
| url=https://doc.objectgears.cz/vcd/en-US/a_models_it
| title=Configuration items layers
| access-date=2021-03-01
| archive-date=2021-01-24
| archive-url=https://web.archive.org/web/20210124060430/https://doc.objectgears.cz/vcd/en-US/a_models_it
| dead-url=no
}}</ref>。資料庫類似組織的[[資料倉儲|資料倉儲]]，也會記錄各資產之間關係的資訊<ref>{{Cite web
| url=https://searchdatacenter.techtarget.com/definition/configuration-management-database
| title=What is CMDB (configuration management database)?
| date=July 2017
| publisher=TechTarget
| accessdate=2019-01-14
| archive-date=2021-01-28
| archive-url=https://web.archive.org/web/20210128121541/https://searchdatacenter.techtarget.com/definition/configuration-management-database
| dead-url=no
}}</ref>。CMDB提供方式可以瞭解組織的關鍵資產以及彼此之間的關係，例如[[信息系统|信息系统]]、upstream來源以及資產之間的相依性、以及資產的downstream目標<ref>{{Cite web
| url=https://info.axiossystems.com/cmdb-improvement-whitepaper
| title=IT: disconnected from the business?
| date=2015-11-10
| work=Axios Systems
| url-access=registration
| accessdate=2019-01-14
| archive-date=2019-12-06
| archive-url=https://web.archive.org/web/20191206124426/https://info.axiossystems.com/cmdb-improvement-whitepaper
| dead-url=no
}}</ref>。

==目的及益處==
配置管理数据库（CMDB）是[[信息技术基础架构库|信息技术基础架构库]]框架的{{le|配置管理 (ITSM)|Configuration Management (ITSM)|配置管理}}中的基礎概念。可以用CMDB來追蹤資產（例如產品、系統、軟體、設備、人員）的狀態，例如這些資產在特定的時間點是否存在，以及各資產之間的關係。配置管理数据库可以幫助組織瞭解各元件之間的關係，並且追蹤其配置情形。此資訊的維護會允許在任意時間進行特定的動作（例如重建資產）。CMDB也可以用在{{le|影響評估|impact evaluation|影響分析}}、[[根本原因分析|根本原因分析]]以及{{le|變更管理 (ITSM)|Change management (ITSM)|變更管理}}。

CMDB的实现一般需要“联合”（Federation），即从其它数据源（如[[资产管理|资产管理]]系统），获取数据并纳入CMDB中，期间数据的控制权仍然在数据源。联合和[[ETL|ETL]]（資料來源端經過抽取、轉置、載入至目的端）解決方案不同，ETL方案會將資料复制进CMDB內。

配置管理数据库可以用在許多的事物上：例如企業智能，軟體建立及硬體建立，投資<ref>{{cite web
| url=https://www.ansible.com/resources/whitepapers/ansible-in-depth
| title=Whitepaper: Ansible in Depth
| quote=There are many points of integration that can be used to extend Ansible, including: (...) inventory data retrieved from CMDB systems or cloud sources.
| url-access=registration
| publisher=Ansible
| accessdate=2019-01-14
| archive-date=2020-11-24
| archive-url=https://web.archive.org/web/20201124140108/https://www.ansible.com/resources/whitepapers/ansible-in-depth
| dead-url=no
}}</ref>、變更影響分析<ref>{{cite book
| last1=Sauvé
| first1=Jacques
| last2=Rebouças
| first2=Rodrigo
| last3=Moura
| first3=Antão
| last4=Bartolini
| first4=Claudio
| last5=Boulmakoul
| first5=Abdel
| last6=Trastour
| first6=David
| title=Business-Driven Decision Support for Change Management: Planning and Scheduling of Changes
| date=2006
| publisher=Springer Berlin Heidelberg
| pages=173–184
| isbn=978-3-540-47662-7| doi=10.1007/11907466_15
}}</ref>及[[事故管理|事故管理]]。

在[[信息技术基础架构库|信息技术基础架构库]]的環境下，使用CMDB是基礎服務運作及支援的一部份。CMDB表示IT環境中重要組件的授權配置情形。

== 內容 ==
{{Main|配置項目}}
配置管理数据库中會記錄一些資訊，這些資訊也稱為配置項目（CI），其中也會提供配置項目的重要屬性以及彼此之間的關係。
=== 配置項目屬性及資料 ===
CMDB所記錄的屬性會依配置項目分類而不同，可能會多達數百個，以下是一些例子：

* 配置項目{{le|唯一識別碼|Unique identifier}}或識別碼
* 配置項目名稱或標示（多半是包括完整名稱以及短名稱）
* 配置項目縮寫
* 配置項目敘述
* 配置項目所有者（組織及人員）
* 配置項目重要性

屬性是用[[元數據|元數據]]所定義，CMDB也會包括元數據，因此其概念也會和[[元数据|元数据]]的存儲庫（一般用來讓IT組織運作更有效率）重疊。配置管理會著重如何讓資料維持在最近的狀態，這以往是元數據存儲庫的弱點。

=== 配置項目之間的關係===
配置項目之間的關係至少會由一個目的配置項目，以及一個相關的來源配置項目所組成。若在更進階的關係中（例如[[本体构成要素|本体构成要素]]），會希望有來源配置項目和目的配置項目之間的描述符（descriptor），可以提供一些相關資訊。，例如，「資料庫」的關係是「應用程式Y」的成員，描述符也稱為是謂詞（Predicate）。

=== 配置項目類型 ===
配置項目類型（CI類型，configuration item type）是針對組織希望儲存在CMDB的元件或是[[形態項目|形態項目]]的[[資料類型|資料類型]]。至少所有的軟體、硬體、網路以及儲存設備的配置項目類型都要存在CMDB裡，並且進行追蹤。若企業成熟的話，會開始在CMDB中追蹤商業的配置項目類型，例如人員、市場、產品及第三方實體（例如供應商及合作廠商）。這可以讓配置項目之間的關係更有意義，CMDB也可以變成知識管理更強力的來源。

CI類型有：
*{{le|電子硬體|Electronic hardware|硬體}}
*[[软件|软件]]
*通訊/網路
*位置
*文件
*人員（員工和承包商）

要實現CMDB的關鍵要素是可以自動發現有關CI的資訊（auto-discovery），並且在其變化時追蹤其變化。

==邏輯表示==
CMDB邏輯結構，也稱為是[[綱要_(資料庫)|資料庫綱要]]，會以許多型式出現。最常見的二種是[[关系模型|關係資料模型]]及{{le|語意資料模型|semantic data model}}

[[关系模型|关系模型]]是以一階述詞邏輯為基礎，所有資料都以三元組表示，而三元組會依關係分組。在关系模型中，相關的紀錄會用鍵（key）相連結，鍵針對某項目的資料型態定義是唯一的。這種关系模型會有用於指定數據和查詢的聲明性方法。換句話說，使用者可以直接列出哪一個資料庫中有資訊，哪一個資料庫需要這些資訊，讓資料庫系統說明儲存資料的資料結庫，以及回覆請求的提取過程。

{{le|語意資料模型|semantic data model}}一般會需要[[資源描述框架|資源描述框架]]，用關係敘述子來映射許多事物之間的關係，可以提供這些事物之間相關性的資訊。

== 挑戰 ==
在創建及維護配置管理数据库時，會有以下的三個挑戰：

* 相關性：需要在配置項目或是紀錄的生命週期當中蒐集其資料。這代表需要加入流程及工具，在資料出現時蒐集其最即時的變化。
* 維護：企業會持續的變化，有關配置項目的資料以及彼此之間的關係也會持續變化。維護是很重大的工作，常常沒有規劃到或是預期到。多半企業後來才發現這是最大的挑戰。
* 可用性：許多的配置管理数据库只有数据库功能，沒有複雜應用程式的功能、特徵或優點，也沒複雜的可視化工具來瀏覽資料，也沒有進階探索的工具。這代表大部份公司需要開發或購置包覆CMDB的應用層。不過，實現這些機能（例如確保資料庫是最新的，或是可以和系統互動，執行指令、加入更新、或布置應用程式）可以擴展配置管理数据库的機能以及其可用性。

因為上面這些理由，公司多半會購買配置管理数据库，不太會自行設計、建立、交付及維護配置管理数据库。

== 联合配置管理数据库 ==
信息技术管理人员可以使用联合的CMDB（联合配置管理数据库）——一个企业级的CMDB——来积累配置、变更和其它离散来源的数据的信息<ref>{{Cite web |url=http://features.techworld.com/networking/3221/the-federated-cmdb-vision/ |title=TechWorld.com. “The federated CMDB vision." |access-date=2012-07-18 |archive-url=https://web.archive.org/web/20130928180440/http://features.techworld.com/networking/3221/the-federated-cmdb-vision/ |archive-date=2013-09-28 |dead-url=yes }}</ref>。目标是使用业界标准的接口，使得管理数据的提供者能够把它们的数据集成到紧密结合的、无缝的CMDB中。<ref name="#1">[http://www.cmdbf.org/CMDB-Federation-white-paper-vision-v1.0.pdf The Federated CMDB Vision white paper.] {{webarchive|url=https://web.archive.org/web/20120711035006/http://cmdbf.org/CMDB-Federation-white-paper-vision-v1.0.pdf |date=2012-07-11 }}</ref>

该标准的架构于2007年由几家CMDB的供应商的一本白皮书中提出，其中有：ASG Software Solutions、BM软件公司、[[CA公司|CA公司]]、[[富士通|富士通]]、[[惠普公司|惠普公司]]软件部门、[[IBM|IBM]]和[[微软|微软]]<ref name="#1"/>。这些成员组成了CMDB联合工作组（CMDBf）。

2009年，{{le|分布式管理任务组|Distributed Management Task Force}}标准化了CMDBf的规范，提供了跨供应商、标准化的系统管理数据联合的解决方案。<ref>{{Cite web |url=http://xml.coverpages.org/DMTF-DSP0252-CMDB-Federation.pdf |title=Configuration Management Database (CMDB) Federation Specification |access-date=2012-07-18 |archive-date=2018-08-20 |archive-url=https://web.archive.org/web/20180820054435/http://xml.coverpages.org/DMTF-DSP0252-CMDB-Federation.pdf |dead-url=no }}</ref>

== 参考文献 ==
{{Reflist|2}}

==外部連結==
* {{SourceForge|onecmdb|OneCMDB}} - Open Source Configuration Management Database
* [https://tumblr.github.io/collins/ Collins: Infrastructure management for engineers] {{Wayback|url=https://tumblr.github.io/collins/ |date=20200623095149 }}
* [https://www.objectgears.cz/files/guide-to-cmdb-solution-design Guide to CMDB solution design] {{Wayback|url=https://www.objectgears.cz/files/guide-to-cmdb-solution-design |date=20200413061228 }}

== 参见 ==
* [[ITIL|ITIL]]

[[Category:数据库|Category:数据库]]
[[Category:形態管理|Category:形態管理]]
[[Category:ITIL|Category:ITIL]]