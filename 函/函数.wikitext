{{NoteTA
|G1 = Math
|1 = zh-cn:程序; zh-tw:程式;
}}{{About|数学中的函数|程序设计中的函数|子程序}}

[[File:Function_machine2.svg|缩略图]]，给予输入值<math>x</math>便產生唯一输出值<math>f(x)</math>]]

'''函数'''（{{lang-en|Function}}）是[[数学|數學]]描述對應關係的一種特殊[[集合_(数学)|集合]]

== 簡介 ==
以[[实数|实数]] <math>x</math> 構成的 <math>(x,\,x^2)</math> [[有序对|有序对]]為元素的集合就是一个函数。直觀上代表"輸入" <math>x</math> 就可以得到唯一值 <math>x^2</math> 的對應關係。

一般會以英文字母 <math>f,g,h</math>  表示函数，並把 <math>x</math> 依據函数 <math>f</math> 的對應規則所得到的值写作<math>f(x)</math> ，並讀作"''f of x"''。函数的概念不限於數之间的對應关系，例定义函数 <math>\operatorname{Capital}</math> 為世界上所有國家跟它現在的首都的對應關係，那輸入[[英国|英国]]就會输出唯一值[[伦敦|伦敦]]：<math>\operatorname{Capital}(\mathrm{U.K.}) = \mathrm{London}</math>。 

直觀上的"多變數函數"其實也可以概括到一般函數的定義裡。例如算式 <math>x\times y</math> 有兩個實數參數 <math>x</math> 和 <math>y</math>。可以將這兩個參數看作一個實數[[有序对|有序对]] <math>(x,y)</math> ，然後定義一個以 <math>((x,\,y),\,x\times y)</math> 為元素所構成的函數 <math>f</math> 。也就是把 <math>f[(x,\,y)] = x \times y </math> 簡寫成符合直觀的 <math>f(x,\,y) = x \times y </math>  。

數學中，[[对应|对应]]、[[映射|映射]]、[[变换|变换]]通常都是函数的別稱，但也可能有別的意思，如在[[拓扑學|拓扑學]]的映射有时代表的是[[连续函数|连续函数]]。

在[[類型論|類型論]]的[[λ演算|λ演算]]中，"對應關係"可以是作為一個原始概念(也就是無定義名詞)，而不像上述的定義把函數視為[[集合_(数学)|集合]]的衍伸物。

== 历史 ==
函数这个数学名词是[[莱布尼兹|莱布尼兹]]在1694年开始使用的，用來描述跟[[曲线|曲线]]相关的一個量，如曲线的[[斜率|斜率]]或者曲线上的某一点。莱布尼兹所指的函数现在被称作[[导数|可导函数]]，数学家之外的普通人一般接触到的函数即属此类。对于可导函数可以讨论它的[[函数极限|极限]]和[[导数|导数]]，此两者描述了函数输出值的变化同输入值变化的关系，是[[微积分学|微积分学]]的基础。中文的“'''函数'''”一词由[[清朝|清朝]]数学家[[李善兰|李善兰]]译出。其《代数学》书中解释：“凡此變數中函（包含）彼變數者，則此為彼之函數”。

* 1718年，[[約翰·伯努利|約翰·伯努利]]把函数定义为“一个变量的函数是指由这个变量和常量以任何一种方式组成的一种量。”
* 1748年，伯努利的学生[[欧拉|欧拉]]在《无穷分析引论》一书中说：“一个[[变量|变量]]的函数是由该变量和一些数或[[常量|常量]]以任何一种方式构成的[[解析解|解析表达式]]”，例如<math>f(x)=\sin(x)+x^2</math>。
* 1775年，欧拉在《微分学原理》一书中又提出了函数的一个定义：“如果某些量以如下方式依赖于另一些量，即当后者变化时，前者本身也发生变化，则称前一些量是后一些量的函数。”
* 19世纪的数学家开始对数学的各个分支進行形式化。[[维尔斯特拉斯|维尔斯特拉斯]]倡議将微积分学建立在[[算术|算术]]，而不是[[几何|几何]]的基础上，這種主張較趋向于欧拉的定义。
* 函数的定义得以擴展之後，数学家便能对一些“奇怪”的数学对象进行研究，例如處處不可导的连续函数。这些函数曾经被认为只具有理论价值，迟至20世纪初时它们仍被视作“怪物”。稍后，人们发现这些函数在对如[[布朗运动|布朗运动]]之类的物理现象进行建模时有重要的作用。
* 到19世纪末，数学家开始尝试利用[[集合论|集合论]]来進行数学的形式化。他们试图将每一個数学对象都定义为[[集合_(数学)|集合]]。[[狄利克雷|狄利克雷]]给出了现代正式的函数定义（参见下文[[#正式定義|#正式定義]]）。在他的定義下，函数被视作[[数学关系|数学关系]]的特例。然而对于实际应用的情况，现代定义和欧拉定义的区别可以忽略不计。

==正式定義==
[[File:cubicpoly.svg|缩略图]]
函數( <math>f</math> )是一種特殊的[[二元关系|二元關係]] (也就是元素都是 <math>(x,\,y)</math> 這樣形式的二元[[有序对|有序對]]的集合) ，滿足

* 對任意 <math>x,\,y,\,y^{\prime}</math> 若 <math>(x,\,y)\in f</math> 且 <math>(x,\,y^{\prime})\in f</math> ， 則 <math>y=y^{\prime}</math>

若以正式的邏輯符號表述就是(設下面這條[[合式公式|合式公式]]簡記為 <math>\mathcal{A}</math> ，等等的討論會用到)
:<math>(\forall x)(\forall y)(\forall y^{\prime})\{\,[\,(x,\,y) \in f \wedge (x,\,y^{\prime}) \in f  \,]
\Rightarrow (y=y^{\prime})\,\}</math>
也就是直觀上，可以把有序對 <math>(x,\,y)</math> 看成 (''輸入值'', ''輸出值'')；而"函數"本身是以"窮舉"輸出入值來詳盡定義的"對應規則"。而且依照函數 <math>f</math> 的"規則"， <math>x</math> 同時 "對應" 到 <math>y</math> 和 <math>y^{\prime}</math>，則必然 <math>y=y^{\prime}</math>，也就是說一個 <math>x</math> 只能對應到'''僅僅唯一的一個輸出'''。

=== 函數值的簡記 ===
習慣上把 <math>(x,\,y)\in f</math> 等價的寫為 <math>y=f(x)</math> 。但事實上， <math>f(x)</math> 是在[[一阶逻辑|一阶逻辑]][[公理化集合论|公理化集合论]]下，基於 <math>\mathcal{A}</math> 所確保的唯一性，而新增的雙元[[一阶逻辑#函數符號|函數符號]] ( <math>x</math> 和 <math>f</math> 各為一個變數) ，而它的"定義"本質上是以下額外增加的公理 ( 唯一性保證新增這條公理後，"新理論"所擁有的[[一阶逻辑#定理與證明|定理]]和"舊理論"是一樣的，詳請參見[[一阶逻辑#函數符號與唯一性|函數符號與唯一性]])
:<math>[\,\neg(\mathcal{A}\wedge\mathcal{B}) \Rightarrow (f(x)=\varnothing)\,] \vee
\{\,(\mathcal{A}\wedge\mathcal{B}) \Rightarrow 
(\forall y)\{\,[\,(x,\,y) \in f\,] \Leftrightarrow [\,y = f(x)\,]\,\}\,\}</math>
其中 <math>\mathcal{B}</math> 為以下[[合式公式|合式公式]]的簡寫
:<math>(\forall p \in f)(\exists x)(\exists y)[\,p = (x,\, y)\,]</math>
<math>\mathcal{B}</math> 事實上就是 <math>f</math>  為[[二元关系|二元關係]]的正式邏輯符號表述。

對於直觀上"n變數"的函數，也就是以
:<math>((x_1,\,\cdots,\,x_n),\,y)</math>
為元素的函數 <math>\mathcal{f}</math>，習慣上會把以下的[[一阶逻辑#項|項]]
:<math>f[(x_1,\cdots,\, x_n)]</math>
進一步簡寫為
:<math>f(x_1,\cdots,\, x_n)</math>
=== 定義域與值域 ===
實用上如果能指出函數 <math>f</math> 的 "輸入值範圍" 跟 "輸出值範圍" ，對數學的討論是相當方便的，所以延伸出以下慣用的記號
:<math>f: X \to Y</math>
這個記號嚴格上來說代表
:<math>\begin{align}
  D_f:=\{\,x\,| \, (\exists y)[\, y=f(x) \,]\,\}=X\\

  I_f:=\{\,y\,| \, (\exists x)[\, y=f(x) \,]\,\} \subseteq Y\\ 
\end{align}</math>
也就是函數 <math>f</math> 的[[定义域|定義域]] (蒐集所有存在 <math>y</math> 為它的"輸出值"的 <math>x</math> 構成的集合) 為 <math>X</math> ，[[值域|值域]] (蒐集所有存在 <math>x</math> 為它的"輸入值"的 <math>y</math> 所構成的集合) 包含於 <math>Y</math>。或更直觀的說，函數 <math>f</math> 的 "輸入值範圍" 就是 <math>X</math> ， 且 "輸出值" 不會超出 <math>Y</math>。 <math>Y</math> 通常會被稱呼為[[到达域|對應域]]('''特別注意對應域不是唯一的''')

=== 一對一與滿射 ===
滿足
*對任意 <math>y,\,x,\,x^{\prime}</math> 若 <math>(x,\,y)\in f</math> 且 <math>(x^{\prime},\,y)\in f</math> ， 則 <math>x=x^{\prime}</math>。
的函數 <math>f</math> 被稱為[[一對一函數|一對一函數]]。這種狀況下，很容易證明以下的集合：
:<math>f^{-1}:=\{\,p\,|\,(\exists x)(\exists y)[\,p = (y,\,x)\,\wedge\, y = f(x) \,]\,\}</math>
也是一個函數，稱為 <math>f</math> 的[[反函數|反函數]]。{{函數圖形
| start = 0
| end = 2
| min = 0
| max = 4
| sampling = 100
| height = 200
| width = 200|x^2*((sgn(x-1.35)-1)/(sgn(x-1.35)-1))|sqrt(x)|x
| 1 name = y=x²
| 2 name = y=√ x
| 3 name = y=x
| caption = <math>y=x^2</math>與<math>y=\sqrt{x}</math>互為反函数，並且於鏡射於軸<math>y=x</math>上。
| align = center
}}另外基於 <math>f: X \to Y</math> 這個簡記裡只有指出 "輸出值" 不會超出 <math>Y</math> "，所以通常會定義[[满射|满射]]為一個值域就是 <math>Y</math> 的函數，但這只是一個為了彌補這個慣用簡記法的缺陷所延伸出的冗餘定義而已。
{{多圖 |align = center |width = 250px
|image1 = Multivalued function.svg
|caption1 = （1）一對多。''X''中的元素3与''Y''中的两个元素''b''和''c''相关。因此这是'''多值函数'''，而不是函数。
|image2 = Partial function.svg
|caption2 = （2）一對一但非完全對應。''X''的元素1未与''Y''的任一元素相关。因此这是'''偏函数'''，而''不是''函数。
|image3 = Total function.svg
|caption3 = （3）完全對應且多对一，因此这是从''X''到''Y''的函数。此函数可以表示为{{math|''f'' {{=}}{(1, ''d''), (2, ''d''), (3, ''c'')<nowiki>}</nowiki>}}，或<math>f(x)=\left\{\begin{matrix} d, & \mbox{if }x=1 \\ d, & \mbox{if }x=2 \\ c, & \mbox{if }x=3\end{matrix}\right.</math>
}}


== 函数图形 ==
{{函數圖形
| start = -6.28|=6.28
| sampling = 100|sin(x)|(1/16)*x^2|0
}}
{{main|函数图形}}
<!-- 可視化方面 -->

如果函數 <math>f</math> 的值域跟定義域都是實數集合(俗稱 <math>f</math> 為'''實函数''')，可以x軸代表定義域的範圍；y軸代表值域的範圍，把函數的每個元素標示在平面[[笛卡尔坐标系|直角坐標]]上，這被稱為實函数 <math>f</math> 在平面上的'''函數圖形'''。

對於"雙變數"的實函數 <math>g</math> ，也就是以 (<math>x,\,y,\,z\in\mathbb{R}</math>)
:<math>((x,\,y),\,z)</math>
為元素的函數，可以取
:<math>D_x = \{\,x\,|\,(\exists y)(\exists z)[\, g(x,\,y)=z\,]\,\}</math>

:<math>D_y = \{\,x\,|\,(\exists x)(\exists z)[\, g(x,\,y)=z\,]\,\}</math>
然後以 x 軸為 <math>D_x</math> 變化範圍；y 軸為 <math>D_y</math> 變化範圍；最後取z 軸為 <math>g</math> 的值域變化範圍，這樣就可以在三維[[笛卡尔坐标系|直角坐標]]繪出 <math>g</math> 的'''函數圖形'''。

=== 實函数的判别 ===
平面上的任意圖形可用'''豎直判别法'''判斷是否為'''實函数'''的圖形，即图形与任何一条平行于 y 轴的直线不能有一个以上的交點。但實際上這僅僅是函數正式定義的一種應用，因為平行于 y 轴的直线代表的是形如 
:<math>\{\,p\in{\mathbb{R}}^2\,|\,(\exists y \in \mathbb{R})[\, p = (c,\,y)\,]\,\}</math>
的集合，也就是此直線交 x 軸於 <math>(c,\, 0)</math> ，那這樣直線與實函數 <math>f</math>  的交集就是 
:<math>\{\,p\in{\mathbb{R}}^2\,|\,(\exists y \in \mathbb{R})[\, p = (c,\,y) \wedge y = f(c)\,]\,\}</math>
而屬於這個交集裡的平面點'''最多只能有一個'''，否則就會跟每個 <math>x\in D_f</math> 只能對應一個 <math>f(x)</math> 的基本定義矛盾。

== 像和原像 ==

[[像_(數學)|'''像''']]這個術語，嚴謹來說可以指兩種不同的概念

第一種是形如 <math>f(x)</math> 的[[一阶逻辑#項|項]]，直觀上代表的是依照函數 <math>f</math> 的對應規則，使 <math>x</math> 能對應到的那個"值"。(嚴謹的意義請回去參考[[函数#函數值的簡記|函數值的簡記]])

第二種指的是集合 <math>A</math> 在函數 <math>f</math> 下定義的集合 <math>f(A)</math>
:<math>f(A) := \{\,y \,|\, (\exists x\in A)[\,y=f(x)\,] \,\}</math>

注意 <math>f</math> 的值域就是定義域 <math>D_f</math> 的像 <math>f(D_f)</math> 。在[[#正式定義|正式定義]]一節的最後例子中， <math>\{2,3\}</math> 在 <math>f</math> 的像是 <math>f(\{2, 3\})=\{c, d\}</math>，而 <math>f</math> 的值域是 <math>\{c, d\}</math> 。

類似的，集合 <math>B</math> 在函數 <math>f</math>  下的'''原像'''（或''逆像''）定義為：
:<math>f^{-1}(B):=\{\,x\,|\, (\exists y)[\,y=f(x) \wedge y \in B\,]\,\}</math>
沿用同一例子，可以看到 <math> \{a, b\} </math> 的原像是 <math>f^{-1}(\{a, b\}) = \varnothing</math> ，即[[空集|空集]]。

以下是<math>f</math>及<math>f^{-1}</math>的一些特性：
* <math>f(A_{1} \cup  A_{2}) = f(A_{1}) \cup  f(A_{2})</math>；
* <math>f(A_{1} \cap  A_{2}) \subseteq  f(A_{1}) \cap  f(A_{2})</math>；
* <math>f(B_{1} \cup  B_{2}) = f^{-1}(B_{1}) \cup  f^{-1}(B_{2})</math>；
* <math>f^{-1}(B_{1} \cap  B_{2}) = f^{-1}(B_{1}) \cap  f^{-1}(B_{2})</math>；
* <math>f^{-1}(f(B)) \subseteq  B</math>；
* <math>f^{-1}(f(A)) \supseteq A</math>。

這些特性適合定義域的任意子集<math>A, A_{1}</math>及<math>A_{2}</math>和到達域的任意[[子集|子集]]<math>B, B_{1}</math>及<math>B_{2}</math>，甚至可推廣到任意子集群的[[交集|交集]]和[[并集|并集]]。

== 函數的限制及擴張 ==
若 <math>f:X \to Y</math> 且 <math>X^{\prime} \subset X</math> ， 那以下定義的集合<math>f|_X</math> ( 注意到 <math>\times</math> 代表[[笛卡儿积|笛卡儿积]] )

:<math>f|_X:=\{\,p\,|\,(\exists x)(\exists y)[\,(x \in X^{\prime}) \wedge 
(y=f(x))\,]\,\} = f \cap (X^{\prime} \times Y)</math>

顯然為一函數，稱為 <math>f</math> 在 <math>X</math> 的'''[[限制_(數學)|限制]]'''。

反之，若 <math>g:X\to Z</math> 且有 <math>f:Y\to Z</math> 和 <math>f|_X=g</math>，那 <math>f</math> 稱為 <math>g</math> 的'''[[函數的擴張|擴張]]'''。

== 点态运算 ==

設 <math>f:X \to R</math> 且 <math>g:X \to R</math> 且 <math>R</math> 為[[环_(代数)|環]]。這樣可以定義“函數和" <math>f+g</math> 與“函數積" <math>f \times g</math> 如下：
:<math>\begin{align}
  f + g := \{\,p\,|\, (\exists x)(\exists y_1)(\exists y_2)[\, (x \in X) \wedge (y_1,\,y_2 \in R) \wedge
  p=(x,\,y_1 + y_2) \wedge y_1 = f(x) \wedge y_2 = g(x)\,]\,\} \\
  f \times g := \{\,p\,|\, (\exists x)(\exists y_1)(\exists y_2)[\, (x \in X) \wedge (y_1,\,y_2 \in R) \wedge
  p=(x,\,y_1 \times y_2) \wedge y_1 = f(x) \wedge y_2 = g(x)\,]\,\} \\ 
\end{align}</math>
很容易證明以上兩者也是函數，

== 函数範例 ==
{{seealso|函数列表}}

* 首都之於国家（若不把多首都国[http://geography.about.com/library/misc/bl2capitals.htm] {{Wayback|url=http://geography.about.com/library/misc/bl2capitals.htm |date=20051222162004 }} 计算在内)。
* 每个[[自然数|自然数]]<math>n</math>的平方<math>n^2</math>是<math>n</math>的函數。
* [[對數函數|對數函數]]。<math>\ln x</math>是[[正数|正]][[实数|实数]]<math>x</math>的函數。注意，雖然可以把對數函數推廣到複數情況，但結果就不是函數了，而是多值函數。
* 對每个在<math>\R^2</math>平面上的点，其和[[原点|原点]]<math>(0, 0)</math>的距离是確定的。

常用的数学函数包括[[多项式函數|多项式函數]]、[[根式函數|根式函數]]、[[冪函數|冪函數]]、[[对数函數|对数函數]]、[[有理函数|有理函数]]、[[三角函数|三角函数]]、[[反三角函數|反三角函數]]等。它们都是[[初等函数|初等函数]]。非初等函数（或[[特殊函数|特殊函数]]）包括[[伽马函數|伽马函數]]和[[贝塞尔函数|贝塞尔函数]]等。

== 函數的分類 ==
函數可分為
* [[奇函數|奇函數]]或[[偶函數|偶函數]]
* [[連續函數|連續函數]]或[[不連續函數|不連續函數]]
* [[實函數|實函數]]或[[虛函數|虛函數]]
* [[純量函數|純量函數]]或[[向量函數|向量函數]]
* [[单调增函数|单调增函数]]或[[单调减函数|单调减函数]]

== 范畴論觀點下的函数 ==
{{seealso|范畴论|态射}}
在[[范畴论|范畴论]]中，函数的槪念被推廣為[[態射|態射]]的槪念。

一個[[範疇_(數學)|范畴]]包括一組物件與一組態射，每一個態射是個三元组(''X'', ''Y'', ''f'')，''X''稱為源物件（定義域的類比），''Y''稱為目標物件（到達域的類比），而源物件与目標物件是范畴內的物件。基于这种解释，可以把函数看作[[集合范畴|集合范畴]]裡面的態射。

== 參考文獻 ==
*[http://archives.math.utk.edu/visual.calculus/ Visual Calculus]{{Wayback|url=http://archives.math.utk.edu/visual.calculus/ |date=20110924071226 }} by Lawrence S. Husch, [[田納西大學|田納西大學]]（2001年）
{{reflist}}

== 外部链接 ==
* [http://dlmf.nist.gov/ NIST數學函數]{{Wayback|url=http://dlmf.nist.gov/ |date=20100610075107 }}
* [https://web.archive.org/web/20080923201632/http://www.mysuc.com/?tag=%E5%87%BD%E6%95%B0 mysuc.com]，经典函数示例
* [http://functions.wolfram.com/ Wolfram函数网站]{{Wayback|url=http://functions.wolfram.com/ |date=20071010025724 }}，汇集了各数学函数的公式和图像
* [https://de.serlo.org/mathe/funktionen/funktionsbegriff/funktionen-relationen-ist-funktion Was ist eine Funktion?] {{Wayback|url=https://de.serlo.org/mathe/funktionen/funktionsbegriff/funktionen-relationen-ist-funktion |date=20200111212630 }}
* [http://math.hws.edu/xFunctions/ xFunctions]{{Wayback|url=http://math.hws.edu/xFunctions/ |date=20071010084601 }}一个多功能的Java小程序，可以显示函数的图像，既可以在线使用，也可以下载运行。
* [http://fooplot.com/ FooPlot] {{Wayback|url=http://fooplot.com/ |date=20201216203352 }}
* [http://curvas21.blogspot.com/ Curvas]{{Wayback|url=http://curvas21.blogspot.com/ |date=20190502025947 }}

{{Authority control}}

[[Category:集合論基本概念|H]]
[[Category:函数|]]
[[Category:初等数学|H]]
[[Category:数学关系|H]]