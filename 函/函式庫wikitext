{{Multiple issues|
{{Wikify|time=2020-06-13T06:19:22+00:00}}
{{unreferenced|time=2015-08-09T02:50:52+00:00}}
}}
{{NoteTA
|G1 = IT
|1 = zh-cn:库; zh-tw:函式庫; zh-hk:函數庫;
}}
'''库'''（{{lang-en|'''library'''}}）是在[[计算机科学|计算机科学]]中用于开发[[软件|软件]]的[[子程序|子程序]]集合。库和[[可执行文件|可执行文件]]的区别是，它不是独立的[[计算机程序|计算机程序]]，而是向其他程序提供服务的代码。

==链接==
{{main|链接期|链接器}}
库链接（{{lang-en|'''linking'''}}）是指把一个或多个库包括到程序中，有两种链接形式：静态链接和动态链接；相应的，前者链接的库叫做[[静态库|静态库]]，后者的叫做[[动态库|动态库]]。

== 静态库 ==
{{main|静态库}}
静态链接是由[[链接器|链接器]]在链接时将库的内容加入到可执行程序中的做法。链接器是一个独立程序，将一个或多个库或目标文件（先前由[[编译器|编译器]]或[[汇编器|汇编器]]生成）链接到一块，以生成可执行程序。

静态链接的最大缺点是生成的可执行文件較大，需要更多的系统资源，在載入到記憶體时也会消耗更多的时间。

==共享库==
=== 动态库 ===
{{Expand section|time=2019-01-26T15:27:22+00:00|1=可以参照英文维基百科上的条目[//en.wikipedia.org/wiki/Dynamic_linker Dynamic_linker]，但由于来源和该条目过于局限，不建议直接翻译}}
动态链接是在可执行文件[[装载时|装载时]]或[[运行时|运行时]]，由[[操作系统|操作系统]]的[[装载程序|装载程序]]加载库。大多数操作系统将解析外部引用（比如库）作为加载过程的一部分。在这些系统上，可执行文件包含一个叫做匯入目錄（import directory）的表，该表的每一项包含一个库的名字。根据表中记录的名字，装载程序在硬盘上搜索需要的库，然后将其加载到内存中预先不确定的位置，之后根据加载库后确定的库的地址更新可执行程序。可执行程序根据更新后的库信息调用库中的函数或引用库中的数据。这种类型的动态加载称为装载（load-time）时加载，被包括[[Windows|Windows]]和[[Linux|Linux]]的大多数系统采用。装载程序在加载应用软件时要完成的最复杂的工作之一就是加载时链接。

其他操作系统可能在运行时解析引用。在这些系统上，可执行程序调用操作系统[[API|API]]将库的名字、函数在库中的编号和函数参数一同传递。操作系统负责立即解析然后代表应用调用合适的函数。这种动态链接叫做运行时链接。因为每个调用都会有系统开销，运行时链接要慢得多，对应用的性能有负面影响。现代操作系统已经很少使用运行时链接。

可以动态链接的函式庫，在[[Windows|Windows]]上是[[Dynamic_Link_Library|Dynamic Link Library]]（DLL），在[[UNIX|UNIX]]或[[Linux|Linux]]上是Shared Library。库文件是预先编译链接好的可执行文件，存储在[[计算机|计算机]]的[[硬盘|硬盘]]上。大多数情况下，同一时间多个应用可以使用一个库的同一份拷贝，[[操作系统|操作系统]]不需要加载这个库的多个实例。

{{Authority control}}
[[Category:電腦術語|L]]
[[Category:计算机编程|H]]
[[Category:计算机程序库|*]]
[[Category:操作系统技术|Category:操作系统技术]]