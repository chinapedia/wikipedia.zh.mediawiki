{{NoteTA
|G1=IT
|1=zh-tw:線上分析處理;zh-cn:联机分析处理;
|2=zh-tw:線上交易處理;zh-cn:联机事务处理;
}}
'''联机分析处理'''（{{lang-en|Online analytical processing}}），简称'''OLAP''' ({{IPAc-en|ˈ|oʊ|l|æ|p}})，是[[计算_(计算机科学)|计算机技术]]中快速解决{{le|多维分析问题|multi-dimensional analytical}}（MDA）的一种方法。<ref name=Codd1993>{{cite web
  |url=http://www.sgpnyc.com/us/products/dataquest/whitepapers/OLAP_wp_efcodd.pdf
  |title=Providing OLAP (On-line Analytical Processing) to User-Analysts: An IT Mandate
  |publisher=Codd & Date, Inc
  |author1=Codd E.F.
  |author2=Codd S.B.
  |author3=Salley C.T.
  |last-author-amp=yes
  |year=1993
  |accessdate=2008-03-05
  }}{{Dead link|date=2019年11月 |bot=InternetArchiveBot |fix-attempted=yes }}</ref> OLAP是更广泛的[[商业智能|商业智能]]范畴的一部分，它还包括[[关系数据库|关系数据库]]、报告编写和[[数据挖掘|数据挖掘]]。<ref>{{cite book
  |url=https://books.google.com/books?id=M-UOE1Cp9OEC
  |title=Business Intelligence for Telecommunications
  |publisher=CRC Press
  |author=Deepak Pareek
  |year=2007
  |pages=294 pp
  |isbn=978-0-8493-8792-0
  |accessdate=2008-03-18
}}</ref> OLAP的典型应用包括销售{{le|业务报告|business reporting}}、[[市场营销|市场营销]]、管理报告、[[业务流程管理|业务流程管理]]（BPM）<ref>{{cite book
  |url=http://www.google.com/products?q=9783639222166
  |title=Business Process Management:A Data Cube To Analyze Business Process Simulation Data For Decision Making
  |publisher=[[VDM_Verlag|VDM Verlag Dr. Müller e.K.]]
  |author=Apostolos Benisis
  |year=2010
  |pages=204 pp
  |isbn=978-3-639-22216-6
}}</ref>、[[預算|預算]]和{{le|预测|forecasting}}、[[財務報表|財務報表]]以及类似领域，新的应用正在出现，如[[农业|农业]]。<ref name=ahsan/> 术语“OLAP”是对传统数据库术语“[[联机事务处理|联机事务处理]]”（OLTP）稍微修改而成的。<ref>{{cite web
  |url=http://www.symcorp.com/downloads/OLAP_CouncilWhitePaper.pdf
  |title=OLAP Council White Paper
  |publisher=OLAP Council
  |year=1997
  |accessdate=2008-03-18
  |archive-date=2016-06-23
  |archive-url=https://web.archive.org/web/20160623184904/http://www.symcorp.com/downloads/OLAP_CouncilWhitePaper.pdf
  |dead-url=no
  }}</ref>

OLAP工具让用户能够从多个角度交互地分析多维数据。OLAP由三个基本的分析操作组成：上卷（roll-up）、钻取（drill-down）、切片（slicing）和切块（dicing）。<ref name="OBrien">O'Brien, J. A., & Marakas, G. M. (2009). Management information systems (9th ed.). Boston, MA: McGraw-Hill/Irwin.</ref>{{rp|402-403}} 上卷涉及可以在一个或多个维度中累积和计算的数据的聚合。例如，所有的销售办事处汇总到销售部门，以预测销售趋势。相比之下，钻取是一种允许用户浏览详细信息的技术。例如，用户可以查看组成一个地区销售额的单个产品的销售额。切片和切块是说，用户可以从OLAP多维数据集中取出（切片）一组特定的数据，并从不同的角度查看（切块）切片。这些角度有时被称为维度（例如按销售人员、按日期、按客户、按产品或按地区查看相同的销售情况等）。

为OLAP配置的[[数据库|数据库]]使用多维数据模型，允许快速执行复杂的分析查询和即席查询。<ref>{{cite web
  |url=http://www.dwreview.com/OLAP/Introduction_OLAP.html
  |title=Introduction to OLAP – Slice, Dice and Drill!
  |publisher=Data Warehousing Review
  |author=Hari Mailvaganam
  |year=2007
  |accessdate=2008-03-18
  |archive-date=2018-09-28
  |archive-url=https://web.archive.org/web/20180928201202/http://dwreview.com/OLAP/Introduction_OLAP.html
  |dead-url=no
  }}</ref> 它们借鉴了{{le|导航型数据库|navigational database}}、[[层次模型|层次型数据库]]和关系型数据库的各个方面。

OLAP通常与[[線上交易處理|OLTP]]（联机事务处理）形成对比，OLTP的特点是查询的复杂性要小得多，而且查询量要大得多，以处理事务，而不是用于商业智能或报告。OLAP系统主要针对读取进行优化，而OLTP得能处理各种查询（读取、插入、更新和删除）。

== OLAP系统概述 ==
OLAP系统的核心是一个{{le|OLAP多维数据集|OLAP cube}}。它由称为'''度量'''的数字事实组成，这些数字事实按维度进行分类。这些度量被放置在超立方体的交点处。操作一个OLAP多维数据集的通常接口是一个矩阵接口，就像电子表格程序中的数据[[透视表|透视表]]一样，它沿着维度执行投影操作，例如聚合或求平均值。

多维数据集元数据通常是从[[关系数据库|关系数据库]]中的表的{{le|星型模式|star schema}}、{{le|雪花型模式|snowflake schema}}或{{le|事实星座|fact constellation}}中创建的。度量来自{{le|事实表|fact table}}中的记录，维度来自{{le|维度表|dimension table}}。

可以认为每个度量都有一组'''标签'''，或者与之关联的元数据。'''维度'''是描述这些'''标签'''的东西; 它提供有关'''度量'''的信息。

举一个简单地多维数据集的例子，商店的销售额作为'''度量'''，日期/时间作为'''维度'''。每个销售都有一个日期/时间'''标签'''，描述更多关于该销售的信息。

如下所示：
  Sales Fact Table
 +-------------+----------+
 | sale_amount | time_id  |
 +-------------+----------+            Time Dimension
 |      2008.10|     1234 |----+     +---------+-------------------+
 +-------------+----------+    |     | time_id | timestamp         |
                               |     +---------+-------------------+
                               +---->|   1234  | 20080902 12:35:43 |
                                     +---------+-------------------+

=== 多维数据库 ===
多维结构被定义为“使用多维结构组织数据并表达数据之间关系的关系模型的变体”。<ref name="OBrien"/>{{rp|177}} 该结构被分解成多个超立方体，并且在每个超立方体的范围内都能存储和访问数据。“多维结构中的每个单元都包含与其维度上的元素相关的聚合数据”。<ref name="OBrien"/>{{rp|178}} 即使对数据进行操作，也很容易访问并继续构成一种紧凑的数据库格式。数据仍然是相互关联的。
对于使用OLAP应用程序的分析数据库，多维结构非常流行。<ref name="OBrien"/> 分析型数据库使用这些数据库，是因为它们能够快速地为复杂的业务查询提供答案。可以从不同的角度查看数据，这与其他模型不同，为问题提供了更广阔的视角。<ref>Williams, C., Garza, V.R., Tucker, S, Marcus, A.M. (1994, January 24). Multidimensional models boost viewing options. InfoWorld, 16(4)</ref>

=== 聚合 ===
据称，对于复杂查询，OLAP多维数据集可以在大约0.1%的时间内生成对[[線上交易處理|OLTP]]关系数据的相同查询所需的答案。<ref>{{cite web
  | author=MicroStrategy, Incorporated
  | year=1995
  | title=The Case for Relational OLAP
  | url=http://www.cs.bgu.ac.il/~onap052/uploads/Seminar/Relational%20OLAP%20Microstrategy.pdf
  | accessdate=2008-03-20
  | archive-date=2013-06-27
  | archive-url=https://web.archive.org/web/20130627154702/http://www.cs.bgu.ac.il/~onap052/uploads/Seminar/Relational%20OLAP%20Microstrategy.pdf
  | dead-url=no
  }}</ref><ref>{{cite journal
  |author1=Surajit Chaudhuri  |author2=Umeshwar Dayal
   |lastauthoramp=yes | title = An overview of data warehousing and OLAP technology
  | journal = SIGMOD Rec.
  | volume = 26
  | issue = 1
  | year = 1997

  | pages = 65
  | doi = 10.1145/248603.248616

  |citeseerx=10.1.1.211.7178
   }}</ref>  OLAP中允许其实现此类性能的最重要机制是使用聚合。聚合是通过更改特定维度的粒度并使用聚合函数沿着这些维度聚合数据，从事实表构建的。可能聚合的数量由每个可能的维度粒度组合决定。

所有可能的聚合和基础数据的组合包含可以从数据应答的每个查询的答案。<ref>{{cite journal
  | last1 = Gray | first1 = Jim
  | author1-link = Jim Gray (computer scientist)
  | last2 = Chaudhuri | first2 = Surajit
  | last3 = Layman | first3 = Andrew
  | last4 = Reichart | first4 = Don
  | last5 = Venkatrao | first5 = Murali
  | last6 = Pellow | first6 = Frank
  | last7 = Pirahesh | first7 = Hamid
  | title = Data Cube: {A} Relational Aggregation Operator Generalizing Group-By, Cross-Tab, and Sub-Totals
  | journal = J. Data Mining and Knowledge Discovery
  | volume = 1
  | issue = 1
  | pages = 29–53
  | year = 1997
  | url = http://citeseer.ist.psu.edu/gray97data.html
  | accessdate=2008-03-20
| doi = 10.1023/A:1009726021843
  | arxiv = cs/0701155
  }}</ref>

因为通常有许多可以计算的聚合，所以通常只有预先确定的数字被完全计算; 其余的则根据需要求解。决定要计算哪些聚合（视图）的问题称为视图选择问题。视图选择可以受到所选聚合集的总大小、根据基础数据的更改更新它们的时间的限制，或者同时受两者的限制。视图选择的目标通常是最小化进行OLAP查询的平均时间，尽管一些研究也最小化了更新时间。视图选择是[[NP完全|NP完全]]问题。这个问题已经被探索了许多方法，包括[[贪心算法|贪心算法]]、随机搜索、[[遗传算法|遗传算法]]和[[A*搜尋演算法|A*搜尋演算法]]。

对于整个OLAP多维数据集，可以通过预先计算每个单元的值来计算一些聚合函数，然后通过聚合这些聚合来计算单元汇总的聚合，并对多维问题应用[[分治法|分治法]]来有效地计算这些聚合。{{sfn|Zhang|2017|p=1}} 例如，所有的总和就是每个单元的子和的总和。可以这样分解的函数称为可分解聚合函数，包括<code>COUNT、MAX、MIN</code>和<code>SUM</code>，这些函数可以为每个单元计算，然后直接聚合；这些函数称为自可分解聚合函数。{{sfn|Jesus|Baquero|Almeida|2011|loc=2.1 Decomposable functions, pp. 3–4}} 在其他情况下，聚合函数可以通过计算单元的辅助数，聚合这些辅助数，最后计算最后的总数来计算；例子有<code>AVERAGE</code>（跟踪和与数量，最后再做除法）和<code>RANGE</code>（跟踪最大值和最小值，最后再相减）。在其他情况下，如果不立即分析整个集合，就无法计算聚合函数，尽管在某些情况下可以计算近似值；例如<code>DISTINCT COUNT、MEDIAN</code>和<code>MODE</code>；例如，集合的中位数不等于子集的中位数。后者很难在OLAP中有效地实现，因为它们需要在基础数据上计算聚合函数，或者在线（慢）计算它们，或者为可能的展开（大空间）进行预计算。

== 参考文献 ==
{{Reflist|30em
|refs =
<ref name=ahsan>
{{cite journal
|last1=Abdullah
|first1=Ahsan
|title=Analysis of mealybug incidence on the cotton crop using ADSS-OLAP (Online Analytical Processing) tool
|journal=Computers and Electronics in Agriculture |date=November 2009 |volume=69 |issue=1 |pages=59–72 |doi=10.1016/j.compag.2009.07.003
}}
</ref>
}}

== 参见 ==
*[[数据庫|数据庫]]
*[[決策支持系統|決策支持系統]]
*[[数据仓库|数据仓库]]
*[[数据挖掘|数据挖掘]]
*[[商務智能|商務智能]]

{{Data warehouse}} 

[[Category:資訊管理|Category:資訊管理]]
[[Category:数据库|Category:数据库]]
[[Category:数据挖掘|Category:数据挖掘]]