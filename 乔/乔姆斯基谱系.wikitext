{{noteTA
|G1=IT
|1=zh-hans:乔姆斯基; zh-hant:杭士基;
}}
{{expert}}
{{cleanup-jargon}}
'''乔姆斯基体系'''是[[计算机科学|计算机科学]]中刻画[[形式文法|形式文法]]表达能力的一个分类谱系，是由[[语言学|语言学家]][[诺姆·乔姆斯基|诺姆·乔姆斯基]]于1956年提出的。它包括四个层次：

* 0-型文法（无限制文法或短语结构文法）包括所有的文法。该类型的文法能够产生所有可被[[图灵机|图灵机]]识别的语言。可被图灵机识别的语言是指能够使图灵机停机的字串，这类语言又被称为[[递归可枚举语言|递归可枚举语言]]。注意递归可枚举语言与[[递归语言|递归语言]]的区别，后者是前者的一个真子集，是能够被一个总停机的图灵机判定的语言。

* 1-型文法（上下文相关文法）生成[[上下文相关语言|上下文相关语言]]。这种文法的产生式规则取如 α''A''β -> αγβ 一样的形式。这里的''A'' 是非终结符号，而 α, β 和 γ 是包含非终结符号与终结符号的字串；α, β 可以是空串，但 γ 必须不能是空串；这种文法也可以包含规则 S->ε ，但此时文法的任何产生式规则都不能在右侧包含 S 。这种文法规定的语言可以被线性有界非确定图灵机接受。

* 2-型文法（上下文无关文法）生成[[上下文无关文法|上下文无关语言]]。这种文法的产生式规则取如 ''A'' -> γ 一样的形式。这里的''A'' 是非终结符号，γ 是包含非终结符号与终结符号的字串。这种文法规定的语言可以被非确定[[下推自动机|下推自动机]]接受。上下文无关语言为大多数[[程序设计语言|程序设计语言]]的语法提供了理论基础。

* 3-型文法（正规文法）生成[[正规语言|正规语言]]。这种文法要求产生式的左侧只能包含一个非终结符号，产生式的右侧只能是空串、一个终结符号或者一个终结符号后随一个非终结符号；如果所有产生式的右侧都不含初始符号 S ，规则 S -> ε 也允许出现。这种文法规定的语言可以被[[有限状态自动机|有限状态自动机]]接受，也可以通过[[正则表达式|正则表达式]]来获得。正规语言通常用来定义检索模式或者程序设计语言中的词法结构。

正规语言类包含于上下文无关语言类，上下文无关语言类包含于上下文相关语言类，上下文相关语言类包含于递归可枚举语言类。这里的包含都是集合的真包含关系，也就是说：存在递归可枚举语言不属于上下文相关语言类，存在上下文相关语言不属于上下文无关语言类，存在上下文无关语言不属于正规语言类。

[[File:Chomsky-hierarchy.svg|thumb]]描述的集合包含。]]

下表总结了上述四种类型的文法的主要特点：

:{| class="wikitable" style="font-family:Arial;"
|-----
! 文法
! 语言
! 自动机
! 产生式规则
|-----
| 0-型 || 递归可枚举语言 || 图灵机 || α -> β（无限制）
|-----
| 1-型 || 上下文相关语言 || 线性有界非确定图灵机
| α''A''β -> αγβ
|-----
| 2-型 || 上下文无关语言 || 非确定下推自动机 || ''A'' -> γ
|-----
| 3-型 || 正规语言 || 有限状态自动机 || ''A'' -> ''aB''<br />
''A'' -> ''a'' 
|}

== 相關條目 ==
* [[黑盒|黑盒]]
* [[图灵机|图灵机]]
* [[图灵归约|图灵归约]]
* [[交互式证明系统|交互式证明系统]]
* [[隨機預言機|隨機預言機]]

== 参考文献 ==

* Noam Chomsky: ''Three models for the description of language'', IRE Transactions on Information Theory, 2 (1956), pages 113-124
* Noam Chomsky: ''On certain formal properties of grammars'', Information and Control, 1 (1959), pages 91-112

{{形式语言与形式文法}}

[[Category:编译原理|Category:编译原理]]
[[Category:形式语言|Q]]
[[Category:諾姆·杭士基|Category:諾姆·杭士基]]