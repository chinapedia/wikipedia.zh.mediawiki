'''十六进制'''（简写为''hex''或下標<sub>16</sub>）在[[数学|数学]]中是一种逢16进1的[[进位制|进位制]]。一般用数字0到9和字母A到F表示，其中:A~F相當於十進位的10~15，这些称作'''十六进制数字'''。

例如[[十进制|十进制]]數57，在[[二进制|二进制]]寫作111001，在16进制寫作39。

现在的16进制则普遍应用在[[计算机|计算机]]领域，这是因為將4個[[位元|位元]]（Bit）化成單獨的16进制數字不太困難。1個[[位元組|位元組]](Byte)可以表示成2個連續的16进制數字。可是，這種混合表示法容易令人混淆，因此需要一些字首、字尾或下標來顯示。

{{Hexadecimal_table}}

== 表示方式 ==
不同[[電腦|電腦系統]]、[[編程語言|編程語言]]對於16進位數值有不同的表示方式：
* [[Ada|Ada]]与[[VHDL|VHDL]]用所基于的“数字引证”把16进制数包起来，例如“16#5A3#”。（注：Ada对整数和实数都可以使用从1到16中任何一个做为其基数。）而对于字节向量，[[VHDL|VHDL]]使用字首 x 表示，例如，x"10"，对应的二进制码为："00010000"。
* [[C語言|C語言]]、C++、[[Bash|Shell]]、[[Python|Python]]、[[Java|Java]]語言及其他相近的語言使用字首「0x」，例如「0x5A3」。开头的「0」令[[解析器|解析器]]更易辨认数，而「x」則代表十六进制（就如「O」代表[[八进制|八进制]]）。在「0x」中的「x」可以[[大寫字母|大寫]]或[[小寫字母|小寫]]。对于字符量C语言中则以x+两位十六进制数的方式表示，如xFF。
** C++11引进了十六进制浮点型[[字面常量_(C语言)|字面常量]]。例如：<code>0x1.2p10</code>表示 （1+2/16）×2<sup>10</sup>=1152<sub>10</sub>。实际上，[[Visual_C++|Visual C++]]一直以来使用的C/C++语言标准库函数printf，<code>%a</code>作为类型说明符来格式化输出浮点型值即为上述格式。例如：<code>printf("%a",1152.0);</code>
** C/C++在表示字符型字面常量时，可以用：
*** 十六进制转义序列：如 \x1abf4 ，可以使用任意多的十六进制数字，直至不是十六进制数字为止；
*** 16位的通用字符名（universe-character name）：\u后面必须跟4个十六进制数字（不足四位前面用零补齐），表示Unicode中在0至0xFFFF之内的码位（但不能表示0xD800到0xDFFF之内的码点，Unicode标准规定这个范围内的码位保留，不表示字符）；
*** 32位的通用字符名：\U后面必须跟8个十六进制数字（不足八位前面用零补齐），表示Unicode中所有可能的码位（除0xD800到0xDFFF之外）。
* 在[[VB|VB]]、MSX BASIC、Quick BASIC和FreeBASIC中，使用字首「&H」来表示。
* 在[[HTML|HTML]]，十六进制字元可以用「x」，例如&#x5a3;和&#1443;效果應該無異。
* Intel的汇编语言中用字尾「h」來标识16进位的數（若該數以字母起首，在前面會增加一個「0」）例如「0A3Ch」、「5A3h」
* 其他匯編器（[[AT&T|AT&T]]、[[Motorola|Motorola]]、6502），[[Pascal_(编程语言)|Pascal]]，[[Delphi|Delphi]]和某些BASIC的版本使用字首「$」，例如「$5A3」
* 亦有用<code>X'5A3'</code>這類表示方式的，如于[[PL/I|PL/I]]，[[COBOL|COBOL]]及[[JCL|JCL]]中。这亦是[[IBM|IBM]]装载早期操作系统的[[大型机|大型机]]与[[小型机|小型机]]上最常用的数据格式。
{{Table Numeral Systems}}
由于表示方式没有单一、已协定的标准，所以以上的表示方式都有被使用，有时甚至在同一份论文上会出现几个不同的表示方式。但因为各方式之间没有太大的分歧，所以即使混合使用也没有构成问题。

其中最常用（或常见）表示十六进制数值的方式是将 '0x' 加在数字前，或在数字后加上小字 16。例如 0x2BAD 和 2BAD<sub>16</sub> 都是表示十进制的11181（或11181<sub>10</sub>）。

在[[網頁設計|網頁設計]]上十六進位是很常用的。[[HTML|HTML]]和[[Cascading_Style_Sheets|CSS]]使用十六進位的表示法來表示網頁上的特定顏色。使用 # 的符號來表示而非用個別的符號表示十六進位。24-bit 顏色可以用 #RRGGBB 的格式來表示，RR 是顏色中紅色成分的數值，GG 是顏色中綠色成分的數值，BB 顏色中藍色成分的數值。舉個例子, 紅色的陰影是十進位 238,9,63 可以編成 #EE093F。參見 [[网页颜色模式|网页颜色模式]].

在[[URL|URL]]的特殊字元亦是用[[ASCII|ASCII]]中的十六进位，每字節都有百份比符號（%）在前，例如： 空格就表示为%20，而中文维基百科的首页地址就是 http://zh.wikipedia.org/wiki/Wikipedia:%E9%A6%96%E9%A1%B5{{Wayback|url=http://zh.wikipedia.org/wiki/Wikipedia:%E9%A6%96%E9%A1%B5 |date=20090714234622 }} （在一些现代的浏览器，如[[Firefox|Firefox]]中，地址中十六进制编码会被解码成实际字符，所以在这些浏览器中中文维基百科的首页地址显示成 http://zh.wikipedia.org/wiki/Wikipedia:首页{{Wayback|url=http://zh.wikipedia.org/wiki/Wikipedia%3A%E9%A6%96%E9%A1%B5 |date=20201002141123 }} ）

=== 表示方法表 ===
此中hex带入具体16进制数。
{| class="wikitable" border="1"
|-
!  环境
!  格式
!  备注
|-
|  URL
|  %hex
|  
|-
|  XML,XHTML
|  &#xhex
|  
|-
|  HTML,CSS
|  #hex
|  6位,用于表示颜色
|-
|  Unicode
|  U+hex
|  6位,表示字符编码
|-
|  MIME
|  =hex
|  
|-
|  Modula-2
|  #hex
|  
|-
|  Smalltalk,ALGOL 68
|  16rhex
|  
|-
|  Common Lisp
|  #xhex或#16rhex
|  
|-
|  IPv6
|  8个hex用:分隔
|  
|}

== 十六進位的分數 ==
與其他進位系統一樣，十六進位的系統可以用來表達[[分數|分數]]，而[[循環小數|循環小數]]也是很常見的：

{| border="0" cellspacing="0" cellpadding="0" width=640
|width= 9%  height=0|
|width= 4%|
|width=10%|
|width= 9%|
|width= 4%|
|width=12%|
|width= 9%|
|width= 4%|
|width=15%|
|width= 9%|
|width= 4%|
|width=11%|
|-
|align=right| 1÷  1  ||<center> = || 1
|align=right| 1÷  5  ||<center> = || 0.<font style="text-decoration: overline">3</font>
|align=right| 1÷  9  ||<center> = ||  0.<font style="text-decoration: overline">1C7</font>
|align=right| 1÷ D  ||<center> = || 0.<font style="text-decoration: overline">13B</font>
|-
|align=right| 1÷  2  ||<center> = || 0.8
|align=right| 1÷  6  ||<center> = || 0.2<font style="text-decoration: overline">A</font>
|align=right| 1÷  A  ||<center> = || 0.1<font style="text-decoration: overline">9</font>
|align=right| 1÷ E  ||<center> = || 0.1<font style="text-decoration: overline">249</font>
|-
|align=right| 1÷  3  ||<center> = || 0.<font style="text-decoration: overline">5</font>
|align=right| 1÷  7  ||<center> = || 0.<font style="text-decoration: overline">249</font>
|align=right| 1÷  B  ||<center> = || 0.<font style="text-decoration: overline">1745D</font>
|align=right| 1÷ F  ||<center> = || 0.<font style="text-decoration: overline">1</font>
|-
|align=right| 1÷ 4  ||<center> = || 0.4
|align=right| 1÷  8  ||<center> = || 0.2
|align=right| 1÷  C  ||<center> = || 0.1<font style="text-decoration: overline">5</font>
|align=right nowrap| 1÷ 10  ||<center> = || 0.1
|}

由于基数16是平方（4<sup>2</sup>），所以与10进制相比16进制小数的余数循环周期更加常见。十进制时当最简分母包含不存在于基数的[[素因数|素因数]]时就会出现循环小数。而16进制时所有分母不是2的幂情况下都会表现为循环小数。

然而由於貯存上的方便，浮點小數在電腦上一般都會採用[[二進制|二進位]]。

== 十六进制的转换 ==
=== 數學的計算方法 ===
{{main|進制轉換}}

[[File:A_hexidecimal_multiplication_table.svg|缩略图]]]]

==== 十進位轉十六進位 ====
採[[餘數定理|餘數定理]]分解，例如將4877<sub>10</sub>轉成十六進位：

4877÷16=304...13(D)

304÷16=19...0

19÷16=1...3

這樣就計到4877<sub>10</sub>=130D<sub>16</sub>

=== 编程中的函式 ===
==== Visual Basic ====
* 十六进制转换为十进制：十进制（Long型）=CLng("&H" & 十六进制数（String型）)
* 十进制转换为十六进制：十六进制数（String型）=Hex$(十进制)

==== Javascript ====
Javascript 能以 toString() 函數來將十進位數字轉為其他任意進位格式（String類型）
<syntaxhighlight lang="javascript">var num = 255;
num.toString(16); // 將之轉為十六進制</syntaxhighlight>
亦可用 parseInt() 函數將任意進位的字串轉為十進位數字

<syntaxhighlight lang="javascript">var hexNum = "FF";
parseInt(hexNum, 16); // 將十六進制轉為10進制</syntaxhighlight>

==== Python ====
調用[[Python|Python]]內置int()函数把該字串轉為數字。以下為在Python解释器編程環境下的操作示範：
* 把十六进制的字串轉為十进制數字：
<syntaxhighlight lang="python">
 print int('ff', 16)
</syntaxhighlight>
:255
* 把十进制數字转换为以十六进制表示之字串，可調用內置的hex()函数：
<syntaxhighlight lang="python">
 print hex(255)
</syntaxhighlight>
:0xff
* 調用BinAscii模块其中的b2a_hex()函数，可把以[[ASCII|ASCII]]編碼的文字以十六进制表示：
<syntaxhighlight lang="python">
 print binascii.b2a_hex('A')
</syntaxhighlight>
:41
:反之也可把以十六进制表示的文字，換成以[[ASCII|ASCII]]編碼的文字：
<syntaxhighlight lang="python">
 print binascii.a2b_hex('41')
</syntaxhighlight>
:A

==== Perl ====
十進位轉十六進位：
<syntaxhighlight lang="perl">
 #!/usr/local/bin/perl
 # filename: 10to16
 for ($i = 0; $i < @ARGV; $i++)
 {
 	printf("%d\t= 0x%x\n", $ARGV[$i], $ARGV[$i]);
 }
</syntaxhighlight>
十六進位轉十進位：
<syntaxhighlight lang="perl">
 #!/usr/local/bin/perl
 # filename: 16to10
 for ($i = 0; $i < @ARGV; $i++)
 {
 	$val = hex($ARGV[$i]);
 	printf("0x%x\t= %d\n", $val, $val);
 }
</syntaxhighlight>
用例（[[类UNIX|类UNIX]]系统中）：
先进入以上文件所在的文件夹，然后执行命令：

 > ./10to16 100 512 789
 100	= 0x64
 512	= 0x200
 789	= 0x315
 > ./16to10 AB 5D9
 0xAB	= 171
 0x5D9	= 1497

== 外部链接 ==
* [https://www.convertworld.com/zh-hant/numerals/hexadecimal.html 16进制到10进制转换在线] {{Wayback|url=https://www.convertworld.com/zh-hant/numerals/hexadecimal.html |date=20200814193056 }}
* [https://www.convertworld.com/zh-hant/numerals/hexadecimal.html 10进制到16进制转换] {{Wayback|url=https://www.convertworld.com/zh-hant/numerals/hexadecimal.html |date=20200814193056 }}
* [http://www.mxcz.net/tools/hex.aspx 在线十六进制编码解码]{{Wayback|url=http://www.mxcz.net/tools/hex.aspx |date=20100718100436 }}

{{pns}}

[[Category:进位制|16]]