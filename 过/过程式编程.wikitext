{{NoteTA
|G1 = IT
|1 = 编程=>zh-tw:程式設計; 编程=>zh-hk:程式設計; 编程=>zh-mo:程式設計;
|2 = 編程=>zh-tw:程式設計; 編程=>zh-hk:程式設計; 編程=>zh-mo:程式設計;
|3 = 函数=>zh-cn:函数; zh-tw:函式; zh-hk:函數;
|4 = 过程=>zh-cn:过程; zh-tw:程序; zh-hk:程式;
}}
{{编程范式}}
'''过程式程序设计'''（{{lang-en|Procedural programming}}），又稱过程化編程，一種[[編程典範|編程典範]]，衍生自[[指令式編程|指令式編程]]<ref>{{cite web |url=https://cs.lmu.edu/~ray/notes/paradigms/ |title=Programming Paradigms}}</ref>，有時會被視為是同義語。主要要採取[[子程序|过程调用]]或函数调用的方式來進行[[流程控制|流程控制]]。流程則由包涵一系列運算步驟的过程（Procedures），例程（routines），[[子程序|子程序]]（subroutines）, 方法（methods），或函式（functions）來控制。在程式執行的任何一個時間點，都可以呼叫某個特定的程序。任何一個特定的程序，也能被任意一個程序或是它自己本身呼叫。

最初的主要过程式编程语言出现在大约1957年至1964年，包括[[Fortran|Fortran]]、[[ALGOL|ALGOL]]、[[COBOL|COBOL]]、[[PL/I|PL/I]]和[[BASIC|BASIC]]<ref name=":0">{{cite document
|title=Welcome to IEEE Xplore 2.0: Use of procedural programming languages for controlling production systems
|publisher=ieeexplore.ieee.org
|doi=10.1109/CAIA.1991.120848
}}</ref>，后来的[[Pascal_(编程语言)|Pascal]]和[[C语言|C]]发表于大约1970年至1972年。

==引用==
{{reflist}}

{{编程语言类别}}

{{Compu-lang-stub}}
[[Category:編程典範|Category:編程典範]]
[[Category:过程式编程语言|]]