{{NoteTA|G1=IT|G2=FL}}
{{Infobox software
| name                   = KDE Frameworks
| title                  = KDE Frameworks
| logo                   = 
| logo caption           = 
| logo_size              = 
| logo_alt               = 
| screenshot             = 
| caption                = 
| screenshot_size        = 
| screenshot_alt         = 
| latest release version = {{LSR/wikidata}}
| collapsible            = 
| author                 = [[KDE|KDE]]
| developer              = [[KDE|KDE]]
| released               = {{Start date and age|2014|07|01|df=yes}}
| programming language   = [[C++|C++]]
| operating system       = [[Linux|Linux]]、[[OS_X|OS X]]、[[Microsoft_Windows|Microsoft Windows]]
| size                   = 
| language               = 
| language count         = 
| language footnote      = 
| genre                  = {{ubl|[[函式庫|系統函式庫]]|[[軟體框架|軟體框架]]}}
| license                = [[GNU宽通用公共许可证|GNU宽通用公共许可证]]（LGPL）<ref name="release 5.0">{{cite web |url=http://kde.org/announcements/kde-frameworks-5.0.php |title=First release of KDE Frameworks 5 |date=2014-07-07 |accessdate=2014-08-20 |archive-date=2015-09-05 |archive-url=https://web.archive.org/web/20150905235848/https://www.kde.org/announcements/kde-frameworks-5.0.php |dead-url=no }}</ref>
| website                = {{URL|http://www.kde.org}}
}}
[[File:Evolution_and_development_of_KDE_software.svg|thumb]]
'''KDE Frameworks'''是一套由[[KDE|KDE]]社群所編寫的[[函式庫|函式庫]]及[[軟體框架|軟體框架]]，是[[KDE_Plasma_5|KDE Plasma 5]]及[[KDE_Software_Compilation#第五版|KDE Applications 5]]的基礎，並使用[[GNU宽通用公共许可证|GNU宽通用公共许可证]]進行散佈。

其中所包含的各種獨立框架提供了各種常用的功能，包括了硬體整合、檔案格式支援、[[控件|控件]]、繪圖功能、[[拼寫檢查|拼寫檢查]]及更多。

KDE Frameworks相當於將[[KDELibs|KDE Platform 4]]重寫為一套單獨且分開、跨平臺的模組，可以很容易的提供給所有基於[[Qt|Qt]]的程式使用。從[[KDELibs|KDE Platform]]到KDE Frameworks的轉換歷時超過3年，由頂尖的技術貢獻者們指導<ref name=rel.struct>{{cite web|url=https://dot.kde.org/2013/09/04/kde-release-structure-evolves|title=KDE Release Structure Evolves|author=Howard Chan|publisher=KDE|date=2013-09-04|accessdate=2014-02-27|archive-date=2020-11-12|archive-url=https://web.archive.org/web/20201112015744/https://dot.kde.org/2013/09/04/kde-release-structure-evolves|dead-url=no}}</ref>。

在KDE Frameworks 5.0釋出後，因為沒有嚴苛的底線壓力，開發者們將會專注在加入新的功能到KDE Frameworks 5的組件中<ref>{{cite web |url=http://mail.kde.org/pipermail/kde-frameworks-devel/2014-July/017410.html |title=KF5 Update Meeting Minutes 2014-w28 |date=2014-07-08 |accessdate=2014-08-20 |archive-date=2016-03-07 |archive-url=https://web.archive.org/web/20160307155318/https://mail.kde.org/pipermail/kde-frameworks-devel/2014-July/017410.html |dead-url=no }}</ref>。像是[[Firefox|Firefox]]與KDE的更佳整合<ref>{{cite web|url=https://mail.mozilla.org/pipermail/firefox-dev/2014-July/001940.html|title=Firefox + KDE integration: Getting FF to use Dolphin reliably|date=2014-07-03|accessdate=2014-08-20|archive-date=2018-05-15|archive-url=https://web.archive.org/web/20180515070853/https://mail.mozilla.org/pipermail/firefox-dev/2014-July/001940.html|dead-url=no}}</ref>。

KDE Frameworks 5執行時函式庫與KDE Platform 4執行時函式庫一同安裝應該是可行的，這樣應用程式就可以選擇要用哪一種<ref>{{cite web |url=https://community.kde.org/Frameworks/Coinstallability |title=Coinstallability with KDE Platform 4 |accessdate=2014-08-20 |archive-date=2020-12-01 |archive-url=https://web.archive.org/web/20201201003619/https://community.kde.org/Frameworks/Coinstallability |dead-url=no }}</ref>。

== 採用 ==
KDE Frameworks中的原始碼有一部份在KDElibs 1中就有使用。除了[[KDE_Software_Compilation|KDE Software Compilation]]以外，也可能有其他許多的採用者，像是[[桌面环境|桌面环境]]，如[[Razor-qt|Razor-qt]]、[[LXQt|LXQt]]、{{link-en|MoonLightDE|MoonLightDE}}或是{{link-en|Hawaii(桌面環境)|Hawaii (desktop environment)|Hawaii}}，或是應用程式，像是[[Amarok|Amarok]]、[[亞佛加厥_(軟體)|Avogadro]]等。

== 開發 ==
因為[[KDE_Software_Compilation|KDE Software Compilation]]被分割為KDE Frameworks 5、[[KDE_Plasma_5|KDE Plasma 5]]及[[KDE_Software_Compilation#第五版|KDE Applications 5]]、每個子專案都可以選擇自己的開發步伐。KDE Frameworks 5將會以每個月為基礎釋出<ref>{{cite web |url=https://techbase.kde.org/Schedules/Frameworks |title=Release schedule for KDE Frameworks 5 |accessdate=2014-08-20 |archive-date=2020-10-28 |archive-url=https://web.archive.org/web/20201028151659/https://techbase.kde.org/Schedules/Frameworks |dead-url=no }}</ref>且使用git<ref>{{cite web |url=https://community.kde.org/Frameworks/Git_Workflow |title=Git workflow for Frameworks |accessdate=2014-08-20 |archive-date=2020-10-20 |archive-url=https://web.archive.org/web/20201020230548/https://community.kde.org/Frameworks/Git_Workflow |dead-url=no }}</ref><ref>{{cite web |url=http://api.kde.org/frameworks-api/frameworks5-apidocs/ |title=KDE Frameworks5 API documentation |deadurl=yes |archiveurl=https://web.archive.org/web/20140822020749/http://api.kde.org/frameworks-api/frameworks5-apidocs/ |archivedate=2014-08-22 |accessdate=2014-08-20 }}</ref>。

===應用程式介面及應用二進制介面穩定性===
平台發布是開始一個系列（版本號X.0）的主要發布。這些版本可以打破二進制檔案和{{link-en|原始碼相容性|source code compatibility}}，或者換句話說，所有以下版本（X.1, X.2, ...）將保證原始碼和二進制兼容性（[[应用程序接口|应用程序接口]]及[[应用二进制接口|应用二进制接口]]）。例如，該軟體使用KDE 3.0開發將可以工作在所有（未來）發布的KDE 3，相對於應用程序開發使用KDE 2，不保證能夠利用KDE 3的函式庫。KDE的主要版本號按照Qt的發布週期，這意味著KDE SC 4是基於 Qt 4，而KDE 3是基於Qt 3。

== 軟體架構 ==
=== 結構 ===
Frameworks有著清晰明確的依賴性結構，分為「類型」及「層次」。「類別」是指運行時依賴性：
* 功能項沒有運行時依賴性。
* 整合指定的代碼可能需要運行時依賴性，取決於使用何種作業系統或平臺。
* 解決方案有強制性的運行時依賴性。

「層次」是指編譯時對其他Frameworks的依賴性：
* 層次1的Frameworks在Frameworks內沒有依賴性，只需要Qt及其他相關的函式庫。
* 層次2的Frameworks只能依賴於層次1的Frameworks。
* 層次3的Frameworks可以依賴其他層次3的Frameworks以及層次1及層次2的Frameworks。

=== 組件 ===
KDE Frameworks包含了超過60個軟體包。這些在[[KDE_Software_Compilation_4|KDE SC 4]]中包含在一個單一的大軟體包中，稱為kdelibs，其中一些已經不再是KDE的一部份，但已併入[[Qt|Qt 5.2]]中<ref>{{cite web|url=https://dot.kde.org/2013/12/17/qt-52-foundation-kde-frameworks-5|title=Qt 5.2 - Foundation for KDE Frameworks 5|publisher=Dot.kde.org|author=Jos Poortvliet|date=2013-12-17|accessdate=2014-03-10|archive-date=2020-11-11|archive-url=https://web.archive.org/web/20201111211242/https://dot.kde.org/2013/12/17/qt-52-foundation-kde-frameworks-5|dead-url=no}}</ref>。

KDE Frameworks根據其依賴其他函式庫的程度分類為四種不同的層次。層次1的Frameworks只依賴Qt或是其他系統函式庫。層次2的Frameworks可以依賴層次1的函式庫、或是其他系統函式庫等等<ref>{{cite web|url=http://dot.kde.org/2013/09/25/frameworks-5|title=Frameworks 5|publisher=Dot.kde.org|author=Howard Chan|date=2013-09-25|accessdate=2014-03-10|archive-date=2020-11-26|archive-url=https://web.archive.org/web/20201126022246/https://dot.kde.org/2013/09/25/frameworks-5|dead-url=no}}</ref>。

{| class="wikitable mw-collapsible mw-collapsed" style="width:100%; margin-top:0; text-align:left;"
! style="background:#cfc; padding-top:2em; padding-bottom:2em;" colspan="4"|Frameworks的完整列表
|-
! 名稱
! 層次
! 描述
|-
| Frameworkintegration
| 4
| 將Qt程式與[[KDE_Plasma_Workspaces|KDE Plasma Workspaces]]整合。
|-
| KActivities
| 3
| KDE活動管理員的核心組件。
|-
| KApiDox
| 4
| 構建標準格式及風格的API文件所使用的指令稿及資料。
|-
| KArchive
| 1
| 方便讀取、創造及操作「壓縮檔」格式，像是[[ZIP格式|zip]]及[[Tar|Tar]]。
|-
| KAuth
| 2
| 提供一個方便的、系統整合的方法在執行需要提高權限的動作結束後降低回一般使用者權限的小幫手工具。
|-
| KBookmarks
| 3
| 網路瀏覽器的書籤管理。
|-
| KCMUtils
| 3
| KDE系統設定模組的實用工具。
|-
| KCodecs
| 1
| 提供一種使用各種編碼的方法來操作字串。
|-
| KCompletion
| 2
| 字串補完框架。
|-
| KConfig
| 1
| 儲存應用程式設定值的後端。
|-
| KConfigWidgets
| 3
| 設定對話框的[[控件|控件]]。
|-
| KCoreAddons
| 1
| 核心應用程式的功能及對作業系統的存取的實用工具。
|-
| KCrash
| 2
| 提供攔截及處理應用程式當機的支援。
|-
| KDBusAddons
| 1
| 
|-
| KDE4Support
| 4
| 提供在KDE Frameworks 5中已經移除的kdelibs4模組及API。
|-
| KDeclarative
| 3
| 
|-
| KDED
| 3
| 
|-
| KDesignerPlugin
| 3
| 
|-
| KDESu
| 3
| 
|-
| KDEWebkit
| 3
|
|-
| KDNSSDFramework
| 2
|
|-
| KDocTools
| 2
|
|-
| KEmoticons
| 3
|
|-
| KF5Umbrella
| 1
|
|-
| KFileAudioPreview
| 4
|
|-
| KGlobalAccel
| 3
|
|-
| KGuiAddons
| 1
|
|-
| [[KHTML|KHTML]]
| 4
|
|-
| Ki18n
| 1
| KDE的國際化支援。
|-
| KIconThemes
| 3
| KDE的圖示主題模組。
|-
| KIdleTime
| 1
|
|-
| KImageFormats
| 1
|
|-
| KInit
| 3
|
|-
| [[KIO|KIO]]
| 3
|
|-
| KItemModels
| 1
|
|-
| KItemViews
| 1
|
|-
| KJobWidgets
| 2
|
|-
| [[KJS|KJS]]
| 1
|
|-
| KJSEmbed
| 3
|
|-
| KMediaPlayer
| 3
|
|-
| KNewStuff
| 3
|
|-
| KNotifications
| 3
|
|-
| KNotifyConfig
| 3
|
|-
| KParts
| 3
|
|-
| KPlotting
| 1
|
|-
| KPrintUtils
| 3
|
|-
| KPty
| 2
|
|-
| [[Kross|Kross]]
| 3
|
|-
| KRunner
| 3
|
|-
| KService
| 3
|
|-
| KTextEditor
| 3
|
|-
| KTextWidgets
| 3
|
|-
| KUnitConversion
| 2
|
|-
| [[KWalletFramework|KWalletFramework]]
| 3
|
|-
| KWidgetsAddons
| 1
|
|-
| KWindowSystem
| 1
| 允許與[[視窗系統|視窗系統]]互動。它提供了一個存取全域狀態（這裡的所有項目均在根視窗上）的所有關於特定視窗的資訊NETRootInfo。此類型包含了一個視窗管理員及客戶端。這是[[KWin|KWin]]及其他圖形殼層，像是工作管理員，的基礎。

建基於X11的特有類型，我們有一個方便的API，KWindowInfo，而KWindowSystem提供了與視窗系統無關的API給應用程式使用。
|-
| KXMLGUI
| 3
|
|-
| Plasma-framework
| 3
|
|-
| [[Solid_(KDE)|Solid]]
| 1
|
|-
| [[Sonnet_(KDE)|Sonnet]]
| 1
| [[拼寫檢查|拼寫檢查]]
|-
| [[ThreadWeaver|ThreadWeaver]]
| 1
|
|}

== 歷史 ==
KDE Frameworks第一個版本的版本號是5，代表其整個代碼庫是繼承[[KDELibs|KDE Platform]]的事實，但因為KDE Platform的版本號只有到4，而且其大多數代碼只是將先前的版本重新包裝，所以使用版本號5來代表。 

在Frameworks 5中的主要變更為，增加了模組化的程度。在較早的KDE版本中，其函式庫被包裝為一個單一的大軟體包。在Frameworks中，這些函式庫會分裂成較小的數個獨立的軟體包。這有利於其他基於Qt的軟體利用這些函式庫，因為依賴性可以被保持在最低程度<ref name=rel.struct/>。

而KDE 4是基於第四版的[[Qt|Qt]]部件工具箱開發，Frameworks 5則是使用第五版的Qt。Qt 5能增加[[QML|QML]]的使用量，一個簡單的，基於[[JavaScript|JavaScript]]的敘述性程式語言，用以設計使用者介面。使用QML的圖形渲染引擎可以帶來橫跨不同裝置且更流暢的使用者介面<ref name=rel.struct/>。

== 參考資料 ==
{{Reflist|30em}}

{{KDE}}

[[Category:KDE|]]
[[Category:KDE_Software_Compilation|Category:KDE Software Compilation]]
[[Category:自由軟體計劃|Category:自由軟體計劃]]