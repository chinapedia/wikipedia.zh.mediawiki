{{noteTA
|G1=IT
|1=zh-hans:类; zh-hant:類別;
|2=zh-hans:窗口; zh-hant:視窗;
|3=zh-hans:程序; zh-hant:程式;
|4=zh-hans:編程語言; zh-hant:程式語言;
|5=zh-hans:編程; zh-hant:程式設計;
|6=zh-hans:导入; zh-hant:匯入;
|7=zh-hans:源代码; zh-hant:原始碼;
}}

{{Otheruses
|subject=[[Microsoft_Visual_Studio|Microsoft Visual Studio]] 6.0及更早版本的Basic
|Visual Basic .NET
}}

{{Infobox programming language
|name = Visual Basic
|logo = [[File:Visual_Basic_6.0_logo.png|200px]]
|paradigm = [[面向对象的程序设计|面向对象]]、[[事件驱动|事件驱动]]
|released = {{Start date and age|1991}}
|designer =
|developer = [[微软|微软]]
|latest_release_version = 14.0
|latest_release_date = {{Start date and age|2015}}
|typing = [[類型系統|静态]]、[[强类型|强类型]]
|implementations = [[Microsoft_Visual_Studio|Microsoft Visual Studio]]
|dialects =
|influenced_by = [[BASIC|BASIC]]
|influenced = [[Visual_Basic_.NET|Visual Basic .NET]], [[Gambas|Gambas]], [[REALbasic|REALbasic]]及{{tsl|en|Basic4ppc|Basic4ppc}}
|current version =
|operating_system = [[Microsoft_Windows|Microsoft Windows]] and [[MS-DOS|MS-DOS]]
|license =
|website = http://msdn.microsoft.com/zh-cn/vstudio/hh388573
}}
[[File:Typical_vb6_session.png|300px]]
'''Visual Basic'''（'''VB'''）是由[[微軟|微軟]]公司开发的包含[[环境|环境]]的[[事件驱动|事件驱动]]编程语言。它源自于[[BASIC|BASIC]]编程语言。VB拥有[[图形用户界面|图形用户界面]]（[[GUI|GUI]]）和[[快速應用程式開發|快速應用程式開發]]（[[RAD|RAD]]）系统，可以轻易的使用[[DAO|DAO]]、[[RDO|RDO]]、[[ADO|ADO]]连接[[数据库|数据库]]，或者轻松的创建[[ActiveX|ActiveX]][[控件|控件]]。程序员可以轻松地使用VB提供的组件快速建立一个[[应用程序|应用程序]]。


2020年3月11日宣佈微軟不會再開發VB或增加功能。（Going forward, we do not plan to evolve Visual Basic as a language）

== 发展史 ==
=== .NET Framework引入之前 ===
==== VB 1 ====
[[File:Microsoft_Visual_Basic_for_MS-DOS.png|300px]]
1991年4月，Visual Basic 1.0 for Windows版本发布。1992年9月，Visual Basic 1.0 for DOS版本发布。这个连接编程语言和用户界面的进步被称为Tripod（有些时候叫做Ruby），最初的设计是由[[阿兰·库珀|阿兰·库珀]]（{{lang-en|Alan Cooper}}）完成的。这在当时引起了很大的轰动。许多专家把VB的出现当做是软件开发史上的一个具有划时代意义的事件。以现在的眼光来看，VB1.0版的功能其實非常的弱，但它在推出当时可是第一个“可视”的编程软件。这使得程序员欣喜之极，都尝试在VB的平台上进行软件创作。

==== VB 2 ====
1992年11月，VB2.0发布。它对于上一个版本的界面和速度都有所改善。
==== VB 3 ====
1993年夏天，VB3.0发布，分为标准版和专业版。其中包含一个数据引擎，可以直接读取Access数据库。这使得VB的数据库编程能力大大提高。
==== VB 4 ====
1995年8月，VB4.0发布了[[32位|32位]]版本和[[16位|16位]]的版本。其中包含了对[[類_(計算機科學)|类]]的支持。从VB4开始，逐步引入了面向对象的程序设计思想。VB功能强大，学习简单。而且，VB还引入了“控件”的概念，使得大量已经编好的VB程序可以被我们直接拿来使用。

Visual Basic 1.0~4.0都必须将源代码编译成[[VB伪代码|VB伪代码]]后解释执行。
==== VB 5 ====
1997年2月，VB5.0发布。程序员可以用32位的版本导入由4.0版本创建的16位程序，并且能顺利编译。同时还包含了对用户自建控件的支持。自从Visual Basic 5.0以后，VB支持编译成本机代码，但必须在VB运行库的支持下工作。
==== VB 6 ====
1998年夏天，VB6.0发布。VB6是VB.NET至今仍無法完全取代的版本。 
=== .NET Framework引入之后 ===
{{main|Visual Basic .NET}}
==== VB.NET （VB7）====
2001年，[[Visual_Basic_.NET|Visual Basic .NET]]和[[.NET_Framework|.NET Framework]]发布。由于其使用了新的核心和特性，所以很多VB的程序员都要改写程序。

2002年Visual Basic .NET 2002（v7.0）問世，此后Visual Basic包含在[[Visual_Studio|Visual Studio]]套装中。

2003年Visual Basic .NET 2003（v7.1）推出。
==== VB 8 ====
2004年，微软开放了[[Visual_Studio|Visual Studio]].NET 2005的[[测试|测试]]版本（代号Whidbey）。包含了.NET Framework2.0的测试版本。2005年11月7日Visual Basic 2005（v8.0）发布，同时为初学者与学生提供Visual Basic 2005的免費簡化版本Express Edition。原定免费使用期限一年，之后微软宣布Express版本永久免费。微软在其软件名称中去掉了.NET部分。Visual Basic 2005的“显著”优点是，可以直接编写出Windows XP风格的控件；但是其编写的小程序就需要近10MB的内存。
==== VB 9 ====
2008年2月1日Visual Basic 2008（v9.0）发布。

通过几年的发展，它已成为一种专业化的开发语言和环境。用户可用Visual Basic快速创建Windows程序，现在还可以编写企业水平的[[客户/服务器程序|客户/服务器程序]]及强大的[[数据库应用程序|数据库应用程序]]。

==== VB 10 ====
Visual Basic 10.0按计划于2010年3月22日随Visual Studio 2010一起正式发布<ref>{{cite news|language=en|publisher=CNET.com|title=Visual Studio 2010 to launch in March|url=http://news.cnet.com/8301-13860_3-10376107-56.html?part=rss&subj=news&tag=2547-1_3-0-20|date=2009-10-19|accessdate=2009-12-13}}</ref>。

新加入的功能：
* 自动实现属性
* 集合初始化
* 不需要在代码断行书写时输入下划线“_”
* 更好的lambda表达式支持
* 更好地与[[Python|Python]]及[[Ruby|Ruby]]等[[动态语言|动态语言]]的互通操作

Visual Basic .NET 2002（7.0）及以后的版本运行在[[.NET_Framework|.NET Framework]]环境下。
====2012年Visual Basic 2012（VB 11.0）====
{{空章節|time=2021-03-20T01:35:50+00:00|section=14}}

====2013年Visual Basic 2013（VB 12.0）====
====2015年Visual Basic 2015（VB 14.0）====
Visual Basic 2015（VB 14.0）于2015年7月20日发布。

== 由VB派生的語言 ==
微軟開發了一系列有關VB的腳本語言：

* [[Visual_Basic_for_Applications|Visual Basic for Applications]]，即'''VBA'''，包含在微軟的應用程序中（比如[[Microsoft_Office|Microsoft Office]]，常見的有[[Excel|Excel]]），以及類似[[WordPerfect_Office|WordPerfect Office]]這樣第三方的產品里面。VBA這樣嵌入在各種應用程序中看起來有些矛盾，但是它的功能和VB一樣強大。

* [[VBScript|VBScript]]是[[ASP|ASP]]的預設語言，還可以用在[[Windows|Windows]]腳本編寫(Shell Script)和[[網頁|網頁]]編碼([[HTML|HTML]])中。盡管它的語法類似於VB，但是它卻是一種完全不同的語言。VBS不使用VB執行庫執行，而是由[[Windows_Script_Host|Windows脚本宿主]](wscript.exe - Microsoft Windows Based Script Host)解釋執行。這两種語言之中的不同點影響ASP網站的表現。

當微軟準備開發一種新的編成工具的時候，第一決定就是利用最搶手的VB6來進行修改，或者就是重新組建工程開發新工具。微軟後來開發了VB的繼任者[[Visual_Basic_.NET|Visual Basic .NET]]，同時也是[[.NET|.NET]]平台的一部分。VB.NET編成語言是一種真正的[[物件導向的程序設計|物件導向]]編成語言（VB4-VB6祇能稱為基於對象而不是物件導向，最明顯的特徵就是VB4-VB6都不支持類的繼承），和傳統Visual Basic並不完全兼容。

== 语言特性 ==
[[File:Typical_vb6_session.png|500px]]
VB的中心思想就是要便于[[程序员|程序员]]使用，无论是新手或者专家。VB使用了可以简单建立应用程序的[[GUI|GUI]]系统，但是又可以开发相当复杂的程序。VB的程序是一种基于[[窗体|窗体]]的可视化组件安排的联合，并且增加代码来指定组建的属性和方法。因为默认的属性和方法已经有一部分定义在了组件内，所以程序员不用写多少代码就可以完成一个简单的程序。过去的版本里面VB程序的性能问题一直被放在檯面上討論，但是随着[[计算机|计算机]]速度的飞速增加，关于性能的争论已经越来越少。

窗体控件的增加和改变可以用[[拖放|拖放]]技术实现。一个排列满控件的工具箱用来显示可用控件（比如文本框或者按钮）。每个控件都有自己的{{Link-en|属性 (计算机科学)|Attribute (computing)|属性}}和[[事件|事件]]。默认的属性值会在控件创建的时候提供，但是程序员也可以进行更改。很多的属性值可以在运行时候随着用户的动作和修改进行改动，这样就形成了一个动态的程序。举个例子来说：窗体的大小改变事件中加入了可以改变控件位置的代码，在运行时候每当用户更改窗口大小，控件也会随之改变位置。在文本框中的文字改变事件中加入相应的代码，程序就能够在文字输入的时候自动翻译或者阻止某些字符的输入。

VB的程序可以包含一个或多个窗体，或者是一个主窗体和多个子窗体，类似于[[操作系统|操作系统]]的样子。有很少功能的对话框[[窗口|窗口]]（比如没有[[最大化|最大化]]和[[最小化|最小化]]按钮的窗体）可以用来提供弹出功能。

VB的组件既可以拥有用户界面，也可以没有。这样一来[[服务器|服务器]]端程序就可以处理增加的[[模块|模块]]。

VB使用[[引用计数|引用计数]]的方法来进行垃圾收集，这个方法中包含有大量的对象，提供基本的[[面向对象的程序设计|面向对象]]支持。因为越来越多组建的出现，程序员可以选用自己需要的扩展库。和有些语言不一样，VB对大小写不敏感，但是能自动转换关键词到标准的大小写状态，以及强制使得符号表入口的实体的变量名称遵循书写规则。默认情况下字符串的比较是对大小写敏感的，但是可以关闭这个功能。

VB使得大量的外界控件有了自己的生存空间。大量的第三方控件针对VB提供。VB也提供了建立、使用和重用这些控件的方法，但是由于语言问题，从一个应用程序创建另外一个并不简单。

== 术语 ==
在讨论Visual Basic（不包含.NET）时，经常可以听到以下这些术语，因此掌握这些术语的基本理解对初学者十分有帮助。
* '''控件'''：简单的说，控件就是构成或者说建造Visual Basic应用程序的图形化工具，包括窗体、按钮、复选框、列表框、数据控件、表格控件和图片控件等等。
* '''事件'''：由用户或操作系统引发的动作，例如击键、单击鼠标（Click）、雙击鼠标（DblClick）、一段时间的限制，或从端口接收数据。
* '''方法'''：嵌入在对象定义中的程序代码，它定义对象怎样处理信息并响应某事件。例如，数据库对象有打开纪录集并从一个记录移动到另一个记录的方法程序的基本元素，它含有定义其特征的属性，定义其任务和识别它可以响应的事件的方法。控件和窗体是Visual Basic中所有对象的示例。
* '''物件'''：一个控件、窗体等都可被看作一个物件。
* '''过程'''：为完成某些特定的任务而编写的[[代码|代码]]段，过程通常用于响应特定的事件，也可以当作应用程序的[[用户自定义函数|用户自定义函数]]来使用。
* '''属性'''：属性是组成用户界面的各对象的性质的具体描述。例如上述“物件”中所提到的尺寸、位置、颜色、宽度、高度等等都称为控件的属性。属性决定物件的外观，有时也决定物件的行为。物件的属性绝大部分是VB中已经事先定义好的，但也有的属性是需要在应用过程中才去定义的。属性即可为物件提供数据，也能从物件取回信息。

== VB.NET的变革 ==
=== VB（6.0及以前）不擁有的特性 ===
* [[继承_(计算机科学)|继承]]：Visual Basic 5以后，VB虽然提供了简化的类支持，但仍然不能滿足程序員的需求。
* [[多线程|多线程]]支持：虽然可以使用[[Windows_API|Windows API]]完成，不过稳定性与调试都很难保证。
* [[異常處理|異常處理]]：只支持"<code>On Error Goto</code> ''line''"語句。
* 對[[指標|指標]]的支持非常有限。
* VB只能支持8到32位的[[整數|整數]]，很多語言都有無限制的支持。
* VB不允許在任何數組記憶體在不變的變量。
* VB不支持其它程序语言共享程序代码。

Visual Basic .NET（VB 7.0）以后的版本基本支持了上述特性。

=== VB 6與VB.NET比较 ===
很多程序编寫者也會留戀VB6。VB6仍保留了一些script語言的特性，例如：不用事先宣告變量類型。當第一次對未宣告類型的變數進行賦值時，VB6便會把這個值的類型作為該變數的類型。這種script語言的特性，對程序的可維護有很多不良的影響，尤其對初階程序員來說，更會被培養成不良的编寫程序習慣，所以VB.NET之後的版本已不保留這種特性。

Basic是作為初學者的编程語言而被製作，當時是以[[直译语言|直译语言]]（参见[[VB伪代码|VB伪代码]]）的形式出現。同樣擁有不用事先宣告變量類型的特性。這種特性對於幫助初學者快速入門，其實是有正面的作用，可以使初學者更快完成簡單的代碼编寫，而不用顧慮到程序要用哪些變量，要選哪些類型。對於有一定程序编寫經驗的人來看，要經常為for i=1 to 9中的變量i宣告類型也頗煩人，所以這種特性在某些場合上，是相當討人歡心的。

VB.NET的具体变革如下：
* 子程序（函数）的定义与调用。
* 数组的初值设定并且需要注明范围。
* 函数在格式上的改变：Date函数、Time函数、部分数学函数部分不能直接使用，String函数不能使用，DatePart、DateAdd、DateDiff函数的第一个参数在定义上有所改变。
* Set保留字不再使用。
* Wend保留字以End While取代。
* 新增运算符：+=、-=、/=、*=、&=。

=== 缺点 ===
这样大的变革一度被认为是微软为了延长VB的生命力而做出的，结果把VB改得几乎面目全非，成了一个类似于C#的新语言。VB6的程序几乎无法运行在VB.NET中，尽管微软针对该问题提供了“升级向导”，也无法执行彻底的转换。这样，程序员不得不付出相当大的精力，手工转换代码。

2005年，微软宣布将不会再对非.NET版本的VB进行支持。VB社群立即作出反应表示关心这个消息，一些老用户还递交了希望能够继续对VB进行技术支持的请愿书。微软目前还不愿意改变他们的决定。

== 关于VB的争议 ==
=== 反对者 ===
VB是一种充满了争议的语言：很多程序员对VB程序的品质有强烈的反感。很多人认为VB不配他们使用，认为它是一种给儿童和菜鸟程序员的语言。它自从设计开始就是一种简单的语言。一些[[C++|C++]]和[[Java|Java]]中的特性在VB中并没有出现。在感受开发的方便和快速的同时，一些类似于[[编译|编译]]时进行类型和声明检查的功能在默认情况下是关闭的。这样一些程序员一边感叹VB的易用性，一边沮丧地看着一些类似于“未定义类型”错误的发生。

一些批评家认为VB的简单特性使得其在未来具有伤害性。很多人自学了VB，但是并没有学到好的编程习惯。当VB进入课堂的时候，学生们不会学到很多基础的程序技术和结构，因为很多技术已经包含在那些对用户可见的组件里面了。不用学习标准的编程习惯，因为VB具有可视化的特性，所以导致了一些莫名其妙的代码的产生。而且很多错误和警告的检查默认情况下都是关闭的，程序员很难找到隐藏的错误。有经验的程序员在用VB编程的时候都会把这些选项打开。

* 并不是非常简便，它开发的程序只能运行在[[Microsoft_Windows|Microsoft Windows]]中。
* 檔案太大了。[[Visual_Studio|Visual Studio]]要用好几张-{zh-hans:盘; zh-hant:光碟片;}-才能装下。VB程序在运行时候只需要一个1.4M大小的[[运行库|运行库]]。
* [[IDE|IDE]]中有错误。
* VB不能很好地综合Windows的基础API，很多时候要使用低级运算的“小伎俩”来进行编程。而C语言的低级内存运算比VB的要简单得多。

=== 支持者 ===
但是很多VB的支持者解释说VB的易用性就是它最大的优势，可以让经验丰富的VB程序员或是刚刚懂得皮毛的人都能用自己的方式快速开发程序。而且VB的程序可以非常简单的和[[数据库|数据库]]连接。比如利用控件可以绑定数据库，这样一来用VB写出的程序就可以掌握数据库的所有信息而不用写一行代码。

很多语言的特性比如GoSub、On Error和用變數名字的最后一个字符判断宣告类型（比如字符串型str$）都是从[[BASIC|BASIC]]中来的。VB的语法和绝大部分语言都不同，可能会让新的程序员混淆。比如宣告“Dim a, b, c As Integer”宣告了c为整數變數，但是a,b依然是Variant（.NET中为Object）类型的。（如果想宣告3个Integer，必须写Dim a As Integer, b As Integer, c as Integer；而直接写Dim a，后面不写类型，则自动变成Variant类型——占用大量资源。這個問題在VB.NET以後的版本已经解決，Dim a, b, c As Integer的类型都将为整數）

还有一些特性，比如下划线字符“_”支持一行代码分多行写。一些程序员在使用的时候由于不符规范而引起錯誤。

=== 总结 ===
VB会吸引更多的赞誉和批评，也会继续为广大的用户和程序员使用。它比较适合用来开发提供友好界面的程序（比如针对伺服器的数据），但是不适合开发需要进行繁重运算的程序（如联合计算程序）。

VB對初學編程者是一個很好的入門軟件，尤其對一些有編程才能而自己也不知道的人，由VB著手可輕易引發他們的潛能，發揮他們在這方面的才華。

== 参考文献 ==
{{Reflist}}

== 外部連結 ==
* {{zh-tw}}[http://msdn.microsoft.com/zh-TW/vstudio/hh388573.aspx MSDN上的VB6支持] {{Wayback|url=http://msdn.microsoft.com/zh-TW/vstudio/hh388573.aspx |date=20141218000825 }}
* [https://web.archive.org/web/20070209114916/http://www.vb6.us/ VB6支持]
* [http://www.vbtutor.net/ VB的教程]{{Wayback|url=http://www.vbtutor.net/ |date=20050823102313 }}
* [http://www.vbtutor.net/chinese/vbtutor_Chinese.html VB6中文教程]{{Wayback|url=http://www.vbtutor.net/chinese/vbtutor_Chinese.html |date=20080702002229 }}
* [http://www.vbgood.com VBGood（VB愛好者樂園）] {{Wayback|url=http://www.vbgood.com/ |date=20211224021716 }}
* [https://web.archive.org/web/20190624120909/http://www.play78.com/ play78（VB源代碼）]
* [https://archive.is/20001206210400/http://www.applevb.com/ Applevb（AppleVB）]
* [https://web.archive.org/web/20100329093841/http://vb.cnblogs.com/ 博客园VB团队]
* [https://web.archive.org/web/20130922112243/http://www.hilaiba.cn/Sorting.asp?sortid=4 VB源码分享（VB源码库）]
* {{zh-tw}}[http://www.visualstudio.com/zh-tw/products/visual-studio-express-vs Studio Express首頁（下載）] {{Wayback|url=http://www.visualstudio.com/zh-tw/products/visual-studio-express-vs |date=20160311080319 }}
{{程序設計語言}}

[[Category:Microsoft_Visual_Studio|Category:Microsoft Visual Studio]]
[[Category:微軟開發工具|Category:微軟開發工具]]
[[Category:基于对象的编程语言|Category:基于对象的编程语言]]
[[Category:1991年建立的程式語言|Category:1991年建立的程式語言]]