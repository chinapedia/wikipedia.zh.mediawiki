{{NoteTA
|G1 = IT
|G2 = FL
}}

{{Infobox Software
| name = Google V8 JavaScript引擎
| logo = V8_JavaScript_engine_logo_2.svg
| logo size = 100px
| logo caption = {{font|size=12px|css=font-weight:normal|''Google V8 JavaScript引擎標誌''}}
| developer = [[Google|Google]]
| operating system = [[Microsoft_Windows|Microsoft Windows]]、[[Mac_OS_X|Mac OS X]]、[[Linux|Linux]]、[[FreeBSD|FreeBSD]]、[[Android|Android]]、[[webOS|webOS]]
| released={{start date and age|2008|09|02}}
| latest release version = {{LSR/wikidata}}
| programming language = [[C++|C++]]
| genre = [[JavaScript引擎|JavaScript引擎]]
| license = [[BSD許可證|BSD許可證]]
}}

'''V8'''是一個由[[Google|Google]]開發的[[開源|開源]][[JavaScript引擎|JavaScript引擎]]，用於[[Google_Chrome|Google Chrome]]及[[Chromium|Chromium]]中<ref name="comic">{{cite web |author=Philipp Lenssen |date=2008-09-01 |title=Google on Google Chrome - comic book |url=http://blogoscoped.com/google-chrome/ |work=[[Google_Blogoscoped|Google Blogoscoped]] |accessdate=2008-09-01 |archive-date=2015-06-18 |archive-url=https://web.archive.org/web/20150618214149/http://blogoscoped.com/google-chrome/ |dead-url=no }}</ref>。[[Lars_Bak|Lars Bak]]是這個項目的組長，以[[V8发动机|V8发动机]]为其命名<ref>{{cite web|url=https://v8.dev/blog/10-years|title=Celebrating 10 years of V8|last=Bynens|first=Mathias|date=September 11, 2018|accessdate=2019-05-21|archive-date=2022-05-06|archive-url=https://web.archive.org/web/20220506082447/https://v8.dev/blog/10-years}}</ref>。

== 運作方式 ==
V8在執行之前將[[JavaScript|JavaScript]][[編譯|編譯]]成了[[機器碼|機器碼]]，而非[[位元組碼|位元組碼]]或是[[解释器|解释执行]]它，以此提升效能。更進一步，使用了如[[內聯緩存|內聯緩存]]（inline caching）等方法來提高性能。有了這些功能，[[JavaScript|JavaScript]]程序與V8引擎的速度媲美二進制編譯。<ref name="SearchSOA">{{cite news
|url=http://searchsoa.techtarget.com/news/article/0,289142,sid26_gci1328625,00.html
|title=Google Chrome shifts architects' equations as V8 powers the browser
|publisher=SOA News
|date=5 September 2008
|accessdate=2008-09-07
|first=Rich
|last=Seeley
|author2=Jack Vaughan
|archive-date=2010-04-27
|archive-url=https://web.archive.org/web/20100427070124/http://searchsoa.techtarget.com/news/article/0,289142,sid26_gci1328625,00.html
}}</ref>

传统的Javascript是动态语言，又可稱之為Prototype-based Language，JavaScript繼承方法是使用prototype，透過指定prototype屬性，便可以指定要繼承的目標。属性可以在运行时添加到或从对象中删除，引擎會为執行中的物件建立一個属性字典，新的属性都要透過字典查找属性在内存中的位置。V8為object新增属性的时候，就以上次的hidden class为父类別，创建新属性的hidden class的子类別，如此一來属性访问不再需要动态字典查找了。

為了缩短由[[垃圾回收_(计算机科学)|垃圾回收]]造成的停顿，V8使用stop-the-world, generational, accurate的垃圾回收器<ref>{{cite web |url=http://code.google.com/intl/sv/apis/v8/intro.html |title=V8 JavaScript Engine: Introduction |work=[[Google_Code|Google Code]] |publisher=[[Google|Google]] |accessdate=17 August 2010 |deadurl=yes |archiveurl=https://web.archive.org/web/20100606062020/http://code.google.com/intl/sv/apis/v8/intro.html |archivedate=2010年6月6日 }}</ref>。在执行回收之时会暫時中断程序的执行，而且只处理物件堆疊。還會收集內存內所有物件的指標，可以避免内存溢位的情况。V8[[汇编语言#組譯器|組譯器]]是基於[[Strongtalk|Strongtalk]]組譯器<ref>{{Cite web |url=http://code.google.com/p/v8/source/browse/trunk/LICENSE |title=v8 Licenses |access-date=2010-03-17 |archive-date=2015-11-27 |archive-url=https://web.archive.org/web/20151127013211/http://code.google.com/p/v8/source/browse/trunk/LICENSE }}</ref>。

{{Program_execution}}
== 参考文献 ==
{{Reflist|30em}}

== 外部連結 ==
* [http://code.google.com/p/v8/ Google Code project page] {{Wayback|url=http://code.google.com/p/v8/ |date=20151207152859 }}
* [http://code.google.com/p/cproxyv8/ cproxyv8] {{Wayback|url=http://code.google.com/p/cproxyv8/ |date=20151228010533 }}及[http://code.google.com/p/v8-juice/ v8-juice] {{Wayback|url=http://code.google.com/p/v8-juice/ |date=20160404234809 }} are C++ libraries for extending v8, e.g. to assist in binding client-side C++ classes to JavaScript.
* [http://code.google.com/p/v8cgi/ v8cgi] {{Wayback|url=http://code.google.com/p/v8cgi/ |date=20161228145503 }} is a v8-based framework for serving web application written in JavaScript.
* [http://nodejs.org/ node.js]{{Wayback|url=http://nodejs.org/ |date=20200710114002 }}[http://simonwillison.net/2009/Nov/23/node/]{{Wayback|url=http://simonwillison.net/2009/Nov/23/node/ |date=20100323181904 }} is a toolkit for writing performant non-blocking event-driven network servers in JavaScript.
* [http://channel9.msdn.com/shows/Going+Deep/Expert-to-Expert-Erik-Meijer-and-Lars-Bak-Inside-V8-A-Javascript-Virtual-Machine/ Inside V8 - A Javascript Virtual Machine] {{Wayback|url=http://channel9.msdn.com/shows/Going+Deep/Expert-to-Expert-Erik-Meijer-and-Lars-Bak-Inside-V8-A-Javascript-Virtual-Machine/ |date=20211106165123 }}

== 參見 ==
{{Portal|Google|软件|计算机程序设计}}
* [[Google_Chrome|Google Chrome]]
* [[Chromium_(浏览器)|Chromium (浏览器)]]
* [[WebKit#JavaScriptCore|JavaScriptCore]]
* [[Dart|Dart]]
* [[SpiderMonkey|SpiderMonkey]]
* [[即时编译|即时编译]]

{{-}}
{{Google Inc.|corporate=yes|products=yes}}
{{ECMAScript}}
{{Node.js}}

[[Category:JavaScript引擎|Category:JavaScript引擎]]
[[Category:虛擬機器|Category:虛擬機器]]
[[Category:Google軟體|Category:Google軟體]]
[[Category:使用BSD许可证的软件|Category:使用BSD许可证的软件]]