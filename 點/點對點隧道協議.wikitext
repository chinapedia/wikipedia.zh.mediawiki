{{copyedit|time=2020-01-02T06:30:27+00:00}}
{{noteTA|G1=IT}}
{{Internet security protocols}}

'''點對點隧道協議'''（{{lang-en|Point to Point Tunneling Protocol}}，縮寫為PPTP）是實現[[虛擬私人網路|虛擬私人網路]]（VPN）的方式之一。PPTP使用[[传输控制协议|传输控制协议]]（TCP）建立控制通道來傳送控制命令，以及利用[[通用路由封装|通用路由封装]]（GRE）通道來封裝[[点对点协议|点对点协议]]（PPP）封包以傳送資料。這個協議最早由[[微軟|微軟]]等廠商主導開發，但因為它的加密方式容易被破解，微軟已經不再建議使用這個協議。

PPTP的協定規範本身並未描述[[加密|加密]]或[[身份驗證|身份驗證]]的部份，它依靠[[点对点协议|点对点协议]]（PPP）來實現這些安全性功能。因為PPTP協定內建在[[微軟|微軟]][[Windows|Windows]]家族的各個產品中，在微軟[[点对点协议|点对点协议]]（PPP）協議堆棧中，提供了各種標準的身份驗證與加密機制來支援PPTP <ref>[http://technet.microsoft.com/en-us/library/cc757532(WS.10).aspx Microsoft Corporation, ''Microsoft Point-to-Point Encryption (MPPE)'']</ref>。 在微軟視窗系統中，它可以搭配[[密碼認證協議|PAP]]、[[CHAP|CHAP]]、[[MS-CHAP|MS-CHAP]] v1/v2或[[扩展认证协议|EAP]]來進行身份驗證。通常也可以搭配[[微軟點對點加密|微軟點對點加密]]（MPPE）或[[IPSec|IPSec]]的加密機制來提高安全性<ref>RFC 3078</ref>。

在[[Windows|Windows]]或[[Mac_OS|Mac OS]]平台之外，Linux與FreeBSD等平台也提供開放原始碼的版本。

== 規格 ==
PPTP不是[[IETF|IETF]]建議的標準，是由[[微軟|微軟]]、[[Ascend_Communications|Ascend Communications]]（現在属于[[Alcatel-Lucent|Alcatel-Lucent]]集团）、[[3Com|3Com]]等廠商聯合形成的產業聯盟開發<ref>RFC 263</ref>。 1999年7月发布的 RFC 2637是第一個正式的PPTP規格書。

PPTP以[[通用路由封装|通用路由封装]]（GRE）協定向對方作一般的[[點對點|點對點]]傳輸。通過[[传输控制协议|TCP]]1723端口來發起和管理GRE狀態。因為PPTP需要2個網絡狀態，因此會對穿越防火牆造成困難。很多防火牆不能完整地傳遞連線，導致無法連接。
在[[Windows|Windows]]或[[Mac_OS|Mac OS]]平台，通常PPTP可搭配[[MSCHAP-v2|MSCHAP-v2]]或[[EAP-TLS|EAP-TLS]]進行身份驗證 ，也可配合[[微軟點對點加密|微軟點對點加密]]（MPPE）進行連接時的加密。

與PPTP相似的另一種常見的VPN協定是[[第二层隧道协议|第二层隧道协议]]（L2TP）<ref>[http://www.ietf.org/rfc/rfc2661.txt Layer Two Tunneling Protocol "L2TP"],RFC 2661, W. Townsley ''et al.'', 1999-08</ref>。

== 應用 ==

PPTP因為易於設定和是首個支援[[微軟|微軟]][[撥號連線|撥號連線]]的協議而流行。自[[Microsoft_Windows|Microsoft Windows]] [[Windows_95|95 OSR2]]開始包含PPTP[[客戶端|客戶端]]，但是被限制只可同時存2個向外連線。[[Windows_XP|Windows XP]]的[[远程桌面连接|远程桌面连接]]包含PPTP。

以往，[[Linux|Linux]]缺乏完整的PPTP支援，這是因為MPPE是[[软件专利|软件专利]]。但是，自從在2005年10月28日發佈的Linux 2.6.14起Linux核心提供完整的PPTP支援（包含对自由版本的MPPE支持）。

==實作== 
PPTP 是第一個被 Microsoft 撥號網路支援的 VPN 通訊協定。自 Windows 95 OSR2 起，所有的 Microsoft Windows 版本都內建了 PPTP 客戶端軟體（雖然只能支援最多兩個同時對外的連線）。
在 Mobile 版本上，Microsoft Windows Mobile 2003 與更新的版本也支援 PPTP。Windows 的路由及遠端存取套件有包含 PPTP 伺服器。
Microsoft 的實作在 MS-CHAP 認證協定內使用了單次 DES 加密，但單次 DES 常被認為無法提供資料足夠等級的安全防護。[2]

Windows Vista 與更新版本的 PPTP 開始支援 PEAP。認證機制有 PEAPv0 / EAP-MSCHAPv2 (使用密碼) 還有 PEAP-TLS (智慧卡與憑證)。
Windows Vista 同時停止了 MSCHAP-v1 的認證協定。[3]

Linux 的 PPTP 伺服器一般是使用 PoPToP[4] 套件加上 PPP 與 MPPE 的 Kernel Module。PPTP的客戶端程式從 1997[5] 就開始提供了，但伺服器部份要等到 Matthew Ramsay 在 1999[6]開發的版本從 Moreton Bay 以 GNU GPL 發行後才真正開始有人大量使用。但是，Linux發行版本一開始通常都不包含 MPPE 的部份（因為擔心有專利問題）所以不完整，直到 2005/10/28 發佈的 Linux Kernel 2.6.14 才正式支援 MPPE。
SuSE Linux 10 是第一個有完整可用的 PPTP 客戶端程式的版本。另外還有 ACCEL-PPP 套件: 它提供了 PPTP / L2TP / PPPoE 伺服器[7]，可提供 kernel 模式的 PPTP 協定。

OpenBSD 跟 FreeBSD 在 "ports" 套件系統裡提供 PoPToP。
OSX 與 iOS 則提供內建 PPTP 客戶端程式。 OS X Server 內建了 PPTP 服務。 Cisco 與 Efficient Networks 有另外販賣給舊版 Mac OS 使用的 PPTP 客戶端程式。
許多 Android 智慧形手機也支援 PPTP。

== 安全性 ==
PPTP经常被做为安全分析的课题，并在该协议中已经发现了严重的安全漏洞。已知的漏洞涉及所使用的底层PPP认证协议、MPPE协议的设计以及MPPE和PPP认证之间在建立会话密钥方面的整合。<ref>{{Cite web|title=Malware FAQ: Microsoft PPTP VPN|url=https://www.sans.org/security-resources/malwarefaq/pptp-vpn|accessdate=2020-06-16|author=|date=|format=|work=www.sans.org|publisher=|language=en}}</ref><ref>{{Cite web|title=Microsoft says don't use PPTP and MS-CHAP - The H Security: News and Features|url=http://www.h-online.com/security/news/item/Microsoft-says-don-t-use-PPTP-and-MS-CHAP-1672257.html|accessdate=2020-06-16|work=www.h-online.com}}</ref><ref>{{Cite web|title=A death blow for PPTP - The H Security: News and Features|url=http://www.h-online.com/security/features/A-death-blow-for-PPTP-1716768.html|accessdate=2020-06-16|work=www.h-online.com}}</ref>

以下是这些漏洞的摘要：

* [[MS-CHAP|MS-CHAP]]-v1从根本上来说是不安全的。有工具可以从捕获到的MSCHAP-v1交换包中轻易地提取出NT密码的哈希值。<ref name=":0">{{Cite web|title=Cryptanalysis of Microsoft's Point-to-Point Tunneling Protocol (PPTP)|url=https://www.schneier.com/academic/paperfiles/paper-pptp.pdf|accessdate=|author=|date=|format=|publisher=|language=}}</ref>
* 当使用MS-CHAP-v1时，MPPE在通信流的两个方向上使用相同的[[RC4|RC4]]会话密钥进行加密。这可以通过将每个方向的数据流一起进行异或运算，用标准方法进行密文分析。<ref>{{Cite web|title=Cryptanalysis of Microsoft's PPTP Authentication Extensions (MS-CHAPv2)|url=https://www.schneier.com/academic/paperfiles/paper-pptpv2.pdf|accessdate=|author=Bruce Schneier|date=|format=|publisher=|language=}}</ref>
* MS-CHAP-v2对捕获的挑战响应（challenge response）数据包容易受到字典攻击。目前已有工具可以快速执行这一过程。<ref>{{Cite web|title=Asleap {{!}} Will Hack For SUSHI|url=https://www.willhackforsushi.com/?page_id=41|accessdate=2020-06-16|language=en-US}}</ref>
* 2012年，有研究表明，对MS-CHAP-v2密钥进行暴力攻击的复杂性相当于对单个[[資料加密標準|DES]]密钥进行暴力攻击。还演示了一项在线服务，它能够在23小时内解密MS-CHAP-v2 MD4口令。<ref>{{Cite web|title=Divide and Conquer: Cracking MS-CHAPv2 with a 100% success rate|url=https://web.archive.org/web/20160316174007/https://www.cloudcracker.com/blog/2012/07/29/cracking-ms-chap-v2/|accessdate=2020-06-16|date=2016-03-16|work=web.archive.org}}</ref><ref>{{Cite web|title=Marlinspike demos MS-CHAPv2 crack|url=https://www.theregister.com/2012/07/31/ms_chapv2_crack/|accessdate=2020-06-16|work=www.theregister.com|language=en}}</ref>
* MPPE使用RC4流密码进行加密。没有对密文流进行认证的方法，因此密文很容易受到比特翻转攻击。攻击者可以在传输过程中修改流并调整单比特来改变输出流而不可能被检测到。这些位翻转可能会被协议本身通过校验和或其他方式检测到。<ref name=":0" />

[[扩展认证协议|EAP-TLS]]被认为是PPTP的高级认证选择；<ref>{{Cite web|title=Choosing EAP-TLS or MS-CHAP v2 for User-Level Authentication: Virtual Private Network (VPN)|url=https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2003/cc739638(v=ws.10)|accessdate=2020-06-16|last=Archiveddocs|work=docs.microsoft.com|language=en-us}}</ref>然而，它需要为客户和服务器证书实现[[公開金鑰基礎建設|公钥基础设施]]。因此，对于一些远程访问的设备来说，它可能不是一个可行的认证选择。大多数使用PPTP的网络必须应用额外的安全措施，否则会被认为完全不适合现代互联网环境。同时，这样做意味着在某种程度上否定了该协议的上述好处。因此，不管从哪方面考虑，使用PPTP都是一种双输的局面。<ref>{{Cite web|title=VPN Protocol Comparison: IKEv2 vs IKEv1 vs OpenVPN® vs L2TP vs PPTP|url=https://www.vpnunlimitedapp.com/blog/vpn-protocol-comparison/|accessdate=2020-06-16|date=2018-05-14|work=VPN Unlimited Blog|language=en-US}}</ref>
<br />
== 其他 VPN 協議 ==
* L2F [[Layer_2_Forwarding_Protocol|Layer 2 Forwarding Protocol]]
* L2TP [[Layer_2_Tunneling_Protocol|Layer 2 Tunneling Protocol]]
* PLIP [[Parallel_Line_Internet_Protocol|Parallel Line Internet Protocol]]
* [[IPsec|IPsec]] 
* SLIP [[Serial_Line_Internet_Protocol|Serial Line Internet Protocol]]
* PPP [[Point-to-Point_Protocol|Point-to-Point Protocol]] 

==参考文献==
{{Reflist}}

== 外部連結 ==
* [http://the.taoofmac.com/space/PPTP On PPTP security]
* [https://web.archive.org/web/20080422235546/http://www.microsoft.com/technet/archive/winntas/plan/pptpudst.mspx Windows NT: Understanding PPTP] from Microsoft
* [http://www.schneier.com/pptp-faq.html FAQ on security flaws in Microsoft's implementation]，[[Bruce_Schneier|Bruce Schneier]]，1998 
* [http://www.schneier.com/paper-pptpv2.html Cryptanalysis of Microsoft's PPTP Authentication Extensions] (MS-CHAPv2), [[Bruce_Schneier|Bruce Schneier]]，1999 
* [http://www.poptop.org/ Poptop]{{Wayback|url=http://www.poptop.org/ |date=20090207193340 }}，a PPTP Server for [[Linux|Linux]] 
* [http://pptpclient.sourceforge.net/ PPTP Client]，a [[Linux|Linux]]，[[FreeBSD|FreeBSD]]，[[NetBSD|NetBSD]] and [[OpenBSD|OpenBSD]] client 
* [https://web.archive.org/web/20090204125201/http://www.mgix.com/pptpproxy/ pptpproxy]，a [[Linux|Linux]]，[[FreeBSD|FreeBSD]]，[[NetBSD|NetBSD]] and [[OpenBSD|OpenBSD]] pptp protocol forwarder (proxy) 
* [http://asleap.sourceforge.net/ ASLEAP]{{Wayback|url=http://asleap.sourceforge.net/ |date=20080229075937 }}，a PPTP password cracker and traffic sniffer 
* [http://pptpclient.sourceforge.net/protocol-security.phtml PPTP Protocol Security] by James Cameron and Peter Mueller 
* [https://web.archive.org/web/20040902222552/http://www.microsoft.com/windows2000/techinfo/reskit/deploymentscenarios/scenarios/route04_config_iasservice_iasserver.asp Setting up EAP-TLS security for PPTP]

{{-}}
{{VPN}}

[[Category:传输层协议|Category:传输层协议]]
[[Category:穿隧協議|Category:穿隧協議]]
[[Category:已攻破的密码算法|Category:已攻破的密码算法]]
[[Category:虛擬私人網路|Category:虛擬私人網路]]