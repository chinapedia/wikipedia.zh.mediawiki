{{noteTA
|G1=IT
|1=zh-cn:库; zh-tw:函式庫;
}}
'''运行时库'''（runtime library，又稱'''運行期库'''），在计算机程序设计领域中，是指[[编程语言|编程语言]][[程序|程序]]运行时（执行）所需要的一种特殊的[[计算机程序库|计算机程序库]]，[[编译器|编译器]]會調用运行时库至已编译的可执行二进制代碼中。这种库一般包括基本的输入输出或是[[内存管理|内存管理]]等支持。它是一群支援正在執行程式的函式，與[[作業系統|作業系統]]合作提供諸如數學運算、輸入輸出等功能，讓程式寫作者不需要“[[重新發明輪子|重新發明輪子]]”，並善用作業系統提供的功能。

运行时库由[[编译器|编译器]]决定，以面向[[编程语言|编程语言]]，提供其最基本的执行时需要。比如[[Visual_Basic|Visual Basic]]需要复杂的运行时库支持而C的运行时库则相对简单。当然这还是由编译器厂商决定的。运行时库中的[[函数|函数]]可能对[[程序员|程序员]]透明，也可能不透明。这也是由编译器厂商忖度语言执行环境的需求而决定的。

早期的執行期函式庫（例如[[Fortran|Fortran]]）提供了數學運算的能力。其他語言增加了諸如[[垃圾回收_(計算機科學)|垃圾回收]]的先進功能，通常用於支援[[物件導向|物件]]資料結構。

許多近代語言設計了更大的執行環境並添加更多功能。很多物件導向語言也包含了分派器與類別讀取器。[[Java_Virtual_Machine|Java虛擬機]]（JVM）便是此類的典型執行環境：它也在執行期直譯或編譯具可攜性的二進位[[Java|Java]]程式。而.NET架構也是另外一個執行期函式庫的實例。

[[例外處理|例外處理]]（Exception handling）是專門處理執行期錯誤的語言機制，使程式設計師可以完全捕捉非預期錯誤，或沒有適當處理的錯誤結果。

[[动态链接库|动态链接库]]或[[静态链接库|静态链接库]]与运行时库的分类角度不同，不得相提并论。

==實例==
一個以[[Java|Java]]語言撰寫的軟體，可藉由Java軟體執行可預測的指令接收[[JRE|Java執行環境]]的服務功能。藉由提供這些服務，Java執行環境可視為此程式的執行期環境。程式與Java環境都向[[作業系統|作業系統]]提出請求並獲取服務。而作業系統核心為它自己、所有[[行程|行程]]與在它控制之下的軟體提供服務。作業系統可視為自己提供自己[[執行期環境|執行期環境]]。

==參閱==
* [[執行期|執行期]]
* [[.NET框架|.NET框架]]

[[Category:计算机程序库|Category:计算机程序库]]
[[Category:运行时系统|Category:运行时系统]]