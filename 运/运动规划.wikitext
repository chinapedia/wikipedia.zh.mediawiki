{{noteTA
|G1 = IT
|1 = zh-cn:米; zh-tw:公尺; zh-hk:米;
}}
'''运动规划'''（{{lang-en|Motion Planning}}）是一个过程，用来寻找从起始状态到目标状态的移动步骤。常需要在运动受到约束的条件下找到最优解。运动规划多用于[[机器人学|机器人学]]。例如，一个[[機器人吸塵器|清洁机器人]]在楼层里打扫，它不能撞墙，也不能从楼梯口掉下去。给定一个任务，运动規劃算法计算出一个动作序列，告诉机器人前进多少米，然后左转右转多少度。如果机器人要操作物品或者探测未知地形等等，运动规划就变得很复杂了。除了机器人学，运动规划在[[电脑游戏|电脑游戏]]里也用来模拟人物或车辆的运动。

==概念==
[[Image:Motion_planning_workspace_1.svg|thumb]]
<!--
[[Image:Motion_planning_configuration_space_curved_valid_path.svg|thumb]]
[[Image:Motion_planning_configuration_space_curved_invalid_path.svg|thumb]]
[[Image:Motion_planning_configuration_space_road_map_path.svg|thumb]]
-->

基本的运动规划问题是通过连续的动作从'''起始位形'''s到达'''目标位形'''g，并且过程中要避开障碍物。机器人和障碍物可以抽象为二维或三维的几何图形，动作则被表示为[[位形空间|位形空间]]中的路径。

===自由空间===
[[Image:Motion_planning_workspace_1_configuration_space_1.svg|thumb]]
如果机器人采用某个位形时不会碰到障碍物，那么这个位形属于自由位形空间，简称自由空间（英文写作<math>C_{free}</math>）。自由空间的[[补集|补集]]即障碍空间。

测试一个位形是否属于自由空间，先用正向运动学确定机器人的轮廓，然后查看机器人是否与障碍物碰撞。

== 算法 ==
低维度的运动规划问题可以用基于格点的算法求解，如[[A*算法|A*算法]]。

== 參考文獻 ==
{{Reflist}}

== 外部連結 ==
{{Commons category|Motion planning}}
*"Open Robotics Automation Virtual Environment", http://openrave.org/
* [https://web.archive.org/web/20070929091715/http://www.researchchannel.org/prog/displayevent.aspx?rID=2132&fID=567 Jean-Claude Latombe talks about his work with robots and motion planning, 5 April 2000]
*"Open Motion Planning Library ([[OMPL|OMPL]])", http://ompl.kavrakilab.org
*"Motion Strategy Library", http://msl.cs.uiuc.edu/msl/
*"Motion Planning Kit", https://ai.stanford.edu/~mitul/mpk
*"Simox", http://simox.sourceforge.net
*"Robot Motion Planning and Control", http://www.laas.fr/%7Ejpl/book.html

{{DEFAULTSORT:Motion Planning}}
[[分类:机器人学|分类:机器人学]]