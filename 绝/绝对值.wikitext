{{Not|绝对赋值}}
{{NoteTA |G1=Math}}
[[File:Khoang_cach_tren_duong_thang_thuc.png|thumb]]
在[[数学|数学]]中，[[实数|实数]] {{mvar|x}}的'''绝对值'''或'''模'''，记号为{{math|{{abs|''x''}}}}，是指去掉{{mvar|x}}的[[性质符号|符号]]所得的非负值。若{{mvar|x}}是[[正数|正数]]，则{{math|1={{abs|''x''}} = ''x''}}； 若{{mvar|x}}是[[负数|负数]]（则{{math|−''x''}}是正数），则{{math|1={{abs|''x''}} = −''x''}}；[[零|零]]的绝对值为零（{{math|1={{abs|0}} = 0}}）。例如，3和-3的绝对值都是3。绝对值可看作该数和零之间的[[距离|距离]]。

绝对值的定义也可以从实数扩展到[[复数_(数学)|复数]]、[[四元数|四元数]]、[[有序环|有序环]]、[[体_(数学)|域]]、[[向量空间|向量空间]]等范围。在数学和[[物理|物理]]中，绝对值与[[量_(数学)|量]]、[[距离|距离]]、[[范数|范数]]等概念密切相关。

==實數的絕對值==
[[Image:Absolute_value.svg|thumb]]
若實數 <math>a \neq 0</math>，則在兩個相互對稱的數 <math>a</math> 和 <math>-a</math> 中必有且僅有一個數大於 0，這個大於 0 的數就稱為數 <math>a</math> 和數 <math>-a</math> 的'''絕對值'''，記為 <math>\left |  a \right | = \left | -a \right |</math> ，0 的絕對值為 0 。
一個[[數|數]]的絕對值'''永遠非負，沒有負號'''，某數的絕對值表示為 <math>|</math> 某數 <math>|</math> 。對於所有[[實數|實數]] <math>x</math> ：若 <math>x</math> 是[[負數|負數]]， <math>|x| = -x</math> （即是 <math>-x</math> 是一個正數）；若 <math>x</math> 非負， <math>|x| = x</math> 本身。即：
:<math>\left| a \right| =
\begin{cases} a & (a>0) \\
0 & (a=0) \\
-a & (a<0) \end{cases}</math> 

一個數的絕對值可以視為該數在[[数線|数線]]上的点和零的距離。例如 3 同時是 3 和 -3 的絕對值。

絕對值有以下性質：
# <math>|a| \ge 0</math>
# 若 <math>a = 0</math>，<math>|a| = 0</math>
# <math>|ab| = |a| |b|</math>
# 若 <math>b \neq 0</math>，<math>|\frac{a}{b}| = \frac{|a|}{|b|}</math>
# <math>|a + b| \le |a| + |b|</math>  ( 見[[三角不等式|三角不等式]] )
# <math>|a - b| \ge \Big|\big|a\big| - \big|b\big|\Big|</math>
# 若 <math>a>0</math>，則<math>a = \left | a \right |</math>；若<math>a<0</math>，則<math>a = - \left | a \right |</math>

==複數的絕對值==

複數的絕對值定義為：若<math>z=a+ib</math>，則 <math>|z| = \sqrt{a^2 + b^2} = \sqrt{z\bar{z}}</math>（見[[平方根|平方根]]和[[共軛複數|共軛複數]]）。它符合以上的六項性質，但以下的三項就'''不成立'''：
# <math>\left| a \right| = \sqrt{a^2}</math> 
# <math>|a| \le b</math> 若且唯若 <math>-b \le a \le b</math>
# <math>|a| \ge b</math> 若且唯若 <math>a \le -b</math> ''' 或 ''' <math>b \le a</math>
但此時有
# <math>|\bar{z}| = |z|</math>
# <math>\sqrt{z\bar{z}} = |z|</math>

最後兩道式子常用於計算涉及複數絕對值的[[不等式|不等式]]。

==有序環上的絕對值==
絕對值的定義可以照搬到有序環上。定義如下：

:<math>|a| = \begin{cases} a, & \;  a \ge 0  \\ -a,  & a < 0, \end{cases} </math>

其中 <math>-a</math> 是 <math>a</math> 的加法反元素，而 0 是有序環的加法單位元素。

==域上的絕對值==
在抽象的域上，我們用絕對值的基本性質來推廣定義。一個域 <math>F</math> 上的'''絕對值'''是一個函數 <math>|\cdot|: F \rightarrow \mathbb{R}</math>，滿足以下四條公理:

:{| cellpadding=10
|-
|<math>|a| \ge 0 </math>
|非負性質
|-
|<math>|a| = 0 \iff a = \mathbf{0} </math>
|正定性質
|-
|<math>|ab| = |a| \cdot |b| \,</math>
|積性
|-
|<math>|a+b|  \le |a| + |b|  </math>
|三角不等式
|}

由以上公理可以導出 <math>|1|=1</math>。距離函數 <math>d(x,y) = |x-y|</math> 賦予 <math>F</math> [[度量空間|度量空間]]結構。

如果將定義中的三角不等式換作以下較強的形式（有時又叫做'''強三角不等式'''）
:<math>\forall a,b \in F \quad |a + b| \le \mathrm{max}\{|a|, |b|\}  </math>

則稱 <math>(F,|\cdot|)</math>為[[超度量域|超度量域]]，或稱絕對值 <math>|\cdot|</math> 不滿足'''阿基米德性質'''；反之則稱 <math>|\cdot|</math> 滿足阿基米德性質。<ref name="Shechter">[http://www.amazon.com/gp/reader/0126227608/?keywords=absolute%20value&v=search-inside Schechter, p 260-261].</ref>。

超度量域的典型例子是 [[p進數|p進數]]域。一般來說，值群在 <math>\mathbb{R}</math> 裡的[[賦值環|賦值環]]對應到超度量域，此時賦值與絕對值的關係由 <math>|x| := a^{v(x)}</math> 給出，其中 <math>a \in [0,1]</math>；不同的 <math>a</math> 給出等價的拓撲結構。

==微積分==
絕對值函數在 x=0 不[[可微函数|可導]]。
:<math>\frac{d}{dx}|x| = \frac{x}{|x|} = \begin{cases} 1 & x>0 \\  -1 & x<0 \end{cases}</math>
:<math>\int|x|dx=\frac{x|x|}{2}+C</math>
其中 '''''C'''''   是[[積分常數|積分常數]]。

==演算法==
[[C語言|C 語言]]關於絕對值的[[函數|函數]]有： <code>abs()</code>, <code>labs()</code>, <code>llabs()</code>（在 C99 中），<code>fabs()</code>、<code>fabsf()</code> 與 <code>fabsl()</code> 函數計算一個對象的絕對值。當輸入值不是最大負整數時，很容易寫出計算絕對值的[[巨集|巨集]]或函數。

以下巨集可接受整數或浮點數：

<syntaxhighlight lang="C">
#define abs(i) ((i)>0 ? (i) : (-i))
</syntaxhighlight>

如果以函數計算，需要寫多個函數，[[函数重载|多載]]來處理不同數據類型：

<syntaxhighlight lang="C">
int abs (int);
float abs (float);
double abs (double);

int abs (int i) {
  if (i>0) {
    return i;
  } else {
    return -i;
  }
}
</syntaxhighlight>
關於[[浮點數|浮點數]]的絕對值[[演算法|演算法]]就要用點技巧，因為要為[[無窮大|無窮大]]及 [[NaN|NaN]]（Not a Number）撰寫特別的程式碼。

在 [[Pascal語言|Pascal]]、[[Fortran|Fortran]] 和 [[Matlab|Matlab]] 語言裡，取得絕對值的函數是 <code>abs</code>，可以計算[[整數|整數]]、[[實數|實數]]，以及複數。

如以[[組合語言|組合語言]]撰寫，應有可能以三行指令在暫存器內完成絕對值的判斷與轉換演算法，以下例子是 x86 結構上的 32 位元暫存器，採英特爾語法。
<code><syntaxhighlight lang="asm">
cdq
xor eax, edx
sub eax, edx
</syntaxhighlight></code>

<code>cdq</code> 指令將帶號位元（sign bit）的 <code>eax</code> 轉成 <code>edx</code>。如果 <code>eax</code> 是非負值，那 <code>edx</code> 變成 0，接下來的兩個指令會沒有影響，<code>eax</code> 將不變。如果 <code>eax</code> 是負數，那麼 <code>edx</code> 會變成 0xFFFFFFFF ，或是 -1。接下來的兩個指令會變成倒轉的[[二補數|二補數]]，並從 <code>eax</code>暫存器中取得負數的絕對值。

==參考資料==
{{reflist}}
* Nahin, Paul J.; [http://www.amazon.com/gp/reader/0691027951 ''An Imaginary Tale''] {{Wayback|url=http://www.amazon.com/gp/reader/0691027951 |date=20071107115446 }}; Princeton University Press; (hardcover, 1998). ISBN 0-691-02795-1
* O'Connor, J.J. and Robertson, E.F.; [http://www-history.mcs.st-andrews.ac.uk/Mathematicians/Argand.html "Jean Robert Argand"] {{Wayback|url=http://www-history.mcs.st-andrews.ac.uk/Mathematicians/Argand.html |date=20070809014544 }}
* Schechter, Eric; ''Handbook of Analysis and Its Foundations'', pp 259-263, [http://www.amazon.com/gp/reader/0126227608/?keywords=absolute%20value&v=search-inside "Absolute Values"],  Academic Press (1997) ISBN 0-12-622760-8
* {{MathWorld | urlname=AbsoluteValue | title=Absolute Value}}
* {{PlanetMath | urlname=AbsoluteValue | title=absolute value | id=448}}
* [[微积分学教程|微积分学教程]]，( 第一卷 ) ( 第 8 版 )，第 3 页，ISBN 5-9221-0436-5，''菲赫金哥尔茨'' 著，''杨弢亮'' 、''叶彦谦'' 译，''郭思旭'' 较，''高等教育出版社''

[[Category:代數|J]]
[[Category:基本特殊函数|Category:基本特殊函数]]