{{expert|time=2014-07-22T14:55:31+00:00}}
{{TA
|G1 = IT
|1 = zh-hans:率-失真优化;zh-cn:率-失真优化;zh-hant:位元率-失真最佳化;
}}
'''位元率-失真最佳化'''（'''Rate–distortion optimization'''，簡稱'''RDO'''）是一種提升[[視訊壓縮|視訊壓縮]]效能的[[最佳化|最佳化]]方法。其原理是對視訊的失真（畫面品質）與位元率（編碼所需的資料量）同時進行最佳化，以求達到一個最佳的平衡點。雖然此演算法一開始是在[[視訊壓縮|視訊壓縮]]的[[編碼器|編碼器]]中被使用，但也可以用於各種多媒體編碼包含影像、視訊、音訊等等，只要編碼時會同時考慮到品質及檔案大小皆可使用。

==背景==
傳統視訊編碼器在做編碼決策時，是挑選出影像品質最好的畫面。然而只考慮品質的缺點是，會讓決策的結果有時相較於品質稍差的選擇下，花費了更多資料量但只相對提升了一點點品質。一個常見的例子就是[[動作補償|動作補償]]<ref>D. T. Hoang, P. M. Long, and [[Jeffrey_Vitter|Jeffrey Vitter]], [http://www.ittc.ku.edu/~jsv/Papers/HLV98.optimizationsOfficial.pdf Rate-Distortion Optimizations for Motion Estimation in Low-Bitrate Video Coding] {{Wayback|url=http://www.ittc.ku.edu/~jsv/Papers/HLV98.optimizationsOfficial.pdf |date=20160305055719 }}, ''IEEE Transactions on Circuits and Systems for Video Technology'', 8(4), August 1998, 488-500.
A shorter version appears in ''Proceedings of the Digital Video Compression Conference'', IS&T/SPIE 1996 Symposium on Electronic Imaging: Science & Technology, 2668, San Jose, CA, January–February 1996, 18-27.</ref>，尤其是使用1/4像素精確度的時候。在動作補償過程中，為[[宏區塊|宏區塊]]的動作向量增加額外的精確度可能可提升品質，但有些時候提升的品質，並不值得額外花費用來編碼高精確度動作向量的資料量。

==運作原理==
位元率-失真最佳化藉由作為影像品質的衡量方法，解決了上述的問題。資料量會被用[[位元|位元]]數乘上[[拉格朗日乘數|拉格朗日乘數]]來取代。拉格朗日乘數代表了在某種程度範圍的影像品質下，位元的花費與影像品質之間的關係。以數學式表示：
:<math> J = D + \lambda \cdot R</math>
其中
:<math>J</math>：最終的衡量數據，也被稱為RD cost（rate-distortion cost）
:<math>D</math>：失真的衡量數據
:<math>\lambda</math>：拉格朗日乘數
:<math>R</math>：資料量的衡量數據

為了最大化[[峰值信噪比|峰值信噪比]]的視訊畫值衡量，失真部分通常使用[[均方差|均方差]]做計算。

現行的視訊壓縮[[編解碼器|編解碼器]]中，位元率-失真最佳化需要將每一塊視訊畫面的區塊，經由熵編碼器運算來衡量實際的位元花費，而此計算是複雜的。例如在[[MPEG|MPEG]]的許多編解碼器標準中，完整的計算流程包含了[[離散餘弦變換|離散餘弦變換]]、[[量化|量化]]以及[[熵編碼|熵編碼]]，需全部運算完才能得到實際的位元花費。因此位元率-失真最佳化會較大部分其他''區塊比對''的衡量方法來得慢，譬如{{link-en|絕對值差和|sum of absolute differences}}（SAD）和{{link-en|轉換後絕對值差和|sum of absolute transformed differences}}（SATD）。因此位元率-失真最佳化通常只在動作補償的最後一個步驟才會被使用，像是在[[H.264/AVC|H.264/AVC]]中最後需要對各種分割模式下決定的時候。

==支援的編碼器==
* [[Ateme|Ateme]] H.264編碼器
* [[草谷|草谷]]ViBE編碼器（SD & HD MPEG-2/MPEG-4）
* Harmonic Electra 8000編碼器（SD & HD MPEG-2/MPEG-4）
* [[libavcodec|libavcodec]]
* {{link-en|MainConcept|MainConcept}} H.264編碼器
* [[Microsoft|Microsoft]] [[VC-1|VC-1]]編碼器
* {{link-en|TANDBERG Television|TANDBERG Television}} SD MPEG-2 EN8100
* {{link-en|TANDBERG Television|TANDBERG Television}} HD MPEG-4 EN8190
* {{link-en|TANDBERG Television|TANDBERG Television}} SD & HD MPEG-4 iPlex
* [[Theora|Theora]] 1.1-alpha1 and later（the "Thusnelda" branch）
* [[x264|x264]] H.264編碼器
* [[Xvid|Xvid]] {{link-en|MPEG-4 ASP|MPEG-4 ASP}}編碼器
* [[H.264/AVC|H.264/AVC]]標準參考軟體JM（Joint Model）
* [[H.265/HEVC|H.265/HEVC]]標準參考軟體HM（HEVC Test Model）

==參見==
*[[影像質量|影像質量]]
*[[壓縮比|壓縮比]]

==參考資料==
{{reflist}}

{{DEFAULTSORT:Rate-Distortion Optimization}}
[[Category:影像编解码器|Category:影像编解码器]]
[[Category:最优化算法|Category:最优化算法]]
[[Category:數學最佳化|Category:數學最佳化]]
[[Category:图像处理|Category:图像处理]]
[[Category:编解码器|Category:编解码器]]
[[Category:視頻壓縮技術|Category:視頻壓縮技術]]