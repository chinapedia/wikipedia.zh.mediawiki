{{NoteTA
| G1 = IT
| G2 = Games
}}

{{地区用词|cn=视差滚动|tw=視差捲動}}是[[计算机图形学|计算机图形学]]和[[网页设计|网页设计]]中使用的技术。原理是在二维场景中创建一个深度错觉，在摄影机移动过程中，让背景图像的移动速度比前景图像慢。<ref>{{cite news|title=Cap. O'Rourke to the rescue|url=https://news.google.com/newspapers?id=drgTAAAAIBAJ&sjid=S5ADAAAAIBAJ&pg=3478,303305&dq=parallax+scrolling|date=1988-09-01|publisher=New Straits Times Malaysia|accessdate=2009-07-06|archive-date=2019-07-01|archive-url=https://web.archive.org/web/20190701194930/https://news.google.com/newspapers?id=drgTAAAAIBAJ&sjid=S5ADAAAAIBAJ&pg=3478,303305&dq=parallax+scrolling|dead-url=no}}</ref>该技术起源于20世纪30年代在[[传统动画|传统动画]]<ref name="art">{{cite web|title=The Art of Parallax Scrolling|url=http://mos.futurenet.com/pdf/net/NET165_tut_flash.pdf|first=Wyatt|last=Paul|date=August 2007|accessdate=2009-07-06|deadurl=yes|archiveurl=https://web.archive.org/web/20091007223458/http://mos.futurenet.com/pdf/net/NET165_tut_flash.pdf|archivedate=2009-10-07}}</ref>中使用的[[多平面成像|多平面成像]]技术。视差滚动得益于[[二维计算机图形|二维计算机图形]]和[[电子游戏|电子游戏]]的发展，特别是1982年所推出的[[街机游戏|街机游戏]]《[[月球战车_(游戏)|月球战车]]》<ref>{{cite web|title=Chronology of the History of Video Games: Golden Age|url=http://www.thocp.net/software/games/golden_age.htm|first=Ted|last=Stahl|date=2006-07-26|accessdate=2009-07-06|archive-date=2013-07-07|archive-url=https://www.webcitation.org/6HvpVjzbl?url=http://www.thocp.net/software/games/golden_age.htm|dead-url=no}}</ref><ref>{{cite web|url=http://www.gamesradar.com/f/gamings-most-important-evolutions/a-20101008102331322035/p-3|title=Gaming's Most Important Evolutions|page=3|publisher=[[GamesRadar|GamesRadar]]|date=October 8, 2010|accessdate=2011-04-27|archive-date=2012-03-19|archive-url=https://web.archive.org/web/20120319153722/http://www.gamesradar.com/gamings-most-important-evolutions/?page=3|dead-url=no}}</ref>和《[[丛林大战_(游戏)|丛林大战]]》<ref>{{cite web|title=Jungle Hunt Was a Terrible Waste of Quarters|url=http://retrovolve.com/jungle-hunt-was-a-terrible-waste-of-quarters/|access-date=2017-03-27|archive-date=2019-03-28|archive-url=https://web.archive.org/web/20190328211758/http://retrovolve.com/jungle-hunt-was-a-terrible-waste-of-quarters/|dead-url=no}}</ref>。部分视差滚动最早被1981年的街机游戏《[[跳跳车_(游戏)|跳跳车]]》<ref name="purcaru">{{Cite web |url=https://books.google.com/books?id=lB4PAwAAQBAJ&pg=PA181 |title=存档副本 |access-date=2017-03-27 |archive-date=2021-04-30 |archive-url=https://web.archive.org/web/20210430132633/https://books.google.com/books?id=lB4PAwAAQBAJ&pg=PA181 |dead-url=no }}</ref>。

== 方法 ==

在[[街机主板|街机主板]]、[[电子游戏机|电子游戏机]]和[[个人电脑|个人电脑]]系统中，分别有4种实现视差滚动的方法。

=== 图层法 ===

{{multiple image
| align = right
| direction = vertical
| header = 图层法演示
| width = 500
| image1 = The Whispered World parallax scrolling sample 1.jpg
| alt1 =
| caption1 = <div style="text-align: center;">''[[风语世界|风语世界]]''中使用视差滚动图层的侧视图</div>
| image2 = TWW parallax scrolling sample 2.jpg
| alt2 =
| caption2 = <div style="text-align: center;">上图的正视图</div>
}}

有些显示系统支持多背景图层，这些图层可以在水平或者垂直方向独立滚动并且合成一个图层来模拟多平面相机。在这种显示系统中，一款游戏可以通过在同一方向上以不同变量移动图层位置的方式产生视差。移动越快的图层距离虚拟摄影机越近。图层可以放在主场景（包含与玩家交互对象的图层）的前面，这样对于各种原因，如提供增加的维度，可以掩盖了游戏的一些动作，或分散玩家的注意力。

=== 精灵法 ===

程序员可能会制作精灵（在图层上或者图层后面由硬件绘制的可控制的移动物体）的假层，如果它们在显示系统上可用的话。例如《[[星际力量|星际力量]]》，[[红白机|红白机]]上的一款俯视垂直卷轴射击游戏，它的星空背景使用了视差滚动；还有超任上的快打旋风在主场景的前图层上也使用了该技术。

Amiga电脑的精灵可以设置任意高度，配合copper协处理器可以把其设置为水平，这对于实现视差滚动来说非常理想。Amiga电脑上的屠魔大法师使用多路复用的精灵，这是为了创建全屏的视差背景图层<ref>{{Cite web |url=http://www.codetapper.com/amiga/sprite-tricks/risky-woods/ |title=存档副本 |access-date=2017-03-27 |archive-date=2015-02-19 |archive-url=https://web.archive.org/web/20150219002353/http://www.codetapper.com/amiga/sprite-tricks/risky-woods/ |dead-url=no }}</ref>以取代系统的双场模式。

=== 重复纹理/动画法 ===

为了实现视差效果，由个性砖块构成的滚动显示层可以浮动在重复背景图层的上面以产生个性砖块位图的动画。彩色循环技术可以在整个屏幕上快速创建砖块动画。软件效果使另外的层（硬件）产生了错觉。很多游戏将这一技术用在滚动的星空背景上。但有时也要实现更复杂以及多方位的效果，比如 Sensible Software 开发的游戏 Parallax。

=== 光栅法 ===

在[[光栅图形|光栅图形]]中，一张图像的像素线通常是在画一条线和画另一条线之间自上而下的顺序构成及刷新并且会有轻微延迟（称为[[水平消隐间隔|水平消隐间隔]]）。为老旧的图像芯片组设计的游戏（例如第三和第四代的[[电子游戏机|电子游戏机]]，还有那些专门的[[电视游戏|电视游戏]]，或类似的手持系统），会利用光栅的特点，创造更多层的错觉。

有些显示系统只有一个图层。包括最经典的8位系统（如[[Commodore_64|Commodore 64]]计算机、[[红白机|红白机]]、[[世嘉Master_System|世嘉Master System]]、[[PC_Engine|PC Engine/TurboGrafx-16]]和最初的[[Game_Boy|Game Boy]]）。在这些系统上的更复杂的游戏通常将图层分为水平条，每个都有不同的位置和滚动的速度。通常情况下，在屏幕上越高的水平条表示离虚拟相机越远，或者被固定的水平条用来显示状态信息。然后程序将等待水平空白，在显示系统开始绘制每一条扫描线之前改变图层的滚动位置。这被称为“光栅效应”，也有助于改变系统调色板来产生一个渐变背景。

有些平台（如Commodore 64、[[Amiga|Amiga]]、世嘉Master System<ref>{{Cite web |url=http://www.smspower.org/uploads/Development/richard.txt |title=存档副本 |access-date=2017-03-27 |archive-date=2019-06-24 |archive-url=https://web.archive.org/web/20190624130810/http://www.smspower.org/uploads/Development/richard.txt |dead-url=no }}</ref>，PC Engine/TurboGrafx-16<ref>{{cite web |url=http://cgfm2.emuviews.com/txt/pcetech.txt |title=存档副本 |accessdate=2014-03-18 |deadurl=yes |archiveurl=https://web.archive.org/web/20140318183739/http://cgfm2.emuviews.com/txt/pcetech.txt |archivedate=2014-03-18 }}</ref>、[[世嘉Mega_Drive|世嘉Mega Drive/Genesis]]、[[超任|超任]]、[[Game_Boy|Game Boy]]、[[Game_Boy_Advance|Game Boy Advance]]和[[任天堂DS|任天堂DS]]）会用水平消隐间隔自动设置寄存器独立于程序的部分。其他的系统如红白机，需要使用周期定时代码（这些专门书写的代码的执行时间与视频芯片画一条扫描线的时间差不多），或者游戏卡带内的定时器（一定数量的扫描线画完后产生中断）。很多红白机游戏会使用这一技术绘制状态栏，红白机上的《[[忍者神龟_街机版|忍者神龟 街机版]]》和[[GUN-DEC|GUN-DEC]]使用该技术用不同的速率滚动背景层。

更先进的光栅技术可以产生有趣的效果。如果光栅层混合的话，系统可以产生非常有效的景深。《[[超音鼠|超音鼠]]》、《[[超音鼠2|超音鼠2]]》、《[[雷莎出击|雷莎出击]]》、《[[Lionheart|Lionheart]]》和《[[街霸2|街霸2]]》中很好的使用这个效果。如果每条扫描线都有自己的图层，就会产生[[Pole_Position|Pole Position]]游戏的效果，就是在2D系统中创建一个伪3D的道路（或者[[NBA_Jam|NBA Jam]]游戏中的伪3D球场）。如果显示系统除了滚动还支持旋转和缩放，就可以产生[[Mode_7|Mode 7]]中的所熟知的特效。改变旋转和缩放因子可以绘制一个平面的投影（比如在《[[F-Zero|F-Zero]]》和《[[超级马里奥赛车|超级马里奥赛车]]》中）或者通过创建额外因子可以弯曲主场景。

另一种先进的技术是行/列滚动。它可以使屏幕上的砖块的行/列单独滚动<ref>{{Cite web |url=http://mamedev.org/devwiki/index.php?title=Using_MAME%27s_tilemap_system |title=存档副本 |access-date=2014-01-02 |archive-date=2014-01-02 |archive-url=https://web.archive.org/web/20140102211938/http://mamedev.org/devwiki/index.php?title=Using_MAME%27s_tilemap_system |dead-url=no }}</ref>。这种技术在很多世嘉的街机主板（从Sega Space Harrier和[[世嘉System_16|System 16]]<ref>{{cite web |url=http://cgfm2.emuviews.com/txt/s16tech.txt |title=存档副本 |accessdate=2016-08-08 |deadurl=yes |archiveurl=https://web.archive.org/web/20160304034742/http://cgfm2.emuviews.com/txt/s16tech.txt |archivedate=2016-03-04 }}</ref>开始）、世嘉Mega Drive/Genesis游戏机<ref>{{Cite web |url=http://www.gamepilgrimage.com/content/sega-genesis-vs-super-nintendo |title=存档副本 |access-date=2017-03-27 |archive-date=2015-09-24 |archive-url=https://web.archive.org/web/20150924020645/http://www.gamepilgrimage.com/content/sega-genesis-vs-super-nintendo |dead-url=no }}</ref>、[[Capcom_CP系统|Capcom CP系统]]、[[Irem_M-92|Irem M-92]]、[[Taito_F3系统|Taito F3系统]]街机游戏主板中得以实现。

== 示例 ==

在下面的动画中，三个图层以不同的速度向左移动。它们的速度从前到后依次递减，相对于观察者的距离则依次递增。地面的移动速度是植被层的8倍。植被层的移动速度是云层的两倍。

<gallery>
Image:Sky back layer.png|<div style="text-align: center;">云层 - 背景</div>
Image:Vegetation (middle layer).png|<div style="text-align: center;">植被层 - 中景</div>
Image:Ground (front layer).png|<div style="text-align: center;">地面层 - 前景</div>
Image:Parallax scrolling example scene.gif|<div style="text-align: center;">动画（点击播放）</div>
</gallery>

== 网页设计中的视差滚动 ==

网页设计师在2011年开始使用Html5和CSS3制作视差滚动。拥护者认为这是迎接流动性网页的简单方式。支持者将视差背景作为工具以贴近用户并且提升网站的整体体验。不过普渡大学在2013年发布的研究报告表明：“虽然视差滚动增强了某些方面的用户体验，但它并没有提高整体的用户体验”。<ref>{{cite web|title=The Effects Of Parallax Scrolling On User Experience And Preference In Web Design|url=https://docs.lib.purdue.edu/cgttheses/27/|work=Purdue University|publisher=Purdue University|accessdate=17 April 2014|author=Dede M. Frederick|date=18 April 2013|archive-date=2014-04-16|archive-url=https://web.archive.org/web/20140416183434/http://docs.lib.purdue.edu/cgttheses/27/|dead-url=no}}</ref>

== 参考文献 ==
{{Reflist}}

== 参见 ==

* [[伪三维|伪三维]]

[[Category:电子游戏设计|Category:电子游戏设计]]
[[Category:电子游戏研发|Category:电子游戏研发]]
[[Category:视差|Category:视差]]
[[Category:响应式网页设计|Category:响应式网页设计]]
[[Category:AJAX|Category:AJAX]]
[[Category:自适应网页设计|Category:自适应网页设计]]