'''程式理解'''（Program comprehension）是[[計算機科學|計算機科學]]的領域之一，著重[[软件工程|软件工程師]]維護已有[[程式碼|程式碼]]的方式。程式理解中有包括認知，也有其他流程，已識別出這些流程，這些也是研究的主題。其研究結果會用來開發工具以及進行訓練。

軟體維護工作包括以下五種：適應性維護、[[修正性維護|修正性維護]]、完善性維護、[[代码复用|代码复用]]及代码槓桿（code leverage）<ref>{{cite book|title=Advances in Computers|url=http://books.google.com/books?id=TQ6QtJwL-2QC&pg=PA34|date=29 September 1994|publisher=Academic Press|isbn=978-0-08-056671-9|pages=34–}}</ref>。

程式理解領域的計算機科學家有Ruven Brooks、Ted J. Biggerstaff及Anneliese von Mayrhauser。

== 相關條目 ==
*[[程序分析|程序分析]]
*{{le|程序切片|Program slicing}}

==參考資料==
{{reflist}}
==外部連結==
*[https://dl.acm.org/doi/10.5555/800099.803210 Using a behavioral theory of program comprehension in software engineering] {{Wayback|url=https://dl.acm.org/doi/10.5555/800099.803210 |date=20200712114346 }}
*[http://www.cs.kent.edu/~jmaletic/Prog-Comp/Papers/biggerstaff93.pdf The concept assignment problem in program understanding] {{Wayback|url=http://www.cs.kent.edu/~jmaletic/Prog-Comp/Papers/biggerstaff93.pdf |date=20170809060301 }}
*[http://www.cs.kent.edu/~jmaletic/cs63902/Papers/ProgramComprehension/von_mayrhauser95.pdf Program Comprehension During Software Maintenance and Evolution] {{Wayback|url=http://www.cs.kent.edu/~jmaletic/cs63902/Papers/ProgramComprehension/von_mayrhauser95.pdf |date=20181222154150 }}
{{compu-sci-stub}}
[[Category:计算机编程|Category:计算机编程]]