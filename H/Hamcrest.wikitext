{{NoteTA|G1=IT}}
'''Hamcrest'''是一个协助编写用[[Java|Java]]语言进行软件测试的框架。它支持创建自定义的[[斷言_(程式)|断言]]匹配器（assertion matchers）（名称“Hamcrest”即为“matchers”的[[易位构词游戏|异位构词]]），允许[[宣告式編程|声明式]]定义匹配规则。<ref>{{cite web|url=http://code.google.com/p/hamcrest/wiki/Tutorial|title=The Hamcrest Tutorial|accessdate=2014-07-15|archive-date=2014-07-29|archive-url=https://web.archive.org/web/20140729180556/http://code.google.com/p/hamcrest/wiki/Tutorial|dead-url=no}}</ref>这些匹配器在[[单元测试|单元测试]]框架（例如[[JUnit|JUnit]]<ref>{{cite web|url=http://www.junit.org/node/401|title=JUnit 4.5 is released|deadurl=yes|archiveurl=https://web.archive.org/web/20121014164300/http://www.junit.org/node/401|archivedate=2012-10-14|accessdate=2014-07-15}}</ref>和jMock）中有用。

Hamcrest已经被移植到[[Java|Java]]、[[C++|C++]]、[[Objective-C|Objective-C]]、[[Python|Python]]、[[ActionScript|ActionScript]] 3<ref>{{cite web|url=http://github.com/drewbourne/hamcrest-as3/tree/master|title=Hamcrest-AS3|accessdate=2014-07-15|archive-date=2016-02-19|archive-url=https://web.archive.org/web/20160219015145/https://github.com/drewbourne/hamcrest-as3/tree/master|dead-url=no}}</ref>、[[PHP|PHP]]<ref>{{cite web|url=http://code.google.com/p/hamcrest/|title=Hamcrest - Google Code|accessdate=2014-07-15|archive-date=2009-02-25|archive-url=https://web.archive.org/web/20090225153628/http://code.google.com/p/hamcrest/|dead-url=no}}</ref>、[[JavaScript|JavaScript]]<ref>{{cite web|url=https://github.com/abe33/hamcrest4qunit|title=Hamcrest4Qunit|accessdate=2014-07-15|archive-date=2018-06-11|archive-url=https://web.archive.org/web/20180611004334/https://github.com/abe33/hamcrest4qunit|dead-url=no}}</ref>和[[Erlang|Erlang]].<ref>{{cite web|url=https://github.com/hyperthunk/hamcrest-erlang#readme|title=Hamcrest Erlang|accessdate=2014-07-15|archive-date=2013-12-26|archive-url=https://web.archive.org/web/20131226003305/https://github.com/hyperthunk/hamcrest-erlang#readme|dead-url=no}}</ref>

== 解释 ==
“第一代”的单元测试框架提供了一个[[斷言_(程式)|断言表达式]]，允许一个一个测试在特定条件下断言必须为真。如果断言为假，则测试失败。例如：
<syntaxhighlight lang="c">assert(x == y);</syntaxhighlight>

但是在这种语法下，如果“x”和“y”的是不相等的，产生错误信息不够好——如果错误消息中显示“x”和“y”的值就更好了。
为了解决这个问题，“第二代”单元测试框架提供了一组断言语句，从而产生更好的错误消息。例如，
<syntaxhighlight lang="c">
assert_equal(x, y);
assert_not_equal(x, y);
</syntaxhighlight>

但是，由于上述断言语句被扩展以支持不同于简单的相等比较的比较方式，这导致了断言宏的数量爆炸。因此，“第三代”单元测试框架使用[[函式庫|函式庫]]，如Hamcrest，来支持“assert_that”操作符，操作符可与匹配器（matcher）对象进行组合，从而致使语法像这样：
<syntaxhighlight lang="c">
assert_that(x, equal_to(y))
assert_that(x, is_not(equal_to(y)))
</syntaxhighlight>

好处是，当断言失败时你仍然可以顺畅的得到错误消息，不过现在你有了更大的可扩展性。现在可以自定义一种操作，采取匹配器作为参数并将返回结果，即形成一种可以从少量原始的匹配器生成大量可能的匹配表达式的语法。

这些高级匹配器的操作包括逻辑连接词（“与”、“或”、“非”），以及遍历集合的操作。这形成了功能强大的匹配器语言，它允许对集合进行复杂的断言判断，表达式写在一个声明中，而不是一个程序中。

== 参考文献 ==
{{reflist}}

== 外部链接 ==
* https://github.com/hamcrest{{Wayback|url=https://github.com/hamcrest |date=20140601231615 }}

[[Category:Java平台软件|Category:Java平台软件]]
[[Category:单元测试框架|Category:单元测试框架]]