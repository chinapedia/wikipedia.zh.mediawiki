{{NoteTA|G1=IT}}
{{HTML}}
[[HTML|HTML]]中，一个'''HTML元素'''是[[HTML|HTML]]文件的一个基本组成单元。HTML文件采用采用树形结构安排HTML元素。更进一步的说，一个HTML元素是一个满足一项或多项DTD要求的元素。HTML元素可以拥有''属性''和''内容''，可以是标题、段落、链接、列表、嵌入媒体或者其他的任何符合DTD要求的格式。

== 概述 ==
=== 语法 ===
在HTML語法中，大多數元素編寫一個開始標記和結束標記，與其之間的內容。'''HTML標記'''係由元素名稱，包圍於兩側之小於號與大於號之[[括號|括號]]所組成。其結束標記擁有一斜線位在小於號之括號後，有別於其起始標記。例如：一個段落係由<code>p</code>元素所代表，其被寫成
<syntaxhighlight lang="html5">
<p>在HTML語法中，大多數元素編寫......</p>
</syntaxhighlight>
然而，並非所有的此類元素''需要''結束標記，甚至是開始標記必須存在。<!--Examples will be given throughout the article when I get around to it. —Ms2ger-->某些元素，即所謂的''void空元素''，並無結束標記。典型的例子即<code>br</code>元素，其表示一個顯著之[[換行|換行]]，像是一首詩或一個住址。一個空元素的行為是預先定義的，並且它不能包含任何內容或其他元素。例如：在電影''[[海底總動員|海底總動員]]''中的牙醫師的地址將被寫成
<syntaxhighlight lang="html5">
<p>P. Sherman<br>42 Wallaby Way<br>Sydney</p>
</syntaxhighlight>

HTML元素可以是''容器''或者为''空''。
'''容器元素''' 结构如下：
* 一个''开始标记''（<code><标记></code>）表示一个元素的开始，标记本身还可以包含属性；
** 任何数量的[[HTML#属性|属性]]（和属性的值）；
* ''内容''（文本和／或子元素）；
* 一个''结束标记''，使用和起始标记完全相同的元素名但前面附加一个斜线字符 <code></tag></code>。并非所有的元素都要求结束标记，有些元素的结束表示是可有可无的（如''p''），有些是一定不可以有的（如''input''）。

'''空元素'''指仅包含一个标记，该标记既是开始标记同时也是结束标记。空元素可以有任意数量的属性<code><标记名 /></code>。在[[XHTML|XHTML]]规范中，标记中的斜线符号是''必须''的<ref name="XHTML10-46">[[#XHTML10|XHTML 1.0]] §4.6. & C.2</ref>。要求使用一個單獨標籤開啟與關閉元素。若要指定其為一個空元素，符號"/"包含於標記之'''結尾'''（不能與位於結束標記中的'''開始'''的符號"/"混淆）。例如：
<syntaxhighlight lang="html5">
<p>P. Sherman<br/>42 Wallaby Way<br/>Sydney</p>
</syntaxhighlight>

英语中有时HTML元素也被称为“tags”，严格的说''tag''是指元素的开始或者结束标记。

{{link-en|HTML屬性|HTML attribute}}用来指示元素的附加的性质。放在開始標記中。例如：<code>abbr</code>元素，其表示[[縮寫|縮寫]]，預計一個<code>title</code>屬性包含其開始標記。將被寫成
<syntaxhighlight lang="html5">
<abbr title="abbreviation">abbr.</abbr>
</syntaxhighlight>
[[Image:HTML element structure.svg|frame|Parts of an HTML container element:<br /> <ul>
   <li>''Start tag:'' <code><p … ></code>
     <ul>
       <li>''Attribute:''
         <ul>
           <li>''name:'' <code>class</code></li>
           <li>''value:'' <code>foo</code></li>
         </ul>
       </li>
     </ul>
   </li>
   <li>''Content:'' <code>This is a paragraph.</code></li>
   <li>''End tag:'' <code></p></code></li>
 </ul>
''complete:'' <code><p class="foo">This is a paragraph.</p></code>]]

在HTML中，元素（和属性）名字可以是大写或者小写，但在XHTML中，必须是小写。<ref name="XHTML10-42">[[#XHTML10|XHTML 1.0]] §4.2</ref>大写是旧的用法，并且是HTML规范中说明的方法，但是小写更为通用。

=== 相关标准 ===
HTML元素是在自1995年以來發布的一系列免費開放標準中定義的，最初由[[IETF|IETF]]以及隨後由[[W3C|W3C]]制订。

1990年代的[[瀏覽器大戰|瀏覽器大戰]]期間，[[網頁瀏覽器|網頁瀏覽器]]的软件商开始不断的添加自定义的元素，有些被后来的标准吸收。并非所有的软件商都支持这些非标准的元素，一般对于非标准的元素，或者是忽略，或者是导致显示不正确。

1998年，[[XML|XML]]（一种简化的SGML）引入一种方法，允许任何人开发自己的元素并融合到[[XHTML|XHTML]]文件中，使用支持XML的浏览器（[[用户代理|用户代理]]）可以浏览任意元素。<ref>[[#XML10|XML 1.0]]</ref>

而后采用XML兼容的办法，重新制订了HTML 4.01标准，[[#XHTML10|XHTML 1.0]]（''扩展的HTML''）。二者的元素相同，绝大多数情况下，XHTML 1.0文件的元素在HTML 4.0文件中是合法的。本文除非另外指出，应用的都是基于SGML的HTML，对于XHTML多数情况下仍然适用''（二者区别见[[HTML#SGML-based_versus_XML-based_HTML|HTML]]）''。

=== 当前的状态 ===
自从HTML第一版以来，已经有数个元素因为过期，不再新的标准中推荐使用或者干脆删除。

目前由于并存三种HTML 4.01／XHTML 1.0 DTD标准，而使得HTML的验证变得复杂起来，这三种标准分别是：

* '''Transitional'''，包含过期的元素。该标准制订的目的是提供一个过渡的时期，使得HTML作者可以逐渐适应新的扩展标准；
* '''Frameset'''，另一种过渡标准，但是允许作者使用'''frameset'''；
* '''Strict'''，符合现代（1999年以后）的标准。

HTML第一个标准（[[HTML#First_specifications|HTML 2.0]]）包含四个过期的元素。其中一个在[[HTML#Version_history_of_the_standard|HTML 3.2]]中被列为无效。所有的四个在[[HTML#Version_history_of_the_standard|HTML 4.01 Transitional]]中都被列为无效，HTML4.01 Transitional标准此外还将另外十个元素定义为无效。以上这些元素再加两个在[[HTML#Version_history_of_the_standard|HTML 4.01 Strict]]中同样被定义为无效。由于frame元素在显示方面的诸多问题以及其功能已经可以由其他元素替代，在未来的标准中不再保留，虽然目前在Transitional和{{lang|en|Frameset DTD}}中仍然有效。

（严格的说，目前的''XHTML''标准[[XHTML|XHTML 1.1]]（2001）根本不支持frame。基本上与XHTML 1.0 Strict相同，但是又包含了'''[[Ruby_character#Ruby_markup|Ruby markup]]'''模块。）<ref name="XHTML11">[[#XHTML11|XHTML 1.1]] §A</ref>

一个经常导致错误理解的原因是不严格的使用''deprecated''（过期）一词来泛指过期的和无效的，以及今后一段时间过期的不同的状态。

=== 展示和行为 ===
根据[[分离原则|分离原则]]，HTML的功能在于给一个文件的内容增加[[语义|语义]]和结构的信息。增加文件的展示和[[行为|行为]]的功能，例如增加CSS [[stylesheets|stylesheets]]和图形来增加文件的展示功能；通过链接到外部文件和[[Client-side_scripting|脚本]]增加与用户交互的行为。User agent也可以根据作者所提供的stylesheet在不同的介质（显示器，打印机）上展示不同效果。同时保持语义上的一致。

== 文件结构元素 ==
{{XMLElement|html|HTML|...}}
:这是HTML文件的根元素，所有其他的元素均包含在其中。
:在[[#HTML20|HTML 2.0]]中'''标准化'''，目前仍然在使用。

{{XMLElement|head|Head|...}}
:包含HTML标题定义、外部、脚本代码、格式代码等处理信息和元数据。
:在[[#HTML20|HTML 2.0]]中'''标准化'''，目前仍然在使用。
:（所包含的子元素见[[#Document_head_elements|文件头元素]]）

{{XMLElement|body|Body|...}}
{{anchor | body}}
:包含HTML文件的内容.
:在[[#HTML20|HTML 2.0]]中'''标准化'''，目前仍然在使用。
:（所包含的子元素见[[#Document_body_elements|文件内容元素]]）

== 文件头元素 ==
{{Anchor|base|base_tag}}{{XMLElement|base|Base|...|end=no}}
:给文件中所有的相对<code>href</code>及其它链接提供一个'''基本'''的'''。必须出现在任何引用外部资源的元素之前。在每个HTML文件中，只允许出现一个<code>base</code>元素。<code>base</code>元素可以有属性，但是没有内容。
:在''[[#HTMLTAGS|HTML Tags]]''中曾经提到一个开发版的'''BASE'''元素; 在[[#HTML20|HTML 2.0]]中得以'''标准化'''; 目前没有变化。

{{Anchor|basefont|basefont_tag}}{{XMLElement|basefont|Base Font|...|deprecated=1|end=no}}
:指定一个基本的字体，包括字符的大小，字型和颜色，与<code>font</code>元素搭配使用。已经过期，推荐使用[[CSS|CSS]].
:在[[#HTML32|HTML 3.2]]中'''標準化'''；在[[#HTML401|HTML 4.0 Transitional]]中'''過期'''；並已於[[#HTML401|HTML 4.0 Strict]]中'''失效'''。

{{Anchor|isindex|isindex_tag}}{{XMLElement|isindex|Index|...|end=no|deprecated=1}}
:'''<code>isindex</code>'''既可以出现在文件头，也可以出现在文件体内，但是只能出现一次。需要服务器端的搜索引擎的支持。
:出现在文件头表示这个文件是一个可搜索的索引。在页面上显示成一个单行的文本输入框用来输入关键词。页面被提交后，[[query_string|query string]]被加到当前的[[Uniform_Resource_Locator|URL]]后面，输出的文件搜索的关键字被加亮显示。一般来说，如果服务器支持这个功能的话会自行的加入'''isindex'''。

:'''ISINDEX'''在''[[#HTMLTAGS|HTML Tags]]''出现，在[[#HTML20|HTML 2.0]]中'''标准化'''。在[[#HTML401|HTML 4.0 Transitional]]中'''过期'''。在[[#HTML401|HTML 4.0 Strict]]中是无效的元素。

{{Anchor|link|link_tag}}{{XMLElement|link|Link|...|end=no}}
:指定連結到其他文件，如''previous''和''next''連結，或替代版本。<ref>[[#HTML401|HTML 4.01]] §12.3</ref>常見的用途是連結至外部的[[層疊樣式表|CSS樣式表]]，使用形式：
::<code><link rel="stylesheet" type="text/css" href="''url''" title="''description_of_style''"></code><ref>[[#HTML401|HTML 4.01]] §14.3.2</ref>
:較少見但重要之用途是透過使用[[微格式|微格式]]持續性支援導覽提示。若干常見之關係已被定義，可能透過瀏覽器介面傳達給使用者，而非直接於網頁中。
::<code><link rel="next" href="''url''"></code>
:文件之<code>head</code>元素可能包含任何數量之<code>link</code>元素。該<code>link</code> 元素擁有{{link-en|HTML屬性|HTML attribute}}，但無內容。
:'''LINK'''存在於''[[#HTMLDRAFT12|HTML Internet Draft 1.2]]''，且已在[[#HTML20|HTML 2.0]]中'''標準化'''；目前沒有變化。

{{Anchor|meta|meta_tag}}[[Meta_element|{{XMLElement]]
:可用於指定關於文件之額外[[中繼資料|中繼資料]]，如作者、出版日期、有效日期、頁面描述、關鍵字，或者透過其他header元素及
{{link-en|HTML屬性|HTML attribute}}之其他未提供的資訊。因其共通性，<code>meta</code>元素指定關聯的[[關聯數組|key-value pairs]]。一般情況之下，meta元素傳達關於文件之隱藏資訊。若干meta標籤可被使用，上述之全部應被嵌套在head元素中。每個'' meta''元素之特定目的是由其屬性來定義。
:在一種形式中，<code>meta</code>元素可指定應經由實際內容之前的[[網頁伺服器|網頁伺服器]]寄送之[[HTTP|HTTP]]標頭，例如：
::<code><meta http-equiv="foo" content="bar"></code>
:— this specifies that the page should be served with an HTTP header called <code>foo</code> that has a value <code>bar</code>.
:在一般形式中，<code>meta</code>元素指定HTML網頁的<code>name</code>及關聯的<code>content</code> [[HTML_屬性|HTML 屬性]]描述方面。為了防止可能發生歧義，一個可選取之第三方屬性：<code>scheme</code>可被支援於指定一個定義該key及其值的含意之語意框架：例如：
::<code><meta name="foo" content="bar" scheme="DC"></code>
:在本範例中，<code>meta</code>元素辨識其自身為包含<code>foo</code>元素，包含<code>bar</code>值，從DC或[[都柏林核心|都柏林核心]][[資源描述框架|資源描述框架]].
:在[[#HTML20|HTML 2.0]]中'''標準化'''；目前沒有變化。

{{XMLElement|object|Object|...}}
:使用於包含泛型物件在文件標頭中。雖然很少使用在<code>head</code>元素中，但也可能用來擷取外部資料，並將之與目前的文件關聯。
:在[[#HTML401|HTML 4.0]]中'''標準化'''；目前沒有變化。

{{XMLElement|script|Script|...}}
:可作為一個容器用於指令碼說明或連結至外部指令碼，包含可選取之<code>src</code>屬性。<ref>[[#HTML401|HTML 4.01]] §18</ref>此外，使用於文件主體中以動態生成兩個區塊或內聯內容。
:在[[#HTML32|HTML 3.2]]中'''標準化'''；目前沒有變化。

{{XMLElement|style|Style|...}}
:指定文件的[[層疊樣式表|CSS樣式]]，其形式通常為：
::<code><style type="text/css"> ... </style></code>
:既可作為一個容器之樣式說明，亦可連結至外部CSS樣式表，例如，在[[層疊樣式表|CSS]]中，與表單中的<code>@import</code>指令：
::<code><style> @import ''url''; </style></code><ref>[[#CSS1|CSS]] §1.1</ref>
:在[[#HTML32|HTML 3.2]]版本中'''標準化'''；目前沒有變化。

{{XMLElement|title|Title|...}}
:定義文件標題。在每個[[HTML|HTML]]及[[XHTML|XHTML]]文件中為需求的。使用者代理可以不同方式使用標題，例如：
:* 網頁瀏覽器通常將之顯示在[[標題列|標題列]]中，當視窗開啟時，或者（在適用的情況）顯示在[[工作列|工作列]]中，當視窗最小化時。
:* 當儲存該頁面時可為預設檔案名稱。
:* [[搜尋引擎|搜尋引擎]]之[[網路蜘蛛|網路編目程式]]可能會特別注意在標題中使用的文字。
:<code>title</code>元素不能包含其他元素，僅文字。只有一種<code>title</code>元素在文件中被允許。
:'''TITLE'''存在於''[[#HTMLTAGS|HTML標籤]]''，並在[[#HTML20|HTML 2.0]]中'''標準化'''；目前沒有變化。

== 文件内容元素 ==
在視覺化瀏覽器中，可顯示元素可呈現為''區塊''或''內行''。雖然所有元素是文件序列之一部分，但是區塊元素 出現在其父元素中：
* 作為不跨行之矩形物件；
* 使用區塊邊距，其寬度及高度內容可在周邊元素中被單獨設定。
反言之，內行元素被視為文件文字流之部分；其無法擁有邊距、寬度或高度設定，並且跨行。

=== 區塊元素 ===
區塊元素（或稱區塊層級元素）擁有矩形結構。在預設情況下，這些元素將跨越其父元素的整個寬度，因而不允許任何其他元素佔據其相同水平空間，因為已被放置。

區塊元素的矩形結構經常稱之為[[:File:W3C_and_Internet_Explorer_box_models.svg|盒模型]]，並由幾個部分所組成。每個元素包含以下內容：

*一個元素的'''內容（content）'''是放置在一個元素的開啟和關閉標記之間的實際文字（或其他媒體）。 
*一個元素的'''留白（padding）'''是該內容周圍的空位，其仍構成上述元素之一部份。padding也是元素在物理上的一部分，且不應被用於建立兩個元素之間的空白。任何背景樣式分配到元素，例如背景圖像或色彩，將在padding內可見。<!--Increasing the size of an element's padding increases the space this element will take up.-->
*一個元素的'''邊框（border）'''是元素的絕對值端，並跨越其周圍。邊框之厚度會增加元素大小。
*一個元素的'''邊距（margin）'''是該元素周圍之空白。任何其他元素之content、padding及border將不允許輸入該區域，除非迫於一些進階的[[CSS|CSS]]布局。使用多數的標準[[文件類型描述|DTD]]，margin在不同元素的左邊和右邊將互相推離。另一方面，margin在元素的上方及下方，將不堆疊或相互交融。這意味著位於該元素之間的空白將與較大的margin一樣大。

上述部分僅指CSS渲染的具體實施，並與HTML元素本身無關。

==== 基本文字 ====

{{Anchor|p|p_tag}}{{XMLElement|p|Paragraph|...}}
:建立一段落，也許為最常見之區塊層級元素。
:<code>P</code>在''[[#HTMLTAGS|HTML Tags]]''中已經存在，並且在[[#HTML20|HTML 2.0]]中'''標準化'''；目前仍在使用。

{{Anchor|heading}}{{Anchor|h1|h1_tag}}{{XMLElement|h1|Primary Headline|...}}
{{Anchor|h2|h2_tag}}{{XMLElement|h2|Secondary Headline|...}}
{{Anchor|h3|h3_tag}}{{XMLElement|h3|Third Level Headline|...}}
{{Anchor|h4|h4_tag}}{{XMLElement|h4|4. Level Headline|...}}
{{Anchor|h5|h5_tag}}{{XMLElement|h5|5. Level Headline|...}}
{{Anchor|h6|h6_tag}}{{XMLElement|h6|6. Level Headline|...}}
:不同層級之section標題。<code><h1></code>界定為最高層級標題，<code><h2></code>為下一層級（次級section），<code><h3></code>又低於上一層級，依此類推直到<code><h6></code>。有時其又統稱為<code><h''n''></code>標記，''n''表示任何有效之層級標題。
:多數視覺化瀏覽器預設將標題顯示為大型粗體字，雖然其可被[[層疊樣式表|CSS]]覆蓋。事實上，Heading元素並非只用於建立大型字或粗體字，其''不應''使用於顯示樣式化文字。反言之，其描述了文件之結構和組織。部分程式利用其產生輪廓及表格內容。
:Headings在''[[#HTMLTAGS|HTML Tags]]''中已經存在，並且在[[#HTML20|HTML 2.0]]中'''標準化'''；目前仍在使用。

==== 列表 ====
{{redirect|定义列表}}
{{Anchor|dl|dl_tag}}{{XMLElement|dl|Definition List|...}}
:'''定义列表'''（Definition List）是一种特殊列表，通常包含一系列“术语”及其“定义”。<ref>{{Cite book|title=HTML&CSS设计与构建网站|author=达科特 (Jon Duckett) |translator=刘涛、陈学敏|publisher=清华大学出版社|year=2013|isbn=9787302311034|location=|pages=56}}</ref>定义列表組成的名稱-值組<ref name="W3C-5-DL">{{cite web|url=http://www.w3.org/TR/html5/grouping-content.html#the-dl-element|title=4.5 Grouping content — HTML5|work=[[World_Wide_Web_Consortium|World Wide Web Consortium]]|accessdate=22 May 2013|archive-date=2014-05-31|archive-url=https://web.archive.org/web/20140531053306/http://www.w3.org/TR/html5/grouping-content.html#the-dl-element|dead-url=no}}</ref>（先前至HTML5定義成一個定義清單，並在早期版本之HTML5被稱之為關聯清單）。定义列表之目的為「術語及定義、中繼資料主題和值、問題及答案，或者名稱-值資料的任何其他群組」之群組。<ref>{{cite web|author=[[W3C|W3C]]|title=HTML5: A Vocabulary and Associated APIs for HTML and XHTML, W3C Working Draft|date=5 April 2011|url=http://www.w3.org/TR/2011/WD-html5-20110405/grouping-content.html#the-dl-element|accessdate=2014-05-30|archive-date=2014-09-25|archive-url=https://web.archive.org/web/20140925023452/http://www.w3.org/TR/2011/WD-html5-20110405/grouping-content.html#the-dl-element|dead-url=no}}.</ref>
:<code>DL</code>在''[[#HTMLTAGS|HTML Tags]]''中已經存在，並且在[[#HTML20|HTML 2.0]]中'''標準化'''；目前仍在使用。

{{Anchor|dt|dt_tag}}{{XMLElement|dt|Definition Term|...}}
:在定义列表（先前定義術語在定義清單中）中的名稱。
:<code>DT</code>在''[[#HTMLTAGS|HTML Tags]]''中已經存在，並且在[[#HTML20|HTML 2.0]]中'''標準化'''；目前仍在使用。

{{Anchor|dd|dd_tag}}{{XMLElement|dd|Definition|...}}
:定义列表（先前的一個術語之定義，在定義清單中）中的值。
:<code>DD</code>在''[[#HTMLTAGS|HTML Tags]]''中已經存在，並且在[[#HTML20|HTML 2.0]]中'''標準化'''；目前仍在使用。

{{Anchor|ol|ol_tag}}{{XMLElement|ol|Ordered List|...}}
:有排序（枚舉）之編號清單。<code>type</code>元素可用於指定排序類型，但CSS樣式表提供了更多控制：<code>{list-style-type: ''foo''}</code>。其預設為阿拉伯數字編號。若要使用<code>type</code>屬性，請使用<code><nowiki><ol type=</nowiki>"''foo''"></code>，以下列項目之一取代<code>''foo''</code>：
:*<code>A</code>表示A, B, C...
:*<code>a</code>表示a, b, c...
:*<code>I</code>表示I, II, III...
:*<code>i</code>表示i, ii, iii...
:*<code>1</code>表示1, 2, 3...
:<code>OL</code>在''[[#HTMLDRAFT12|HTML Internet Draft 1.2]]''中已經存在，並且在[[#HTML20|HTML 2.0]]中'''標準化'''；目前仍在使用。

{{Anchor|ul|ul_tag}}{{XMLElement|ul|Unordered List|...}}
:未排序（項目符號）清單。CSS樣式表可用於指定其項目符號：<code>{list-style-type: foo}</code>。其預設項目符號為一個空心圓。
:<code>UL</code>在''[[#HTMLTAGS|HTML Tags]]''中已經存在，並且在[[#HTML20|HTML 2.0]]中'''標準化'''；目前仍在使用。

{{Anchor|li|li_tag}}{{XMLElement|li|List Item|...}}
:在排序('''ol''')或未排序('''ul''')清單中之列表項目。
:<code>LI</code>在''[[#HTMLTAGS|HTML Tags]]''中已經存在，並且在[[#HTML20|HTML 2.0]]中'''標準化'''；目前仍在使用。

{{Anchor|dir|dir_tag}}{{XMLElement|dir|Directory List|...|deprecated=1}}
:目錄清單。該元素之原始目的從未廣泛支援；已被<code><ul></code>替代，故不建議使用。
:<code>DIR</code>在''[[#HTMLTAGS|HTML Tags]]''中已經存在，並於[[#HTML20|HTML 2.0]]中'''標準化'''；在[[#HTML401|HTML 4.0 Transitional]]中'''不建議使用'''；在[[#HTML401|HTML 4.0 Strict]]中'''已失效'''。

==== 其他區塊元素 ====

{{Anchor|address|address_tag}}{{XMLElement|address|Address|...}}
:文件作者之聯絡資訊。
:<code>ADDRESS</code>在''[[#HTMLTAGS|HTML Tags]]''中已經存在，並且在[[#HTML20|HTML 2.0]]中'''標準化'''；目前仍在使用。

{{anchor|blockquote}} <!-- Linked from [[Wikipedia:Quotations|Wikipedia:Quotations]] -->
{{Anchor|blockquote|blockquote_tag}}{{XMLElement|blockquote|BlockQuotation|...}}
:一個區塊層級引用（[[blockquote|blockquote]]），用於當quotation包含區塊層級元素，如段落。<code>cite</code>屬性可能提供來源，且必須是完全合格之[[統一資源標誌符|統一資源標誌符]]。
:區塊quotation的演示文稿在視覺化瀏覽器中經常從其兩個margin縮進之。<!--This has led to the element being unnecessarily used just to indent paragraphs, regardless of semantics.  For quotations not containing block level elements see the quote (<code>q</code>) element.
-->
:<code>BLOCKQUOTE</code>在''[[#HTMLDRAFT12|HTML Internet Draft 1.2]]''中已經存在，並且在[[#HTML20|HTML 2.0]]中'''標準化'''；目前仍在使用。如需更多資訊，請參見[[blockquote元素|blockquote元素]]。

{{Anchor|center|center_tag}}{{XMLElement|center|Centered Text|...|deprecated=1}}
:建立一個區塊層級之置中對齊區域。已由使用CSS樣式表定義置中對齊<code><div></code>或其他元素之方式替代，故不建議使用。
:在[[#HTML32|HTML 3.2]]中'''標準化'''。

{{Anchor|del|del_tag}}{{XMLElement|del|Deleted Section|...}}
:標記內容中已刪除的section。該元素亦使用為''inline''。
:在[[#HTML401|HTML 4.0]]中'''標準化'''；目前仍在使用。

{{Anchor|div|div_tag}}{{XMLElement|div|Logical division|...}}
{{Main|Span與div}}
:一個區塊層級之邏輯區。沒有語意的通用元素用於區分文件的section，通常為目的，例如由[[層疊樣式表|CSS樣式表]]或[[文件物件模型|DOM]]調用來控制之演示文稿或行為。
:在[[#HTML30|HTML 3.0 Drafts]]中出現；在[[#HTML32|HTML 3.2]]中'''標準化'''；目前仍在使用。

{{Anchor|hr|hr_tag}}{{XMLElement|hr|HorizontalRule|end=no}}
:水平線。表象規則亦可被CSS樣式表繪製。
:在[[#HTML20|HTML 2.0]]中'''標準化'''；目前仍在使用。

{{Anchor|ins|ins_tag}}{{XMLElement|ins|Inserted Section|...}}
:標記一個已插入內容之section。該元素亦使用為''inline''。
:在[[#HTML401|HTML 4.0]]中'''標準化'''；目前仍在使用。

{{Anchor|noscript|noscript_tag}}{{XMLElement|noscript|Noscript|...}}
:指令碼的替代內容。不同於'''指令碼（script）'''，其只能作為區塊元素。
:在[[#HTML401|HTML 4.0]]中'''標準化'''；目前仍在使用。

{{Anchor|pre|pre_tag}}{{XMLElement|pre|PreFormattedText|...}}
:''預先格式化''文字。該元素中的文字通常顯示在[[字型|非比例字型]]，正因其布局在檔案中（參見[[ASCII藝術|ASCII藝術]]）。而瀏覽器會忽略其他HTML元素的[[空白字元|空白字元]]，在<code>pre</code>中，空白應該被呈現為創作的。（使用CSS之內容：<code>{white-space: pre; font-family: mono-space;}</code>，其他元素可在相同方式之下呈現。）該元素可包含任何內行元素，除了：影像（<code>IMG</code>）、物件（<code>OBJECT</code>）、大型字（<code>BIG</code>）、小型字（<code>SMALL</code>）、上標（<code>SUP</code>）及下標（<code>SUB</code>）。
:<code>PRE</code>在''[[#HTMLDRAFT12|HTML Internet Draft 1.2]]''中已經存在，並且在[[#HTML20|HTML 2.0]]中'''標準化'''；目前仍在使用。

{{Anchor|script|script_tag}}{{XMLElement|script|Script|...}}
:在文件中放置指令碼。在head中以及在inline內容中也具有效果。
::注意：<code>SCRIPT</code>本身並非區塊或內行元素；其本身不應全部顯示，但其可包含說明以動態生成區塊或內行內容兩者。
:在[[#HTML32|HTML 3.2]]中'''標準化'''；目前仍在使用。

=== 行内元素 ===
行內元素無法直接放置在<code>body</code>元素中；其必須完全嵌套於區塊及元素中。<ref>{{citation |url=http://www.w3.org/TR/html401/struct/global.html#h-7.5.1 |title=HTML 4.01 |publisher=W3.org |date= |accessdate=2012-03-26 |archive-date=2008-08-28 |archive-url=https://web.archive.org/web/20080828150413/http://www.w3.org/TR/html401/struct/global.html#h-7.5.1 |dead-url=yes }}</ref>

==== 锚 ====

{{Anchor|a|a_tag}}{{XMLElement|a|锚|...}}
:锚元素之所以称为“锚”，是因为网页设计者可以用它们来将URL和网页上的一些文本“繫”（{{lang|en|anchor}}）在一起。当用户在浏览器中查看网页时，他们可以通过点击文本来激活链接，以访问链接中URL指向的页面。<ref>[[HTML_4_for_dummies|HTML 4 for dummies]], 5th edition, 2005, By Ed Tittel, Mary C. Burmeister, p. 96.</ref>
:在HTML中，锚既可以是[[超级链接|超级链接]]的来源，也可以是''目标''端。
:通过使用<code>href</code>属性（hypertext reference [http://www.w3.org/Provider/ServerWriter.html]{{Wayback|url=http://www.w3.org/Provider/ServerWriter.html |date=20171229124838 }}），锚可以成为到文档中另一个部分的链接，也可以通过使用一个外部[[URL|URL]]来指向另一个资源（如网页）。
:或者（也可以是同时），通过使用<code>name</code>或<code>id</code>属性，使这个元素成为目标。[[URL|URL]]可以通过[[碎片标识符|碎片标识符]]链接到这个目标。现在，任何元素都可以通过使用<code>id</code>属性来变成一个锚，[http://www.w3.org/TR/html4/struct/links.html#h-12.2.3]{{Wayback|url=http://www.w3.org/TR/html4/struct/links.html#h-12.2.3 |date=20090720035436 }}因此<code><a name="foo"></code>不再必要。<!--
:The attribute <code>title</code> may be set to give brief information about the link:
::<code><a href="''URL''" title="''additional information''">link text</a></code>
:In most graphical browsers, when the cursor hovers over a link, the cursor changes into a hand with a stretched index finger and the <code>title</code> is displayed in a [[tooltip|tooltip]] or in some other manner.  Some browsers render [[alt_attribute|alt text]] the same way, despite this not being what the specification calls for.
-->
:<code>A</code>在''[[#HTMLTAGS|HTML Tags]]''中已經存在，並且在[[#HTML20|HTML 2.0]]中'''標準化'''；目前仍在使用。

==== 短语元素 ====
===== 常用的短语元素 =====

{{XMLElement|abbr|Abbreviation|…}}
:表示本元素是一个[[縮寫|縮寫]]，title属性中可以包含全称：
::<code><abbr title="微型计算机">微机</abbr></code>
:在[[#HTML401|HTML 4.0]]中'''标准化'''，目前仍然在使用。

{{Anchor|acronym|acronym_tag}}{{XMLElement|acronym|Acronym|...|deprecated=1}}
:与<code>abbr</code>元素类似。（拼音文字中Acronym是指大写的首字母组合成的词，比如Hyper-Text Markup Language的Acronym是HTML; Abbreviation的概念更广泛些，可以是将一个较长的词后面部分去掉，用剩下的部分表示词的意思。中文中没有类似的区别）:
::<code><acronym title="Hyper-Text Markup Language">HTML</acronym></code>
:在[[#HTML401|HTML 4.0]]中'''标准化'''，目前仍然在使用，在HTML5中'''不支持'''。

{{XMLElement|dfn|Definition|…}}
:表示本元素是一个词条的定义。
:'''DFN''' 在''[[#HTMLDRAFT12|HTML Internet Draft 1.2]]''中已经存在，在[[#HTML32|HTML 3.2]]中完全'''标准化'''，目前仍然在使用。

{{XMLElement|em|Emphasis|…}}
:''强调''本元素，传统上显示为斜体。
:'''EM''' 在''[[#HTMLDRAFT12|HTML Internet Draft 1.2]]''中已经存在，在[[#HTML20|HTML 2.0]]中完全'''标准化'''，目前仍然在使用。

{{XMLElement|strong|Strong Emphasis|…}}
:'''加重'''一个词条，（传统上显示为粗体）。
:有助听功能的浏览器可能会使用不同的声音来表述加重的词。
:'''STRONG'''在''[[#HTMLDRAFT12|HTML Internet Draft 1.2]]''已经存在，在[[#HTML20|HTML 2.0]]中完全'''标准化'''，目前仍然在使用。

===== 计算机术语元素 =====
这些与元素主要用于方便显示计算机软件编码和与使用者交互（<code>）；显示源代码变量（<var>）；用户输入（<kbd>）；以及终端输出（<samp>）。

{{XMLElement|code|Sourcecode|…}}
:显示一段代码。通常用等宽字体显示：<code>Code snippet.</code>
:'''CODE'''在''[[#HTMLDRAFT12|HTML Internet Draft 1.2]]''中出现，并且在[[#HTML20|HTML 2.0]]最终'''标准化'''； 目前仍在使用。

{{XMLElement|samp|Sample|…}}
:显示一段程序或脚本输出的样本。
:'''SAMP'''在''[[#HTMLDRAFT12|HTML Internet Draft 1.2]]''中出现，并且在[[#HTML20|HTML 2.0]]最终'''标准化'''； 目前仍在使用。

{{XMLElement|kbd|Keyboard|…}}
:键盘 - 显示用户输入的文字。
:'''KBD'''在''[[#HTMLDRAFT12|HTML Internet Draft 1.2]]''中出现，并且在[[#HTML20|HTML 2.0]]最终'''标准化'''； 目前仍在使用。

{{XMLElement|var|Variable|…}}
:显示一个变量。
:'''VAR'''在''[[#HTMLDRAFT12|HTML Internet Draft 1.2]]''中出现，并且在[[#HTML20|HTML 2.0]]最终'''标准化'''； 目前仍在使用。

===== 视觉效果 =====
视觉效果的元素仅仅对可视浏览器起作用，因此不推荐使用，如果可能应该使用层叠样式表。部分元素在HTML 4 / XHTML 1.0中被宣布过期或者无效的，其它的在当前的XHTML 2.0草案[http://www.w3.org/TR/2005/WD-xhtml2-20050527/ XHTML 2.0]{{Wayback|url=http://www.w3.org/TR/2005/WD-xhtml2-20050527/ |date=20090724032158 }}中被定义为无效的。当前的HTML 5草案[https://web.archive.org/web/20150801133040/http://www.w3.org/TR/html5/text-level-semantics.html HTML 5]中，'''b''', '''i'''和'''small'''还是有效的.

{{XMLElement|b|Bold|…}} <!-- not deprecated in HTML 4.01; not included in XHTML 2.0 which is in draft stage -->
:在可能的情况下，将字体设置成'''粗体'''。（等效的CSS是：<code>{font-weight: bold}</code>。）<code><strong>...</strong></code>在可视的浏览器中有相同的效果，但是有更强的语义。
:'''B'''在''[[#HTMLDRAFT12|HTML Internet Draft 1.2]]''中定义，并且在[[#HTML20|HTML 2.0]]中'''标准化'''，目前仍在使用。

=== 图形和对象 ===
{{Anchor|img|img_tag}}{{XMLElement|img|Image|...|end=no}}
:<code>src</code>屬性指定[[圖像|圖像]]的URL。<code>alt</code>屬性提供圖像的替代文字。IMG由[[馬克·安德森|馬克·安德森]]所提出並實作在[[NCSA_Mosaic|NCSA Mosaic]]網頁瀏覽器<ref>{{citation |url=http://1997.webhistory.org/www.lists/www-talk.1993q1/0182.html |title=WWW-Talk Jan-Mar 1993: proposed new tag: IMG |publisher=1997.webhistory.org |date= |accessdate=2012-03-26 |archive-date=2012-03-13 |archive-url=https://web.archive.org/web/20120313081738/http://1997.webhistory.org/www.lists/www-talk.1993q1/0182.html |dead-url=no }}</ref>。
:'''IMG'''在''[[#HTMLDRAFT12|HTML Internet Draft 1.2]]''中定义，并且在[[#HTML20|HTML 2.0]]中'''标准化'''，目前仍在使用。

== 非標準元素 ==
{{Main article|排版引擎比较_(非标准HTML)}}
{{Anchor|blink}}{{XMLElement|blink|Blink|...|deprecated=1}}
:文本閃爍特效。'''BLINK'''源自於[[Netscape_Navigator|Netscape Navigator]]。由於該特效可能會對{{tsl|en|Photosensitive epilepsy|急性光過敏症}}患者產生負面影響，在[[#HTML20|HTML 2.0]]後被列為過期或無效<ref name="WCAG">{{cite web|url=http://www.w3.org/TR/WCAG10/|title=Web Content Accessibility Guidelines 1.0|first1=Wendy|last1=Chisholm|first2=Gregg|last2=Vanderheiden|first3=Ian|last3=Jacobs|publisher=World Wide Web Consortium|date=1999-05-05|accessdate=2010-07-20|archive-date=2008-09-03|archive-url=https://web.archive.org/web/20080903224009/http://www.w3.org/TR/WCAG10/|dead-url=no}}</ref>。

{{Anchor|marquee}}{{XMLElement|marquee|Marquee|...|deprecated=1}}
:文本滾動特效。'''MARQUEE'''源自於[[Internet_Explorer|Internet Explorer]]。由於該特效可能會對{{tsl|en|Photosensitive epilepsy|急性光過敏症}}患者產生負面影響，在[[#HTML20|HTML 4.01]]後被列為過期或無效<ref name="WCAG" />。

== 注解 ==
{{clear}}
; {{code|lang=html|code=<<nowiki />!-- A Comment -->}}

在HTML中的 [[注解|注解]]（以及相近的XML, SGML, SHTML. ）語法與SGML相同。

不同於其它HTML標籤，注解不支援巢狀結構。

標籤： <code><!--注解一<!--注解二-->注解三--></code> 看起來會是這樣 <code>注解一<!--注解二</code> 後面拖著一段沒有被標籤包起來的文字： <code>注解三--></code>

注解可以出現在文件的任何地方，甚至可以在文件類型宣告之前。
（在<code><!DOCTYPE HTML></code>之前。）
HTML的解釋器會忽略注解，只要它們不在HTML標籤'''內'''。
這裡標籤'''內'''的意思並非指被一對開始標籤及結束標籤包住的區域內，
而是指在開始標籤'''內'''，或結束標籤、空元素標籤'''內'''。

然而並非所有瀏覽器、HTML編輯器都與HTML語法完全相容，在某些特殊情況會造成意料之外的結果。
約有5%的瀏覽器、HTML編輯器在處理注解標籤上有缺陷。（其中大部份是IE6. ）
僅管只有少數版本有此問題。

一些有關注解的相容性問題：

* 在文件類型宣告之前的注解、除了空白以外的字符會使IE6進入[[怪异模式|怪异模式]]。
* 為了相容在1995年前的瀏覽器，在<code>style</code>或<code>script</code>元素中的內容，有時會以注解的型式存在。
* [[BlueGriffon|BlueGriffon]] HTML編輯器1.7.x版本，會將不在<code><style> ... {comment tags} ...</style></code>標籤內的注解顯示在螢幕上。一些HTML編輯器也有相同的問題。

== 参考文献 ==
=== 引用 ===
{{Reflist|30em}}

=== 来源 ===
{{refbegin}}

==== HTML标准 ====
;<span id="HTML20">HTML 2.0:</span>
:{{cite web
  | author = Berners-Lee, T., and Connolly, D.
  | title = Hypertext Markup Language - 2.0 (RFC 1866)
  | publisher = [[IETF|IETF]]
  | date = November 1995
  | url = http://tools.ietf.org/html/rfc1866
  | format = html
  | accessdate = 2009-03-24
  | archive-date = 2011-08-27
  | archive-url = https://web.archive.org/web/20110827085509/http://tools.ietf.org/html/rfc1866
  | dead-url = no
  }}

;<span id="HTML32">HTML 3.2:</span>
:{{cite web
  | author = Raggett, D.
  | title = HTML 3.2 Reference Specification
  | publisher = [[W3C|W3C]]
  | date = 1997-01-14
  | url = http://www.w3.org/TR/REC-html32-19970114
  | format = html
  | accessdate = 2009-03-27
  | archive-date = 2009-03-12
  | archive-url = https://web.archive.org/web/20090312055454/http://www.w3.org/TR/REC-html32-19970114
  | dead-url = no
  }}

;<span id="HTML401">HTML 4.01:</span>
:{{cite web
  | author = Raggett, D., Le Hors, A., and Jacobs, I. (editors)
  | title = HTML 4.01 Specification
  | publisher = [[W3C|W3C]]
  | date = 1999-12-24
  | url = http://www.w3.org/TR/1999/REC-html401-19991224/
  | format = html
  | accessdate = 2009-03-24
  | archive-date = 2008-09-03
  | archive-url = https://web.archive.org/web/20080903150631/http://www.w3.org/TR/1999/REC-html401-19991224/
  | dead-url = no
  }}  ''(HTML 4.01 is the updated form of HTML 4.0.)''

;<span id="XHTML10">XHTML 1.0:</span>
:{{cite web
  | author = [[W3C|W3C]]
  | title = XHTML 1.0: The Extensible HyperText Markup Language (Second Edition)
  | publisher = [[W3C|W3C]]
  | date = 2000-01-26
  | url = http://www.w3.org/TR/2002/REC-xhtml1-20020801
  | format = html
  | accessdate = 2009-03-24
  | archive-date = 2009-03-31
  | archive-url = https://web.archive.org/web/20090331222829/http://www.w3.org/TR/2002/REC-xhtml1-20020801/
  | dead-url = no
  }}

;<span id="XHTML11">XHTML 1.1:</span>
:{{cite web
  | author = Altheim, M., and McCarron, S. (editors)
  | title = XHTML 1.1 - Module-based XHTML
  | publisher = [[W3C|W3C]]
  | date = 2001-05-31
  | url = http://www.w3.org/TR/2001/REC-xhtml11-20010531/
  | format = html
  | accessdate = 2009-03-25
  | archive-date = 2009-03-31
  | archive-url = https://web.archive.org/web/20090331225102/http://www.w3.org/TR/2001/REC-xhtml11-20010531/
  | dead-url = no
  }}

==== 其他资源 ====
;''<span id="HTMLTAGS">HTML Tags:</span>''
:{{cite web
  | author = Berners-Lee, T.
  | title = HTML Tags
  | date = 1992-11-03
  | url = http://www.w3.org/History/19921103-hypertext/hypertext/WWW/MarkUp/Tags.html
  | format = html
  | accessdate = 2009-03-28
  | archive-date = 2010-01-31
  | archive-url = https://web.archive.org/web/20100131184344/http://www.w3.org/History/19921103-hypertext/hypertext/WWW/MarkUp/Tags.html
  | dead-url = no
  }}  ''(Part of the first published description of HTML.)''

;''<span id="HTMLDRAFT12">HTML Internet Draft 1.2:</span>''
:{{cite web
  | author = Berners-Lee, T., and Connolly, D.
  | title = Hypertext Markup Language (HTML)
  | date = June 1993
  | url = http://www.w3.org/MarkUp/draft-ietf-iiir-html-01.txt
  | format = text
  | accessdate = 2009-03-28
  | archive-date = 2009-04-15
  | archive-url = https://web.archive.org/web/20090415045944/http://www.w3.org/MarkUp/draft-ietf-iiir-html-01.txt
  | dead-url = no
  }}

;''<span id="HTML30">HTML 3.0 Drafts:</span>''
:{{cite web
  | author = Raggett, D.
  | title = HyperText Markup Language Specification Version 3.0 (draft)
  | date = 1995-03-24
  | url = http://www.w3.org/MarkUp/html3/CoverPage.html
  | format = html
  | accessdate = 2009-04-18
  | archive-date = 2009-04-16
  | archive-url = https://web.archive.org/web/20090416021811/http://www.w3.org/MarkUp/html3/CoverPage.html
  | dead-url = no
  }}  ''(This is the final draft of HTML 3.0, which expired without being developed further.)''

;''<span id="HTMLTABLES">HTML Tables:</span>''
:{{cite web
  | author = D. Raggett
  | title = HTML Tables
  | work = RFC 1942
  | publisher = [[IETF|IETF]]
  | date = May 1996
  | url = http://www.rfc-editor.org/cgi-bin/rfcdoctype.pl?loc=RFC&letsgo=1942&type=http&file_format=txt
  | format = text
  | accessdate = 2009-03-22
  | deadurl = yes
  | archiveurl = https://web.archive.org/web/20050505112439/http://www.rfc-editor.org/cgi-bin/rfcdoctype.pl?loc=RFC
  | archivedate = 2005-05-05
  }}

;<span id="XML10">XML 1.0:</span>
:{{cite web
  | author = Bray, T, Paoli, J, Sperberg-McQueen, CM, Maler, E and Yergeau, F (editors)
  | title = Extensible Markup Language (XML) 1.0 (Fifth Edition)
  | publisher = [[W3C|W3C]]
  | date = 2008-11-26
  | url = http://www.w3.org/TR/2008/REC-xml-20081126/
  | format = html
  | accessdate = 2009-03-20
  | archive-date = 2009-04-01
  | archive-url = https://web.archive.org/web/20090401070153/http://www.w3.org/TR/2008/REC-xml-20081126/
  | dead-url = no
  }} 

;<span id="CSS1">CSS:</span>
:{{cite web
  | author = Lie, H.W. and Bos, B.
  | title = Cascading Style Sheets, level 1 (revised 2008-04-11)
  | publisher = [[W3C|W3C]]
  | date = 2008-04-11
  | url = http://www.w3.org/TR/CSS1/
  | format = html
  | accessdate = 2009-04-05
  | archive-date = 2009-04-01
  | archive-url = https://web.archive.org/web/20090401074955/http://www.w3.org/TR/CSS1/
  | dead-url = no
  }}
{{refend}}

== 外部链接 ==
* HTML 4.01（1999年12月24日）： [http://www.w3.org/TR/html401/index/elements.html 元素]{{Wayback|url=http://www.w3.org/TR/html401/index/elements.html |date=20090724033050 }}和[http://www.w3.org/TR/html401/index/attributes.html 屬性]{{Wayback|url=http://www.w3.org/TR/html401/index/attributes.html |date=20080903170148 }}
* [[HTML5|HTML5]]（2014年10月28日）：[http://www.w3.org/TR/html5/index.html 元素和屬性]{{Wayback|url=http://www.w3.org/TR/html5/index.html |date=20170815183909 }}

[[Category:HTML元素|]]