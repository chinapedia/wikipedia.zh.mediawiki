{{多個問題|
{{cleanup-jargon|time=2016-09-05T00:56:38+00:00}}
{{roughtranslation|time=2016-09-05T00:56:38+00:00}}
}}
{{TA
|G1=IT
}}
{{HTTP}}
'''HTTP头字段'''（{{lang-en|HTTP header fields}}）是指在[[超文本传输协议|超文本传输协议]]（HTTP）的请求和响应消息中的消息头部分。它们定义了一个超文本传输协议事务中的操作参数。HTTP头部字段可以自己根据需要定义，因此可能在 Web 服务器和浏览器上发现非标准的头字段。

== 基本格式 ==
协议头的字段，是在请求（request）或响应（response）行（一条消息的第一行内容）之后传输的。协议头的字段是以明文的[[字符串|字符串]]格式传输，是以冒号分隔的键名与键值对，以回车(CR)加换行(LF)符号序列结尾。协议头部分的结尾以一个空白字段标识，结果就是，也就是传输两个连续的CR+LF。在历史上，很长的行曾经可能以多个短行的形式传输；在下一行的开头，输出一个空格(SP)或者一个水平制表符(HT)，表示它是一个后续行。在如今，这种换行形式已经被废弃<ref><cite class="citation web" contenteditable="false">[[rfc:7230#section-3.2.4|"Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing"]]. ietf.org<span class="reference-accessdate">. </span></cite></ref>。

==类型==
HTTP 头字段根据实际用途被分为以下 4 种类型：
*通用头字段({{lang-en|General Header Fields}})
*请求头字段({{lang-en|Request Header Fields}})
*响应头字段({{lang-en|Response Header Fields}})
*实体头字段({{lang-en|Entity Header Fields}})

== 字段名 ==
在 RFC 7230、RFC 7231、RFC 7232、RFC 7233、RFC 7234 和 RFC 7235 中，对一组核心字段进行了标准化。有一份对于这些字段的官方的登记册，以及 一系列的补充规范 ，由互联网号码分配局（IANA）维护。各个应用程序也可以自行定义额外的字段名字及相应的值。[http://www.iana.org/assignments/message-headers/message-headers.xml#perm-headers 头字段的永久登记表]{{Wayback|url=http://www.iana.org/assignments/message-headers/message-headers.xml#perm-headers |date=20140726204039 }}和[http://www.iana.org/assignments/message-headers/message-headers.xml#prov-headers 临时登记表]{{Wayback|url=http://www.iana.org/assignments/message-headers/message-headers.xml#prov-headers |date=20140726204039 }}目前由[[IANA|IANA]]维护。其他的字段名称和允许的值可以由各应用程序定义。

按照惯例，非标准的协议头字段是在字段名称前加上<code>X-</code><ref>{{cite web |url=http://www.httpwatch.com/httpgallery/headers/ |title=2. HTTP Headers |author=Simtec Limited |date= |accessdate=2010-09-10 |archive-date=2010-09-21 |archive-url=https://web.archive.org/web/20100921113750/http://httpwatch.com/httpgallery/headers/ |dead-url=no }}</ref>前缀来标识。但这一惯例已在2012年6月被废弃，因为按照这种惯例，非标准字段变成标准字段时会引起很多不方便之处。<ref>{{cite web|url=http://tools.ietf.org/html/rfc6648|title=RFC 6648|author=Internet Engineering Task Force|date=2012-06-01|accessdate=2012-11-12|archive-date=2012-11-18|archive-url=https://web.archive.org/web/20121118082730/http://tools.ietf.org/html/rfc6648|dead-url=no}}</ref>以前曾经有的使用<code>Downgraded-</code>的限制也在2013年3月被解除。<ref>{{cite web |url=http://www.iana.org/assignments/message-headers/message-headers.xml |title=Message Headers |publisher=Iana.org |date=2014-06-11 |accessdate=2014-06-12 |archive-date=2014-07-26 |archive-url=https://web.archive.org/web/20140726204039/http://www.iana.org/assignments/message-headers/message-headers.xml |dead-url=no }}</ref>。

== 字段值 ==
某些字段中可以包含注释内容（例如User-Agent、Server和Via字段中)，这些注释内容可由应用程序忽略<ref>{{cite web |url=http://tools.ietf.org/html/rfc7230#section-3.2.6 |title=Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing |publisher=itef.org |date= |accessdate=2014-07-24 |archive-date=2016-12-14 |archive-url=https://web.archive.org/web/20161214023304/https://tools.ietf.org/html/rfc7230#section-3.2.6 |dead-url=no }}</ref>。

很多字段的值中可以包含带有权重的质量（quality，常被简称为Q）的键值对，指定的“重量”会在[[内容协商|内容协商]]的过程中使用<ref>{{cite web |url=http://tools.ietf.org/html/rfc7231#section-5.3.1 |title=Hypertext Transfer Protocol (HTTP/1.1): Semantics and Content |publisher=ietf.org |date= |accessdate=2014-07-24 |archive-date=2017-05-25 |archive-url=https://web.archive.org/web/20170525004653/https://tools.ietf.org/html/rfc7231#section-5.3.1 |dead-url=no }}</ref>。

== 大小限制 ==
标准中没有对每个协议头字段的名称和值的大小设置任何限制，也没有限制字段的个数。然而，出于实际场景及安全性的考虑，大部分的服务器、客户端和代理软件都会实施一些限制。例如，[[Apache|Apache]] 2.3服务器在默认情况下限制每个字段的大小不得超过8190字节，同时，单个请求中最多有100个头字段<ref><cite class="citation web" contenteditable="false">[https://web.archive.org/web/20120509104709/https://httpd.apache.org/docs/2.3/mod/core.html#limitrequestfieldsize "core - Apache HTTP Server"]. </cite></ref>。  

== 请求字段 ==
{| class="wikitable sortable" 

!协议头字段名 
! class="unsortable" |说明

! class="unsortable" | 示例
! 状态
|-
| Accept 
|能够接受的回应内容类型（Content-Types）。参见[[内容协商|内容协商]]。
| <code>Accept: text/plain</code> 
| 常设
|-
| Accept-Charset 
| 能够接受的字符集
 | <code>Accept-Charset: utf-8</code> 
| 常设
|- id="Accept-Encoding"
| Accept-Encoding 
|能够接受的编码方式列表。参考[[HTTP压缩|HTTP压缩]]。
|<code>Accept-Encoding: gzip, deflate</code> 
| 常设
|- id="Accept-Language"
| Accept-Language 
|能够接受的回应内容的自然语言列表。参考 [[内容协商|内容协商]] 。 
|<code>Accept-Language: en-US</code> 
| 常设
|- id="Accept-Datetime"
| Accept-Datetime 
|能够接受的按照时间来表示的版本 
|<code>Accept-Datetime: Thu, 31 May 2007 20:35:00 GMT</code> 
| 临时
|-
| Authorization 
|用于超文本传输协议的认证的认证信息 
|<code>Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==</code> 
| 常设
|-
| [[网页快照|Cache-Control]] 
|用来指定在这次的请求/响应链中的所有缓存机制 都必须 遵守的指令 
|<code>Cache-Control: no-cache</code> 
| 常设
|-
| Connection 
| 该浏览器想要优先使用的连接类型
<ref name="rfc7230_connection"><cite class="citation web" contenteditable="false">[[rfc:7230#section-6.1|"Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing"]]. </cite></ref>
| <code>Connection: keep-alive</code>
<code>Connection: Upgrade</code>
| 常设
|-
| Cookie 
|之前由服务器通过 Set- Cookie （下文详述）发送的一个 超文本传输协议[[Cookie|Cookie]]
|<code>Cookie: $Version=1; Skin=new;</code> 
| 常设: 标准
|- id="Content-Length"
| Content-Length 
|以 八位字节数组 （8位的字节）表示的请求体的长度 
|<code>Content-Length: 348</code> 
| 常设
|-
| Content-MD5 
|请求体的内容的二进制 MD5 散列值，以 Base64 编码的结果 
|<code>Content-MD5: Q2hlY2sgSW50ZWdyaXR5IQ==</code> 
| 过时的<ref name="#1"><cite class="citation web" contenteditable="false">[[rfc:7231#appendix-B|"Hypertext Transfer Protocol (HTTP/1.1): Semantics and Content"]]<span class="reference-accessdate">. </span></cite></ref>
|-
| Content-Type 
|请求体的 [[MIME|MIME]]类型 （用于POST和PUT请求中） 
|<code>Content-Type: application/x-www-form-urlencoded</code> 
| 常设
|-
| Date 
|发送该消息的日期和时间(按照 <nowiki>RFC 7231</nowiki> 中定义的"超文本传输协议日期"格式来发送) 
|<code>Date: Tue, 15 Nov 1994 08:12:31 GMT</code> 
| 常设
|-
| Expect 
|表明客户端要求服务器做出特定的行为 
|<code>Expect: 100-continue</code> 
| 常设
|-
| From 
|发起此请求的用户的邮件地址 
|<code>From: user@example.com</code> 
| 常设
|-
| Host 
|服务器的域名(用于虚拟主机 )，以及服务器所监听的[[传输控制协议|传输控制协议]]端口号。如果所请求的端口是对应的服务的标准端口，则端口号可被省略。 
<ref><cite class="citation web" contenteditable="false">[[rfc:7230#section-5.4|"Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing"]]. </cite></ref> 自超文件传输协议版本1.1（HTTP/1.1）开始便是必需字段。
| <code>Host: zh.wikipedia.org:80</code>
<code>Host: zh.wikipedia.org</code>
| 常设
|-
| If-Match 
|仅当客户端提供的实体与服务器上对应的实体相匹配时，才进行对应的操作。主要作用时，用作像 PUT 这样的方法中，仅当从用户上次更新某个资源以来，该资源未被修改的情况下，才更新该资源。 
|<code>If-Match: "737060cd8c284d8af7ad3082f209582d"</code> 
| 常设
|-
| If-Modified-Since 
|允许在对应的内容未被修改的情况下返回304未修改（ 304 Not Modified ） 
|<code>If-Modified-Since: Sat, 29 Oct 1994 19:43:31 GMT</code> 
| 常设
|-
| If-None-Match 
|允许在对应的内容未被修改的情况下返回304未修改（ 304 Not Modified ），参考 超文本传输协议 的[[HTTP_ETag|实体标记]] 
|<code>If-None-Match: "737060cd8c284d8af7ad3082f209582d"</code> 
| 常设
|-
| If-Range 
|如果该实体未被修改过，则向我发送我所缺少的那一个或多个部分；否则，发送整个新的实体 
|<code>If-Range: "737060cd8c284d8af7ad3082f209582d"</code> 
| 常设
|-
| style="white-space:nowrap" | If-Unmodified-Since 
|仅当该实体自某个特定时间已来未被修改的情况下，才发送回应。 
|<code>If-Unmodified-Since: Sat, 29 Oct 1994 19:43:31 GMT</code> 
| 常设
|-
| Max-Forwards 
|限制该消息可被代理及网关转发的次数。 
|<code>Max-Forwards: 10</code> 
| 常设
|-
| Origin 
|发起一个针对 跨来源资源共享 的请求（要求服务器在回应中加入一个‘访问控制-允许来源’（'Access-Control-Allow-Origin'）字段）。 
|<code>Origin: <nowiki>http://www.example-social-network.com</nowiki></code> 
| 常设: 标准
|-
| Pragma 
|与具体的实现相关，这些字段可能在请求/回应链中的任何时候产生多种效果。
|<code>Pragma: no-cache</code> 
| 常设但不常用
|-
| style="white-space:nowrap" | Proxy-Authorization 
|用来向代理进行认证的认证信息。 
|<code>Proxy-Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==</code> 
| 常设
|- id="range-request-header"
| <span id="Range" contenteditable="false"></span> Range 
|仅请求某个实体的一部分。字节偏移以0开始。参见[[字节服务|字节服务]]。 
|<code>Range: bytes=500-999</code> 
| 常设
|-
| [[HTTP參照位址|Referer]]<span contenteditable="false"> </span>[''[[sic|sic]]''] <ref>“引导者”（“referrer”）这个单词，在RFC 中被拼错了，因此在大部分的软件实现中也拼错了，以至于，错误的拼法成为了标准的用法，还被当成了正确的术语。</ref>
|表示浏览器所访问的前一个页面，正是那个页面上的某个链接将浏览器带到了当前所请求的这个页面。
|<code><nowiki>Referer: http://zh.wikipedia.org/wiki/Main_Page</nowiki></code> 
| 常设
|- id="te-request-header"
| TE 
|浏览器预期接受的传输编码方式：可使用回应协议头 Transfer-Encoding 字段中的值；另外还可用"trailers"（与"分块 "传输方式相关）这个值来表明浏览器希望在最后一个尺寸为0的块之后还接收到一些额外的字段。 
|<code>TE: trailers, [[DEFLATE|deflate]]</code> 
| 常设
|-
| User-Agent 
|浏览器的[[用户代理|浏览器身份标识字符串]]
|<code>User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:12.0) Gecko/20100101 Firefox/21.0</code> 
| 常设
|-
| Upgrade 
|要求服务器升级到另一个协议。 
|<code>Upgrade: HTTP/2.0, SHTTP/1.3, IRC/6.9, RTA/x11</code> 
| 常设
|-
| Via 
|向服务器告知，这个请求是由哪些代理发出的。 
|<code>Via: 1.0 fred, 1.1 example.com (Apache/1.1)</code> 
| 常设
|-
| Warning 
|一个一般性的警告，告知，在实体内容体中可能存在错误。 
|<code>Warning: 199 Miscellaneous warning</code> 
| 常设
|}

=== 常见的非标准请求字段 ===
{| class="wikitable sortable" style="width: 100%; clear: right; margin-bottom: 10px;"

!字段名 
! class="unsortable" |说明
! class="unsortable" |示例
|- id="Requested-With"
| style="white-space:nowrap" |X-Requested-With 
|主要用于标识 Ajax 及可扩展标记语言 请求。大部分的JavaScript框架会发送这个字段，且将其值设置为 XMLHttpRequest 
|<code>X-Requested-With: XMLHttpRequest</code>
|-
| [[请勿追踪|DNT]]<ref><cite class="citation web" contenteditable="false">[http://blog.sidstamm.com/2011/01/try-out-do-not-track-http-header.html "Try out the "Do Not Track" HTTP header"] {{Wayback|url=http://blog.sidstamm.com/2011/01/try-out-do-not-track-http-header.html |date=20110203051215 }}<span class="reference-accessdate">. </span></cite></ref> 
|请求某个网页应用程序停止跟踪某个用户。在火狐浏览器中，相当于X-Do-Not-Track协议头字段（自 Firefox/4.0 Beta 11 版开始支持）。[[Safari|Safari]] 和 [[Internet_Explorer|Internet Explorer]] 9 也支持这个字段。2011年3月7日，草案提交IETF。<ref>IETF [http://tools.ietf.org/html/draft-mayer-do-not-track-00 Do Not Track: A Universal Third-Party Web Tracking Opt Out] {{Wayback|url=http://tools.ietf.org/html/draft-mayer-do-not-track-00 |date=20160107015911 }} March 7, 2011</ref> 万维网协会 的跟踪保护工作组正在就此制作一项规范。<ref>W3C [http://www.w3.org/2011/tracking-protection/drafts/tracking-dnt.html Tracking Preference Expression (DNT)] {{Wayback|url=http://www.w3.org/2011/tracking-protection/drafts/tracking-dnt.html |date=20151231003129 }}, January 26, 2012</ref>
| <code>DNT: 1    (DNT启用)</code>
<code>DNT: 0    (DNT被禁用)</code>
|-
| style="white-space:nowrap" | [[X-Forwarded-For|X-Forwarded-For]]<ref><cite class="citation web" contenteditable="false">Amos Jeffries (2010-07-02). </cite></ref> 
|一个事实标准 ，用于标识某个通过超文本传输协议代理或负载均衡连接到某个网页服务器的客户端的原始互联网地址 
|<code>X-Forwarded-For: client1, proxy1, proxy2</code>
<code>X-Forwarded-For: 129.78.138.66, 129.78.64.103</code>
|-
| X-Forwarded-Host<ref><cite class="citation web" contenteditable="false">The Apache Software Foundation. [http://httpd.apache.org/docs/2.2/mod/mod_proxy.html#x-headers "mod_proxy - Apache HTTP Server Version 2.2"] {{Wayback|url=http://httpd.apache.org/docs/2.2/mod/mod_proxy.html#x-headers |date=20141109220742 }}<span class="reference-accessdate">. </span></cite></ref> 
| 一个事实标准 ，用于识别客户端原本发出的 <code>Host</code> 请求头部<ref>因为反向代理往往修改这个头部</ref>。
| <code>X-Forwarded-Host: zh.wikipedia.org:80</code>
<code>X-Forwarded-Host: zh.wikipedia.org</code>
|-
| X-Forwarded-Proto<ref><cite class="citation web" contenteditable="false">Dave Steinberg (2007-04-10). </cite></ref> 
|一个事实标准，用于标识某个超文本传输协议请求最初所使用的协议。<ref>在反向代理(负载均衡)上，即使最初发往该反向代理的请求类型是安全的超文本传输协议（HTTPS），该反向代理也仍然可能会使用超文本传输协议（HTTP）来与网页服务器通信。谷歌客户端在与谷歌服务器通信时会使用该协议头的一个替代形式（X-ProxyUser-Ip）。</ref> 
|<code>X-Forwarded-Proto: https</code>
|-
| Front-End-Https<ref><cite class="citation web" contenteditable="false">[http://technet.microsoft.com/en-us/library/aa997519(v=exchg.65).aspx "Helping to Secure Communication: Client to Front-End Server"] {{Wayback|url=http://technet.microsoft.com/en-us/library/aa997519(v=exchg.65).aspx |date=20160310065601 }}. 2006-07-27<span class="reference-accessdate">. </span></cite></ref> 
| 被微软的服务器和负载均衡器所使用的非标准头部字段。 
| <code>Front-End-Https: on</code>
|-
| X-Http-Method-Override<ref><cite class="citation web" contenteditable="false">[http://opensocial.github.io/spec/2.5.1/Core-API-Server.xml#rfc.section.2.1.1.1 "OpenSocial Core API Server Specification 2.5.1"] {{Wayback|url=http://opensocial.github.io/spec/2.5.1/Core-API-Server.xml#rfc.section.2.1.1.1 |date=20140917004052 }}<span class="reference-accessdate">. </span></cite></ref> 
|请求某个网页应用程序使用该协议头字段中指定的方法（一般是PUT或DELETE）来覆盖掉在请求中所指定的方法（一般是POST）。当某个浏览器或防火墙阻止直接发送PUT 或DELETE 方法时（注意，这可能是因为软件中的某个漏洞，因而需要修复，也可能是因为某个配置选项就是如此要求的，因而不应当设法绕过），可使用这种方式。 
|<code>X-HTTP-Method-Override: DELETE</code>
|-
| X-ATT-DeviceId<ref><cite class="citation web" contenteditable="false">[http://developer.att.com/developer/forward.jsp?passedItemId=5300270 "ATT Device ID"] {{Wayback|url=http://developer.att.com/developer/forward.jsp?passedItemId=5300270 |date=20120216021736 }}<span class="reference-accessdate">. </span></cite></ref> 
| 使服务器更容易解读AT&T设备User-Agent字段中常见的设备型号、固件信息。
| <code>X-Att-Deviceid: GT-P7320/P7320XXLPG</code>
|-
| X-Wap-Profile<ref><cite class="citation web" contenteditable="false">[http://www.developershome.com/wap/detection/detection.asp?page=profileHeader "WAP Profile"] {{Webarchive|url=https://archive.is/20120729005811/http://www.developershome.com/wap/detection/detection.asp?page=profileHeader |date=2012-07-29 }}<span class="reference-accessdate">. </span></cite></ref> 
| 链接到互联网上的一个XML文件，其完整、仔细地描述了正在连接的设备。右侧以为AT&T Samsung Galaxy S2提供的XML文件为例。
| <code>x-wap-profile: http://wap.samsungmobile.com/uaprof/SGH-I777.xml</code>
|-
| Proxy-Connection<ref><cite class="citation web" contenteditable="false">[http://homepage.ntlworld.com/jonathan.deboynepollard/FGA/web-proxy-connection-header.html "The Proxy-Connection: header is a mistake in how some web browsers use HTTP."] {{Wayback|url=http://homepage.ntlworld.com/jonathan.deboynepollard/FGA/web-proxy-connection-header.html |date=20130529075137 }}</cite></ref> 
|该字段源于早期超文本传输协议版本实现中的错误。与标准的连接（Connection）字段的功能完全相同。 
|<code>Proxy-Connection: keep-alive</code>
|-
| X-Csrf-Token<ref><cite class="citation web" contenteditable="false">[https://help.sap.com/saphelp_nw74/helpdata/en/b3/5c22518bc72214e10000000a44176d/content.htm "SAP Cross-Site Request Forgery Protection"] {{Wayback|url=https://help.sap.com/saphelp_nw74/helpdata/en/b3/5c22518bc72214e10000000a44176d/content.htm |date=20151208173157 }}. </cite></ref> 
| 用于防止 [[跨站请求伪造|跨站请求伪造]]。 辅助用的头部有 <code>X-CSRFToken</code><ref><cite class="citation web" contenteditable="false">[https://docs.djangoproject.com/en/1.7/ref/contrib/csrf/ "Django Cross Site Request Forgery protection"] {{Wayback|url=https://docs.djangoproject.com/en/1.7/ref/contrib/csrf/ |date=20150120134602 }}. </cite></ref> 或 <code>X-XSRF-TOKEN</code><ref><cite class="citation web" contenteditable="false">[https://docs.angularjs.org/api/ng/service/$http#cross-site-request-forgery-xsrf-protection "Angular Cross Site Request Forgery (XSRF) Protection"] {{Wayback|url=https://docs.angularjs.org/api/ng/service/$http#cross-site-request-forgery-xsrf-protection |date=20151029221524 }}. </cite>。</ref> 
| <code>X-Csrf-Token: i8XNjC4b8KVok4uw5RftR38Wgp2BFwql</code>
|}

== 回应字段 ==
{| class="wikitable sortable" style="width: 100%"

! 字段名
! class="unsortable" |说明
! class="unsortable" | 例子
! 状态
|-
|Access-Control-Allow-Origin 
|指定哪些网站可参与到跨来源资源共享过程中 
|<code>Access-Control-Allow-Origin: *</code> 
| 临时
|- id="accept-patch-response-header"
| Accept-Patch<ref><cite class="citation web" contenteditable="false">[[rfc:5789#section-3.1|"RFC 5789"]]<span class="reference-accessdate">. </span></cite></ref> 
| 指定服务器支持的文件格式类型。
| <code>Accept-Patch: text/example;charset=utf-8</code> 
| 常设
|- id="accept-ranges-response-header"
| Accept-Ranges 
|这个服务器支持哪些种类的部分内容范围 
|<code>Accept-Ranges: bytes</code> 
| 常设
|-
| Age 
|这个对象在代理缓存中存在的时间，以秒为单位 
|<code>Age: 12</code> 
| 常设
|-
| Allow 
|对于特定资源有效的动作。针对HTTP/405这一错误代码而使用 
|<code>Allow: GET, HEAD</code> 
| 常设
|-
| [[网页快照|Cache-Control]] 
|向从服务器直到客户端在内的所有缓存机制告知，它们是否可以缓存这个对象。其单位为秒 
|<code>Cache-Control: max-age=3600</code> 
| 常设
|-
| Connection 
| 针对该连接所预期的选项
<ref name="rfc7230_connection"><cite class="citation web" contenteditable="false">[[rfc:7230#section-6.1|"Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing"]]. </cite></ref> 
| <code>Connection: close</code> 
| 常设
|-
| Content-Disposition<ref><cite class="citation web" contenteditable="false">[[rfc:6266|"RFC 6266"]]<span class="reference-accessdate">. </span></cite></ref>  
| 一个可以让客户端下载文件并建议文件名的头部。文件名需要用双引号包裹。
| <code>Content-Disposition: attachment; filename="fname.ext"</code> 
| 常设
|-
| Content-Encoding 
|在数据上使用的编码类型。参考 超文本传输协议压缩 。 
|<code>Content-Encoding: gzip</code> 
| 常设
|-
| Content-Language 
| 内容所使用的语言
<ref>[[rfc:7231#section-3.1.3.2|https://tools.ietf.org/html/rfc7231#section-3.1.3.2 {{Wayback]]<span>[http://www.123cha.com/ip/?q=  <font size="1"><font color="black">(</font><u><font color="#CC0000">123cha</font></u><font color="black">)</font></font>] {{Wayback|url=http://www.123cha.com/ip/?q= |date=20151107051957 }}</span></ref> 
| <code>Content-Language: da</code> 
| 常设
|- id="content-length-response-header"
| Content-Length 
|回应消息体的长度，以 字节 （8位为一字节）为单位 
|<code>Content-Length: 348</code> 
| 常设
|-
| Content-Location 
|所返回的数据的一个候选位置 
|<code>Content-Location: /index.htm</code> 
| 常设
|-
| Content-MD5 
|回应内容的二进制 MD5 散列，以 Base64 方式编码 
|<code>Content-MD5: Q2hlY2sgSW50ZWdyaXR5IQ==</code> 
| 过时的<ref name="#1"/>
|- id="content-range-response-header"
| Content-Range 
|这条部分消息是属于某条完整消息的哪个部分 
|<code>Content-Range: bytes 21010-47021/47022</code> 
| 常设
|-
| Content-Type 
|当前内容的[[MIME|MIME]]类型 
|<code>Content-Type: text/html; charset=utf-8</code> 
| 常设
|-
| Date 
|此条消息被发送时的日期和时间(按照 <nowiki>RFC 7231</nowiki> 中定义的“超文本传输协议日期”格式来表示) 
|<code>Date: Tue, 15 Nov 1994 08:12:31 GMT</code> 
| 常设
|-
| [[HTTP_ETag|ETag]] 
|对于某个资源的某个特定版本的一个标识符，通常是一个 消息散列 
|<code>ETag: "737060cd8c284d8af7ad3082f209582d"</code> 
| 常设
|- id="Expires"
| Expires 
|指定一个日期/时间，超过该时间则认为此回应已经过期 
|<code>Expires: Thu, 01 Dec 1994 16:00:00 GMT</code> 
| 常设: 标准
|-
| Last-Modified 
|所请求的对象的最后修改日期(按照 <nowiki>RFC 7231</nowiki> 中定义的“超文本传输协议日期”格式来表示) 
|<code>Last-Modified: Tue, 15 Nov 1994 12:45:26 GMT</code> 
| 常设
|-
| Link 
|用来表达与另一个资源之间的类型关系，此处所说的类型关系是在 <nowiki>RFC 5988</nowiki> 中定义的 
|<code>Link: </feed>; rel="alternate"</code><ref name="google_canonical">[http://support.google.com/webmasters/bin/answer.py?hl=en&answer=139394 Indicate the canonical version of a URL by responding with the Link rel="canonical" HTTP header] {{Wayback|url=http://support.google.com/webmasters/bin/answer.py?hl=en&answer=139394 |date=20130606051306 }} Retrieved: 2012-02-09</ref> 
| 常设
|-
| [[HTTP_Location|Location]] 
|用来 进行重定向，或者在创建了某个新资源时使用。 
|<code>Location: <nowiki>http://www.w3.org/pub/WWW/People.html</nowiki></code> 
| 常设
|-
| P3P 
| 用于支持设置[[P3P|P3P]]策略，标准格式为“<code>P3P:CP="your_compact_policy"</code>”。然而P3P规范并不成功，<ref>W3C [http://www.w3.org/P3P P3P Work Suspended] {{Wayback|url=http://www.w3.org/P3P |date=20080903150127 }}</ref>大部分现代浏览器没有完整实现该功能，而大量网站也将该值设为假值，从而足以用来欺骗浏览器的P3P插件功能并授权给第三方Cookies。 
| <code>P3P: CP="This is not a P3P policy! </code><code>See <nowiki>http://www.google.com/support/accounts/bin/answer.py?hl=en&answer=151657</nowiki> for more info."</code> 
| 常设
|-
| Pragma 
|与具体的实现相关，这些字段可能在请求/回应链中的任何时候产生多种效果。 
|<code>Pragma: no-cache</code> 
| 常设
|-
| Proxy-Authenticate 
|要求在访问代理时提供身份认证信息。 
|<code>Proxy-Authenticate: Basic</code> 
| 常设
|- id="Public-Key-Pins"
| [[HTTP公钥固定|Public-Key-Pins]]<ref><cite class="citation web" contenteditable="false">[http://www.rfc-editor.org/rfc/rfc7469.txt "Public Key Pinning Extension for HTTP"] {{Wayback|url=http://www.rfc-editor.org/rfc/rfc7469.txt |date=20150422224442 }}. </cite></ref> 
|用于缓解[[中间人攻击|中间人攻击]]，声明网站认证使用的[[传输层安全协议|传输层安全协议]]证书的散列值 
|<code>Public-Key-Pins: max-age=2592000; pin-sha256="E9CZ9INDbd+2eRQozYqqbQ2yXLVKB9+xcprMF+44U1g=";</code> 
| 常设
|- id="Refresh"
| Refresh 
| 用于设定可定时的重定向跳转。右边例子设定了5秒后跳转至“<code><nowiki>http://www.w3.org/pub/WWW/People.html</nowiki></code>”。  
| <code>Refresh: 5; url=<nowiki>http://www.w3.org/pub/WWW/People.html</nowiki></code> 
| 专利并非标准
Netscape实现的扩展，但大部分网页浏览器也支持。
|-
| Retry-After 
|如果某个实体临时不可用，则，此协议头用来告知客户端日后重试。其值可以是一个特定的时间段(以秒为单位)或一个超文本传输协议日期。 <ref><cite class="citation web" contenteditable="false">[[rfc:7231#section-7.1.3|"Hypertext Transfer Protocol (HTTP/1.1): Semantics and Content"]]<span class="reference-accessdate">. </span></cite></ref>
|
* Example 1: <code>Retry-After: 120</code>
* Example 2: <code>Retry-After: Fri, 07 Nov 2014 23:59:59 GMT</code>
|
常设
|-
| Server 
|服务器的名字 
|<code>Server: Apache/2.4.1 (Unix)</code> 
| 常设
|-
| id="innerlink_set-cookie" | Set-Cookie 
|[[Cookie|HTTP cookie]] 
| <code>Set-Cookie: UserID=JohnDoe; Max-Age=3600; Version=1</code> 
| 常设: 标准
|-
| Status 
|通用网关接口 协议头字段，用来说明当前这个超文本传输协议回应的 状态 。普通的超文本传输协议回应，会使用单独的“状态行”（"Status-Line"）作为替代，这一点是在 <nowiki>RFC 7230</nowiki> 中定义的。 <ref><cite class="citation web" contenteditable="false">[[rfc:7230#section-3.1.2|"Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing"]]<span class="reference-accessdate">. </span></cite></ref>
| <code>Status: 200 OK </code> 
| Not listed as a [http://www.iana.org/assignments/message-headers/message-headers.xml registered field name]{{Wayback|url=http://www.iana.org/assignments/message-headers/message-headers.xml |date=20140726204039 }}
|-
| style="white-space:nowrap" | [[HTTP严格传输安全|Strict-Transport-Security]] 
| HTTP 严格传输安全这一头部告知客户端缓存这一强制 HTTPS 策略的时间，以及这一策略是否适用于其子域名。
| <code>Strict-Transport-Security: max-age=16070400; includeSubDomains</code> 
| 常设: 标准
|- id="trailer-response-header"
| Trailer 
| 这个头部数值指示了在这一系列头部信息由由[[分块传输编码|分块传输编码]]编码。
| <code>Trailer: Max-Forwards</code> 
| 常设
|- id="transfer-encoding-response-header"
| Transfer-Encoding 
|用来将实体安全地传输给用户的编码形式。当前定义的方法包括：分块（chunked）、compress、deflate、gzip和identity。 
|<code>Transfer-Encoding: chunked</code> 
| 常设
|-
| Upgrade 
|要求客户端升级到另一个协议。 
|<code>Upgrade: HTTP/2.0, SHTTP/1.3, IRC/6.9, RTA/x11</code> 
| 常设
|-
| Vary 
|告知下游的代理服务器，应当如何对未来的请求协议头进行匹配，以决定是否可使用已缓存的回应内容而不是重新从原始服务器请求新的内容。 
|<code>Vary: *</code> 
| 常设
|-
| Via 
|告知代理服务器的客户端，当前回应是通过什么途径发送的。 
|<code>Via: 1.0 fred, 1.1 example.com (Apache/1.1)</code> 
| 常设
|-
| Warning 
|一般性的警告，告知在实体内容体中可能存在错误。 
|<code>Warning: 199 Miscellaneous warning</code> 
| 常设
|- id="www-authenticate-response-header"
| WWW-Authenticate 
|表明在请求获取这个实体时应当使用的认证模式。 
|<code>WWW-Authenticate: Basic</code> 
| 常设
|- id="Frame-Options"
| X-Frame-Options<ref><cite class="citation web" contenteditable="false">[[rfc:7034|"HTTP Header Field X-Frame-Options"]]. </cite></ref> 
| [[点击劫持|点击劫持]]保护：
* <code>deny</code>：该页面不允许在 frame 中展示，即使是同域名内。
* <code>sameorigin</code>：该页面允许同域名内在 frame 中展示。
* <code>allow-from ''uri''</code>：该页面允许在指定uri的 frame 中展示。
* <code>allowall</code>：允许任意位置的frame显示，非标准值。
| <code> X-Frame-Options: deny</code> 
| 过时的<ref><cite class="citation web" contenteditable="false">[http://www.w3.org/TR/CSP11/#frame-ancestors-and-frame-options "Content Security Policy Level 2"] {{Wayback|url=http://www.w3.org/TR/CSP11/#frame-ancestors-and-frame-options |date=20140822020247 }}<span class="reference-accessdate">. </span></cite></ref>
|}

=== 常见的非标准回应字段 ===
{| class="wikitable sortable" style="width: 100%; clear: right; margin-bottom: 10px;"

!字段名 
! class="unsortable" |说明
! class="unsortable" | 示例
|-
| X-XSS-Protection<ref><cite class="citation web" contenteditable="false">Eric Lawrence (2008-07-02). </cite></ref> 
|跨站脚本攻击 （XSS）过滤器 
|<code class="nowrap">X-XSS-Protection: 1; mode=block</code>
|-
| <span class="nowrap" contenteditable="false">Content-Security-Policy</span>, <span class="nowrap" contenteditable="false">''X-Content-Security-Policy''</span><span class="nowrap" contenteditable="false"></span>, <span class="nowrap" contenteditable="false">''X-WebKit-CSP''</span><span class="nowrap" contenteditable="false"></span><ref><cite class="citation web" contenteditable="false">[http://www.w3.org/TR/CSP/ "Content Security Policy"] {{Wayback|url=http://www.w3.org/TR/CSP/ |date=20170226041416 }}. </cite></ref>
|[[内容安全策略|内容安全策略]]定义。 
|<code class="nowrap">X-WebKit-CSP: default-src 'self'</code>

|-
| style="white-space:nowrap" | X-Content-Type-Options<ref><cite class="citation web" contenteditable="false">Eric Lawrence (2008-09-03). </cite></ref> 
| 唯一允许的数值为"nosniff"，防止 [[Internet_Explorer|Internet Explorer]] 对文件进行MIME类型嗅探。这也对 [[Google_Chrome|Google Chrome]] 下载扩展时适用。<ref><cite class="citation web" contenteditable="false">[http://code.google.com/chrome/extensions/hosting.html "Hosting - Google Chrome Extensions - Google Code"] {{Wayback|url=http://code.google.com/chrome/extensions/hosting.html |date=20120731052653 }}<span class="reference-accessdate">. </span></cite></ref> 
| <code class="nowrap"> X-Content-Type-Options: nosniff </code>
|- id="Powered-By"
| X-Powered-By<ref><cite class="citation web" contenteditable="false">[http://stackoverflow.com/questions/1288338/why-does-asp-net-framework-add-the-x-powered-byasp-net-http-header-in-response "Why does ASP.] {{Wayback|url=http://stackoverflow.com/questions/1288338/why-does-asp-net-framework-add-the-x-powered-byasp-net-http-header-in-response |date=20090820163646 }}</cite></ref> 
|表明用于支持当前网页应用程序的技术（例如：PHP）（版本号细节通常放置在 X-Runtime 或 X-Version 中） 
|<code class="nowrap">X-Powered-By: PHP/5.4.0</code>
|-
| X-UA-Compatible<ref><cite class="citation web" contenteditable="false">[http://msdn.microsoft.com/en-us/library/ie/cc288325%28v=vs.85%29.aspx#SetMode "Defining Document Compatibility: Specifying Document Compatibility Modes"] {{Wayback|url=http://msdn.microsoft.com/en-us/library/ie/cc288325%28v=vs.85%29.aspx#SetMode |date=20150403021430 }}. 2011-04-01<span class="reference-accessdate">. </span></cite></ref> 
| 推荐指定的渲染引擎（通常是向后兼容模式）来显示内容。也用于激活 Internet Explorer 中的 [[Google_Chrome_Frame|Chrome Frame]]。
| <code class="nowrap">X-UA-Compatible: IE=EmulateIE7</code><br>
<code class="nowrap">X-UA-Compatible: IE=edge</code><br>
<code class="nowrap">X-UA-Compatible: Chrome=1</code>
|-
|X-Content-Duration<ref><cite class="citation web" contenteditable="false">[https://developer.mozilla.org/en-US/docs/Web/HTTP/Configuring_servers_for_Ogg_media#Serve_X-Content-Duration_headers "Configuring servers for Ogg media"] {{Wayback|url=https://developer.mozilla.org/en-US/docs/Web/HTTP/Configuring_servers_for_Ogg_media#Serve_X-Content-Duration_headers |date=20150103235317 }}. 2014-05-26<span class="reference-accessdate">. </span></cite></ref> 
|指出音视频的长度，单位为秒。只受Gecko内核浏览器支持。
| <code class="nowrap">X-Content-Duration: 42.666</code>
|-
|Feature-Policy
|管控特定應用程式介面
| <code class="nowrap">Feature-Policy: vibrate 'none'; geolocation 'none'</code>
|-
|Permissions-Policy
|管控特定應用程式介面為W3C標準 替代Feature-Policy
| <code class="nowrap">Permissions-Policy: microphone=(),geolocation=(),camera=()</code>
|-
|X-Permitted-Cross-Domain-Policies
|Flash的跨網站攻擊防禦
| <code class="nowrap">X-Permitted-Cross-Domain-Policies: none</code>
|-
|Referrer-Policy
|保護資訊洩漏
| <code class="nowrap">Referrer-Policy: origin-when-cross-origin</code>
|-
|Expect-CT
|防止欺騙 SSL，單位為秒
| <code class="nowrap">Expect-CT: max-age=31536000, enforce</code>
|}

== 参见 ==
* [[cookie|cookie]]

== 参考文献 ==
{{Reflist|colwidth = 30em}}

== 外部链接 ==
* [http://www.iana.org/assignments/message-headers/message-headers.xml#perm-headers|Message Headers: Permanent Message Header Field Names]{{Wayback|url=http://www.iana.org/assignments/message-headers/message-headers.xml#perm-headers{{!}}Message |date=20140726204039 }}
* RFC 6638: 废除给非标准参数加上前缀 X-
* RFC 7230: Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing
* RFC 7231: Hypertext Transfer Protocol (HTTP/1.1): Semantics and Content
* RFC 7232: Hypertext Transfer Protocol (HTTP/1.1): Conditional Requests
* RFC 7233: Hypertext Transfer Protocol (HTTP/1.1): Range Requests
* RFC 7234: Hypertext Transfer Protocol (HTTP/1.1): Caching
* RFC 7235: Hypertext Transfer Protocol (HTTP/1.1): Authentication
* RFC 2965: IETF HTTP State Management Mechanism RFC
* [https://web.archive.org/web/20071008002114/http://www.and.org/texts/server-http HTTP/1.1 headers from a web server point of view]
* [https://web.archive.org/web/20151101110820/http://myhttp.info/ HTTP Request Header Viewer]
* [http://viewdns.info/httpheaders/ HTTP Response Header Viewer]{{Wayback|url=http://viewdns.info/httpheaders/ |date=20151020002101 }} - Retrieves the HTTP response headers of any domain.
* [http://blogs.msdn.com/b/ieinternals/archive/2009/06/30/internet-explorer-custom-http-headers.aspx Internet Explorer and Custom HTTP Headers - EricLaw's IEInternals - Site Home - MSDN Blogs]{{Wayback|url=http://blogs.msdn.com/b/ieinternals/archive/2009/06/30/internet-explorer-custom-http-headers.aspx |date=20110318090956 }}
* [https://web.archive.org/web/20130531122403/http://crwlr.net/ crwlr.net - HTTP Header index]
* [https://web.archive.org/web/20121122100219/http://www.privacyinfo.org/http-headers HTTP Header with Privacyinfo] - Display your HTTP request and response headers
[[Category:HTTP|Category:HTTP]]