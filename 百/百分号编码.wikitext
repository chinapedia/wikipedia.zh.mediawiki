{{noteTA
|G1=IT
}}
'''百分号编码'''（{{lang-en|Percent-encoding}}），又稱：'''URL编码'''（{{lang|en|URL encoding}}）是特定上下文的[[统一资源定位符|统一资源定位符]] （URL）的编码机制，实际上也适用于[[统一资源标志符|统一资源标志符]]（URI）的编码。也用于为 ''application/x-www-form-urlencoded''  [[MIME|MIME]]准备数据，因为它用于通过[[HTTP|HTTP]]的请求操作（request）提交[[HTML|HTML]]表单数据。

== URI的百分号编码 ==
=== URI的字符类型 ===
URI所允许的字符分作'''保留'''与'''未保留'''。'''保留'''字符是那些具有特殊含义的字符，例如：[[斜线|斜线]]字符用于URL（或URI）不同部分的分界符；'''未保留'''字符没有这些特殊含义。百分号编码把保留字符表示为特殊字符序列。上述情形随URI与URI的不同版本规格会有轻微的变化。

{| cellpadding="6px" border=1 style="border:1px solid #C0C0C0; border-collapse:collapse; background-color:#FFFFFF;"
|+{{IETF RFC|3986}} section 2.2 ''保留字符'' (2005年1月)
|-
| <code>[[叹号|!]]</code> || <code>[[星號|<nowiki>*</nowiki>]]</code> || <code>[[撇号|']]</code> || <code>[[bracket|(]]</code> || <code>[[bracket|)]]</code> || <code>[[分號|;]]</code> || <code>[[冒号|:]]</code> || <code>[[@|@]]</code> || <code>[[&|&]]</code> || <code>[[equal_sign|=]]</code> || <code>[[加号与减号|+]]</code> || <code>[[$|$]]</code> || <code>[[逗號|,]]</code> || <code>[[斜線|/]]</code> || <code>[[问号|?]]</code> || <code>[[number_sign|#]]</code> || <code>[[bracket|[]]</code> || <code>[[bracket|<nowiki>]</nowiki>]]</code>
|}

{| cellpadding="6px" border=1 style="border:1px solid #C0C0C0; border-collapse:collapse; background-color:#FFFFFF;"
|+{{IETF RFC|3986}} section 2.3 ''未保留字符'' (2005年1月)
|-
| <code>[[A|A]]</code> || <code>[[B|B]]</code> || <code>[[C|C]]</code> || <code>[[D|D]]</code> || <code>[[E|E]]</code> || <code>[[F|F]]</code> || <code>[[G|G]]</code> || <code>[[H|H]]</code> || <code>[[I|I]]</code> || <code>[[J|J]]</code> || <code>[[K|K]]</code> || <code>[[L|L]]</code> || <code>[[M|M]]</code> || <code>[[N|N]]</code> || <code>[[O|O]]</code> || <code>[[P|P]]</code> || <code>[[Q|Q]]</code> || <code>[[R|R]]</code> || <code>[[S|S]]</code> || <code>[[T|T]]</code> || <code>[[U|U]]</code> || <code>[[V|V]]</code> || <code>[[W|W]]</code> || <code>[[X|X]]</code> || <code>[[Y|Y]]</code> || <code>[[Z|Z]]</code>
|-
| <code>[[a|a]]</code> || <code>[[b|b]]</code> || <code>[[c|c]]</code> || <code>[[d|d]]</code> || <code>[[e|e]]</code> || <code>[[f|f]]</code> || <code>[[g|g]]</code> || <code>[[h|h]]</code> || <code>[[i|i]]</code> || <code>[[j|j]]</code> || <code>[[k|k]]</code> || <code>[[l|l]]</code> || <code>[[m|m]]</code> || <code>[[n|n]]</code> || <code>[[o|o]]</code> || <code>[[p|p]]</code> || <code>[[q|q]]</code> || <code>[[r|r]]</code> || <code>[[s|s]]</code> || <code>[[t|t]]</code> || <code>[[u|u]]</code> || <code>[[v|v]]</code> || <code>[[w|w]]</code> || <code>[[x|x]]</code> || <code>[[y|y]]</code> || <code>[[z|z]]</code>
|-
| <code>[[0|0]]</code> || <code>[[1|1]]</code> || <code>[[2|2]]</code> || <code>[[3|3]]</code> || <code>[[4|4]]</code> || <code>[[5|5]]</code> || <code>[[6|6]]</code> || <code>[[7|7]]</code> || <code>[[8|8]]</code> || <code>[[9|9]]</code>
| <code>[[连字号|-]]</code> || <code>[[underscore|_]]</code> || <code>[[句号|.]]</code> || <code>[[波浪號|~]]</code> || colspan="13" | <!--empty-->
|}

URI中的其它字符必须用百分号编码。

=== 对保留字符的百分号编码 ===
如果一个保留字符在特定上下文中具有特殊含义(称作"reserved purpose") , 且URI中必须使用该字符用于其它目的, 那么该字符必须百分号编码。百分号编码一个保留字符，首先需要把该字符的ASCII的值表示为两个16进制的数字，然后在其前面放置[[转义字符|转义字符]]("<code>%</code>")，置入URI中的相应位置。(对于非ASCII字符, 需要转换为[[UTF-8|UTF-8]]字节序, 然后每个字节按照上述方式表示.)

例如，"<code>/</code>", 如果用作URI的路径成份的分界符, 则是具有特殊含义的保留字符. 如果该字符需要出现在URI一个路径成分的'''内部''', 则三字符序列"<code>%2F</code>"或"<code>%2f</code>"就用于代替原本的"<code>/</code>"出现在该URI路径成分的内部.

{| cellpadding="6px" border=1 style="border:1px solid #C0C0C0; border-collapse:collapse; background-color:#FFFFFF;"
|+保留字符的百分号编码
|-
| <code>[[叹号|!]]</code> || <code>[[number_sign|#]]</code> || <code>[[$|$]]</code>  || <code>[[ampersand|&]]</code> || <code>[[撇号|']]</code> || <code>[[bracket|(]]</code> || <code>[[bracket|)]]</code> || <code>[[asterisk|<nowiki>*</nowiki>]]</code> || <code>[[加号与减号|+]]</code> || <code>[[逗號|,]]</code> || <code>[[斜線|/]]</code> || <code>[[冒号|:]]</code>  || <code>[[分號|;]]</code>  || <code>[[equal_sign|=]]</code> || <code>[[问号|?]]</code> || <code>[[@|@]]</code>  || <code>[[bracket|[]]</code> || <code>[[bracket|<nowiki>]</nowiki>]]</code>
|-
| <code>%21</code> || <code>%23</code> || <code>%24</code>  || <code>%26</code> || <code>%27</code> || <code>%28</code> || <code>%29</code> || <code>%2A</code> || <code>%2B</code> || <code>%2C</code> || <code>%2F</code> || <code>%3A</code>  || <code>%3B</code>  || <code>%3D</code>|| <code>%3F</code>  || <code>%40</code> || <code>%5B</code> || <code>%5D</code>
|}

在特定上下文中没有特殊含义的保留字符也可以被百分号编码，在语义上与不百分号编码的该字符没有差别.

在URI的"[[查询字符串|查询]]"成分(?字符后的部分)中, 例如"<code>/</code>"仍然是保留字符但是没有特殊含义，除非一个特定的URI有其它规定. 该<code>/</code>字符在没有特殊含义时不需要百分号编码.

如果保留字符具有特殊含义，那么该保留字符用百分号编码的URI与该保留字符仅用其自身表示的URI具有不同的语义。

=== 对未保留字符的百分号编码 ===
未保留字符不需要百分号编码.

两个URI的差别如果仅在于''未保留字符''是用百分号编码还是用字符自身表示，那么这两个URI具有等价的语义. 但URI处理器实际上并不总是把二者视作等价{{来源请求}}. 例如, URI的消费者不应该把"<code>%41</code>"与"<code>A</code>", "<code>%7E</code>"与"<code>~</code>"视作不同, 但是某些URI的消费者就是这么做了. 为了最大的[[互操作性|互操作性]], URI的制造者不应该对''未保留字符''进行百分号编码。

=== 对百分号字符的百分号编码 ===
由于百分号字符("%")表示百分号编码字节流的存在, 因此百分号字符应该被编码为3个字节的序列："%25"，用于URI内部。

=== 对任意数据的百分号编码 ===
大多数URI涉及表示任意数据, 例如[[IP地址|IP地址]]或[[文件系统|文件系统]]路径作为URI的成分。

==== 二进数据 ====
1994年发布的{{IETF RFC|1738}}规定<ref>RFC 1738 §2.2; RFC 2396 §2.4; RFC 3986 §1.2.1, 2.1, 2.5</ref>， URI中的二进制数据应该表示为[[8位元组|8位元组]]的序列，然后对每个8位元组按照上述方式百分号编码. 例如，字节值0F (十六进制)应表示为"<code>%0F</code>", 字节值41(十六进制)应表示为"<code>A</code>"或"<code>%41</code>". 优先使用未保留字符来表示这些字节值，因为这使得URL更短.

==== 字符数据 ====
二进数据的百分号编码过程已经被外推到字符数据，甚至到不适合或未被完全规范的地步. 在WWW初创阶段，仅仅处理ASCII字符是否编码问题，还没有什么问题。但随后发展到对非ASCII字符如何在URI中编码，缺少标准规范的情况下导致了歧义性的解释URI的错误。

例如， 基于RFC 1738与{{IETF RFC|2396}}的协议规定，字符数据先要根据某种[[字符编码|字符编码]]转换为字节流，然后再表示为URI。如果URI不提供是何种字符编码的提示信息，那么这个URI难以可靠的解析。

=== 当前标准 ===
2005年1月发布的RFC 3986，建议所有新的URI必须对未保留字符不加以百分号编码；其它字符建议先转换为[[UTF-8|UTF-8]]字节序列, 然后对其字节值使用百分号编码。此前的URI不受此标准的影响。

=== 非标准的实现 ===
有一些不符合标准的把Unicode字符在URI中表示为: <code>%u''xxxx''</code>, 其中''xxxx''是用4个十六进制数字表示的Unicode的[[码位|码位]]值。任何RFC都没有这样的字符表示方法，并且已经被[[W3C|W3C]][http://www.w3.org/International/iri-edit/draft-duerst-iri.html 拒绝] {{Wayback|url=http://www.w3.org/International/iri-edit/draft-duerst-iri.html |date=20210225013230 }}。第三版的[[ECMA-262|ECMA-262]]仍然包含函数<code>escape(<var>string</var>)</code>使用这种语法, 但也有函数<code>encodeURI(<var>uri</var>)</code>转换字符到UTF-8字节序列并用百分号编码每个字节。

==application/x-www-form-urlencoded类型==
<!-- [[application/x-www-form-urlencoded|application/x-www-form-urlencoded]] and [[x-www-form-urlencoded|x-www-form-urlencoded]] redirect to this section -->
当HTML表单中的数据被提交时，表单的域名与值被编码并通过HTTP的GET或者POST方法甚至更古远的email<ref>User-agent support for email based [[HTML|HTML]] form submission, using a 'mailto' [[统一资源定位符|URL]] as the form action, was proposed in RFC 1867 section 5.6, during the HTML 3.2 era. Various web browsers implemented it by invoking a separate email program or using their own rudimentary [[简单邮件传输协议|SMTP]] capabilities. Although sometimes unreliable, it was briefly popular as a simple way to transmit form data without involving a web server or [[通用网关接口|CGI]] scripts.</ref>把请求发送给服务器。这里的编码方法采用了一个非常早期的通用的URI百分号编码方法，并且有很多小的修改如[[換行|換行]]规范化以及把空格符的编码"<code>%20</code>"替换为"<code>+</code>" 。按这套方法编码的数据的[[MIME|MIME]]类型是<code>application/x-www-form-urlencoded</code>，当前仍用于（虽然非常过时了）HTML与[[XForms|XForms]]规范中。此外，[[通用网关接口|CGI]]规范包括了web服务器如何解码这类数据、利用这类数据的内容。

如果发送的是HTTP GET请求，<code>application/x-www-form-urlencoded</code>数据包含在所请求URI的查询成分中。如果发送的是HTTP POST请求或通过email，数据被放置在消息体中，媒体类型的名字被包含在消息的Content-Type头内部。
<!-- discuss this media type, including how it is underspecified and outdated, how it differs from current standards, and how it has been implemented in web browsers for submitting HTML form data using the encoding of the HTML document containing the form (or user override) as the basis for percent-encoding, and workarounds used for unencodable characters -->

== 参见 ==
* [[Quoted-printable|Quoted-printable]]

==参考文献==
{{reflist}}

== 外部链接 ==

* RFC 3986 / [[Internet_standard|STD]] 66 (plus [http://www.rfc-editor.org/errata_search.php?rfc=3986 errata] {{Wayback|url=http://www.rfc-editor.org/errata_search.php?rfc=3986 |date=20210420035302 }}), the current generic URI syntax specification.
* RFC 2396 (obsolete, plus [http://www.rfc-editor.org/errata_search.php?rfc=2396&rec_status=15&presentation=records errata] {{Wayback|url=http://www.rfc-editor.org/errata_search.php?rfc=2396&rec_status=15&presentation=records |date=20210225193001 }}) and RFC 2732 (plus [http://www.rfc-editor.org/errata_search.php?rfc=2732&rec_status=15&presentation=records errata] {{Wayback|url=http://www.rfc-editor.org/errata_search.php?rfc=2732&rec_status=15&presentation=records |date=20210225164447 }}) together comprised the previous version of the generic URI syntax specification.
* RFC 1738 (mostly obsolete) and RFC 1808 (obsolete), which define [[Uniform_Resource_Locator|URL]]s.
* RFC 1630 (obsolete), the first generic URI syntax specification.
* [http://www.w3.org/Addressing/ W3C Guidelines on Naming and Addressing: URIs, URLs, ...] {{Wayback|url=http://www.w3.org/Addressing/ |date=20210426150658 }}
* [http://www.w3.org/International/O-URL-code.html W3C explanation of UTF-8 in URIs] {{Wayback|url=http://www.w3.org/International/O-URL-code.html |date=20210225010616 }}
* [http://www.w3.org/TR/html4/interact/forms.html#h-17.13.4.1 W3C HTML form content types] {{Wayback|url=http://www.w3.org/TR/html4/interact/forms.html#h-17.13.4.1 |date=20210422071447 }}
* [https://myipaddress.pro/cn/url-decode 在線URL解碼工具]{{Dead link|date=2019年11月 |bot=InternetArchiveBot |fix-attempted=yes }}
* [https://myipaddress.pro/cn/url-encode 在線URL編碼器]{{Dead link|date=2019年11月 |bot=InternetArchiveBot |fix-attempted=yes }}

[[Category:网页技术|B]]
[[Category:互联网标准|B]]
[[Category:字符编码|B]]