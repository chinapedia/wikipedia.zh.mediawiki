[[File:Rubber_duck_assisting_with_debugging.jpg|thumb]]的小黄鸭]]
{{noteTA |G1=IT|除錯 |2=zh-cn:程序;zh-tw:程式;|3=zh-cn:手办;zh-hk:手辦;zh-tw:人形模型;|4=zh-cn:代码;zh-tw:程式碼;|5=zh-cn:编程;zh-tw:程式設計;|6=zh-cn:用户;zh-tw:使用者;}}

'''小黄鸭调试法'''，又称'''橡皮鸭调试法'''、'''黄鸭除虫法'''（{{lang|en|Rubber Duck Debugging}}）是可在[[软件工程|软件工程]]中使用的一种-{zh-cn:[[调试|调试]]代码;zh-tw:程式碼[[除错|除错]];}-的方法。方法就是在[[计算机程序|程序]]的调试或测试过程中，操作人耐心地向[[小黄鸭|小黄鸭]]解释每一行程序的作用，以此来激发灵感与发现矛盾。

== 名称由来 ==
此概念是参照于一个故事。故事中程序大师随身携带一只小黄鸭，在-{zh-cn:调试代码;zh-tw:程式碼除錯;}-的时候会在桌上放上这只小黄鸭，然后详细地向鸭子解释每行代码。<ref name="pragprog">{{Cite book | isbn = 978-0201616224 | url = http://pragprog.com/the-pragmatic-programmer | title = The Pragmatic Programmer: From Journeyman to Master | publisher = Addison Wesley | access-date = 2013-09-16 | archive-url = https://web.archive.org/web/20150927204842/https://pragprog.com/the-pragmatic-programmer | archive-date = 2015-09-27 | dead-url = yes }} p. 95, footnote.</ref>

许多程序员都有向别人提问及解释编程问题的经历，而-{zh-cn:对象;zh-tw:對象}-甚至可能是完全不懂编程的人。而就在解释的过程中，程序员可能就发觉了问题的解决方案。一边阐述代码的意图，一边观察它实际上的行为并做调试，两者间的任何不协调都会变得更明显，使人更容易发现错误所在。<ref name="cardboarddog">{{Citation | url = http://www.sjbaker.org/humor/cardboard_dog.html | title = The Contribution of the Cardboard Cutout Dog to Software Reliability and Maintainability | last = Baker | first = SJ | accessdate = 2013-09-16 | archive-date = 2013-10-05 | archive-url = https://web.archive.org/web/20131005123545/http://www.sjbaker.org/humor/cardboard_dog.html | dead-url = no }}.</ref>如果没有玩具小鸭，操作人也可以向其他任何东西倾诉，比如桌上的[[盆栽|盆栽]]、[[键盘|键盘]]及[[鼠标|鼠标]]等。

== 流行文化 ==
<!-- 檔案不存在 [[File:StackExchange_Rubber_Duck_Avatar_April_Fools_2018.png|thumb]] ，可從英文維基百科取得 -->
{{Rquote |1=right
|2=''Insights are often found by simply describing the problem aloud.''
|3=Duck |4=''Quack Overflow''
}}

2018年4月1日[[愚人节|愚人节]]当天，问答网站[[Stack_Exchange|Stack Exchange]]推出了名为“呱呱叫溢出（Quack Overflow）”的功能：一个小黄鸭形象会从网页右下方冒出来，它会倾听使用者的想法，并尝试给出解决方案。实际上，这个小黄鸭形象会看起来在思考并且尝试以文字回应，但最后只会以“呱呱”的鸭子叫声来回应使用者。Stack Exchange宣称这一功能与小黄鸭调试法有关。<ref>{{cite web|title=Stack Exchange has been taken over by a rubber duck! |url=https://meta.stackexchange.com/a/308578 |website=Meta Stack Exchange |accessdate=2018-04-01|date=2018-03-31|language=en}}</ref>不过一些用户在看到这个小黄鸭形象时，以为是恶意软件的结果，没有意识到这是一个愚人节玩笑。<ref>{{cite web |last1=Purushothaman |first1=Praveen Kumar |title=Quack Overflow - Stack Overflow's take on April Fool! |url=https://blog.praveen.science/quack-overflow-stack-overflows-take-on-april-fool |website=Adventures (Blog) |accessdate=2018-04-01 |date=2018-03-31 |language=en |archive-date=2018-03-31 |archive-url=https://web.archive.org/web/20180331193103/https://blog.praveen.science/quack-overflow-stack-overflows-take-on-april-fool/ |dead-url=no }}</ref>

{{clear}}

==参见==
* [[代码审查|代码审查]]
* [[结对编程|结对编程]]
* [[货物崇拜编程|货物崇拜编程]]
* [[苏格拉底反诘法|苏格拉底反诘法]]
* [[Walkthrough_(软件工程)|Walkthrough (软件工程)]]
* [[出声思维法|出声思维法]]

==参考资料==
{{Reflist}}
[[Category:軟件工程|Category:軟件工程]]