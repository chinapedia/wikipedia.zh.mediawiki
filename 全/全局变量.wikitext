{{Refimprove|time=2013-01-27+08:00}}
{{NoteTA
|G1 = IT
}}
在[[程序设计|程序设计]]中，'''全局变量'''是在所有[[作用域|作用域]]都可访问的变量，与之对应的是[[局部变量|局部变量]]。

通常，使用不必要的全局变量被认为是坏习惯，这正是由于全局变量的非局部性：全局变量可能被从任何地方修改（除非位于[[保护内存|保护内存]]中），也可能被任何地方所依赖。于是全局变量便拥有了建立相互依存关系的无限可能，而互相依存关系的建立会使得复杂度增加，参见[[远隔作用_(计算机科学)|远隔作用]]（Action at distance）。然而，在少数情况下是适合使用全局变量的。例如，可以通过全局变量的使用来避免常用变量在一系列函数间的频繁传递。

==例子==
[[C++语言|C++语言]]中全局变量的例子：
<syntaxhighlight lang="cpp">
#include <cstdio>

int global = 3; // 定义全局变量 global

static void ChangeGlobal(void)
{
   global = 5; // 从函数中引用全局变量
}

int main(void)
{
   std::printf("%d\n", global); // 还是从函数中引用全局变量
   ChangeGlobal();
   std::printf("%d\n", global);
}
</syntaxhighlight>

因为变量是全局的，所以就没有必要为了在 main 以外的函数中使用而作为参数传递。全局变量属于程序中的所有函数。

输出应该是：
 3
 5

全局变量的使用使得软件更加难以阅读和理解。因为程序中任何地方的代码都可能随时修改这个变量的值，于是理解这个变量可能就意味着要理解整个程序的很大部分。

某些语言（比如[[C♯|C#]]和[[Java|Java]]）中没有全局变量。Java 中，所有非局部变量都是类的字段，于是所有变量就都在类和方法的作用域中了。

需要指出的是，[[C语言|C语言]]不存在真正意义上的“全局变量”。被习惯性误称为“全局变量”的，一般是文件作用域对象。[[ANSI_C|ANSI C]]/ISO C也没有这种提法。
[[C语言|C语言]]中所谓“全局变量”的例子：
<syntaxhighlight lang="c">
/* 注意这个例子是有问题的。
   global 并不是全局变量，因为它并不是“所有作用域均可见”。
   global 是C语言中的文件作用域变量，作用域从声明开始一直到文件末尾。*/
#include <stdio.h>

int global = 3; /* 这是“全局变量” */

static void ChangeGlobal(void)
{
   global = 5; /* 从函数中引用“全局变量” */
}

int main(void)
{
   printf("%d\n", global); /* 还是从函数中引用“全局变量” */
   ChangeGlobal();
   printf("%d\n", global);
   return 0;
}
</syntaxhighlight>

== 参见 ==
* [[变量|变量]]
* [[单例模式|单例模式]]
* [[局部变量|局部变量]]

== 参考资料 ==
* William Wulf and Mary Shaw, “Global Variable Considered Harmful”, ACM SIGPLAN Notices, volume 8, issue 2, 1973 February, pp. 28–34.
<references />
* [https://web.archive.org/web/20100822072551/http://flash-gordon.me.uk/ansi.c.txt ''Draft ANSI C Standard'' (ANSI X3J11/88-090)] (May 13, 1988), [http://groups.google.com/group/comp.lang.c/msg/20b174b18cdd919d?hl=en Third Public Review]{{Wayback|url=http://groups.google.com/group/comp.lang.c/msg/20b174b18cdd919d?hl=en |date=20110501130545 }}
* {{Cite web
 |url       = http://webstore.ansi.org/RecordDetail.aspx?sku=ISO%2FIEC+9899%3A1999
 |title       = ISO/IEC 9899:1999 Programming Languages -- C
 |publisher       = American National Standards Institute
 |accessdate       = 2013-01-26
 |archive-date       = 2011-07-25
 |archive-url       = https://web.archive.org/web/20110725123312/http://webstore.ansi.org/RecordDetail.aspx?sku=ISO%2FIEC+9899:1999
 |dead-url       = yes
 }}

[[Category:_程序架构|Category: 程序架构]]
[[Category:_变量|Category: 变量]]
[[Category:_软件工程|Category: 软件工程]]

[[de:Variable_(Programmierung)#Variablen_in_einer_Blockstruktur|de:Variable (Programmierung)#Variablen in einer Blockstruktur]]