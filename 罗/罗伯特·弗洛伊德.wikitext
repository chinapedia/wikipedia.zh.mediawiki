{{Infobox_Scientist
| name                    = Robert Floyd<br />罗伯特·弗洛伊德
| image                   =
| image_width             =
| caption                 =
| birth_date              = {{birth date|1936|6|8|mf=y}}
| birth_place             = {{USA}}[[纽约州|纽约州]][[纽约|纽约]]
| death_date              = {{death date and age|2001|9|25|1936|6|8|mf=y}}
| death_place             = {{USA}}[[加利福尼亚州|加利福尼亚州]][[斯坦福_(加利福尼亚州)|斯坦福]]
| residence               =
| citizenship             =
| nationality             = {{USA}}
| ethnicity               =
| field                   = [[计算机科学|计算机科学]]
| work_institution        = [[卡内基梅隆大学|卡内基梅隆大学]]<br>[[斯坦福大学|斯坦福大学]]
| alma_mater              =
| doctoral_advisor        =
| doctoral_students       =
| known_for               = [[弗洛伊德算法|弗洛伊德算法]]
| author_abbreviation_bot =
| author_abbreviation_zoo =
| prizes                  = [[图灵奖|图灵奖]]
| religion                =
| footnotes               =
}}
'''罗伯特·W·弗洛伊德'''（{{lang-en|'''Robert W. Floyd'''}}，{{bd|1936年|6月8日|2001年|9月25日}}），[[美国|美国]][[计算机科学家|计算机科学家]]，1978年[[图灵奖|图灵奖]]得主。

==生平==
弗洛伊德出生在[[美国|美国]]纽约，14岁即完成高中学业，当他1953年从[[芝加哥大学|芝加哥大学]]获得[[文学学士|文学学士]]学位时，年仅17岁，并于1958年在[[物理学|物理学]]获得了第二个学士学位。

他在1960年代早期成为[[计算机操作员|计算机操作员]]，并发表了许多出名的论文，并当他27岁时，被任命为[[卡内基梅隆大学|卡内基梅隆大学]]的副教授，并于6年后成为[[斯坦福大学|斯坦福大学]]的正教授。此时他并没有[[博士|博士]]学位。

==贡献==
弗洛伊德的主要贡献包括[[弗洛伊德算法|弗洛伊德算法]]，能有效地发现[[图论|图]]的所有最短路径；他的工作有词法解析；他在一篇独立发表的文章里引入了一个重要的概念——图像渲染的[[误差扩散法|误差扩散法]]，也被称为[[弗洛伊德-斯坦伯格抖动|弗洛伊德-斯坦伯格抖动]]（但他区分了抖动和扩散）。

他一个显著的成就是开创性地在[[形式验证|程序验证]]中使用了[[逻辑断言|逻辑断言]]。在他1967年的论文《如何确定程序的意义》{{lang|en|''Assigning Meanings to Programs''}}中首先提出，之后演化为[[霍尔逻辑|霍尔逻辑]]。

弗洛伊德与[[高德纳|高德纳]]工作很密切，他是高德纳的著作《[[计算机程序设计艺术|计算机程序设计艺术]]》的主要评审，并且在书中被多次提及。他与理查德·贝尔格（Richard Beigel）合著有《机器的语言：可计算和形式语言的介绍》{{lang|en|''The Language of Machines: an Introduction to Computability and Formal Languages''}}。  <ref>1994, W.H. Freeman and Company, ISBN 978-0716782667 </ref>

弗洛伊德于1978年获得[[图灵奖|图灵奖]]，并做“程序设计的风范”（{{lang|en|The Paradigms of Programming}}）的演讲，图灵奖引文是：
在构造高效、可靠性软件方法学领域的显著影响；在下列计算机科学重要分支的奠基性的贡献：分析理论，编程语言语义，自动程序验证，自动程序综合生成和算法分析。<ref>{{lang|en| "for having a clear influence on methodologies for the creation of efficient and reliable software, and for helping to found the following important subfields of computer science: the theory of parsing, the [semantics of programming languages, automatic program verification, automatic program synthesis, and analysis of algorithms".}} </ref>

== 参考资料 ==
{{reflist}}

== 外部链接 ==
* http://sigact.acm.org/floyd
* https://web.archive.org/web/20031227035839/http://www.stanford.edu/dept/news/report/news/november7/floydobit-117.html
* [https://web.archive.org/web/20081209122115/http://laser.cs.umass.edu/courses/cs521-621.Spr06/papers/Floyd.pdf R.W. Floyd, "Assigning Meaning to Programs", in Proceedings of Symposium on Applied Mathematics, Vol. 19, J.T. Schwartz (Ed.), A.M.S., 1967, pp. 19-32]

{{图灵奖}}

{{Authority control}}
{{DEFAULTSORT:Floyd, Robert}}
[[Category:美国计算机科学家|Category:美国计算机科学家]]
[[Category:芝加哥大学校友|Category:芝加哥大学校友]]