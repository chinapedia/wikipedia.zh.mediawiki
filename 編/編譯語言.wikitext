{{Unreferenced|time=2021-05-08T03:33:18+00:00}}
{{NoteTA
|G1=IT
}}
'''編譯語言'''（{{lang-en|Compiled language}}）是一種[[程式語言|程式語言]]类型，通过[[編譯器|編譯器]]來實作。它不像[[直譯語言|直譯語言]]一樣，由直譯器將程式碼一句一句執行，而是以編譯器，先將[[程式碼|程式碼]]編譯為[[機器碼|機器碼]]，再加以執行。理論上，任何程式語言都可以是編譯式，或直譯式的。它們之間的區別，僅與程式的應用有關。

==優點與缺點==
一般而言，用編譯語言寫成的程式，在執行期的執行速度，通常比用直譯語言寫的程式快。因為程式在編譯期，已經被預先編譯成機器碼，可以直接執行，不用像直譯語言一樣，還要多一道直譯程序。

但是要先進行編譯，之後才能執行程式，這也造成了編譯語言的缺點。一般而言，編譯語言的程式開發速度，以及除錯時間，都是比較長的。因為它不像直譯語言可以寫完一行，或一小段程式之後，馬上執行，馬上除錯。直譯語言通常讓程式開發的整體時間變少，在開發過程中，程式師也可以更彈性、快速的測試自己的想法。

為了改善編譯語言的效率而發展出的[[即時編譯|即時編譯]]技術，已經縮小了這兩種語言間的差距。這種技術混合了編譯語言與直譯語言的優點，它像編譯語言一樣，先把程式原始碼編譯成[[字節碼|字節碼]]。到執行期時，再將字節碼直譯，之後執行。[[Java|Java]]與[[LLVM|LLVM]]是這種技術的代表產物。

==編譯語言列表==
*[[Ada|Ada]]
*[[C語言|C語言]]
**[[C++|C++]]
**[[Objective-C|Objective-C]]
**[[D語言|D語言]]
*[[C♯|C#]]

==相關條目==
*[[編譯器|編譯器]]
*[[腳本語言|腳本語言]]
*[[直譯語言|直譯語言]]

{{编程语言类别}}
{{Compu-lang-stub}}
{{DEFAULTSORT:Compiled language}}
[[category:编程语言分类|category:编程语言分类]]