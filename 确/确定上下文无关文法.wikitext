在[[形式文法|形式文法]]理论中，'''确定上下文无关文法'''(DCFG)是[[上下文无关文法|上下文无关文法]]的[[真子集|真子集]]。确定上下文无关文法是[[确定下推自动机|确定下推自动机]]可识别的文法。'''确定上下文无关语言'''是确定上下文无关文法所定义的[[形式语言|形式语言]]。

它们在计算机科学领域中特别重要，因为这些文法可以有效的识别，而非确定上下文无关文法需要[[回溯|回溯]]或其他复杂的技术；非确定步骤的每次出现，栈都必须被复制并接着被传播(propagate)，消耗运行时间、内存或两者。在实践中，当你希望为非确定文法(比如用 [[YACC|YACC]])建立一个[[解析器|解析器]]的时候，你必须通过增加约束如优先级来改变分析器为确定的。

确定上下文无关语言是拥有[[歧义文法|无歧义上下文无关文法]]的语言的集合的真子集。例如，无歧义文法 S → 0S0 | 1S1 | ε，它定义了在字母 0 和 1 上的偶数长度的[[回文|回文]]的语言，它能用确定下推自动机解析。<ref> {{cite book | last = [[John_Hopcroft|Hopcroft]] | first = John | coauthors = [[Rajeev_Motwani|Rajeev Motwani]] & [[Jeffrey_Ullman|Jeffrey Ullman]] | title = [[Introduction_to_automata_theory,_languages,_and_computation|Introduction to automata theory, languages, and computation]] 2nd edition | year = 2001 | publisher = Addison-Wesley | pages = 246-253 }} </ref>

==参见==
*[[确定分析|确定分析]]
*[[确定下推自动机|确定下推自动机]]
*[[LR分析器|LR分析器]]

==引用==
<references/>


{{logic-stub}}

{{形式语言与形式文法}}
[[Category:形式语言|Q]]