{{NoteTA
|G1=IT
}}
{{校对翻译}}
在[[计算机网络|计算机网络]]中，'''隧道中间人'''（{{lang-en|'''tunnel broker'''}}）是一种提供[[隧道协议|网络隧道]]的服务。这些隧道可以在现有的基础设施上提供经封装的到另一个基础设施的连通性。它也可被称为'''隧道代理'''，但这不同于[[代理服务器|代理服务器]]。

目前存在着许多种隧道中间人，包括[[IPv4|IPv4]]隧道中间人，但该术语的最常见用法还是定义于[[rfc:3053|RFC 3053]]的[[IPv6|IPv6]]隧道中间人。

IPv6隧道中间人通常是提供IPv6隧道给使用IPv4的网站或者最终用户。通常来说，IPv6隧道中间人提供被称为“协议 41”的隧道。它们将IPv6直接嵌入在[[网络传输协议|协议]]字段设定为“41”（IPv6）的[[IPv4|IPv4]][[網路封包|網路封包]]中。[[rfc:2473|RFC 2473]]则定义了在IPv6网络中为用户提供IPv4隧道封装的IPv4隧道中间人。

== 自动配置 ==
IPv6隧道的配置通常使用{{tsl|en|Tunnel Setup Protocol|隧道设置协议}}（Tunnel Setup Protocol，TSP）或者{{tsl|en|Tunnel Information Control|隧道信息控制}}（Tunnel Information Control，TIC）协议。{{tsl|en|AICCU}}（Automatic IPv6 Connectivity Client Utility，自动化IPv6连通性客户端实用工具）客户端还支持其独有的协议。此外，IPv6隧道TSP也可用于设置IPv4隧道。

== NAT问题 ==
Proto-41隧道（在IPv4中直接IPv6）可能无法在[[网络地址转换|NAT]]后良好运行。其中一个解决方法是在NAT管理设备上将隧道的实际端点配置为[[DMZ|DMZ]]。另一个方法是使用{{tsl|en|AYIYA}}或{{tsl|en|Tunnel Setup Protocol|隧道设置协议|TSP}}，两者都是在[[用户数据报协议|UDP]]数据包中发送IPv6，这可以穿越大多数NAT设置及[[防火墙|防火墙]]。

仍可能发生的一个问题是NAT设备中的状态超时。部分NAT可能会记忆一个数据包是发往[[互联网|互联网]]而允许互联网上的另一个与proto-41相关的数据包传回。当此状态过期时，互联网上传来的其他数据包不会被接受。因此这将导致隧道连接被中断，直至用户的主机再次向隧道代理發送数据包。

== 动态端点 ==
当端点没有一个静态IP地址时，用户或程序必须指示隧道代理更新端点地址。这可以使用隧道中间人的网站或者自动化协议（例如AICCU使用的{{tsl|en|Tunnel Setup Protocol|隧道设置协议|TSP}}或[http://www.sixxs.net/tools/heartbeat/ Heartbeat] {{Wayback|url=http://www.sixxs.net/tools/heartbeat/ |date=20090225073512 }}）完成。在通过TSP使用隧道中间人时，客户端将自动重启隧道，更新端点地址和端口。

== 实现 ==
首个IPv6隧道中间人的实现是意大利{{tsl|en|CSELT}}的S.p.A，由RFC 3053的作者Ivano Guardini制作<ref>{{cite web|url=https://www.ietf.org/proceedings/46/slides/ngtrans-ivano-tunnel-broker/sld006.htm|title=IETF46 Proceedings - Available Tunnel Brokers|accessdate=18 December 2015|publisher=IETF|archive-date=2016-03-04|archive-url=https://web.archive.org/web/20160304002319/https://www.ietf.org/proceedings/46/slides/ngtrans-ivano-tunnel-broker/sld006.htm|dead-url=no}}</ref>

目前存在着多种多样的隧道中间人，基于不同的目的制作自己的[[实现|实现]]。下面列出了IPv6隧道中间人的最常用实现。

=== Gogo6 gogoSERVER ===
gogoSERVER（以前称Gateway6）是由Freenet6服务使用，这是第二个IPv6隧道中间人服务，于1999年开始运营。它最初作为Viagenie的一个项目，之后Hexago分拆一个商业公司来销售Gateway6，由Freenet6提供支持，作为他们的旗舰产品。2009年6月，Hexago通过管理层收购变为gogo6{{what}}，并且Freenet6成为gogoNET（一个面向IPv6专业人员的[[社会网络|社会网络]]）的一部分。<ref>{{Cite web|url=http://gogonet.gogo6.com|title=Gogonet homepage|accessdate=14 December 2014|publisher=Gogonet.gogo6.com|deadurl=yes|archiveurl=https://web.archive.org/web/20120511231844/http://gogonet.gogo6.com/|archivedate=2012-05-11}}</ref>2016年3月23日，Freenet6/Gogo6的所有服务终止。

=== SixXS sixxsd ===
SixXS的sixxsd is what powers all the SixXS PoPs。它是一个定制化软件，为高性能且低延迟的隧道而设计。sixxsd的开发始于2002年<ref name="sixxsdhistory">{{cite web|url=http://www.sixxs.net/about/history/|title=SixXS - IPv6 Deployment & Tunnel Broker :: History|accessdate=14 December 2014|publisher=Sixxs.net|archive-date=2012-01-01|archive-url=https://web.archive.org/web/20120101121123/http://www.sixxs.net/about/history/|dead-url=no}}</ref>，目前已演变为v4版本的软件。该软件是为提供和运行SixXS PoPs的ISP提供。在最初的2000年，SixXS使用shell bash脚本。<ref name="ipng">{{cite web|url=http://meetings.ripe.net/ripe-42/presentations/ripe42-ipv6-ipng/sld008.html|title=2.3 Tunnelserver config|accessdate=14 December 2014|publisher=Meetings.ripe.net|archive-date=2016-03-05|archive-url=https://web.archive.org/web/20160305134853/http://meetings.ripe.net/ripe-42/presentations/ripe42-ipv6-ipng/sld008.html|dead-url=no}}</ref>由于可扩展性及其他问题，sixxsd被设计和开发。

=== CITC ddtb ===
[https://web.archive.org/web/20150209041641/http://www.ipv6.org.sa/tunnelbroker CITC Tunnel Broker]，由[[沙特阿拉伯|沙特阿拉伯]]IPv6工作组运行，采用他们自己的名为“ddtb”的TSP RFC实现。

== 参见 ==
* [[IPv6隧道中间人列表|IPv6隧道中间人列表]]
* [[6in4|6in4]]

== 参考资料 ==
{{Reflist}}

[[Category:IPv6|Category:IPv6]]
[[Category:穿隧協議|Category:穿隧協議]]