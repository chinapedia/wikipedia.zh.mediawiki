{{Distinguish|GNU/Linux|Linux-libre}}
{{NoteTA
|G1 = IT
|G2 = PP
|G3 = FL
|1  = zh-cn:发布; zh-tw:釋出;
|2  = zh-cn:内核; zh-tw:核心; zh-hk:內核;
}}
{{Infobox OS
| name = Linux
| logo = [[File:Tux.svg|64px]]
| screenshot = Linux 3.0.0 boot.png
| caption = Linux内核3.0.0启动画面
| developer = [[林納斯·托瓦茲|林納斯·托瓦茲]]（Linus Torvalds）和几千名合作者
| family = [[类Unix系统|类Unix系统]]
| released = 0.01<small>（{{Release date and age|1991|09|17}}）</small>
| frequently updated = yes
| programmed in = [[C語言|C語言]]、[[汇编语言|汇编语言]]
| preview url = 
| language = 多语言
| kernel type = [[單核心|單核心]]
| license = [[GPL|GPL]]（僅）第二版<ref>{{cite web
 |author = InfoWorld
 |url = http://www.infoworld.com/article/06/07/28/HNtorvaldsnofan_1.html
 |title = Linux creator Torvalds still no fan of GPLv3
 |accessdate = 2008-10-11
 |archive-url = https://www.webcitation.org/6HaNoLuig?url=http://www.infoworld.com/t/platforms/linux-creator-torvalds-still-no-fan-gplv3-667
 |archive-date = 2013-06-23
 |dead-url = yes
 }}</ref><ref name="COPYING"/>，<br />各類[[閉源軟體|封闭]][[固件|固件]]的許可證<ref name="Blobs">{{cite web|url=http://www.gnu.org/philosophy/linux-gnu-freedom.html|title=Linux, GNU, and freedom|publisher=[[Free_Software_Foundation|Free Software Foundation]]|first=Richard|last=Stallman|year=2002|accessdate=2007-02-21|archive-date=2013-06-23|archive-url=https://www.webcitation.org/6HaNpiUw2?url=http://www.gnu.org/philosophy/linux-gnu-freedom.html|dead-url=no}}</ref><ref name="firmware">{{cite web |url=http://git.kernel.org/?p=linux/kernel/git/stable/linux-stable.git;a=blob;f=firmware/WHENCE;hb=HEAD |title=linux/kernel/git/stable/linux-stable.git/blob - firmware/WHENCE |publisher=git.kernel.org |date=2002-10-16 |accessdate=2012-08-21 |deadurl=yes |archiveurl=https://archive.is/20130113003817/http://git.kernel.org/?p=linux/kernel/git/stable/linux-stable.git;a=blob;f=firmware/WHENCE;hb=HEAD |archivedate=2013-01-13 }}</ref>
| website = {{official URL}}
| logo_caption = Linux的吉祥物[[Tux|Tux]]
}}

'''Linux内核'''（{{lang-en|Linux kernel}}）是一种开源的[[类Unix系统|类Unix]][[操作系统|操作系统]][[宏内核|宏内核]]。整个Linux操作系统家族基于该内核部署在传统计算机平台（如个人计算机和服务器，以Linux发行版的形式<ref>{{Cite web|url=https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/README?id=f3b8436ad9a8ad36b3c9fa1fe030c7f38e5d3d0b|title=README - kernel/git/torvalds/linux.git - Linux kernel source tree|accessdate=2018-02-18|work=git.kernel.org|language=en|archive-date=2020-08-10|archive-url=https://web.archive.org/web/20200810032639/https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/README?id=f3b8436ad9a8ad36b3c9fa1fe030c7f38e5d3d0b|dead-url=no}}</ref>）和各种嵌入式平台，如[[路由器|路由器]]、[[無線接入點|无线接入点]]、[[专用小交换机|专用小交换机]]、[[机顶盒|机顶盒]]、{{en-link|FTA接收器|FTA receiver}}、[[智能电视机|智能电视]]、[[数字视频录像机|数字视频录像机]]、[[网络附加存储|网络附加存储]]（NAS）等。工作于[[平板電腦|平板電腦]]、[[智能手机|智能手机]]及[[智能手表|智能手表]]的[[Android|Android]]操作系统同样通过Linux内核提供的服务完成自身功能。尽管于[[桌面電腦|桌面电脑]]的占用率较低，基于Linux的操作系统统治了几乎从移动设备到主机的其他全部领域。截至2017年11月，世界前500台最强的[[超级计算机|超级计算机]]全部使用Linux。<ref>{{Cite web|url=https://www.top500.org/statistics/details/osfam/1|title=TOP500 Supercomputer Sites|accessdate=2018-02-18|author=|date=|work=www.top500.org|publisher=|language=en|archive-date=2012-11-19|archive-url=https://web.archive.org/web/20121119205719/https://www.top500.org/statistics/details/osfam/1|dead-url=no}}</ref>

Linux内核最早是于1991年由芬兰黑客[[林納斯·托瓦茲|林納斯·托瓦茲]]为自己的个人电脑开发的，他当时在[[新闻组|Usenet新闻组]]<code>comp.os.minix</code>登载帖子<ref>{{cite web|url=http://groups.google.com/groups?hl=en&selm=1991Aug25.205708.9541%40klaava.Helsinki.FI|title=What would you like to see most in minix?|publisher=Linus Benedict Torvalds|date=1991-08-26|accessdate=2010-12-21|archive-date=2019-10-18|archive-url=https://web.archive.org/web/20191018044634/https://groups.google.com/forum/?hl=en|dead-url=no}}</ref>，这份著名的帖子标志着Linux内核计划的正式开始。如今，该计划已经拓展到支持大量的计算机体系架构，远超其他操作系统和内核。它迅速吸引了一批开发者和用户，利用它作为其他自由软件项目的核心，如著名的 GNU 操作系统。<ref>{{Cite web|url=http://www.oreilly.com/openbook/freedom/ch09.html|title=Free as in Freedom: Chapter 9|accessdate=2018-02-18|work=www.oreilly.com|archive-date=2020-12-10|archive-url=https://web.archive.org/web/20201210220548/https://www.oreilly.com/openbook/freedom/ch09.html|dead-url=no}}</ref>而今天，Linux 内核已接受了超过1200家公司的近12000名程序员的贡献，其中包括一些知名的软硬件发行商。<ref>{{Cite web|url=https://www.linuxfoundation.org/news-media/announcements/2015/02/linux-foundation-releases-linux-development-report|title=The Linux Foundation Releases Linux Development Report|accessdate=2018-02-18|author=|date=2016-07-19|publisher=|deadurl=yes|archiveurl=https://web.archive.org/web/20160719042639/https://www.linuxfoundation.org/news-media/announcements/2015/02/linux-foundation-releases-linux-development-report|archivedate=2016-07-19}}</ref><ref>{{Cite web|url=http://go.linuxfoundation.org/who-writes-linux-2012|title=Linux Kernel Development: How Fast it is Going, Who is Doing It, What They are Doing, and Who is Sponsoring It|accessdate=2018-02-19|author=Greg Kroah-Hartman|date=|publisher=|archive-url=https://web.archive.org/web/20190912023947/https://storage.pardot.com/6342/48856/lf_kernel_development_2012.pdf|archive-date=2019-09-12|dead-url=yes}}</ref>

从技术上说，Linux 只是一个符合[[POSIX|POSIX 标准]]的内核。它提供了一套应用程序接口（API），通过接口用户程序能与内核及硬件交互。仅仅一个内核并不是一套完整的操作系统。有一套基于 Linux 内核的完整操作系统叫作[[Linux|Linux 操作系统]]，或是[[GNU/Linux|GNU/Linux]]（在该系统中包含了很多[[GNU计划|GNU 计划]]的系统组件）。

Linux 内核是在[[GNU通用公共许可证|GNU通用公共许可证]]第2版之下发布的<ref name="COPYING">{{Cite web |url=http://git.kernel.org/?p=linux%2Fkernel%2Fgit%2Ftorvalds%2Flinux-2.6.git%3Ba%3Dblob%3Bf%3DCOPYING |title=COPYING |accessdate=2021-02-07 |archive-date=2012-12-21 |archive-url=https://archive.is/20121221041715/http://git.kernel.org/?p=linux/kernel/git/torvalds/linux-2.6.git;a=blob;f=COPYING |dead-url=yes }}</ref>（加上一些非自由[[固件|固件]]、[[二進位大型物件|blob]]与各种非自由许可证<ref>{{Cite news|url=http://git.kernel.org/?p=linux%2Fkernel%2Fgit%2Fstable%2Flinux-stable.git%3Ba%3Dblob%3Bf%3Dfirmware%2FWHENCE%3Bhb%3DHEAD|title=git.kernel.org - linux/kernel/git/stable/linux-stable.git/blob - firm…|date=2013-01-13|newspaper=archive.is|accessdate=2018-02-18|deadurl=yes|archiveurl=https://archive.is/20130113003817/http://git.kernel.org/?p=linux/kernel/git/stable/linux-stable.git;a=blob;f=firmware/WHENCE;hb=HEAD|archivedate=2013-01-13}}</ref>），是一个开源项目协作的突出例子。它的版本支持根据版本最长可达6年，貢獻者遍佈世界各地，日常开发相关的讨论在{{tsl|en|Linux kernel mailing list|Linux 内核邮件列表}}上。

== 历史 ==
{{main|Linux歷史}}
[[File:LinuxCon_Europe_Linus_Torvalds_03_(cropped).jpg|缩略图]]]]

1991年，[[林納斯·托瓦茲|林納斯·托瓦茲]]，一名21岁的就读于芬兰赫尔辛基大学的[[计算机科学|计算机科学]]专业学生，基于一些简单的想法，打算编写一个操作系统内核。他通过英特尔80386汇编语言的任务切换器和一个终端驱动程序开始工作。8月25号，他在<code>comp.os.minix</code>[[新闻组|新闻组]]里发了一封帖子：<ref name="Torvlads25Aug91">{{cite newsgroup |last=Torvalds |first=Linus Benedict |authorlink=Linus Torvalds |date=1991-08-26 |title=What would you like to see most in minix? |newsgroup=comp.os.minix |message-id=1991Aug25.205708.9541@klaava.Helsinki.FI |url=https://groups.google.com/group/comp.os.minix/msg/b813d52cbc5a044b |access-date=2018-02-18 |archive-date=2013-05-09 |archive-url=https://web.archive.org/web/20130509134305/http://groups.google.com/group/comp.os.minix/msg/b813d52cbc5a044b |dead-url=no }}</ref>

{{quote|我在做个（自由的）操作系统（就是个兴趣爱好，我不会搞得像GNU那么大那么专业），打算让它工作在386 AT平台上。它从四月就开始酝酿了，马上就快好了。我想要那些喜欢或不喜欢minix的人的意见，因为我的系统和它有点类似（同样的文件系统的物理布局——由于实际原因——还有些其他的东西）。

我现在已经移植了[[bash|bash]](1.08)和[[GNU_Compiler_Collection|gcc]](1.40)， 而且看起来奏效了。这意味着我会在几个月内得到一些实用的东西。「……」是的——它没有任何minix代码，并且它有一个多线程的fs。它'''不'''可移植（使用386任务切换等），而且它可能永远不会支持除AT硬盘之外的其他东西，因为我只有这些:-(。

「……」它基本上是用C语言写的，但是大多数人可能不会把我写的东西叫做C语言。它使用我能找到的386的每个可以想象的特性，因为它也是一个教我关于386的功能的项目。我前面提到过，它使用内存管理单元来进行分页（还没实现到对硬盘的功能）和分段。这个分段功能使得它真正的依赖于386（每个任务都有64Mb的代码和数据段——4Gb中最多64个任务。如果有人需要超过每个任务64Mb的限制，那将是个麻烦事）。「……」我的一些C语言文件（特别是mm.c）几乎用了和C一样多的汇编。「……」不像minix，我也碰巧喜欢中断，所以中断将在不试图隐藏背后的原因的情形下被处理。}}

之后，许多人为这个项目贡献了代码。在早期，[[MINIX|MINIX]]社区向 Linux 内核贡献了代码和想法。当时，GNU 项目已经创建了许多自由操作系统所需的组件，但是它自己的内核 GNU Hurd 尚不完整且无法使用；而BSD操作系统还没有摆脱合法的阻碍。因此，尽管早期版本的 Linux 功能有限，但它迅速获得了开发人员和用户。

到1991年9月，Linux内核版本 0.01 在芬兰大学和研究网络（FUNET）的FTP服务器（ftp.funet.fi）上发布。它有10,239行代码。在1991年10月，0.02版本的内核发布了。<ref>{{cite newsgroup|last=Torvalds|first=Linus Benedict|authorlink=Linus Torvalds|date=1991-10-05|title=Free minix-like kernel sources for 386-AT|newsgroup=comp.os.minix|message-id=1991Oct5.054106.4647@klaava.Helsinki.FI|url=https://groups.google.com/group/comp.os.minix/msg/2194d253268b0a1b|access-date=2018-03-28|archive-date=2013-04-25|archive-url=https://web.archive.org/web/20130425191719/http://groups.google.com/group/comp.os.minix/msg/2194d253268b0a1b|dead-url=no}}</ref>

1991年12月，0.11版本的内核发布。由于它可以由运行相同内核版本的计算机编译，因此该版本是第一个{{Link-en|自托管的|Self-hosting}} Linux 内核。当托瓦茲于1992年2月发布0.12版本时，他采用了 [[GNU通用公共许可证|GNU 通用公共许可证]]（GPL），而不是以前的自行起草的许可证，原先的许可证不允许商业再分发。<ref name="Relnotes-0.12">{{cite web|url=https://www.kernel.org/pub/linux/kernel/Historic/old-versions/RELNOTES-0.12|title=Release Notes for Linux v0.12|accessdate=2007-02-21|last=Torvalds|first=Linus|authorlink=Linus Torvalds|publisher=The Linux Kernel Archives|archive-date=2007-08-19|archive-url=https://web.archive.org/web/20070819045030/http://www.kernel.org/pub/linux/kernel/Historic/old-versions/RELNOTES-0.12|dead-url=no}}</ref>

1992年1月19日，第一篇文章提交给新的新闻组<code>alt.os.linux</code>出现。<ref>{{cite newsgroup|last=Summers|first=David W.|date=1992-01-19|title=Troubles with Partitions|newsgroup=alt.os.linux|message-id=1992Jan19.085628.18752@cseg01.uark.edu|url=https://groups.google.com/group/alt.os.linux/msg/c638df159fa15159|accessdate=2007-01-07|archive-date=2013-06-02|archive-url=https://web.archive.org/web/20130602210415/http://groups.google.com/group/alt.os.linux/msg/c638df159fa15159|dead-url=no}}</ref>1992年3月31日，该新闻组更名为 <code>comp.os.linux</code>。<ref>{{cite newsgroup|last=Clegg|first=Alan B.|date=1992-03-31|title=It's here!|newsgroup=comp.os.linux|message-id=1992Mar31.131811.19832@rock.concert.net|url=https://groups.google.com/group/comp.os.linux/msg/81fe3618c4803d1e|accessdate=2007-01-07|archive-date=2013-06-02|archive-url=https://web.archive.org/web/20130602203914/http://groups.google.com/group/comp.os.linux/msg/81fe3618c4803d1e|dead-url=no}}</ref>

[[X_Window系統|X Window 系统]]随后被移植到Linux上，所以在1992年3月，Linux 0.95 是第一个能够运行X的版本。从0.1x到0.9x的版本号大幅跨越是因为期望没有大的缺失部分的版本1.0的即将出现。然而，这被证明是错误的。从1993年到1994年初，出现了0.99版本的15个开发版本。

1994年3月14日，Linux内核1.0.0发布，共176,250行代码。随后的1995年3月，有310,950行代码的 Linux 内核1.2.0发布。

在1996年6月9日发布的 Linux内核2.0版本之后，以2.0为大版本的主要更新有如下这些：
* 1999年1月25日 - 发布Linux内核2.2.0（1,800,847行代码）

* 1999年12月18日 - 针对2.2.13的 [[IBM大型主機|IBM 大型机]]补丁发布，允许 Linux 内核用于企业级机器

* 2001年1月4日 - 发布 Linux 内核2.4.0（3,377,902行代码）

* 2003年12月17日 - 发布 Linux 内核2.6.0（5,929,913行代码）
从2004年开始，发布过程发生了变化，新的内核每隔2-3个月定期发布，编号为2.6.0、2.6.1，直到2.6.39。

2011年7月21日，Torvalds宣布发布Linux内核3.0：“2.6.<大版本> 的日子过去了”。<ref name="3.0 release">{{cite web|url=http://lkml.indiana.edu/hypermail/linux/kernel/1107.2/01843.html|title=Linux 3.0 release|accessdate=2013-05-16|date=2011-07-21|last=Torvalds|first=Linus|authorlink=Linus Torvalds|publisher=[[Linux_kernel_mailing_list|Linux kernel mailing list]]|archive-date=2019-10-18|archive-url=https://web.archive.org/web/20191018044641/http://lkml.iu.edu/hypermail/linux/kernel/1107.2/01843.html|dead-url=no}}</ref>与Linux 2.6.39相比，大的技术变化同版本跃升没有关系；<ref>{{cite web|url=http://www.h-online.com/open/features/What-s-new-in-Linux-2-6-39-1242910.html?page=4|title=Linux Kernel Data|accessdate=2011-07-22|date=2011-05-19|last=Leemhuis|first=Thorsten|work=The H|publisher=[[Heinz_Heise|Heinz Heise]]|archive-date=2020-08-08|archive-url=https://web.archive.org/web/20200808043023/http://www.h-online.com/open/features/What-s-new-in-Linux-2-6-39-1242910.html%3Fpage=4|dead-url=no}}</ref>它标志着内核的20周年纪念。<ref>{{cite web|url=https://www.pcmag.com/article2/0,2817,2388926,00.asp|title=Linux 3.0 Released; Linus Torvalds Explains Why You Shouldn't Care|accessdate=2014-11-11|date=2011-07-22|last=Hachman|first=Mark|work=[[PC_Magazine|PC Magazine]]|publisher=[[Ziff_Davis|Ziff Davis]]|archive-date=2019-02-17|archive-url=https://web.archive.org/web/20190217070953/https://www.pcmag.com/article2/0,2817,2388926,00.asp|dead-url=no}}</ref>基于时间的发布过程保持不变。

2013年6月发布的Linux内核版本3.10包含15,803,499行代码<ref>{{cite web|url=http://www.h-online.com/open/features/What-s-new-in-Linux-3-10-1902270.html|title=What's new in Linux 3.10|accessdate=2013-07-15|date=2013-07-01|last=Leemhuis|first=Thorsten|work=The H|publisher=[[Heinz_Heise|Heinz Heise]]|archive-date=2014-02-20|archive-url=https://web.archive.org/web/20140220194606/http://www.h-online.com/open/features/What-s-new-in-Linux-3-10-1902270.html|dead-url=no}}</ref>，而2015年6月发布的4.1版本已发展到超过1950万行代码，由近14000名程序员贡献。<ref>{{cite web|url=https://www.phoronix.com/scan.php?page=news_item&px=Linux-19.5M-Stats|title=Linux Kernel At 19.5 Million Lines Of Code, Continues Rising|accessdate=2015-06-23|date=2014-06-23|authorlink=Michael Larabel|publisher=[[Phoronix|Phoronix]]|archive-date=2020-11-23|archive-url=https://web.archive.org/web/20201123170810/https://www.phoronix.com/scan.php?page=news_item&px=Linux-19.5M-Stats|dead-url=no}}</ref>

==== 塔能鮑姆-林納斯辯論 ====
{{Main|塔能鮑姆-林納斯辯論}}

Linux不是[[微内核|微内核]]架构的事实曾经引起了林納斯·托瓦茲与[[安德鲁·斯图尔特·塔能鲍姆|安德鲁·斯图尔特·塔能鲍姆]]之间一场著名的争论。1992年在[[Usenet|Usenet]]討論群組<tt>[news:///comp.os.minix comp.os.minix]</tt><ref name="TanenbaumPost1">{{Cite newsgroup
 |author = A. S. Tanenbaum
 |title = LINUX is obsolete
 |date = 1992-01-29
 |newsgroup = comp.os.minix
 |id = 12595@star.cs.vu.nl
 |url = http://groups.google.com/group/comp.os.minix/browse_thread/thread/c25870d7a41696d2/f447530d082cd95d?tvc=2
 |accessdate = 2006-11-27
 |archive-date = 2013-05-26
 |archive-url = https://web.archive.org/web/20130526014635/http://groups.google.com/group/comp.os.minix/browse_thread/thread/c25870d7a41696d2/f447530d082cd95d?tvc=2
 |dead-url = no
 }}</ref>開始了一場[[網路論戰|網路論戰]]，討論的主題在於[[作業系統|作業系統]]架構的選擇。稍後一些著名的[[駭客|駭客]]也加入討論，如[[大衛·米勒_(程式員)|大衛·米勒]]、[[曹子德|曹子德]]。這場辯論影響了Linux核心的設計走向。塔能鲍姆認為Linux内核採用的[[整塊性核心|宏内核]]已經過時了，應該採取比較先進的[[微內核|微內核]]架構，引起了林納斯的反擊。

在2006年5月9日，这个主题被重新审视<ref>{{cite web | date = 2006-05-09 | title = Hybrid kernel, not NT | url = http://www.realworldtech.com/forums/index.cfm?action=detail&id=66630&threadid=66595&roomid=11 | first = Linus | last = Torvalds | accessdate = 2007-01-06 | archive-date = 2007-01-02 | archive-url = https://web.archive.org/web/20070102154542/http://www.realworldtech.com/forums/index.cfm?action=detail&id=66630&threadid=66595&roomid=11 | dead-url = no }}</ref>，并且在2006年5月12日塔能鲍姆写了一份立场声明。<ref>{{cite web | date = 2006-05-12 | url = http://www.cs.vu.nl/~ast/reliable-os/ | title = Tanenbaum-Torvalds Debate: Part II | last = Tanenbaum | first = Andy | accessdate = 2007-01-06 | archive-date = 2015-08-05 | archive-url = https://web.archive.org/web/20150805132304/http://www.cs.vu.nl/~ast/reliable-os/ | dead-url = no }}</ref>

== 架构 ==
{{See also|vmlinux}}
[[File:Linux_kernel_map.png|thumb]]
Linux是一个[[单体内核|单体内核]]，支持真正的[[抢占式多任务处理|抢占式多任务处理]]（于用户态，和版本2.6系列之后的内核态<ref>{{cite web
 | url = http://kernelnewbies.org/FAQ/Preemption
 | title = FAQ: Preemption
 | date = 2009-08-22
 | accessdate = 2015-05-07
 | website = kernelnewbies.org
 | archive-date = 2020-08-07
 | archive-url = https://web.archive.org/web/20200807081640/https://kernelnewbies.org/FAQ/Preemption
 | dead-url = no
 }}</ref><ref name="lwn-22912">{{cite web
 | url = https://lwn.net/Articles/22912/
 | title = Driver porting: the preemptible kernel
 | date = 2003-02-24
 | accessdate = 2015-05-07
 | author = Jonathan Corbet
 | publisher = [[LWN.net|LWN.net]]
 | archive-date = 2020-08-10
 | archive-url = https://web.archive.org/web/20200810170137/https://lwn.net/Articles/22912/
 | dead-url = no
 }}</ref>）、[[虚拟内存|虚拟内存]]、[[共享库|共享库]]、{{en-link|请求分页|Demand paging}}、共享[[写时复制|写时复制]]可执行体（通过{{en-link|内核同页合并|Kernel same-page merging}}）、[[内存管理|内存管理]]、[[TCP/IP协议族|Internet协议族]]和[[线程|线程]]等功能。

设备[[驱动程序|驱动程序]]和内核扩展运行于[[内核空间|内核空间]]（在很多[[CPU|CPU]][[计算机体系结构|架构]]中是[[分级保护域|ring 0]]），可以完全访问[[计算机硬件|硬件]]，但也有运行于[[用户空间|用户空间]]的一些例外，例如基于[[FUSE|FUSE]]/CUSE的文件系统，和部分UIO<ref>{{cite web
 | url = https://lwn.net/Articles/308445/
 | title = Character devices in user space
 | date = 2008-11-25
 | accessdate = 2015-05-07
 | author = Jake Edge
 | publisher = [[LWN.net|LWN.net]]
 | archive-date = 2021-01-26
 | archive-url = https://web.archive.org/web/20210126131908/https://lwn.net/Articles/308445/
 | dead-url = no
 }}</ref><ref>{{cite web
 | url = https://lwn.net/Articles/232575/
 | title = UIO: user-space drivers
 | date = 2007-05-02
 | accessdate = 2015-05-07
 | author = Jonathan Corbet
 | publisher = [[LWN.net|LWN.net]]
 | archive-date = 2020-11-11
 | archive-url = https://web.archive.org/web/20201111193009/https://lwn.net/Articles/232575/
 | dead-url = no
 }}</ref>。多数人与Linux一起使用的[[X_Window系统|图形系统]]不运行在内核中。与标准单体内核不同，Linux的设备驱动程序可以轻易的配置为[[可载入核心模组|内核模块]]，并在系统运行期间可直接装载或卸载。也不同于标准单体内核，设备驱动程序可以在特定条件下被抢占；增加这个特征用于正确处理[[中断|硬件中断]]并更好的支持[[对称多处理|对称多处理]]<ref name="lwn-22912" />。出于自愿选择，Linux内核没有[[应用二进制接口|二进制内核接口]]<ref>{{cite web |url=https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/Documentation/stable_api_nonsense.txt |title=The Linux Kernel Driver Interface |last=Kroah-Hartman |first=Greg |authorlink=Greg Kroah-Hartman |deadurl=yes |archiveurl=https://archive.is/20131104101751/https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/Documentation/stable_api_nonsense.txt |archivedate=2013-11-04 |accessdate=2018-12-19 }}</ref>。

硬件也被整合入文件层级中。用户应用到设备驱动的接口是在{{Mono|[[Devfs|/dev]]}}或{{Mono|[[Sysfs|/sys]]}}目录下的入口文件<ref name="tldp file">{{cite web |url=http://tldp.org/LDP/Linux-Filesystem-Hierarchy/html/index.html |title=Linux Filesystem Hierarchy: Chapter 1. Linux Filesystem Hierarchy |last=Nguyen |first=Binh |date=2004-07-30 |publisher=The Linux Documentation Project |accessdate=2012-11-28 |archive-date=2020-12-02 |archive-url=https://web.archive.org/web/20201202064950/https://tldp.org/LDP/Linux-Filesystem-Hierarchy/html/index.html |dead-url=no }}</ref>。进程信息也通过{{Mono|[[procfs|/proc]]}}目录映射到文件系统<ref name="tldp file" />。
{{Linux layers}}

=== 編程語言 ===
Linux是用[[C語言|C語言]]中的[[GCC|GCC]]版（這種C語言有對標準C進行擴展）寫的，還有幾個用[[組合語言|組合語言]]（用的是GCC的"AT&T風格"）寫的目標架構短段。因為要支持擴展的C語言，GCC在很長的時間里是唯一一个能正确编译Linux的编译器。有許多其他的語言用在一些方面上，主要集中在內核構建過程中（這裡指從源代碼創建可啟動鏡像）。包括[[Perl|Perl]]、[[Python|Python]]和多種[[腳本語言|腳本語言]]。有一些驅動可能是用[[C++|C++]]、[[Fortran|Fortran]]或其他語言寫的，但是這樣是強烈不建議的。

=== {{Anchor|LLVMLINUX}}编译器兼容性 ===
[[GCC|GCC]]是Linux内核源代码的缺省[[编译器|编译器]]。在2004年，[[Intel|Intel]]主张通过修改内核，以便[[Intel_C++編譯器|Intel C++編譯器]]能正确编译内核。<ref>{{cite web |author=Ingo A. Kubbilun |url=http://www.pyrillion.org/index.html?showframe=linuxkernelpatch.html |title=Linux kernel patch for Intel Compiler |publisher=Pyrillion.org |date=2004-06-02 |accessdate=2010-11-12 |deadurl=yes |archiveurl=https://web.archive.org/web/20110722090031/http://www.pyrillion.org/index.html?showframe=linuxkernelpatch.html |archivedate=2011-07-22 }}</ref>在2009年，有通过修改内核2.6.22版而成功编译的报告（並帶來平均8-9%效能增長）。<ref>{{cite web |url=http://linux.slashdot.org/article.pl?sid=09/02/26/2216241 |title=High Performance Linux Kernel Project—LinuxDNA |publisher=Linux.slashdot.org |date= |accessdate=2010-10-30 |archive-date=2019-10-18 |archive-url=https://web.archive.org/web/20191018044639/https://linux.slashdot.org/story/09/02/26/2216241/high-performance-linux-kernel-project-linuxdna |dead-url=no }}</ref><ref>{{cite web |url=http://www.linuxjournal.com/content/linuxdna-supercharges-linux-intel-cc-compiler |title=LinuxDNA Supercharges Linux with the Intel C/C++ Compiler |publisher=Linux Journal |date= |accessdate=2010-10-30 |archive-date=2020-11-09 |archive-url=https://web.archive.org/web/20201109011614/https://www.linuxjournal.com/content/linuxdna-supercharges-linux-intel-cc-compiler |dead-url=no }}</ref>

自从2010年，已经开始进行使用[[Clang|Clang]]建造Linux内核的努力，Clang是一个可作为替代的C语言编译器<ref>{{cite mailing list |url=http://lists.cs.uiuc.edu/pipermail/cfe-dev/2010-October/011711.html |title=Clang builds a working Linux Kernel (Boots to RL5 with SMP, networking and X, self hosts) |last=Lelbach |first=Bryce |mailing-list=cfe-dev |date=2010-10-25 |archiveurl=https://web.archive.org/web/20150907044958/http://lists.cs.uiuc.edu/pipermail/cfe-dev/2010-October/011711.html |archivedate=2015-09-07 |access-date=2018-12-19 |dead-url=no }}</ref>；截止2014年4月12日，官方内核几乎可以完全用Clang编译<ref>{{cite web |url=https://www.phoronix.com/scan.php?page=news_item&px=MTY2MjY |title=Linux 3.15 Can Almost Be Compiled Under LLVM's Clang |last=Larabel |first=Michael |authorlink=Michael Larabel |date=2014-04-12 |publisher=[[Phoronix|Phoronix]] |accessdate=2014-06-10 |archive-date=2020-08-13 |archive-url=https://web.archive.org/web/20200813143201/https://www.phoronix.com/scan.php?page=news_item&px=MTY2MjY |dead-url=no }}</ref><ref>{{cite web |url=https://www.phoronix.com/scan.php?page=news_item&px=MTY2MjY |title=Patch By Patch, LLVM Clang Gets Better At Building The Linux Kernel |last=Larabel |first=Michael |authorlink=Michael Larabel |publisher=[[Phoronix|Phoronix]] |accessdate=2014-11-20 |archive-date=2020-08-13 |archive-url=https://web.archive.org/web/20200813143201/https://www.phoronix.com/scan.php?page=news_item&px=MTY2MjY |dead-url=no }}</ref>。致力于这个目标的计划叫做“LLVMLinux”，得名于Clang所基于的[[LLVM|LLVM]]编译器下部构造<ref>{{cite web |url=https://lwn.net/Articles/549203/ |title=LFCS: The LLVMLinux project |last=Edge |first=Jake |date=2013-05-07 |publisher=[[LWN.net|LWN.net]] |accessdate=2015-03-03 |archive-date=2020-08-10 |archive-url=https://web.archive.org/web/20200810165632/https://lwn.net/Articles/549203/ |dead-url=no }}</ref>。LLVMLinux不意图复制Linux内核或LLVM，因此它是由最终提交给上游计划的补丁构成的一个元计划。使Linux内核可以用Clang编译最大的好处是比GCC有更快的编译速度，内核开发者可以得益于由此而来的更快的工作流程<ref>{{cite web |url=http://llvm.org/devmtg/2014-02/slides/moller-llvmlinux.pdf |title=LLVMLinux: The Linux Kernel with Dragon Wings |last=Möller |first=Jan-Simon |date=2014-02-02 |publisher=[[LLVM|LLVM Project]] |accessdate=2015-03-03 |archive-date=2020-08-03 |archive-url=https://web.archive.org/web/20200803053328/http://llvm.org/devmtg/2014-02/slides/moller-llvmlinux.pdf |dead-url=no }}</ref>。

=== 接口 ===
{{Main article|{{en-link|Linux内核接口|Linux kernel interfaces}}}}
[[File:Linux_kernel_interfaces.svg|thumb]]
符合标准是Linux内核内部的普遍策略。另一个规则是Linux内核主线不接受只由专有用户空间软件使用的内核模块。

==== 内核至用户空间API ====
{{Main article|POSIX|单一UNIX规范}}
[[File:Linux_API.svg|thumb]]接口、[[GNU_C函数库|GNU C函数库]]、[[cgroups|libcgroup]]<ref name="libcgroup">{{cite web |url=http://www.freedesktop.org/wiki/Software/systemd/ControlGroupInterface/ |title=ControlGroupInterface |publisher=[[freedesktop.org|freedesktop.org]] |accessdate=2018-12-22 |archive-date=2020-11-30 |archive-url=https://web.archive.org/web/20201130074145/https://www.freedesktop.org/wiki/Software/systemd/ControlGroupInterface/ |dead-url=no }}</ref>、[[Direct_Rendering_Manager|libdrm]]、[[ALSA|libalsa]]和[[evdev|libevdev]]<ref name="libevdev">{{cite web |url=http://www.freedesktop.org/wiki/Software/libevdev/ |title=libevdev |publisher=[[freedesktop.org|freedesktop.org]] |accessdate=2018-12-22 |archive-date=2020-09-30 |archive-url=https://web.archive.org/web/20200930165439/https://www.freedesktop.org/wiki/Software/libevdev/ |dead-url=no }}</ref>。]]
源代码可移植性确保符合标准的C程序可以在符合同样标准的任何系统上编译和运行。Linux内核开发、[[GNU_C函数库|GNU C函数库]]和相关的实用工具致力于追随[[POSIX|POSIX]]和[[单一UNIX规范|单一UNIX规范]]。{{en-link|Linux内核API|Linux kernel interfaces}}是内核的[[系统调用|系统调用]]接口。

==== 内核至用户空间API ====
{{Main article|Linux标准规范}}
二进制可移植性将保证任何程序在符合标准的给定硬件平台上一旦编译通过，可以在符合同样标准的任何其他硬件平台上以编译后的形式运行。二进制可移植性是在基于Linux内核的操作系统上建造[[独立软件供应商|独立软件供应商]]（ISV）应用有商业可行性的本质要求。现有唯一的二进制兼容标准是[[Linux标准规范|Linux标准规范]]（LSB）。

==== 内核内API ====
[[File:Linux_kernel_and_OpenGL_video_games.svg|thumb]]来处理。渲染呈现的结果被存储在[[帧缓冲器|帧缓冲器]]，其中的内容由[[视频显示控制器|视频显示控制器]]扫描并发送至屏幕。]]
在不同子系统间使用了数个内核内部API。其中一些是跨越多个发行版保持稳定的，另一些则不然。对于内核内API不作担保。维护者和贡献者可以在任何时候增加或变更它们<ref>{{cite web |url=https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/Documentation/stable_api_nonsense.txt |title=The Linux Kernel Driver Interface |author=Greg Kroah-Hartman |accessdate=2015-04-10 |deadurl=yes |archiveurl=https://archive.is/20131104101751/https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/tree/Documentation/stable_api_nonsense.txt |archivedate=2013-11-04 }}</ref>。

内核内API的例子包括针对下列类别设备驱动程序的软件框架/API：
* [[Video4Linux|Video4Linux]]{{snd}}用于视频捕捉硬件。
* [[ALSA|高级Linux声音体系]]（ALSA）{{snd}}用于[[声卡|声卡]]。
* {{en-link|New API|New API}}{{snd}}用于[[网卡|网络接口控制器]]。
* {{en-link|直接渲染管理器|Direct Rendering Manager}}{{snd}}用于[[图形处理器|图形加速器]]。
* {{en-link|KMS驱动器|KMS driver}}{{snd}}用于{{en-link|视频显示控制器|Video display controller}}。
* [[mac80211|mac80211]]{{snd}}用于[[无线网卡|无线网络接口控制器]]<ref>{{cite web |url=https://wireless.wiki.kernel.org/en/developers/Documentation/mac80211 |title=About mac80211 |publisher=Linux Kernel Organization, Inc. |accessdate=2014-06-08 |archive-date=2021-02-01 |archive-url=https://web.archive.org/web/20210201114135/https://wireless.wiki.kernel.org/en/developers/documentation/mac80211 |dead-url=no }}</ref>。

==== 内核内ABI ====
Linux内核开发者选择不维护稳定的内核内ABI<ref>{{cite web|url=http://abi-laboratory.pro/tracker/timeline/linux/|title=Report on ABI changes in the Linux kernel|publisher=Andrey Ponomarenko's ABI laboratory|date=2016-03-17|accessdate=2018-12-19|archive-date=2016-03-12|archive-url=https://web.archive.org/web/20160312025113/http://abi-laboratory.pro/tracker/timeline/linux/|dead-url=no}}</ref>。

{{-}}
===技术特性  ===
==== 抢占式调度系统 ====
[[File:IO_stack_of_the_Linux_kernel.svg|thumb]]在Linux内核存储栈各层内的位置。<ref>{{cite web
 | url = https://www.thomas-krenn.com/en/wiki/Linux_Storage_Stack_Diagram
 | title = Linux Storage Stack Diagram
 | date = 2015-06-01
 | accessdate = 2015-06-08
 | author1 = Werner Fischer
 | author2 = Georg Schönberger
 | publisher = Thomas-Krenn AG
 | archive-date = 2019-06-29
 | archive-url = https://web.archive.org/web/20190629213450/https://www.thomas-krenn.com/en/wiki/Linux_Storage_Stack_Diagram
 | dead-url = no
 }}</ref>]]

Linux内核提供在特定条件下的[[抢占式多任务处理|抢先式调度]]。直到内核版本2.4，只有用户进程是抢先式的，就是说除了[[时间片|时间片]]用尽，在[[用户模式|用户模式]]下执行的当前进程，如果有更高态优先级的进程进入<code>TASK_RUNNING</code>状态，它就会被中断<ref>{{cite book |last1=Bovet |first1=Daniel P. |last2=Cesati |first2=Marco |date=October 2000 |title=Understanding the Linux Kernel |url=http://oreilly.com/catalog/linuxkernel/chapter/ch10.html |publisher=[[O'Reilly_Media|O'Reilly]] |chapter=Chapter 10: Process Scheduling |isbn=0-596-00002-2 |accessdate=2011-10-15 |archiveurl=https://web.archive.org/web/20140921000832/http://oreilly.com/catalog/linuxkernel/chapter/ch10.html |archivedate=2014-09-21 |deadurl=yes }}</ref>。自从2.6系列Linux内核，增加了中断执行[[分级保护域|内核代码]]的任务的能力，但不是对于内核代码的所有段落<ref>{{cite web |url=http://www.ibm.com/developerworks/linux/library/l-inside/index.html |title=Towards Linux 2.6, A look into the workings of the next new kernel |last=Santhanam |first=Anand |date=2003-09-23 |publisher=[[IBM_Global_Services|IBM Global Services]] |accessdate=2011-10-15 |archiveurl=https://web.archive.org/web/20130927200239/http://www.ibm.com/developerworks/linux/library/l-inside/index.html |archivedate=2013-09-27 |deadurl=yes }}</ref>。

Linux内核含有不同的调度器类<ref name="moshe">{{cite web |url=http://www.linuxjournal.com/article/3910 |title=The Linux Scheduler |last=Bar |first=Moshe |date=2000-04-01 |work=[[Linux_Journal|Linux Journal]] |publisher=Belltown Media, Inc. |accessdate=2012-04-14 |archive-date=2021-02-02 |archive-url=https://web.archive.org/web/20210202131440/https://www.linuxjournal.com/article/3910 |dead-url=no }}</ref>。内核缺省使用的调度机制叫做[[完全公平调度器|完全公平调度器]]，它介入于内核版本2.6.23<ref>{{cite mailing list |title=[patch] Modular Scheduler Core and Completely Fair Scheduler [CFS] |url=https://lwn.net/Articles/230501/ |last=Molnár |first=Ingo |authorlink=Ingo Molnár |date=2007-04-13 |mailinglist=[[LKML|LKML]] |accessdate=2012-04-14 |archive-date=2020-11-03 |archive-url=https://web.archive.org/web/20201103034312/https://lwn.net/Articles/230501/ |dead-url=no }}</ref>。这个缺省调度器类在内部也叫做<code>SCHED_OTHER</code>，而内核还含有两个遵循POSIX的实时调度类<ref name="posix1b">{{cite web|url=http://www.opengroup.org/onlinepubs/009695399|title=IEEE Standard for Information Technology – Portable Operating System Interface, POSIX.1b, Real-time extensions (IEEE Std 1003.1b-1993)|accessdate=2018-12-08|archive-date=2010-11-16|archive-url=https://web.archive.org/web/20101116144926/http://www.opengroup.org/onlinepubs/009695399/|dead-url=no}}</ref>，分别叫做<code>SCHED_FIFO</code>（实时[[先进先出|先进先出]]）和<code>SCHED_RR</code>（实时[[循环制|轮流式]]），二者都优先于缺省类<ref name="moshe" />。

通过使用实时Linux内核补丁<code>PREEMPT_RT</code>，可以支持对关键段落、中断处理器和“中断禁用”代码序列的完全抢先<ref>{{cite web |url=https://lwn.net/Articles/146861/ |title=A realtime preemption overview |last=McKenney |first=Paul |date=2005-08-10 |publisher=[[LWN.net|LWN.net]] |accessdate=2012-02-05 |archive-date=2020-08-10 |archive-url=https://web.archive.org/web/20200810165635/https://lwn.net/Articles/146861/ |dead-url=no }}</ref>。 实时Linux内核补丁部分地集成入主线内核已经带给它一些功能<ref>{{cite web |url=https://www.osadl.org/Realtime-Linux.projects-realtime-linux.0.html |title=OSADL Project: Realtime Linux |publisher=[[OSADL|OSADL]] |accessdate=2012-02-05 |archive-date=2021-02-04 |archive-url=https://web.archive.org/web/20210204170950/https://www.osadl.org/Realtime-Linux.projects-realtime-linux.0.html |dead-url=no }}</ref>。抢先机制改善[[延迟_(工程学)|延迟]]、增进响应性，并使得Linux更加适合桌面和[[实时计算|实时]]应用。老版本内核有所谓的{{en-link|巨锁|Giant lock}}，用于锁定粒度为整个内核的同步，它最终由Arnd Bergmann在2011年移除了<ref>{{cite web |url=https://git.kernel.org/?p=linux/kernel/git/torvalds/linux-2.6.git;a=commitdiff;h=4ba8216cd90560bc402f52076f64d8546e8aefcb |archive-url=https://archive.is/20120720043351/http://git.kernel.org/?p=linux/kernel/git/torvalds/linux-2.6.git;a=commitdiff;h=4ba8216cd90560bc402f52076f64d8546e8aefcb |dead-url=yes |archive-date=2012-07-20 |title=BKL: That's all, folks |last=Bergmann |first=Arnd |date=2011-03-05 |publisher=Linux Kernel Organization, Inc. |accessdate=2012-02-20 }}</ref>。

还有叫做<code>{{en-link|SCHED_DEADLINE|SCHED_DEADLINE}}</code>的调度策略，实现了{{en-link|最近截止期限最先|earliest deadline first scheduling}}（EDF）算法，它增加于2014年3月30日发行的内核版本3.14<ref>{{cite web |url=https://www.phoronix.com/scan.php?page=news_item&px=MTU4Mjg |title=The Linux 3.14 Kernel Already Has Many Exciting Features |last=Larabel |first=Michael |authorlink=Michael Larabel |date=2014-01-24 |publisher=[[Phoronix|Phoronix]] |accessdate=2014-02-03 |archive-date=2020-08-13 |archive-url=https://web.archive.org/web/20200813143115/https://www.phoronix.com/scan.php?page=news_item&px=MTU4Mjg |dead-url=no }}</ref><ref>{{cite web |url=http://kernelnewbies.org/Linux_3.14#head-651929cdcf19cc2e2cfc7feb16b78ef963d195fe |title=Linux kernel 3.14, Section 1.1. Deadline scheduling class for better real-time scheduling |date=2014-03-30 |website=kernelnewbies.org |accessdate=2014-04-02 |archive-date=2021-01-15 |archive-url=https://web.archive.org/web/20210115101454/https://kernelnewbies.org/Linux_3.14#head-651929cdcf19cc2e2cfc7feb16b78ef963d195fe |dead-url=no }}</ref>。

==== 可移植性 ====
[[File:Pyra-Render-frontside-new.png|thumb]]
尽管林納斯·托瓦茲的初衷不是使Linux成为一个可移植的操作系统，今天的Linux却是全球被最广泛移植的操作系统内核。從行動電話到超級電腦，甚至於有人成功的將Linux内核在[[索尼|索尼]]出品的遊戲機[[PlayStation_2|PS2]]及[[PS3|PS3]]和[[微軟|微軟]]出品的遊戲機[[Xbox|Xbox]]上使用。Linux也是IBM[[超级计算机|超级计算机]][[Blue_Gene|Blue Gene]]的操作系统。直至2011年11月，全球前五百大超級電腦（[[TOP500|TOP500]]）有高達91.4%的比例採用Linux為它們的作業系統<ref>{{citeweb |url=http://i.top500.org/stats |title=TOP500 Statistics |publisher=Top500 |accessdate=2012-04-26 |deadurl=yes |archiveurl=https://web.archive.org/web/20121102143108/http://i.top500.org/stats |archivedate=2012-11-02 }}</ref>。一些为手机开发的操作系统，使用Linux内核的修改后的版本，其中包括谷歌[[Android|Android]]、[[Firefox_OS|Firefox OS]]、HP [[WebOS|WebOS]]和诺基亚[[Maemo|Maemo]]。<ref name="hartmann">{{cite web | url = http://www.kroah.com/log/linux/android-kernel-problems.html | title = Android and the Linux kernel community | date = 2010-02-02 | author = [[Greg_Kroah-Hartman|Greg Kroah-Hartman]] | quote = ''This means that any drivers written for Android hardware platforms, can not get merged into the main kernel tree because they have dependencies on code that only lives in Google's kernel tree, causing it to fail to build in the kernel.org tree. Because of this, Google has now prevented a large chunk of hardware drivers and platform code from ever getting merged into the main kernel tree. Effectively creating a kernel branch that a number of different vendors are now relying on.'' | accessdate = 2010-02-03 | archive-date = 2019-04-27 | archive-url = https://web.archive.org/web/20190427144039/http://www.kroah.com/log/linux/android-kernel-problems.html | dead-url = no }}</ref><ref name="hartmann2">{{cite web | url = http://news.zdnet.com/2100-9595_22-389733.html | title = Linux developer explains Android kernel code removal | date = 2010-02-02 | publisher = [[ZDNet|ZDNet]] | accessdate = 2010-02-03 | deadurl = yes | archiveurl = https://web.archive.org/web/20100206205020/http://news.zdnet.com/2100-9595_22-389733.html | archivedate = 2010-02-06 }}</ref><ref name="maemo">{{cite web | url = http://maemo.org/intro/platform/ | title = Maemo platform described as being based on Linux kernel | date = 2010-04-09 | publisher = Maemo community | accessdate = 2010-04-09 | archive-date = 2020-09-27 | archive-url = https://web.archive.org/web/20200927000502/http://maemo.org/intro/platform/ | dead-url = no }}</ref>

====内核错误和oops====
[[File:Kernel-panic.jpg|thumb]]
{{Main|Kernel panic|Linux内核oops}}

在Linux中，[[内核错误|内核错误]]（{{lang|en|Kernel panic}}）是指[[操作系统|操作系统]]在监测到内核系统内部无法恢复的错误，相对于在[[用户空间|用户空间]]代码类似的错误。操作系统试图读写无效或不允许的[[内存地址|内存地址]]是导致内核错误的一个常见原因。内核错误也有可能在遇到硬件错误或操作系统BUG时发生。在许多情况中，操作系统可以在[[内存访问违例|内存访问违例]]发生时继续运行。然而，系统处于不稳定状态时，操作系统通常会停止工作以避免造成破坏安全和数据损坏的风险，并提供错误的诊断信息。

在Linux上，[[Linux内核oops|oops]]即Linux内核的行为不正确，并产生了一份相关的错误日志。许多类型的oops会导致内核错误，即令系统立即停止工作，但部分oops也允许继续操作，作为与[[稳定性|稳定性]]的妥协。这个概念只代表一个简单的[[错误|错误]]。当内核检测到问题时，它会打印一个oops信息然后[[kill_(命令)|杀死]]全部相关[[进程|进程]]。oops信息可以帮助Linux内核工程师[[调试|调试]]，检测oops出现的条件，并[[修补程式|修复]]导致oops的程序错误。

=== 安全 ===
[[计算机安全|计算机安全]]是一个非常公众化的主题，关系到Linux内核，因为大量在内核中的错误可能成为潜在的安全漏洞，是否允许提升权限漏洞或拒绝服务攻击源漏洞。<ref>{{cite book | url = http://books.google.com/books?id=-kD0sxQ0EkIC&pg=PA14 | title = Linux-- Security, Audit and Control Features | author = K.K. Mookhey, Nilesh Burghate and ISACA | publisher = ISACA | year = 2005 | page = 14 | isbn = 1-893209-78-4 | access-date = 2012-11-15 | archive-date = 2020-08-04 | archive-url = https://web.archive.org/web/20200804105632/https://books.google.com/books?id=-kD0sxQ0EkIC&pg=PA14 | dead-url = no }}</ref>在过去的几年中，许多这样的缺陷被发现，并在Linux内核中被修补好。新的安全功能被继续实现，以解决在Linux内核中的电脑不安全问题。<ref>{{cite book | url = http://books.google.com/books?id=f5Vz08spzw8C&pg=PA524 | title = Hacking exposed Linux: Linux security secrets & solutions | page = 524 | author = Brian Hatch | publisher = McGraw Hill Professional | year = 2008 | isbn = 0-07-226257-5 | access-date = 2012-11-15 | archive-date = 2020-08-04 | archive-url = https://web.archive.org/web/20200804184914/https://books.google.com/books?id=f5Vz08spzw8C&pg=PA524 | dead-url = no }}</ref><ref>{{cite book | url = http://books.google.com/books?id=P4PYPSv8nBMC&pg=PA122 | title = Operating system security | author = Trent Jaeger | publisher = Morgan & Claypool Publishers | year = 2008 | page = 122 | isbn = 1-59829-212-9 | access-date = 2012-11-15 | archive-date = 2021-01-26 | archive-url = https://web.archive.org/web/20210126003428/https://books.google.com/books?id=P4PYPSv8nBMC&pg=PA122 | dead-url = no }}</ref>

批評者指責內核開發人員，稱他們掩蓋（至少並未公佈）安全漏洞。2008年，作為回應，Torvalds稱：「個人認為，安全漏洞只是『正常的漏洞』。這些漏洞我並不去掩蓋，不過我不認為應當把它們特殊化，更不認為應該追蹤並公示它們……我不理會整個安全團隊，原因之一就是，我認為這些漏洞不僅美化還鼓勵了錯誤的行為。這令安全人員成了『英雄』，就猶如不修補正常漏洞的人就不值一提似的。而事實上，所有無聊的正常漏洞極為重要，僅僅因為它們實在太多了。我不認為該美化和關心那些嚴重的安全漏洞——它們並不及那些由死鎖造成的隨機嚴重崩潰來得更特殊。」<ref>{{cite web |url=http://kerneltrap.org/Linux/Security_Bugs_and_Full_Disclosure |title=Security Bugs and Full Disclosure |author=Jeremy Andrews |date=2008-07-16 |accessdate=2010-12-31 |archiveurl=https://archive.is/20120710023859/http://kerneltrap.org/Linux/Security_Bugs_and_Full_Disclosure |archivedate=2012-07-10 |deadurl=yes }}</ref><ref>{{cite mailing list | url = http://seclists.org/fulldisclosure/2008/Jul/276 | title = Linux's unofficial security-through-coverup policy | author = Brad Spengler | mailinglist = Full-Disclosure | date = 2008-07-16 | accessdate = 2010-12-31 | archive-date = 2020-08-07 | archive-url = https://web.archive.org/web/20200807161645/https://seclists.org/fulldisclosure/2008/Jul/276 | dead-url = no }}</ref>

如2012年五月，SYSRET指令被發現在AMD和英特爾處理器間在實現方面有差異，這個差異在[[Windows|Windows]]、[[FreeBSD|FreeBSD]]、[[XenServer|XenServer]]和[[Solaris|Solaris]]這些主流作業系統會導致漏洞。2012年六月，Linux核心中該問題已被修復。<ref>{{cite web |url=http://blog.xen.org/index.php/2012/06/13/the-intel-sysret-privilege-escalation/ |title=The Intel SYSRET privilege escalation – |publisher=Blog.xen.org |date=2012-06-13 |accessdate=2012-07-26 |archive-url=https://web.archive.org/web/20120616221259/http://blog.xen.org/index.php/2012/06/13/the-intel-sysret-privilege-escalation/ |archive-date=2012-06-16 |dead-url=yes }}</ref>

2021年，來自[[明尼蘇達大學|明尼蘇達大學]]的研究人員，曾藉由貢獻修補程式至Linux核心的名義，利用修補程式導入臭蟲或漏洞，以觀察Linux核心社群的反應，再度故技重施時，被發現後封鎖了所有來自該大學的貢獻，與移除過去該大學曾經貢獻的程式碼。<ref>{{cite news |author1=陳曉莉 |title=把漏洞導入Linux核心來作實驗，Linux大佬封殺明尼蘇達大學所有貢獻 |url=https://www.ithome.com.tw/news/143992 |accessdate=2021-04-22 |publisher=ithome |date=2021-04-22 |archive-date=2021-04-27 |archive-url=https://web.archive.org/web/20210427112244/https://www.ithome.com.tw/news/143992 }}</ref>

== 开發 ==
<div class="tright">
{{Graph:Chart
| width = 400
| height = 200
| type = rect
| xAxisTitle = 内核版本
| yAxisTitle = 百万行代码
| x = 1.0.0, 2.0.0, 2.1.0, 2.2.0, 2.3.0, 2.4.0, 2.5.0, 2.6.0,   3.0,    4.0,   5.0,  5.12,  5.15
| y =  0.17,  0.71,  0.73,  1.67,  1.76,  3.15,  3.83,  8.10, 14.64,  19.31, 26.20, 30.55, 31.81
}}
<!-- Lines are counted with "find . -type f -not -regex '\./\.git/.*' | xargs cat | wc -l" -->
</div>
=== 开发者社区 ===
截止2007年，内核开发已经从20位最活跃开发者写80%的代码转变为顶端30人写30%的代码，而顶端开发者花费更多的时间审核变更。<ref name="dev">{{Cite news|url=http://www.computerworlduk.com/applications/are-top-linux-developers-losing-the-will-to-code-604/|title=Are top Linux developers losing the will to code?|last=Marti|first=Don|newspaper=ComputerworldUK|language=en-GB|access-date=2016-10-24|archive-date=2019-06-12|archive-url=https://web.archive.org/web/20190612141838/https://www.computerworlduk.com/applications/are-top-linux-developers-losing-the-will-to-code-604/|dead-url=no}}</ref> 开发者还可以按从属关系来归类；在2007年，顶端类属是“不知名”而顶端公司是Red Hat，它占有12%的贡献，而知名业余爱好者占3.9%。<ref name="dev" /> 在2007年中所做内核变更已经由超过1900位开发者提交。一般假定Linux内核开发者社区由5000或6000名成员组成。

Linux基金会发表的[https://web.archive.org/web/20160822224924/http://go.linuxfoundation.org/linux-kernel-development-report-2016 2016年Linux内核开发报告]的更新表明，从版本3.18（2014年12月）至4.7（2016年7月）期间：平均每次发行有来自200-250个公司的大约1500位开发者作出贡献。顶端30位开发者贡献了稍大于16%的代码。在公司中，顶端贡献者是Intel（12.9%）和Red Hat（8.0%），第三和第四位为“none”（7.7%）和“unknown”（6.8%）类属。

=== 开发过程与模式 ===
一个想要对 Linux 内核进行修改的开发者一般就从对那个修改的开发和测试开始着手。接下来的过程取决于变化的重要程度，及修改该变更的子系统数量是由单个还是多个修补程序组成。如果仅仅是修改了由单个维护人员维护的单个子系统，那么这些修改的补丁代码就直接通过Cc中某个邮件列表发送给相关的维护人员。邮件列表的阅读者和子系统的维护人员将检查补丁代码并提供反馈。一旦审查过程完成，维护者接受他内核代码树中的补丁。如果这些更改被认为是够重要的错误修复，那么包含这些修补程序的拉取请求（pull request）将在几天内发送给Linus。否则，将在下一个合并窗口时向Linus发送拉取请求。合并窗口通常会持续两周，并在之前的内核版本发布后立即启动<ref>{{cite web |title=How the development process works |url=https://www.kernel.org/doc/html/latest/process/2.Process.html |accessdate=2018-02-04 |archive-date=2017-12-09 |archive-url=https://web.archive.org/web/20171209130758/https://www.kernel.org/doc/html/latest/process/2.Process.html |dead-url=no }}</ref>。

Linus Torvalds拥有对Linux内核能够接受哪些更改和谁可以成为维护者的最终决定权。内核维护者在他们自愿放弃之前将维持他们的角色。目前，没有任何已知的内核维护者被要求退出。此外，还没有一个内核维护者因与其他维护者的交互风格的因素而受到Linus批评的例子。这为维护者提供了宽松的社区空间。虽然内核开发社区的文化多年来有所改善，但曾有一段时间它的声誉很糟糕<ref>{{cite web |first=Simon |last=Sharwood |title=Linux kernel dev who asked Linus Torvalds to stop verbal abuse quits over verbal abuse |url=https://www.theregister.co.uk/2015/10/06/linix_kernel_dev_who_asked_linus_torvalds_to_stop_swearing_quits_over_swearing/ |website=The Register |date=2015-10-06 |accessdate=2018-02-19 |archive-date=2020-03-29 |archive-url=https://web.archive.org/web/20200329075939/https://www.theregister.co.uk/2015/10/06/linix_kernel_dev_who_asked_linus_torvalds_to_stop_swearing_quits_over_swearing/ |dead-url=no }}</ref><ref>{{cite web |first=Jonathan |last=Corbet |title=Bash the kernel maintainers |url=https://lwn.net/Articles/738222/ |website=LWN.net |date=2017-11-06 |accessdate=2018-02-04 |archive-date=2021-01-26 |archive-url=https://web.archive.org/web/20210126003428/https://lwn.net/Articles/738222/ |dead-url=no }}</ref>。认为自己遭受了不公正对待的开发者可以向Linux基金会的技术专家委员会报告<ref>{{cite web |title=Code of Conflict |url=https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/Documentation/process/code-of-conflict.rst |accessdate=2018-02-04 }}{{Dead link|date=2019年5月 |bot=InternetArchiveBot |fix-attempted=yes }}</ref>。尽管如此，一些社区成员仍然不认同现在的讨论氛围<ref>{{cite web |first=Jake |last=Edge |title=Too many lords, not enough stewards |url=https://lwn.net/Articles/745817/ |website=LWN.net |date=2018-01-31 |accessdate=2018-02-04 |archive-date=2020-11-09 |archive-url=https://web.archive.org/web/20201109004145/https://lwn.net/Articles/745817/ |dead-url=no }}</ref>。

==== 同 Linux 发行版的关系 ====
大多数Linux用户运行一个由他们 Linux 发行版提供的内核。一些发行版搭载的是 Linux 的通用内核（也就是 “vanilla”或“stable”）版本。不过，一些Linux内核发行商（如[[Red_Hat|Red Hat]]和[[SUSE|SUSE]]）会维护他们自己的内核分支。这些发行商分支的内核版本通常相对于稳定版本（vanilla）而言更新的速度更慢一些，但是同样会包括所有相关的稳定版本分支的补丁。此外，他们同时也会增添一些新特性和对新硬件的支持，而这些支持是这些发行商分支基于的稳定分支所不包括的。

=== 重新开发的估价 ===
[[File:Redevelopment_costs_of_Linux_kernel.png|thumb]]
按照传统商业软件开发的方式，重新开发Linux 2.6.0内核的估计代价将是6.12亿美元（4.67亿欧元、3.94亿英镑），以2004年的[[COCOMO|COCOMO]]人月估计模型.<ref>{{cite web
|url = http://www.dwheeler.com/essays/linux-kernel-cost.html
|title = Linux Kernel 2.6: It's Worth More!
|author = David A. Wheeler
|accessdate = 2012-11-15
|archive-date = 2011-08-21
|archive-url = https://www.webcitation.org/616XYjg7d?url=http://www.dwheeler.com/essays/linux-kernel-cost.html
|dead-url = no
}}</ref>在2006年，欧盟资助的一项研究表明，重新开发Linux 2.6.8以后的内核，代价是8.82亿欧元（11.4亿美元、7.44亿英镑）<ref>[http://ec.europa.eu/enterprise/sectors/ict/files/2006-11-20-flossimpact_en.pdf Economic impact of FLOSS on innovation and competitiveness of the EU ICT sector] {{Wayback|url=http://ec.europa.eu/enterprise/sectors/ict/files/2006-11-20-flossimpact_en.pdf |date=20100215190539 }}, Table 3 on page 50.</ref>。

截至2011年1月4日，使用当前的代码行（LOC）和大卫·惠勒的计算工资数，这将花费约30亿美元（约22亿欧元），才能够重新开发Linux的内核。<ref>{{cite web|last=Wheeler|first=David|title=The Linux Kernel: It’s Worth More!|url=http://www.dwheeler.com/essays/linux-kernel-cost.html|accessdate=2012-09-17|archive-date=2011-08-21|archive-url=https://www.webcitation.org/616XYjg7d?url=http://www.dwheeler.com/essays/linux-kernel-cost.html|dead-url=no}}</ref>

=== 版本維護 ===
{{main|{{en-link|Linux内核版本历史|Linux kernel version history}}}}
===={{Nowrap|2.6.0之前的版本系列}}====
{|  class="wikitable mw-collapsible mw-collapsed"
|-
!內核
!初始发行日期
!最新版本
!維護者
!支持状态
|-
| {{Version|o|0.01}}
| {{dts|format=dmy|1991|09|17}}
| 0.03
| rowspan="8" | {{Nowrap|[[林納斯·托瓦茲|林納斯·托瓦茲]]}}
| [[產品壽命結束|EOL]]
|-
| {{Version|o|0.10}}
| 1991年11月
| 0.12
| EOL
|-
| {{Version|o|0.95}}
| {{dts|format=dmy|1992|03|08}}
| 0.99.15
| EOL
|-
| {{Version|o|1.0}}
| {{dts|format=dmy|1994|03|14}}
| 1.0.9
| EOL
|-
| {{Version|o|1.1}}
| {{dts|format=dmy|1994|04|06}}
| 1.1.95
| EOL
|-
| {{Version|o|1.2}}
| {{dts|format=dmy|1995|03|07}}
| 1.2.13
| EOL
|-
| {{Version|o|1.3}}
| {{dts|format=dmy|1995|06|12}}
| 1.3.100<ref>{{cite mailing list |url=http://lkml.iu.edu/hypermail/linux/kernel/9605.1/0316.html |title=Century Linux! |last=Torvalds |first=Linus |authorlink=Linus Torvalds |date=1996-05-10 |mailinglist=[[LKML|LKML]] |accessdate=2016-04-29 |archive-date=2019-09-05 |archive-url=https://web.archive.org/web/20190905215157/http://lkml.iu.edu/hypermail/linux/kernel/9605.1/0316.html |dead-url=no }}</ref>
| EOL
|-
| {{Version|o|pre2.0}}
| {{dts|format=dmy|1996|05|12}}
| pre2.0.14
| EOL
|-
|{{Version|o|2.0}}
|{{dts|1996|06|09}}
|2.0.40<ref>{{cite web|url=http://kerneltrap.org/node/2279|title=[ANNOUNCE] Linux-kernel 2.0.40 aka ``The Moss-covered Tortoise''|author=David Weinehall|date=2004-02-08|archiveurl=https://archive.is/20120530045533/http://kerneltrap.org/node/2279|archivedate=2012-05-30|deadurl=yes|accessdate=2009-05-08}}</ref>
|[[David_Weinehall|David Weinehall]]
|EOL
|-
|{{Version|o|2.2}}
|{{dts|1999|01|26}}
|2.2.27-rc2<ref>{{cite web|url=http://kerneltrap.org/node/4533|title=Linux 2.2.27-rc2|author=Marc-Christian Petersen|date=2005-01-13|archiveurl=https://archive.is/20120530045533/http://kerneltrap.org/node/4533|archivedate=2012-05-30|deadurl=yes|accessdate=2010-03-14}}</ref>
|[[Marc-Christian_Petersen|Marc-Christian Petersen]]（前維護者[[艾倫·考克斯|艾倫·考克斯]]）
|EOL
|-
|{{Version|o|2.4}}
|{{dts|2001|01|04}}
|2.4.37.11<ref>{{cite mailing list|author=Willy Tarreau|url=http://marc.info/?l=linux-kernel&m=125761436627901|title=Linux 2.4.37.7|mailinglist=linux-kernel|date=2009-07-26|access-date=2010-03-14|archive-date=2020-08-07|archive-url=https://web.archive.org/web/20200807095426/https://marc.info/?l=linux-kernel&m=125761436627901|dead-url=no}}</ref>
|[[Willy_Tarreau|Willy Tarreau]]（前維護者[[Marcelo_Tosatti|Marcelo Tosatti]]）
|EOL
|-
| colspan="5" | <small>{{Version |l |show=111110}}</small>
|}

===={{Nowrap|2.6.x.y版本系列（主要版本）}}====
{| class="wikitable mw-collapsible mw-collapsed"
|-
!內核
!初始发行日期
!最新版本
!維護者
!支持状态
|-
|{{Version|o|2.6.16}}
|{{dts|2006|03|20}}
|2.6.16.62<ref>{{cite mailing list|author=Adrian Bunk|url=http://marc.info/?l=linux-kernel&m=121667337007967|title=Linux 2.6.16.62|mailinglist=linux-kernel|date=2008-07-21|access-date=2009-05-08|archive-date=2022-03-18|archive-url=https://web.archive.org/web/20220318062756/https://marc.info/?l=linux-kernel&m=121667337007967}}</ref>
|[[Adrian_Bunk|Adrian Bunk]]（前維護者[[葛雷格·克羅哈曼|葛雷格·克羅哈曼]]）
|EOL
|-
|{{Version|o|2.6.27}}
|{{dts|2008|10|09}}
|2.6.27.62
|[[葛雷格·克羅哈曼|葛雷格·克羅哈曼]]<ref name="gregkh-2.6.27">{{cite mailing list|author=Greg Kroah-Hartman|url=http://marc.info/?l=linux-kernel&m=125245118518458|title=Re: 2.6.27 maintenance plans after 2.6.32 is released|mailinglist=linux-kernel|date=2009-09-08|access-date=2010-04-09|archive-date=2020-05-16|archive-url=https://web.archive.org/web/20200516011128/https://marc.info/?l=linux-kernel&m=125245118518458|dead-url=no}}</ref>
|EOL
|-
|{{Version|o|2.6.32}}
|{{dts|2009|12|03}}
|2.6.32.71<ref>{{cite mailing list|author=Greg Kroah-Hartman|url=http://www.kernel.org/pub/linux/kernel/v2.6/longterm/v2.6.32/ChangeLog-2.6.32.71|title=Linux 2.6.32.71|mailinglist=linux-kernel|date=2015-09-18|access-date=2016-03-14|archive-date=2017-04-05|archive-url=https://web.archive.org/web/20170405072114/https://www.kernel.org/pub/linux/kernel/v2.6/longterm/v2.6.32/ChangeLog-2.6.32.71|dead-url=no}}</ref>
|[[Willy_Tarreau|Willy Tarreau]]<ref name="Active kernel releases">{{cite web|title=Active kernel releases|url=https://www.kernel.org/category/releases.html|accessdate=2022-03-03|date=2013-08-06|publisher=Kernel.org|language=en|archive-url=https://web.archive.org/web/20171207174507/https://www.kernel.org/category/releases.html|archive-date=2017-12-07|dead-url=no}}</ref>（前維護者[[葛雷格·克羅哈曼|葛雷格·克羅哈曼]]）
|EOL
|-
|{{Version|o|2.6.34}}
|{{dts|2010|05|16}}
|2.6.34.15<ref>{{Cite web |url=http://kernel.org/ |title=存档副本 |accessdate=2011-02-02 |archive-date=2011-08-21 |archive-url=https://www.webcitation.org/616XZbj71?url=http://kernel.org/ |dead-url=no }}</ref>
|[[Paul_Gortmaker|Paul Gortmaker]]（前維護者[[Andi_Kleen|Andi Kleen]]）
|EOL
|-
|{{Version|o|2.6.39}}
|{{dts|2011|05|19}}
|2.6.39.4
|{{Nowrap|[[林納斯·托瓦茲|林納斯·托瓦茲]]}}
|EOL
|-
| colspan="5" | <small>{{Version |l |show=111110}}</small>
|}

===={{Nowrap|3.x.y版本系列}}==== 
{| class="wikitable mw-collapsible mw-collapsed"
|-
!內核
!初始发行日期
!最新版本
!維護者
!支持状态
|-
|{{Version|o|3.0}}
|{{dts|2011|07|22}}
|3.0.101
|{{Nowrap|[[葛雷格·克羅哈曼|葛雷格·克羅哈曼]]}}
|EOL
|-
|{{Version|o|3.2}}
|{{dts|2012|01|05}}
|3.2.99
|[[Ben_Hutchings|Ben Hutchings]]
|EOL
|-
|{{Version|o|3.4}}
|{{dts|2012|05|21}}
|3.4.113
|[[Li_Zefan|Li Zefan]]（前維護者{{Nowrap|[[葛雷格·克羅哈曼|葛雷格·克羅哈曼]]}}）
|EOL
|-
|{{Version|o|3.5}}
|{{dts|2012|07|21}}
|3.5.7
|葛雷格·克羅哈曼
|EOL
|-
|{{Version|o|3.6}}
|{{dts|2012|10|01}}
|3.6.11
|葛雷格·克羅哈曼
|EOL
|-
|{{Version|o|3.7}}
|{{dts|2012|12|11}}
|3.7.10
|葛雷格·克羅哈曼
|EOL
|-
|{{Version|o|3.8}}
|{{dts|2013|02|19}}
|3.8.13
|葛雷格·克羅哈曼
|EOL
|-
|{{Version|o|3.9}}
|{{dts|2013|04|29}}<ref>{{cite web|url=http://lkml.indiana.edu/hypermail/linux/kernel/1304.3/02009.html|title=Linux 3.9 released|accessdate=2013-05-12|date=2013-05-28|last=Torvalds|first=Linus|work=|publisher=[[Linux_kernel_mailing_list|Linux kernel mailing list]]|archive-date=2014-02-10|archive-url=https://web.archive.org/web/20140210092548/http://lkml.indiana.edu/hypermail/linux/kernel/1304.3/02009.html|dead-url=no}}</ref>
|3.9.11
|葛雷格·克羅哈曼
|EOL
|-
|{{Version|o|3.10}}
|{{dts|2013|06|30}}
|3.10.108
|Willy Tarreau
|EOL
|-
|{{Version|o|3.11}}
|{{dts|2013|09|02}}
|3.11.10
|葛雷格·克羅哈曼
|EOL
|-
|{{Version|o|3.12}}
|{{dts|2013|11|03}}
|3.12.74
|[[Jiri_Slaby|Jiri Slaby]]（前維護者[[葛雷格·克羅哈曼|葛雷格·克羅哈曼]]）
|EOL
|-
|{{Version|o|3.13}}
|{{dts|2014|01|20}}
|3.13.11
|葛雷格·克羅哈曼
|EOL
|-
|{{Version|o|3.14}}
|{{dts|2014|03|31}}
|3.14.79
|葛雷格·克羅哈曼
|EOL
|-
|{{Version|o|3.15}}
|{{dts|2014|06|08}}
|3.15.10
|葛雷格·克羅哈曼
|EOL
|-
|{{Version|o|3.16}}
|{{dts|2014|08|03}}
|3.16.54
|Ben Hutchings
|EOL
|-
|{{Version|o|3.17}}
|{{dts|2014|10|05}}
|3.17.8
|葛雷格·克羅哈曼
|EOL
|-
|{{Version|o|3.18}}
|{{dts|2014|12|07}}
|3.18.95
|Sasha Levin
|EOL
|-
|{{Version|o|3.19}}
|{{dts|2015|02|09}}
|3.19.8
|葛雷格·克羅哈曼
|EOL
|-
| colspan="5" | <small>{{Version |l |show=111110}}</small>
|}

===={{Nowrap|4.x.y版本系列}}====
{| class="wikitable mw-collapsible mw-collapsed"
|-
!內核
!初始发行日期
!最新版本
!維護者
!支持状态
|-
|{{Version|o|4.0}}
|{{dts|2015|04|12}}
|4.0.9
|{{Nowrap|[[葛雷格·克羅哈曼|葛雷格·克羅哈曼]]}}
|EOL
|-
|{{Version|o|4.1}}
|{{dts|2015|06|22}}
|4.1.52
|Sasha Levin<ref>{{cite mailing list |url=https://lkml.org/lkml/2016/1/31/156 |title=4.1 is now maintained by Sasha Levin |last=Kroah-Hartman |first=Greg |authorlink=Greg Kroah-Hartman |date=2016-01-31 |mailinglist=[[LKML|LKML]] |accessdate=2016-02-22 |archive-date=2020-05-19 |archive-url=https://web.archive.org/web/20200519054430/https://lkml.org/lkml/2016/1/31/156 |dead-url=no }}</ref><br />{{Nowrap|(曾经是葛雷格·克羅哈曼)}}<ref>{{cite mailing list |url=https://lkml.org/lkml/2015/9/23/686 |title=4.1 is a longterm kernel |last=Kroah-Hartman |first=Greg |authorlink=Greg Kroah-Hartman |date=2015-09-23 |mailinglist=[[LKML|LKML]] |accessdate=2015-09-27 |archive-date=2020-08-10 |archive-url=https://web.archive.org/web/20200810161141/https://lkml.org/lkml/2015/9/23/686 |dead-url=no }}</ref>
|EOL
|-
|{{Version|o|4.2}}
|{{dts|2015|08|30}}
|4.2.8
|葛雷格·克羅哈曼
|EOL
|-
|{{Version|o|4.3}}
|{{dts|2015|11|02}}
|4.3.6
|葛雷格·克羅哈曼
|EOL
|-
|{{Version|co|4.4}}
|2016年1月10日
|4.4.302
|葛雷格·克羅哈曼
|长期支持版本，從2016年1月至2022年2月，作为第一个被选为超级长期支持(SLTS)的内核，民间下部构造平台将提供支持直到至少2026年，可能直到2036年<ref>{{cite web |title=Kernel Maintenance |website=Linux Foundation Wiki |url=https://wiki.linuxfoundation.org/civilinfrastructureplatform/cipkernelmaintenance |accessdate=2019-12-23 |archive-date=2020-11-12 |archive-url=https://web.archive.org/web/20201112034926/https://wiki.linuxfoundation.org/civilinfrastructureplatform/cipkernelmaintenance |dead-url=no }}</ref>。
|-
|{{Version|o|4.5}}
|2016年3月14日
|4.5.7
|葛雷格·克羅哈曼
|EOL
|-
|{{Version|o|4.6}}
|2016年5月15日
|4.6.7
|葛雷格·克羅哈曼
|EOL
|-
|{{Version|o|4.7}}
|{{dts|2016|07|24}}
|4.7.10
|葛雷格·克羅哈曼
|EOL
|-
|{{Version|o|4.8}}
|{{dts|2016|10|02}}
|4.8.17
|葛雷格·克羅哈曼
|EOL
|-
|{{Version|co|4.9}}
|2016年12月11日
|4.9.304
|葛雷格·克羅哈曼
|长期支持版本，從2016年12月至2023年1月
|-
|{{Version|o|4.10}}
|2017年2月19日
|4.10.17
|葛雷格·克羅哈曼
|EOL
|-
|{{Version|o|4.11}}
|2017年5月1日
|4.11.12
|葛雷格·克羅哈曼
|EOL
|-
|{{Version|o|4.12}}
|2017年7月2日
|4.12.14
|葛雷格·克羅哈曼
|EOL
|-
|{{Version|o|4.13}}
|2017年9月3日
|4.13.16
|葛雷格·克羅哈曼
|EOL
|-
|{{Version|co|4.14}}
|{{dts|2017|11|12}}
|4.14.269
|葛雷格·克羅哈曼
|长期支持版本，從2017年11月至2024年1月<ref name="Active kernel releases" /><ref>{{cite web|title=Linux 4.14 Will Be The Next LTS Kernel Branch (Confirmed)|website=Fossbytes|url=https://fossbytes.com/linux-4-14-next-lts-kernel/|accessdate=2019-12-23|archive-date=2020-11-11|archive-url=https://web.archive.org/web/20201111204518/https://fossbytes.com/linux-4-14-next-lts-kernel/|dead-url=no}}</ref>
|-
|{{Version|o|4.15}}
|{{dts|2018|01|28}}
|4.15.18
|葛雷格·克羅哈曼
|EOL
|-
|{{Version|o|4.16}}
|{{dts|2018|04|1}}<ref>{{Cite web|url=https://lkml.org/lkml/2018/4/1/175|title=LKML: Linus Torvalds: Linux 4.16|accessdate=2018-04-04|work=lkml.org|archive-date=2020-11-09|archive-url=https://web.archive.org/web/20201109020220/https://lkml.org/lkml/2018/4/1/175|dead-url=no}}</ref>
|4.16.18
|葛雷格·克羅哈曼
|EOL
|-
|{{Version|o|4.17}}
|2018年4月1日<ref name=":00">{{Cite web|url=https://www.oschina.net/news/96756/linux-kernel-4-17-released|title=Linux Kernel 4.17 发布，修复最新 Spectre 漏洞变种 - 开源中国|accessdate=2018-11-03|work=www.oschina.net|archive-date=2020-05-22|archive-url=https://web.archive.org/web/20200522174003/https://www.oschina.net/news/96756/linux-kernel-4-17-released|dead-url=no}}</ref>
|4.17.19
|葛雷格·克羅哈曼
|EOL
|-
|{{Version|o|4.18}}
|2018年6月3日<ref name=":1">{{Cite web|url=https://www.oschina.net/news/98898/linux-kernel-4-18-released|title=Linux Kernel 4.18 正式发布，新增许多实用功能 - 开源中国|accessdate=2018-11-03|work=www.oschina.net|archive-date=2020-08-13|archive-url=https://web.archive.org/web/20200813141321/https://www.oschina.net/news/98898/linux-kernel-4-18-released|dead-url=no}}</ref>
|4.18.20
|葛雷格·克羅哈曼
|EOL
|-
|{{Version|co|4.19}}
|2018年10月22日<ref name=":2">{{Cite web|url=https://www.oschina.net/news/101070/linux-kernel-4-19-released|title=Linux Kernel 4.19 LTS 正式发布！ - 开源中国|accessdate=2018-11-03|work=www.oschina.net|archive-date=2020-08-13|archive-url=https://web.archive.org/web/20200813141532/https://www.oschina.net/news/101070/linux-kernel-4-19-released|dead-url=no}}</ref>
|4.19.232
|葛雷格·克羅哈曼
|长期支持版本，从2018年10月至2024年12月，第二个超级长期支持（SLTS）发行带有对ARM64平台的支持<ref>{{cite web|url=https://www.linuxfoundation.org/press-release/2019/02/civil-infrastructure-platform-announces-new-super-long-term-support-kernel-that-advances-automation-machine-learning-and-artificial-intelligence/|title=Civil Infrastructure Platform Announces New Super Long Term Support Kernel that Advances Automation, Machine Learning and Artificial Intelligence|publisher=The Linux Foundation|first=Maemalynn|last=Meanor|date=2019-02-25|accessdate=2019-12-23|archive-date=2020-08-13|archive-url=https://web.archive.org/web/20200813123546/https://www.linuxfoundation.org/press-release/2019/02/civil-infrastructure-platform-announces-new-super-long-term-support-kernel-that-advances-automation-machine-learning-and-artificial-intelligence/|dead-url=no}}</ref>。
|-
| {{Version|o|4.20}}
| | {{dts|format=dmy|2018|12|23}}<ref name="4.20 mainline release">{{cite mailing list |title=Linux 4.20 released.. |url=http://lkml.iu.edu/hypermail/linux/kernel/1812.2/06158.html |date=2018-12-23 |accessdate=2018-12-24 |last=Torvalds |first=Linus |authorlink=Linus Torvalds |mailinglist=[[LKML|LKML]] |archive-date=2020-08-07 |archive-url=https://web.archive.org/web/20200807083624/http://lkml.iu.edu/hypermail/linux/kernel/1812.2/06158.html |dead-url=no }}</ref>
| 4.20.17
| 葛雷格·克羅哈曼
|  EOL
|-
| colspan="5" | <small>{{Version |l |show=111110}}</small>
|}

==== 5.x.y版本系列====
{| class="wikitable mw-collapsible"
|-
! 版本
! 最初发行日期
! 当前版本
! 维护者
! {{abbr|EOL|End of Life}}
! 注释
|-
| {{Version|o|5.0}}
| | {{dts|format=dmy|2019|03|03}}<ref name="5.0 mainline release">{{cite mailing list |title=Linux 5.0 |url=http://lkml.iu.edu/hypermail/linux/kernel/1903.0/01288.html |date=3 March 2019 |access-date=4 March 2019 |last=Torvalds |first=Linus |author-link=Linus Torvalds |mailing-list=[[LKML|LKML]] |archive-date=2020-11-07 |archive-url=https://web.archive.org/web/20201107223954/http://lkml.iu.edu/hypermail/linux/kernel/1903.0/01288.html }}</ref>
| 5.0.21<ref name="latest 5.0">{{cite mailing list |title=Linux 5.0.21 |url=http://lkml.iu.edu/hypermail/linux/kernel/1906.0/02354.html |date=4 June 2019 |access-date=5 June 2019 |last=Kroah-Hartman |first=Greg |author-link=Greg Kroah-Hartman |mailing-list=[[LKML|LKML]] |archive-date=2019-09-04 |archive-url=https://web.archive.org/web/20190904234423/http://lkml.iu.edu/hypermail/linux/kernel/1906.0/02354.html }}</ref>
| [[Greg_Kroah-Hartman|Greg Kroah-Hartman]]
| 2019年6月<ref name="latest 5.0" />
| 所谓的害羞的[[鳄鱼|鳄鱼]]<ref>{{cite web
 |url          = https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=2e6e902d185027f8e3cb8b7305238f7e35d6a436
 |title        = kernel/git/torvalds/linux.git - Linux kernel source tree
 |website      = git.kernel.org
 |date         = 2018-11-25
 |access-date  = 2018-11-26
 |archive-date = 2021-08-14
 |archive-url  = https://web.archive.org/web/20210814003935/https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=2e6e902d185027f8e3cb8b7305238f7e35d6a436
}}</ref>
|-
| {{Version|o|5.1}}
| | {{dts|format=dmy|2019|05|05}}<ref name="5.1 mainline release">{{cite mailing list |title=Linux 5.1 |url=http://lkml.iu.edu/hypermail/linux/kernel/1905.0/03532.html |date=5 March 2019 |access-date=6 March 2019 |last=Torvalds |first=Linus |author-link=Linus Torvalds |mailing-list=[[LKML|LKML]] |archive-date=2020-11-07 |archive-url=https://web.archive.org/web/20201107224510/http://lkml.iu.edu/hypermail/linux/kernel/1905.0/03532.html }}</ref>
| 5.1.21<ref name="latest 5.1">{{cite mailing list |title=Linux 5.1.21 |url=https://lkml.org/lkml/2019/7/28/19 |date=28 July 2019 |access-date=5 August 2019 |last=Kroah-Hartman |first=Greg |author-link=Greg Kroah-Hartman |mailing-list=[[LKML|LKML]] |archive-date=2020-11-07 |archive-url=https://web.archive.org/web/20201107230141/https://lkml.org/lkml/2019/7/28/19 }}</ref>
| Greg Kroah-Hartman
| 2019年7月<ref name="latest 5.1" />
|
|-
| {{Version|o|5.2}}
| | {{dts|format=dmy|2019|07|07}}<ref name="5.2 mainline release">{{cite mailing list |title=Linux 5.2 |url=http://lkml.iu.edu/hypermail/linux/kernel/1907.0/05444.html |date=7 July 2019 |access-date=8 July 2019 |last=Torvalds |first=Linus |author-link=Linus Torvalds |mailing-list=[[LKML|LKML]] |archive-date=2021-01-14 |archive-url=https://web.archive.org/web/20210114054115/http://lkml.iu.edu/hypermail/linux/kernel/1907.0/05444.html }}</ref>
| 5.2.20<ref name="latest 5.2">{{cite mailing list |title=Linux 5.2.20 |url=https://lore.kernel.org/lkml/20191008063803.GA2467314@kroah.com/ |date=8 October 2019 |access-date=8 October 2019 |last=Kroah-Hartman |first=Greg |author-link=Greg Kroah-Hartman |mailing-list=[[LKML|LKML]] |archive-date=2020-08-10 |archive-url=https://web.archive.org/web/20200810165200/https://lore.kernel.org/lkml/20191008063803.GA2467314@kroah.com/ }}</ref>
| Greg Kroah-Hartman
| 2019年10月<ref name="latest 5.2" />
| 5.2-rc2是所谓的[[芬兰国家男子冰球队|金狮]]<ref>{{cite web
 |url          = https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=cd6c84d8f0cdc911df435bb075ba22ce3c605b07
 |title        = kernel/git/torvalds/linux.git - Linux kernel source tree
 |website      = git.kernel.org
 |date         = 2019-05-26
 |access-date  = 2019-05-27
 |archive-date = 2022-05-11
 |archive-url  = https://web.archive.org/web/20220511162837/https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=cd6c84d8f0cdc911df435bb075ba22ce3c605b07
}}</ref><ref>{{cite web
 |url          = https://www.phoronix.com/scan.php?page=news_item&px=Linux-5.2-rc2-Released
 |title        = Linux 5.2-rc2 Kernel Released As The "Golden Lions"
 |website      = Phoronix
 |date         = 2019-05-26
 |access-date  = 2019-10-27
 |archive-date = 2022-02-19
 |archive-url  = https://web.archive.org/web/20220219123236/https://www.phoronix.com/scan.php?page=news_item&px=Linux-5.2-rc2-Released
}}</ref>，5.2是所谓的[[耳乌贼目|耳乌贼]]<ref>{{cite web
 |url          = https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=0ecfebd2b52404ae0c54a878c872bb93363ada36
 |title        = kernel/git/torvalds/linux.git - Linux kernel source tree
 |website      = git.kernel.org
 |date         = 2019-07-07
 |access-date  = 2019-07-07
 |archive-date = 2022-02-19
 |archive-url  = https://web.archive.org/web/20220219144751/https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=0ecfebd2b52404ae0c54a878c872bb93363ada36
}}</ref>
|-
| {{Version|o|5.3}}
| | {{dts|format=dmy|2019|09|15}}<ref name="5.3 mainline release">{{cite mailing list |title=Linux 5.3 |url=https://lore.kernel.org/lkml/CAHk-=wiP4K8DRJWsCo=20hn_6054xBamGKF2kPgUzpB5aMaofA@mail.gmail.com/ |date=15 September 2019 |access-date=22 September 2019 |last=Torvalds |first=Linus |author-link=Linus Torvalds |mailing-list=[[LKML|LKML]] |archive-date=2021-01-15 |archive-url=https://web.archive.org/web/20210115063738/https://lore.kernel.org/lkml/CAHk-=wiP4K8DRJWsCo=20hn_6054xBamGKF2kPgUzpB5aMaofA@mail.gmail.com/ }}</ref>
| 5.3.18<ref name="latest 5.3">{{cite mailing list |title=Linux 5.3.18 |url=https://lore.kernel.org/lkml/20191218180250.GA865731@kroah.com/ |date=18 December 2019 |access-date=19 December 2019 |last=Kroah-Hartman |first=Greg |author-link=Greg Kroah-Hartman |mailing-list=[[LKML|LKML]] |archive-date=2020-09-17 |archive-url=https://web.archive.org/web/20200917162425/https://lore.kernel.org/lkml/20191218180250.GA865731@kroah.com/ }}</ref>
| Greg Kroah-Hartman
| 2019年11月<ref name="latest 5.3" />
|
|-
| {{Version|co|5.4}}
| | {{dts|format=dmy|2019|11|24}}<ref name="5.4 mainline release">{{cite mailing list |title=Linux 5.4 |url=https://lore.kernel.org/lkml/CAHk-=wjmzaD=BZ1hjUYu+RTnSGDLfCRwCdg99GeQpCjEwo9uzw@mail.gmail.com/ |date=24 November 2019 |access-date=25 September 2019 |last=Torvalds |first=Linus |author-link=Linus Torvalds |mailing-list=[[LKML|LKML]] |archive-date=2020-10-28 |archive-url=https://web.archive.org/web/20201028123530/https://lore.kernel.org/lkml/CAHk-=wjmzaD=BZ1hjUYu+RTnSGDLfCRwCdg99GeQpCjEwo9uzw@mail.gmail.com/ }}</ref>
| 5.4.139<ref name="latest 5.4">{{cite mailing list
 |title        = Linux 5.4.139
 |url          = https://lore.kernel.org/lkml/1628406945167165@kroah.com/
 |date         = 8 August 2021
 |access-date  = 8 August 2021
 |last         = Kroah-Hartman
 |first        = Greg
 |author-link  = Greg Kroah-Hartman
 |mailing-list = [[LKML|LKML]]
 |archive-date = 2021-08-14
 |archive-url  = https://web.archive.org/web/20210814004023/https://lore.kernel.org/lkml/1628406945167165@kroah.com/
}}</ref>
| Greg Kroah-Hartman & Sasha Levin<ref name=ACTIVE>{{cite web |url=https://www.kernel.org/category/releases.html |title=Active kernel releases |date=6 August 2013 |publisher=Kernel.org |access-date=3 July 2014 |archive-date=2017-12-07 |archive-url=https://web.archive.org/web/20171207174507/https://www.kernel.org/category/releases.html }}</ref>
| 2025年12月<ref name="Active kernel releases" />
| 第20个LTS发行，5.4-rc2是所谓的筑巢的[[负鼠科|负鼠]]<ref>{{cite web
 |url          = https://github.com/torvalds/linux/commit/da0c9ea146cbe92b832f1b0f694840ea8eb33cce#diff-b67911656ef5d18c4ae36cb6741b7965
 |title        = Linux 5.4-rc2
 |website      = [[GitHub|GitHub]]
 |date         = 2019-10-06
 |access-date  = 2019-10-27
 |archive-date = 2022-05-11
 |archive-url  = https://web.archive.org/web/20220511131353/https://github.com/torvalds/linux/commit/da0c9ea146cbe92b832f1b0f694840ea8eb33cce#diff-b67911656ef5d18c4ae36cb6741b7965
}}</ref>，5.4-rc5是所谓的[[窃盗癖|窃盗癖]][[八腕目|八爪鱼]]<ref>{{cite web
 |url          = https://github.com/torvalds/linux/commit/d6d5df1db6e9d7f8f76d2911707f7d5877251b02#diff-b67911656ef5d18c4ae36cb6741b7965
 |title        = Linux 5.4-rc5
 |website      = [[GitHub|GitHub]]
 |date         = 2019-10-27
 |access-date  = 2019-10-27
 |archive-date = 2022-02-19
 |archive-url  = https://web.archive.org/web/20220219224822/https://github.com/torvalds/linux/commit/d6d5df1db6e9d7f8f76d2911707f7d5877251b02#diff-b67911656ef5d18c4ae36cb6741b7965
}}</ref>
|-
| {{Version|o|5.5}}
| | {{dts|format=dmy|2020|01|26}}<ref name="5.5 mainline release">{{cite mailing list |title=Linux 5.5 |url=https://lore.kernel.org/lkml/CAHk-=wigRZ6TSJU09bMk3Df2DiOw83B7TrQUq+iXroQCK5EVAQ@mail.gmail.com/ |date=26 January 2020 |access-date=10 February 2020 |last=Torvalds |first=Linus |author-link=Linus Torvalds |mailing-list=[[LKML|LKML]] |archive-date=2020-10-28 |archive-url=https://web.archive.org/web/20201028122846/https://lore.kernel.org/lkml/CAHk-=wigRZ6TSJU09bMk3Df2DiOw83B7TrQUq+iXroQCK5EVAQ@mail.gmail.com/ }}</ref>
| 5.5.19<ref name="latest 5.5">{{cite mailing list |title=Linux 5.5.19 |url=https://lore.kernel.org/lkml/20200421134408.GA797797@kroah.com/ |date=21 April 2020 |access-date=22 April 2020 |last=Kroah-Hartman |first=Greg |author-link=Greg Kroah-Hartman |mailing-list=[[LKML|LKML]] |archive-date=2022-02-19 |archive-url=https://web.archive.org/web/20220219123308/https://lore.kernel.org/lkml/20200421134408.GA797797@kroah.com/ }}</ref>
| Greg Kroah-Hartman
| 2020年4月<ref name="latest 5.5" />
|
|-
| {{Version|o|5.6}}
| | {{dts|format=dmy|2020|03|29}}<ref name="5.6 mainline release">{{cite mailing list|title=Linux 5.6|url=https://lore.kernel.org/lkml/CAHk-=wi9ZT7Stg-uSpX0UWQzam6OP9Jzz6Xu1CkYu1cicpD5OA@mail.gmail.com/|date=29 March 2020|access-date=30 March 2020|last=Torvalds|first=Linus|author-link=Linus Torvalds|mailing-list=[[LKML|LKML]]|archive-date=2021-01-02|archive-url=https://web.archive.org/web/20210102133948/https://lore.kernel.org/lkml/CAHk-=wi9ZT7Stg-uSpX0UWQzam6OP9Jzz6Xu1CkYu1cicpD5OA@mail.gmail.com/}}</ref>
| 5.6.19<ref name="latest 5.6">{{cite mailing list |title=Linux 5.6.19 |url=https://lore.kernel.org/lkml/1592410412126243@kroah.com/ |date=17 June 2020 |access-date=18 June 2020 |last=Kroah-Hartman |first=Greg |author-link=Greg Kroah-Hartman |mailing-list=[[LKML|LKML]] |archive-date=2020-06-18 |archive-url=https://web.archive.org/web/20200618095345/https://lore.kernel.org/lkml/1592410412126243@kroah.com/ }}</ref>
| Greg Kroah-Hartman
| 2020年6月<ref name="latest 5.6" />
|
|-
| {{Version|o|5.7}}
| {{dts|format=dmy|2020|5|31}}<ref name="5.7 mainline release">{{cite mailing list|title=Linux 5.7|url=https://lore.kernel.org/lkml/CAHk-=wiZGrCkiBB1V7bxp8NZH6yWi9mPM4ptMW16OzOiNprBFA@mail.gmail.com|date=31 May 2020|access-date=18 June 2020|last=Torvalds|first=Linus|author-link=Linus Torvalds|mailing-list=[[LKML|LKML]]|archive-date=2021-01-13|archive-url=https://web.archive.org/web/20210113154839/https://lore.kernel.org/lkml/CAHk-=wiZGrCkiBB1V7bxp8NZH6yWi9mPM4ptMW16OzOiNprBFA@mail.gmail.com/}}</ref>
| 5.7.19<ref name="latest 5.7">{{cite mailing list |title=Linux 5.7.19 |url=https://lore.kernel.org/lkml/15985137402037@kroah.com/ |date=27 August 2020 |access-date=31 August 2020 |last=Kroah-Hartman |first=Greg |author-link=Greg Kroah-Hartman |mailing-list=[[LKML|LKML]] |archive-date=2020-10-17 |archive-url=https://web.archive.org/web/20201017231133/https://lore.kernel.org/lkml/15985137402037@kroah.com/ }}</ref>
| Greg Kroah-Hartman
| 2020年8月<ref name="latest 5.7" />
|
|-
| {{Version|o|5.8}}
| {{dts|format=dmy|2020|8|2}}<ref name="5.8 mainline release">{{cite mailing list|title=Linux 5.8|url=https://lore.kernel.org/lkml/CAHk-=wj+mDPbj8hXspXRAksh+1TmPjubc9RNEbu8EVpYyypX=w@mail.gmail.com|date=2 August 2020|access-date=3 August 2020|first=Linus|last=Torvalds|author-link=Linus Torvalds|mailing-list=[[LKML|LKML]]|archive-date=2020-10-23|archive-url=https://web.archive.org/web/20201023091343/https://lore.kernel.org/lkml/CAHk-=wj+mDPbj8hXspXRAksh+1TmPjubc9RNEbu8EVpYyypX=w@mail.gmail.com/}}</ref>
| 5.8.18<ref name="latest 5.8">{{cite mailing list |title=Linux 5.8.18 |url=https://lore.kernel.org/lkml/16042322186122@kroah.com/ |date=1 November 2020 |access-date=2 November 2020 |last=Kroah-Hartman |first=Greg |author-link=Greg Kroah-Hartman |mailing-list=[[LKML|LKML]] |archive-date=2022-05-11 |archive-url=https://web.archive.org/web/20220511150826/https://lore.kernel.org/lkml/16042322186122@kroah.com/ }}</ref>
| Greg Kroah-Hartman
| 2020年11月<ref name="latest 5.8" />
|
|-
| {{Version|o|5.9}}
| {{dts|format=dmy|2020|10|11}}<ref name="5.9 mainline release">{{cite mailing list|title=Linux 5.9|url=https://lore.kernel.org/lkml/CAHk-=wi-u86++np80GQvgDuARdt9xpBNho6SjHLmYgm8jibGag@mail.gmail.com|date=11 October 2020|access-date=20 October 2020|first=Linus|last=Torvalds|author-link=Linus Torvalds|mailing-list=[[LKML|LKML]]|archive-date=2020-10-31|archive-url=https://web.archive.org/web/20201031021555/https://lore.kernel.org/lkml/CAHk-=wi-u86++np80GQvgDuARdt9xpBNho6SjHLmYgm8jibGag@mail.gmail.com/}}</ref>
| 5.9.16<ref name="latest 5.9">{{cite mailing list |title=Linux 5.9.16 |url=https://lore.kernel.org/lkml/1608557011143221@kroah.com/ |date=21 December 2020 |access-date=21 December 2020 |last=Kroah-Hartman |first=Greg |author-link=Greg Kroah-Hartman |mailing-list=[[LKML|LKML]] |archive-date=2020-12-23 |archive-url=https://web.archive.org/web/20201223150855/https://lore.kernel.org/lkml/1608557011143221@kroah.com/ }}</ref>
| Greg Kroah-Hartman
| 2020年12月<ref name="latest 5.9" />
|
|-
| {{Version|co|5.10}}
| {{dts|format=dmy|2020|12|13}}<ref name="5.10 mainline release">{{cite mailing list|title=Linux 5.10|url=https://lore.kernel.org/lkml/CAHk-=whCKhxNyKn1Arut8xUDKTwp3fWcCj_jbL5dbzkUmo45gQ@mail.gmail.com/|date=13 December 2020|access-date=15 December 2020|first=Linus|last=Torvalds|author-link=Linus Torvalds|mailing-list=[[LKML|LKML]]|archive-date=2021-01-14|archive-url=https://web.archive.org/web/20210114101542/https://lore.kernel.org/lkml/CAHk-=whCKhxNyKn1Arut8xUDKTwp3fWcCj_jbL5dbzkUmo45gQ@mail.gmail.com/}}</ref>
| 5.10.57<ref name="latest 5.10">{{cite mailing list
 |title        = Linux 5.10.57
 |url          = https://lore.kernel.org/lkml/162840695072108@kroah.com/
 |date         = 8 August 2021
 |access-date  = 8 August 2021
 |last         = Kroah-Hartman
 |first        = Greg
 |author-link  = Greg Kroah-Hartman
 |mailing-list = [[LKML|LKML]]
 |archive-date = 2021-08-14
 |archive-url  = https://web.archive.org/web/20210814004223/https://lore.kernel.org/lkml/162840695072108@kroah.com/
}}</ref>
| Greg Kroah-Hartman & Sasha Levin{{r|ACTIVE}}
| 2026年12月<ref name="Active kernel releases" /><ref>{{Cite news |last=Larabel |first=Michael |date=2020-10-26 |title=Linux 5.10 Is The Next LTS Kernel |work=Phoronix |url=https://www.phoronix.com/scan.php?page=news_item&px=Linux-5.10-LTS-Kernel |access-date=2020-10-27 |archive-date=2020-12-05 |archive-url=https://web.archive.org/web/20201205120509/https://www.phoronix.com/scan.php?page=news_item&px=Linux-5.10-LTS-Kernel }}</ref>
| 第21个LTS发行，用于[[Debian|Debian]] 11 "Bullseye"<ref>{{cite web |title=Bullseye kernel will be Linux 5.10 LTS |website=Debian Wiki |url=https://wiki.debian.org/DebianBullseye |access-date=2021-03-09 |archive-date=2021-07-15 |archive-url=https://web.archive.org/web/20210715114621/https://wiki.debian.org/DebianBullseye }}</ref>
|-
| {{Version|o|5.11}}
| {{dts|format=dmy|2021|2|14}}<ref name="5.11 mainline release">{{cite mailing list|title=Linux 5.11|url=https://lore.kernel.org/lkml/CAHk-=wg8LpRi9+P2_V+ehJ2_EoJifNh2QmVf47aLXfkCd-1UAQ@mail.gmail.com/|date=14 February 2021|access-date=15 February 2021|first=Linus|last=Torvalds|author-link=Linus Torvalds|mailing-list=[[LKML|LKML]]|archive-date=2021-04-10|archive-url=https://web.archive.org/web/20210410204427/https://lore.kernel.org/lkml/CAHk-=wg8LpRi9+P2_V+ehJ2_EoJifNh2QmVf47aLXfkCd-1UAQ@mail.gmail.com/}}</ref>
| 5.11.22<ref name="latest 5.11">{{cite mailing list |title=Linux 5.11.22 |url=https://lore.kernel.org/lkml/162141437223831@kroah.com/ |date=19 May 2021 |access-date=19 May 2021 |last=Kroah-Hartman |first=Greg |author-link=Greg Kroah-Hartman |mailing-list=[[LKML|LKML]] |archive-date=2022-05-11 |archive-url=https://web.archive.org/web/20220511162836/https://lore.kernel.org/lkml/162141437223831@kroah.com/ }}</ref>
| Greg Kroah-Hartman
| 2021年5月<ref name="latest 5.11" />
| 所谓的[[情人节|情人节]]版<ref>{{cite web |url=https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=f40ddce88593482919761f74910f42f4b84c004b |title=kernel/git/torvalds/linux.git - Linux kernel source tree |website=git.kernel.org |date=2021-02-14 |access-date=2021-02-26 |archive-date=2021-02-18 |archive-url=https://web.archive.org/web/20210218054328/https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=f40ddce88593482919761f74910f42f4b84c004b }}</ref>
|-
| {{Version|o|5.12}}
| {{dts|format=dmy|2021|4|25}}<ref>{{cite mailing list |title=Linux 5.12 |url=https://lore.kernel.org/lkml/CAHk-=wj3ANm8QrkC7GTAxQyXyurS0_yxMR3WwjhD9r7kTiOSTw@mail.gmail.com/ |date=25 April 2021 |access-date=26 April 2021 |last=Torvalds |first=Linus |author-link=Linus Torvalds |mailing-list=[[LKML|LKML]] |archive-date=2022-02-19 |archive-url=https://web.archive.org/web/20220219181453/https://lore.kernel.org/lkml/CAHk-=wj3ANm8QrkC7GTAxQyXyurS0_yxMR3WwjhD9r7kTiOSTw@mail.gmail.com/ }}</ref>
| 5.12.19<ref name="latest 5.12">{{cite mailing list |title=Linux 5.12.19 |url=https://lore.kernel.org/lkml/1626791065147152@kroah.com/ |date=20 July 2021 |access-date=20 July 2021 |last=Kroah-Hartman |first=Greg |author-link=Greg Kroah-Hartman |mailing-list=[[LKML|LKML]] |archive-date=2022-02-19 |archive-url=https://web.archive.org/web/20220219145613/https://lore.kernel.org/lkml/1626791065147152@kroah.com/ }}</ref>
| Greg Kroah-Hartman 
| 2021年7月<ref name="latest 5.12" />
| 所谓的{{en-link|2020-2021北美冬季|2020–21 North American winter|冰封荒原}}<ref>{{cite web |url=https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=fe07bfda2fb9cdef8a4d4008a409bb02f35f1bd8 |title=kernel/git/torvalds/linux.git - Linux kernel source tree |website=git.kernel.org |date=2021-03-01 |access-date=2021-03-06 |archive-date=2022-05-11 |archive-url=https://web.archive.org/web/20220511150826/https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=fe07bfda2fb9cdef8a4d4008a409bb02f35f1bd8 }}</ref><ref>{{cite mailing list |url=https://lore.kernel.org/lkml/CAHk-=wjUzNbTuRCAv80vyD1dXEEaefdpRi23J+suSaognBoV8A@mail.gmail.com/ |title=Linux 5.12-rc1 |date=1 March 2021 |access-date=6 March 2021 |last=Torvalds |first=Linus |author-link=Linus Torvalds |mailing-list=[[LKML|LKML]] |archive-date=2022-05-10 |archive-url=https://web.archive.org/web/20220510092847/https://lore.kernel.org/lkml/CAHk-=wjUzNbTuRCAv80vyD1dXEEaefdpRi23J+suSaognBoV8A@mail.gmail.com/ }}</ref>
|-
| {{Version|o|5.13}}
| {{dts|format=dmy|2021|6|27}}<ref>{{cite mailing list |title=Linux 5.13 |url=https://lore.kernel.org/lkml/CAHk-=wj7E9iTGHbqfgtaTAM09WrVzwXjda2_D59MT8D_1=54Rg@mail.gmail.com/ |date=27 June 2021 |access-date=30 June 2021 |last=Torvalds |first=Linus |author-link=Linus Torvalds |mailing-list=[[LKML|LKML]] |archive-date=2022-02-19 |archive-url=https://web.archive.org/web/20220219145620/https://lore.kernel.org/lkml/CAHk-=wj7E9iTGHbqfgtaTAM09WrVzwXjda2_D59MT8D_1=54Rg@mail.gmail.com/ }}</ref>
| 5.13.19<ref name="latest 5.13">{{cite mailing list|title=Linux 5.13.19|url=https://lore.kernel.org/lkml/16319668996036@kroah.com/|date=18 September 2021|access-date=19 September 2021|last=Kroah-Hartman|first=Greg|author-link=Greg Kroah-Hartman|mailing-list=[[LKML|LKML]]|archive-date=2022-01-15|archive-url=https://web.archive.org/web/20220115042925/https://lore.kernel.org/lkml/16319668996036@kroah.com/}}</ref>
| Greg Kroah-Hartman & Sasha Levin
| 2021年9月<ref name="latest 5.13" />
| 所谓的游走的负鼠
|-
| {{Version|o|5.14}}
| {{dts|format=dmy|2021|8|29}}<ref>{{cite mailing list |title=Linux 5.14 |url=https://lore.kernel.org/lkml/CAHk-=wh75ELUu99yPkPNt+R166CK=-M4eoV+F62tW3TVgB7=4g@mail.gmail.com/ |date=29 August 2021 |access-date=30 August 2021 |last=Torvalds |first=Linus |author-link=Linus Torvalds |mailing-list=[[LKML|LKML]] |archive-date=2022-03-21 |archive-url=https://web.archive.org/web/20220321200620/https://lore.kernel.org/lkml/CAHk-=wh75ELUu99yPkPNt+R166CK=-M4eoV+F62tW3TVgB7=4g@mail.gmail.com/ }}</ref>
| 5.14.21<ref name="latest 5.14">{{cite mailing list|title=Linux 5.14.21|url=https://lore.kernel.org/lkml/163750033117134@kroah.com/T/#me76162eebf783cc9c3ccd804c5b62e230664dbe5/|date=21 November 2021|access-date=21 November 2021|last=Kroah-Hartman|first=Greg|author-link=Greg Kroah-Hartman|mailing-list=[[LKML|LKML]]|archive-date=2021-11-21|archive-url=https://web.archive.org/web/20211121135948/https://lore.kernel.org/lkml/163750033117134@kroah.com/T/#me76162eebf783cc9c3ccd804c5b62e230664dbe5/}}</ref>
| Greg Kroah-Hartman
| 2021年11月<ref name="latest 5.14" />
| 用于RHEL 9 Beta
|-
| {{Version|co|5.15}}
| {{dts|format=dmy|2021|10|31}}<ref>{{cite mailing list |title=Linux 5.15 |url=https://lore.kernel.org/lkml/CAHk-=wjfbfQobW2jygMvgfJXKmzZNB=UTzBrFs2vTEzVpBXA4Q@mail.gmail.com/ |date=31 October 2021 |access-date=1 November 2021 |last=Torvalds |first=Linus |author-link=Linus Torvalds |mailing-list=[[LKML|LKML]] |archive-date=2022-05-10 |archive-url=https://web.archive.org/web/20220510052747/https://lore.kernel.org/lkml/CAHk-=wjfbfQobW2jygMvgfJXKmzZNB=UTzBrFs2vTEzVpBXA4Q@mail.gmail.com/ }}</ref>
| 5.15.26
| Greg Kroah-Hartman & Sasha Levin{{r|ACTIVE}}
| 2023年10月<ref name="Active kernel releases" />
| 第22个LTS发行；用于Ubuntu 22.04 LTS和[[Slackware|Slackware]] 15<ref>{{Cite web|title=Slackware 15 Release Announcement|url=http://slackware.com/announce/15.0.php|access-date=2022-02-04|website=slackware.com|archive-date=2022-04-17|archive-url=https://web.archive.org/web/20220417115805/http://www.slackware.com/announce/15.0.php}}</ref>，所谓的不给糖就捣蛋<ref>{{Cite web|title=kernel/git/torvalds/linux.git - Linux kernel source tree|url=https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=8bb7eca972ad531c9b149c0a51ab43a417385813|access-date=2021-11-01|website=git.kernel.org|archive-date=2022-05-11|archive-url=https://web.archive.org/web/20220511162837/https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=8bb7eca972ad531c9b149c0a51ab43a417385813}}</ref>
|-
| {{Version|o|5.16}}
| {{dts|format=dmy|2022|01|09}}<ref name="5.16">{{cite mailing list|title=Linux 5.16|url=https://lore.kernel.org/lkml/CAHk-=wgUkBrUVhjixy4wvrUhPbW-DTgtQubJWVOoLW=O0wRKMA@mail.gmail.com/|date=9 January 2022|access-date=22 March 2022|last=Torvalds|first=Linus|author-link=Linus Torvalds|mailing-list=[[LKML|LKML]]|archive-date=2022-05-11|archive-url=https://web.archive.org/web/20220511012309/https://lore.kernel.org/lkml/CAHk-=wgUkBrUVhjixy4wvrUhPbW-DTgtQubJWVOoLW=O0wRKMA@mail.gmail.com/}}</ref>
| 5.16.20<ref name="5.16.20">{{cite mailing list |title=Linux 5.16.20 |url=https://lore.kernel.org/lkml/164987613419048@kroah.com/ |date=13 April 2022 |access-date=15 April 2022 |last=Kroah-Hartman |first=Greg |author-link=Greg Kroah-Hartman |mailing-list=[[LKML|LKML]]}}</ref>
|Greg Kroah-Hartman & Sasha Levin{{r|ACTIVE}}
|2022年4月<ref name="5.16" />
|
|-
| {{Version|c|5.17}}
| 2022年3月22日
|{{wikidata|property|preferred|reference|edit|Q14579|P348|P548=Q2804309}} {{wikidata|qualifier|preferred|single|Q14579|P348|P548=Q2804309|P577}}
|Greg Kroah-Hartman & Sasha Levin{{r|ACTIVE}}
|
|所谓的[[超级碗|超级碗]]<ref>{{Cite web|title=kernel/git/torvalds/linux.git - Linux kernel source tree|url=https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?h=v5.17&id=f443e374ae131c168a065ea1748feac6b2e76613|access-date=2022-03-23|website=git.kernel.org|archive-date=2022-05-11|archive-url=https://web.archive.org/web/20220511150826/https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?h=v5.17&id=f443e374ae131c168a065ea1748feac6b2e76613}}</ref>
|-
<!-- Always show latest preview version -->
| {{Version|cp|{{wikidata|property|preferred|Q14579|P348|P548=Q51930650}}}}
| {{wikidata|qualifier|preferred|single|Q14579|P348|P548=Q51930650|P577}}
| {{wikidata|property|preferred|reference|edit|Q14579|P348|P548=Q51930650}} {{wikidata|qualifier|preferred|single|Q14579|P348|P548=Q51930650|P577}}
| [[Linus_Torvalds|Linus Torvalds]]
|
|
|-
| colspan="6" | <small>{{Version|l|show=111110}}</small>
|}

Linux內核版本時間線：
{{Timeline Linux Kernel}}
Linux内核的主要贡献者可见于[[:Category:Linux核心駭客|Linux核心黑客列表]]。

=== 版本命名 ===
Linux内核有三个不同的命名方案。早期版本：第一个版本的内核是0.01，其次是0.02,0.03,0.10,0.11,0.12（第一[[GPL|GPL]]版本),0.95,0.96,0.97,0.98,0.99及1.0。<ref>[http://ftp.cdut.edu.cn/pub/linux/kernel/history/lka-001.html Linux Kernel Archives - Volume 1] {{Webarchive|url=https://archive.is/20050511062834/http://ftp.cdut.edu.cn/pub/linux/kernel/history/lka-001.html |date=2005-05-11 }}（Riley Williams）</ref>，从0.95版有许多的补丁发布於主要版本版本之间。

旧计划（1.0和2.6版之间)，版本的格式為A.B.C，其中A,B,C代表：'''A'''大幅度转变的内核，这是很少发生变化，只有当发生重大变化的代码和核心发生才会发生，在历史上曾改变两次的内核：1994年的1.0及1996年的2.0； '''B'''是指一些重大修改的内核，内核使用了传统的奇数次要版本号码的软件号码系统（用偶数的次要版本号码来表示稳定版本）；'''C'''是指轻微修订的内核，这个数字当有安全补丁，bug修复，新的功能或驱动程序，内核便会有变化。自2.6.0（2003年12月）发布後，人们认识到，更短的发布周期将是有益的。自那时起，版本的格式為A.B.C.D，其中A,B,C,D代表：'''A'''和'''B'''是无关緊要的，'''C'''是内核的版本，'''D'''是安全补丁。

自3.0（2011年7月）发布后，版本的格式為3.A.B，其中A,B代表：'''A'''是内核的版本，'''B'''是安全补丁。而4.0（2015年4月）釋出後，則延續3.A.B的命名格式，只是將主版號變更為4。

== 法律層面 ==

=== 许可证 ===
原先托瓦茲将 Linux 置于一个禁止任何商业行为的条例之下<ref name="hiroo">{{cite web|url=http://hotwired.goo.ne.jp/matrix/9709/5_linus.html|title=The Pragmatist of Free Software|accessdate=2007-02-21|date=1997-08-03|last=Yamagata|first=Hiroo|publisher=[[HotWired|HotWired]]|archiveurl=https://web.archive.org/web/20070210224351/http://hotwired.goo.ne.jp/matrix/9709/5_linus.html|archivedate=2007-02-10|deadurl=yes}}</ref>，但0.12版本之后改用 [[GNU通用公共许可证|GNU 通用公共许可证]]第二版。<ref name="Relnotes-0.12" /> 该协议允许任何人对软件进行修改或发行，包括商业行为，只要其遵守该协议，所有基于Linux的软件也必须以该协议的形式发表，并提供[[源代码|源代码]]。

托瓦茲曾经公开声称将Linux置于GNU通用公共许可证之下是他一生中所做的“最好的决定”。<ref name="hiroo" />

==== GPL第三版 ====
Linux 内核明确地仅发表在 GNU 通用公共许可证（GPL）第二版下，<ref name="COPYING" />而不向被许可方提供选择“任何更高版本”的选项（这是常见的 GPL 扩展）。关于如何轻松地改变许可证以使用后来的 GPL 版本（包括第3版）以及这种更改是否合乎需要，存在着相当多的争论。<ref>{{cite web |url=https://lwn.net/Articles/169797/ |title=GPLv3 and the kernel |last=Corbet |first=Jonathan |date=2006-01-31 |publisher=[[LWN.net|LWN.net]] |accessdate=2007-02-21 |archive-date=2020-08-10 |archive-url=https://web.archive.org/web/20200810165701/https://lwn.net/Articles/169797/ |dead-url=no }}</ref> 托瓦茲本人在版本2.4.0的发布中明确指出，他自己的代码仅在版本2下发布。<ref>{{cite mailing list |url=http://lkml.iu.edu/hypermail/linux/kernel/0009.1/0096.html |title=Linux-2.4.0-test8 |last=Torvalds |first=Linus |authorlink=Linus Torvalds |date=2000-09-08 |mailinglist=[[LKML|LKML]] |accessdate=2007-02-21 |archive-date=2020-05-15 |archive-url=https://web.archive.org/web/20200515235654/http://lkml.iu.edu/hypermail/linux/kernel/0009.1/0096.html |dead-url=no }}</ref>然而，GPL的条款规定，如果没有指定版本，那么可以使用任何版本；<ref>{{Cite web|url=https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html#section9|title=gnu.org|website=www.gnu.org|language=en|access-date=2017-10-18|archive-date=2021-02-02|archive-url=https://web.archive.org/web/20210202151435/https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html#section9|dead-url=no}}</ref>并且[[艾倫·考克斯|艾伦·考克斯]]指出，很少有其他 Linux 贡献者指定了特定版本的 GPL。<ref>{{cite mailing list |url=https://lwn.net/Articles/169831/ |title=Re: GPL V3 and Linux |last=Cox |first=Alan |authorlink=Alan Cox |date=2006-01-20 |mailinglist=[[LKML|LKML]] |accessdate=2007-02-21 |archive-date=2021-01-26 |archive-url=https://web.archive.org/web/20210126131909/https://lwn.net/Articles/169831/ |dead-url=no }}</ref>

2006年9月，对29位关键内核程序员的调查显示其中的28位更倾向于使用 GPL 第二版（GPLv2）而非当时的 GPL 第三版（GPLv3）草案。 托瓦茲评论说：“我认为一些外界人士......相信我才是那个古怪不合群的人，因为我这么大张旗鼓地不做 GPLv3 的忠实粉丝。”<ref>{{cite web |url=http://news.com/Top+Linux+programmers+pan+GPL+3/2100-7344_3-6119372.html |title=Top Linux programmers pan GPL 3 |date=2006-09-25 |last=Shankland |first=Stephen |work=[[News.com|News.com]] |publisher=[[CNET|CNET]] |accessdate=2007-02-21}}</ref>这些高水平的内核开发者就大众媒体对 GPLv3 的反对发表了评论，其中包括林納斯·托瓦茲本人、葛雷格·克羅哈曼和[[安德魯·莫頓|安德鲁·莫顿]]。<ref name="kerneldevelopers2006"/>他们提到有关[[DRM|DRM]]/{{Link-jp|TiVo化|TiVo化}}、专利及“附加限制”的条款，并警告GPLv3对“开源宇宙”的[[巴尔干化|巴尔干化]]。<ref name="kerneldevelopers2006">{{cite web |url=https://lwn.net/Articles/200422/ |title=Kernel developers' position on GPLv3: <!--quote= better here (or : for subtitle)?-->The Dangers and Problems with GPLv3 |authors=James E.J. Bottomley, Mauro Carvalho Chehab, Thomas Gleixner, Christoph Hellwig, Dave Jones, Greg Kroah-Hartman, Tony Luck, Andrew Morton, Trond Myklebust, David Woodhouse |date=2006-09-15 |publisher=[[LWN.net|LWN.net]] |accessdate=2015-03-11 |quote="The current version (Discussion Draft 2) of GPLv3 on first reading fails the necessity test of section 1 on the grounds that there's no substantial and identified problem with GPLv2 that it is trying to solve. However, a deeper reading reveals several other problems with the current FSF draft: 5.1 DRM Clauses [...] 5.2 Additional Restrictions Clause [...] 5.3 Patents Provisions [...] since the FSF is proposing to shift all of its projects to GPLv3 and apply pressure to every other GPL licensed project to move, we foresee the release of GPLv3 portends the [[Balkanisation|Balkanisation]] of the entire Open Source Universe upon which we rely." |archive-date=2021-01-18 |archive-url=https://web.archive.org/web/20210118015213/https://lwn.net/Articles/200422/ |dead-url=no }}</ref><ref>{{cite web |url=http://www.linuxjournal.com/node/1000100 |title=A fight against evil or a fight for attention? |date=2006-09-27 |first=Nicholas |last=Petreley |publisher=linuxjournal.com |accessdate=2015-03-11 |quote=Second, the war between Linus Torvalds and other Kernel developers and the Free Software Foundation over GPLv3 is continuing, with Torvalds saying he's fed up with the FSF. |archive-date=2018-03-02 |archive-url=https://web.archive.org/web/20180302144635/http://www.linuxjournal.com/node/1000100 |dead-url=no }}</ref>决定不采用 GPLv3 作为 Linux 内核许可证的托瓦茲在几年后重申了他的批评。<ref>[https://www.youtube.com/watch?v=PaKIZ7gJlRU Linus Torvalds says GPL v3 violates everything that GPLv2 stood for] {{Wayback|url=https://www.youtube.com/watch?v=PaKIZ7gJlRU |date=20180508034417 }} [[Debconf|Debconf]] 2014, [[Portland,_Oregon|Portland, Oregon]] (accessed 11 March 2015)</ref>

==== 韌體爭議 ====
許可證爭議的一個重點是Linux使用[[韌體|韌體]][[二進位包|二進位包]]以支援某些硬體裝置。[[理察·馬修·斯托曼|理察·馬修·斯托曼]]認為這些東西讓Linux某部份成為[[非自由軟體|非自由軟體]]，甚至以此散佈Linux更會破壞GPL，因為GPL需要'''完全可獲取的原始碼'''<ref>{{Cite web |url=http://www.gnu.org/philosophy/linux-gnu-freedom.html |title=存档副本 |accessdate=2006-11-25 |archive-date=2013-06-23 |archive-url=https://www.webcitation.org/6HaNpiUw2?url=http://www.gnu.org/philosophy/linux-gnu-freedom.html |dead-url=no }}</ref>。

林纳斯·托瓦兹及Linux社群中的領導者，支持較寬鬆的許可證，不支持[[理察·馬修·斯托曼|理察·馬修·斯托曼]]的立場。社群中的[[Linux-libre|Linux-libre]]提供完整的自由軟體韌體。

==== 載入式核心模組許可證 ====
另一個爭論點，就是[[載入式核心模組|載入式核心模組]]是否算是智慧財產權下的[[衍生創作|衍生創作]]，意即LKM是否也受GPL約束？托瓦茲本人相信LKM僅用一部分「公開」的核心介面，因此不算衍生創作，因此允許一些僅有二進位包裹的驅動程式或不以GPL宣告的驅動程式用於核心。但也不是每個人都如此同意，且托瓦茲也同意很多LKM的確是純粹的衍生創作，也寫下「基本上，核心模組'''是'''衍生創作」這樣的句子。另一方面托瓦茲也說過：

{{Quote|有時候一些驅動程式原先並非為Linux設計，而是為其他作業系統而作（意即並非為Linux作的衍生創作），這是個灰色地帶……這「的確」是個灰色地帶，而我個人相信一些模組可視為非Linux衍生創作，是針對Linux設計，也因此不會遵守Linux訂下的行為準則。<ref>{{cite web |url=http://www.ussg.iu.edu/hypermail/linux/kernel/0312.0/0670.html |title=存档副本 |accessdate=2006-11-25 |deadurl=yes |archiveurl=https://web.archive.org/web/20060927081641/http://www.ussg.iu.edu/hypermail/linux/kernel/0312.0/0670.html |archivedate=2006-09-27 }}</ref>}}

特別像繪圖卡驅動程式就有非常大的爭議，也許到最後得由立法機關給個答案。

=== SCO爭議 ===
{{Details|SCO-Linux爭議}}

在2003年3月，[[SCO_Group|SCO Group]]對[[IBM|IBM]][[SCO訴IBM|提告]]，聲稱IBM將一些在SCO智慧財產權許可證保護下的Unix原始碼植入Linux中，破壞了SCO給予IBM的原始碼使用許可權。另外SCO也發出一大堆存證函給許多公司，警告他們在沒有SCO許可權的情況下使用了Linux，此舉可能導致侵犯智慧財產權，並且以起訴為手段對個別使用者施壓。SCO也同時對[[Novell|Novell]]、[[戴姆勒克萊斯勒|戴姆勒克萊斯勒]]（DaimlerChrysler，在2004年7月被部份駁回）以及[[AutoZone|AutoZone]]提出告訴，且被[[Red_Hat|Red Hat]]與其他反對SCO論點的公司反告。2007年8月24日，聯邦法院審理SCO對Novell案（SCO v. Novell），法院認定Novell才是Unix商標的合法擁有者，而不是SCO。2010年3月20日，[[美国联邦第十巡回上诉法院|美国联邦第十巡回上诉法院]]宣判，Novell才是UNIX與UnixWare商標的合法擁有者。此項判決宣布後，已進入破產保護程序的SCO公司，決定停止繼續提出訴訟。

== 参考文献 ==
{{Reflist|3}}

== 外部連結 ==
{{Wikibooks|Linux kernel}}
{{Commons}}
* {{en}}[http://www.kernel.org/ Linux内核官方下载中心] {{Wayback|url=http://www.kernel.org/ |date=19980130085039 }}
* {{en}}[https://web.archive.org/web/20061005060017/http://kt.zork.net/ 日渐膨胀的Linux邮件列表内容摘要]
* {{en}}[https://web.archive.org/web/20121003060514/http://www.dina.dk/~abraham/Linus_vs_Tanenbaum.html 林納斯與塔能包姆爭論微核心的筆仗]
* {{en}}[http://www.youtube.com/watch?v=L2SED6sewRw Greg Kroah Hartman on the Linux Kernel at youtube] {{Wayback|url=http://www.youtube.com/watch?v=L2SED6sewRw |date=20210101104646 }}
* {{zh}}[https://www.ytyzx.org/index.php/%E6%9F%A5%E7%9C%8BLinux%E5%86%85%E6%A0%B8%E5%8F%8A%E5%8F%91%E8%A1%8C%E7%89%88%E6%9C%AC%E4%BF%A1%E6%81%AF 如何查看Linux内核版本信息] {{Wayback|url=https://www.ytyzx.org/index.php/%E6%9F%A5%E7%9C%8BLinux%E5%86%85%E6%A0%B8%E5%8F%8A%E5%8F%91%E8%A1%8C%E7%89%88%E6%9C%AC%E4%BF%A1%E6%81%AF |date=20200813212256 }}
{{clear}}

== 参见 ==
{{Portal|自由軟體}}
* [[Linux|Linux]]
* [[林納斯·托瓦茲|林納斯·托瓦茲]]
* {{link-en|操作系统内核的比较|Comparison of operating system kernels}}

{{Linux}}
[[Category:芬蘭發明|Category:芬蘭發明]]
[[Category:用C編程的自由軟件|Category:用C編程的自由軟件]]
[[Category:Linux內核|]]
[[Category:使用GPL許可證的軟件|Category:使用GPL許可證的軟件]]
[[Category:類Unix系統|Category:類Unix系統]]