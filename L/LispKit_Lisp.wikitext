'''LispKit Lisp'''是[[LISP|Lisp]]语言的严格函数式子集（“'''纯Lisp'''”），它是作为[[函数式编程|函数式编程]]概念的测试台而开发的。它首先使用了对[[惰性求值|惰性求值]]的早期经验。在1980年开发者Peter Henderson，出版了用一种变体[[ALGOL|ALGOL]]语言写的基于[[SECD抽象机|SECD抽象机]]的实现<ref name="henderson">{{cite book | last=Henderson | first=Peter | title=Functional Programming: Application and Implementation | url=https://epdf.pub/functional-programming-application-and-implementation.html | year=1980 | publisher=Prentice Hall | isbn=0-13-331579-7 | access-date=2021-12-28 | archive-date=2021-12-28 | archive-url=https://web.archive.org/web/20211228111622/https://epdf.pub/functional-programming-application-and-implementation.html }}</ref>。编译器和虚拟机都是高度可移植的，并已经在多种机器上实现<ref>{{cite web|title=An implementation of the Lispkit described in the book "FUNCTIONAL PROGRAMMING: Application and Implementation", by Peter Henderson|url=https://github.com/carld/lispkit|access-date=2021-12-28|archive-date=2021-12-30|archive-url=https://web.archive.org/web/20211230072756/https://github.com/carld/lispkit}}</ref>。

== 基本函数 ==
基本语言只提供了下列函数，但在Henderson的书中讨论了明确支持[[惰性求值|惰性求值]]和[[非确定性编程|非确定性编程]]的扩展。

;atom: 接受一个表达式，如果它的值是原子则返回 True；否则返回 False。
;add: 接受两个表达式，返回它们的数值的和。
;car: 接受其值为点对的一个表达式，返回这个点对的第一个值。
;cdr: 接受其值为点对的一个表达式，返回这个点对的第二个值。
;cons: 接受两个表达式，返回由它们的值构成的一个点对值。
;div: 接受两个表达式，返回它们的数值的商。
;eq: 接受两个表达式，如果它们的值相等则返回 True；否则返回 False。
;if: 接受三个表达式，如果第一个为 True 则返回第二个的值，否则返回第三个的值。
;lambda: 接受一个表达式，返回这个表达式为可求值的值。
;let: 接受命名表达式的一个列表，返回这个列表为一个单一可求值的值。
;letrec: 接受命名表达式的一个列表，返回这个列表为一个单一可求值的值。
;leq: 接受两个表达式，如果第一个数值小于或等于第二个则返回 True；否则返回 False。
;rem: 接受两个表达式，返回它们的数值的余数。
;mu: 接受两个表达式，返回它们的数值的积。
;quote: 接受一个表达式，返回这个表达式为一个值。
;sub: 接受两个表达式，返回它们的数值的差。

函数lambda、let和letrec是类似的，但是在处理命名变量的方式上有着微妙的区别，故有不同的用处。lambda定义并返回一个函数，let把表达式赋值给变量名，而letrec本质上类似于let，除了它允许递归函数的定义之外。

==引用==
{{reflist|2}}

== 进一步阅读 ==
*Peter Henderson, Geraint A. Jones, and Simon B. Jones, "The LispKit Manual" (ISBN 0-902928-18-X)

== 外部链接 ==
* The LispKit Manual, [http://www.cs.ox.ac.uk/files/3299/PRG32%20vol%201.pdf Volume 1] {{Wayback|url=http://www.cs.ox.ac.uk/files/3299/PRG32%20vol%201.pdf |date=20160304062717 }}, [http://www.cs.ox.ac.uk/files/3300/PRG32%20vol%202.pdf Volume 2] {{Wayback|url=http://www.cs.ox.ac.uk/files/3300/PRG32%20vol%202.pdf |date=20160304113042 }}
* [http://www.softwarepreservation.org/projects/LISP/lispkit/LispKit.tar.gz/view Implementation of Lispkit] {{Wayback|url=http://www.softwarepreservation.org/projects/LISP/lispkit/LispKit.tar.gz/view |date=20210404180748 }}
* [http://www.softwarepreservation.org/projects/LISP/lispkit/LispKit-GNU_Pascal.tar.gz/view GNU Pascal LispKit port] {{Wayback|url=http://www.softwarepreservation.org/projects/LISP/lispkit/LispKit-GNU_Pascal.tar.gz/view |date=20210404180832 }}
* [https://github.com/hanshuebner/secd/tree/master/lispkit/LKIT-2 Archive of old LispKit LISP code and files, plus C implementation of SECD machine]
* [http://perun.pmf.uns.ac.rs/radovanovic/publications/2002-prim-lisp.pdf Paper about a LispKit LISP implementation in Java] {{Wayback|url=http://perun.pmf.uns.ac.rs/radovanovic/publications/2002-prim-lisp.pdf |date=20160303181154 }}, and [https://perun.pmf.uns.ac.rs/radovanovic/downloads.htm the implementation itself] {{Wayback|url=https://perun.pmf.uns.ac.rs/radovanovic/downloads.htm |date=20210302074520 }}

{{Lisp programming language}}
[[Category:学术的编程语言|Category:学术的编程语言]]
[[Category:LISP程式語言家族|Category:LISP程式語言家族]]