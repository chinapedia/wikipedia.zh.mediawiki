{{NoteTA|G1=IT}}
'''LZX'''是[[LZ77与LZ78|LZ77]][[数据压缩|数据压缩]][[算法|算法]]中的一种，它也是同名的一个[[归档工具|归档工具]]，它们都是由[[Jonathan_Forbes|Jonathan Forbes]]与[[Tomi_Poutanen|Tomi Poutanen]]一起开发的。

== 使用LZX算法的实例 ==

=== Amiga LZX ===

LZX最初是1995年作为[[Amiga|Amiga]]归档工具公开发布的，当时作者正在[[加拿大|加拿大]][[沃特卢大学|沃特卢大学]]学习。当时这个软件作为[[共享软件|共享软件]]发布，这也是当时许多压缩软件采用的方式。注册版本中包含评估版本中没有的错误修改及改进。1997年，由于他们停止了在归档工具上的开发工作并且不再接受注册，所以作者发布了一个免费的解码文件，允许任何人都可以使用注册版本。

=== [[CAB|微软CAB]]文件 ===

1997年，Jonathan开始到[[微软|微软]]工作，微软的[[CAB|CAB]]归档工具进行了改进以增加LZX压缩方法。这些改进包括可变的查找窗口大小；Amiga LZX的查找窗口为固定的64 [[千字节|KB]]，微软LZX可以在从32到2048字节的2的指数之间变化。其中加入了一段特殊的[[预处理程序|预处理程序]]以检测[[英特尔|英特尔]][[80x86|80x86]]的“JMP”指令，这个指令将[[操作数|操作数]]从相对寻址转成绝对寻址，这样跳转到同一位置就可以得到压缩器可以匹配的重复字符串，从而提高80x86二进制码的压缩率。

=== [[HTML_Help|微软压缩HTML帮助]]（CHM）文件 ===

当微软公司决定替换传统的帮助文件格式的时候，他们选择了LZX算法压缩所有的HTML数据。但是，为了提高随机访问速度，压缩器进行了更改，在每个64K字节间隔压缩器都会进行复位并且每16K字节间隔都会重新排列到16位边界。这样HTMLHelp软件可以立刻定位到最近的64K字节间隔并且从那一点开始解压，而不需要每次都从整个压缩数据流的起始进行解码。

=== [[Microsoft_Reader|Microsoft EBook Reader]]（LIT）文件 ===

微软LIT文件是CHM文件的简单扩展，所以也用LZX压缩。

=== [[WIM|微软映像格式]]（WIM）文件 ===

据说将在[[微软Vista|微软Vista]]安装文件格式中使用的微软映像格式文件将LZX作为压缩方法之一[https://web.archive.org/web/20060819005213/http://www.apcstart.com/site/jbannan/2006/07/759/build-your-own-vista-install-dvd].

== 解压LZX文件 ==

'''unlzx'''程序可以解压Amiga LZX文档，'''cabextract'''可以用LZX方法解压微软CAB文档，如在[[CHM|CHM]]文章中所介绍的那样，有许多交叉平台的工具可以解压、浏览CHM文件。LIT文件可以使用'''Convert LIT'''软件解压。

== 参见 ==
*[[归档格式列表|归档格式列表]]
*[[归档工具列表|归档工具列表]]
*[[归档工具比较|归档工具比较]]

== 外部链接 ==
* [http://xavprods.free.fr/lzx/ LZX页面，包括许多版本的Amiga LZX归档工具] {{Wayback|url=http://xavprods.free.fr/lzx/ |date=20201101000705 }}
* [http://main.aminet.net/misc/unix/unlzx.c.gz unlzx源代码] {{Wayback|url=http://main.aminet.net/misc/unix/unlzx.c.gz |date=20060522203328 }}
* [http://www.kyz.uklinux.net/cabextract.php cabextract（包括源代码）] {{Wayback|url=http://www.kyz.uklinux.net/cabextract.php |date=20060907151444 }}
* [http://www.convertlit.com/ Convert LIT（包括源代码）] {{Wayback|url=http://www.convertlit.com/ |date=20201201182310 }}

{{压缩方法}}
{{Archive_formats}}

[[Category:无损压缩算法|Category:无损压缩算法]]