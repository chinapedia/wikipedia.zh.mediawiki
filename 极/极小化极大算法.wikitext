{{NoteTA
| G1=Games
| G2=IT
}}

'''Minimax算法'''（亦稱 '''MinMax''' or '''MM'''<ref>[http://www.fraserinstitute.org/uploadedFiles/fraser-ca/Content/research-news/research/publications/provincial-healthcare-index-2013.pdf Provincial Healthcare Index 2013] {{Wayback|url=http://www.fraserinstitute.org/uploadedFiles/fraser-ca/Content/research-news/research/publications/provincial-healthcare-index-2013.pdf |date=20150811005733 }} (Bacchus Barua, Fraser Institute, January 2013 -see page 25-)</ref>）又名极小化极大算法，是一种找出失败的最大可能性中的最小值的算法。

== 概述 ==
Minimax算法常用于棋类等由两方较量的游戏和程序。该算法是一个[[零和博弈|零总和]]算法，即一方要在可选的选项中选择将其优势最大化的选择，另一方则选择令对手优势最小化的方法。而开始的时候总和为0。很多棋类游戏可以采取此算法，例如[[井字棋|井字棋]]（tic-tac-toe）。

== 偽代碼 ==
<syntaxhighlight lang="matlab">
function  minimax(node, depth, maximizingPlayer) is
    if depth = 0 or node is a terminal node then
        return the heuristic value of node
    if maximizingPlayer then
        value := −∞
        for each child of node do
            value := max(value, minimax(child, depth − 1, FALSE))
        return value
    else (* minimizing player *)
        value := +∞
        for each child of node do
            value := min(value, minimax(child, depth − 1, TRUE))
        return value
</syntaxhighlight>

== 参考文献 ==
{{Reflist}}

==外部連結==
* {{springer|title=Minimax principle|id=p/m063950}}
* [http://www.cut-the-knot.org/Curriculum/Games/MixedStrategies.shtml A visualization applet] {{Wayback|url=http://www.cut-the-knot.org/Curriculum/Games/MixedStrategies.shtml |date=20210224161113 }}
* [https://web.archive.org/web/20060307183023/http://www.swif.uniba.it/lei/foldop/foldoc.cgi?maximin+principle Maximin principle] at Dictionary of Philosophical Terms and Names
* [http://www.bewersdorff-online.de/quaak/rules.htm Play a betting-and-bluffing game against a mixed minimax strategy] {{Wayback|url=http://www.bewersdorff-online.de/quaak/rules.htm |date=20210224192027 }}
* [https://xlinux.nist.gov/dads/HTML/minimax.html Minimax] {{Wayback|url=https://xlinux.nist.gov/dads/HTML/minimax.html |date=20210308164951 }} at [[Dictionary_of_Algorithms_and_Data_Structures|Dictionary of Algorithms and Data Structures]]
* [http://ksquared.de/gamevisual/launch.php Minimax] {{Wayback|url=http://ksquared.de/gamevisual/launch.php |date=20150324045417 }} (with or without alpha-beta pruning) algorithm visualization — game tree solving (Java Applet), for balance or off-balance trees.
* [http://apmonitor.com/me575/index.php/Main/MiniMax Minimax Tutorial with a Numerical Solution Platform] {{Wayback|url=http://apmonitor.com/me575/index.php/Main/MiniMax |date=20131213085505 }}
* [https://github.com/ykaragol/checkersmaster/blob/master/CheckersMaster/src/checkers/algorithm/MinimaxAlgorithm.java Java implementation used in a Checkers Game] {{Wayback|url=https://github.com/ykaragol/checkersmaster/blob/master/CheckersMaster/src/checkers/algorithm/MinimaxAlgorithm.java |date=20210710080822 }}

{{-}}
{{博弈论}}

[[Category:检测论|Category:检测论]]
[[Category:游戏人工智能|Category:游戏人工智能]]
[[Category:图算法|Category:图算法]]
[[Category:最优化算法|Category:最优化算法]]
[[Category:搜尋演算法|Category:搜尋演算法]]
[[Category:博弈论|Category:博弈论]]
[[Category:数理与定量方法_(经济学)|Category:数理与定量方法 (经济学)]]
[[Category:离散数学定理|Category:离散数学定理]]
[[Category:决策论|Category:决策论]]
[[Category:不动点|Category:不动点]]
[[Category:带有伪代码示例的条目|Category:带有伪代码示例的条目]]