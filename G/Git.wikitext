{{distinguish|GitHub|GitLab}}
{{NoteTA
|G1=IT
|G2=FL
|1=zh-cn:内核;zh-tw:核心;
|2=zh-cn:本地;zh-tw:本機;
|3=zh-cn:通过;zh-tw:透過;zh-hk:通過;
|4=zh-cn:文件夾;zh-tw:資料夾;
|5=zh-cn:元数据;zh-tw:中繼資料;
|6=zh-cn:仓库;zh-tw:儲存庫;
|7=zh-cn:客户端;zh-tw:用戶端;
}}
{{lowercase}}
{{Infobox Software
| name                                 = git
| logo                                 = Git-logo.svg
| logo size                            = 
| screenshot                           = Git session.svg
| screenshot size                      = 300px
| caption                              = 執行了建立儲存庫、新增檔案以及遠端同步的命令列工作階段。
| author                               = [[林纳斯·托瓦兹|林纳斯·托瓦兹]]
| developer                            = [[濱野純|濱野純]]、[[林纳斯·托瓦兹|林纳斯·托瓦兹]]
| released                             = {{Start date and age|2005|04|07|df=yes}}
| latest release version               = {{wikidata|property|edit|reference|P548=Q2804309|P348}}
| latest release date                  = {{wikidata|qualifier|P548=Q2804309|P348|P577}}
| programming language                 = [[C语言|C]]、[[Perl|Perl]]、[[Unix_shell|sh]]、[[Tcl|Tcl]]
| operating_system                     = [[POSIX|POSIX]], [[Windows|Windows]]
| genre                                = [[版本控制|版本控制]]
| license                              = [[GNU通用公共许可证|GNU通用公共许可证]] 第二版，[[GNU宽通用公共许可证|GNU宽通用公共许可证]] 2.1版<ref name="license_lgpl">{{cite web |url=https://github.com/git/git/blob/master/LGPL-2.1 |title=git's LGPL license at github.com |date=2011-05-20 |website=github.com |accessdate=2014-10-12 |archive-date=2016-04-11 |archive-url=https://web.archive.org/web/20160411135049/https://github.com/git/git/blob/master/LGPL-2.1 |dead-url=no }}</ref>
}}

'''git'''（{{IPAc-en|g|ɪ|t|note=no}}<ref>{{cite journal |url=http://www.oxfordlearnersdictionaries.com/definition/english/git |title=git - Definition and pronunciation |journal=Oxford Learner's Dictionaries |access-date=2014-04-04 |archive-date=2019-06-13 |archive-url=https://web.archive.org/web/20190613062620/https://www.oxfordlearnersdictionaries.com/definition/english/git |dead-url=no }}</ref>，{{audio|en-us-git.ogg|音频}}，吉特）是一个[[分散式版本控制|分散式版本控制]]软件，最初由[[林纳斯·托瓦兹|林纳斯·托瓦兹]]創作，於2005年以[[GPL|GPL]]授權條款釋出。最初目的是为了更好地管理[[Linux内核|Linux核心]]开发而设计。应注意的是，这与GNU Interactive Tools<ref name="gnuit">{{Cite web |url=https://www.gnu.org/software/gnuit/ |title=存档副本 |accessdate=2013-01-11 |archive-date=2021-01-30 |archive-url=https://web.archive.org/web/20210130135718/http://www.gnu.org/software/gnuit/ |dead-url=no }}</ref>（一个类似{{tsl|en|Norton Commander|}}界面的[[软件包管理系统|文件管理器]]）不同。

git最初的开发动力来自于[[BitKeeper|BitKeeper]]和[[Monotone_(軟體)|Monotone]]<ref>{{cite mailing list |mailinglist=linux-kernel |author=Linus Torvalds |url=http://marc.info/?l=git&m=114685143200012 |title=Re: [ANNOUNCE] git wiki |date=2006-05-05 |access-date=2008-03-27 |archive-date=2016-04-11 |archive-url=https://web.archive.org/web/20160411135050/http://marc.info/?l=git&m=114685143200012 |dead-url=yes }} "Some historical background" on git's predecessors</ref><ref>{{cite mailing list |mailinglist=linux-kernel |url=http://lkml.org/lkml/2005/4/8/9 |author=Linus Torvalds |title=Re: Kernel SCM saga |date=2005-04-07 |access-date=2008-03-27 |archive-date=2020-10-01 |archive-url=https://web.archive.org/web/20201001050626/https://lkml.org/lkml/2005/4/8/9 |dead-url=no }}</ref>。git最初只是作为一个可以被其他前端（比如Cogito或Stgit<ref>{{cite mailing list |author=Linus Torvalds |url=http://marc.info/?l=linux-kernel&m=111293537202443 |title=Re: Kernel SCM saga |date=2005-04-08 |mailinglist=linux-kernel |accessdate=2008-02-20 |archive-date=2016-04-11 |archive-url=https://web.archive.org/web/20160411135052/http://marc.info/?l=linux-kernel&m=111293537202443 |dead-url=yes }}</ref>）包装的后端而开发的，但后来git内核已经成熟到可以独立地用作版本控制<ref>{{cite mailing list |mailinglist=git |author=Linus Torvalds |url=http://marc.info/?l=git&m=114314642000462 |title=Re: Errors gittifying GCC and Binutils |date=2006-03-23 |access-date=2008-03-27 |archive-date=2016-04-11 |archive-url=https://web.archive.org/web/20160411135055/http://marc.info/?l=git&m=114314642000462 |dead-url=yes }}</ref>。很多被廣泛使用的軟體專案都使用 git 进行版本控制<ref>{{cite web |url=http://git.or.cz/gitwiki/gitProjects |title=Projects that use git for their source code management |accessdate=2008-02-20 |archive-url=https://web.archive.org/web/20090430021932/http://git.or.cz/gitwiki/GitProjects |archive-date=2009-04-30 |dead-url=yes }}</ref>，其中包括 Linux 核心、[[X.Org服务器|X.Org服务器]]和[[OLPC|OLPC]]内核等项目的开发流程<ref name="#1">{{cite web |url=http://wiki.laptop.org/go/Project_hosting |title=Project hosting |author=OLPC wiki |accessdate=2008-02-20 |archive-date=2009-02-02 |archive-url=https://web.archive.org/web/20090202074730/http://wiki.laptop.org/go/Project_hosting |dead-url=no }}</ref>。

== 歷史 ==
自2002年開始，林纳斯·托瓦兹 (Linus Torvalds) 決定使用BitKeeper作為Linux內核主要的版本控制系統用以维护程式碼。因為BitKeeper為[[专有软件|专有软件]]，這個決定在社群中長期遭受質疑。在Linux社群中，特別是[[理查德·斯托曼|理查德·斯托曼]]與[[自由軟體基金會|自由軟體基金會]]的成員，主張應該使用開放原始碼的軟體來作為Linux核心的版本控制系統。林纳斯·托瓦兹曾考慮過採用現成軟體作为版本控制系統（例如Monotone），但這些軟體都存在一些問題，特別是效能不佳。現成的方案，如[[協作版本系統|CVS]]的架構，受到林纳斯·托瓦兹的批評<ref>{{Cite web |url=https://git.wiki.kernel.org/index.php/LinusTalk200705Transcript |title=LinusTalk200705Transcript |accessdate=2016-05-09 |archive-date=2011-07-25 |archive-url=https://web.archive.org/web/20110725034129/https://git.wiki.kernel.org/index.php/LinusTalk200705Transcript |dead-url=no }}</ref>。

2005年，[[安德魯·垂鳩|安德魯·垂鳩]] (Andrew Tridgell) 寫了一個簡單程式，可以連接BitKeeper的儲存庫，BitKeeper著作權擁有者[[拉里·麥沃伊|拉里·麥沃伊]]認為安德魯·垂鳩对BitKeeper內部使用的[[网络传输协议|协议]]进行[[逆向工程|逆向工程]]，決定收回无偿使用BitKeeper的授權。Linux內核開發團隊與BitMover公司進行磋商，但無法解決他們之間的歧見。林纳斯·托瓦兹決定自行開發版本控制系統替代BitKeeper，以十天的時間編寫出git第一個版本<ref>{{Cite web |url=http://www.uwsg.iu.edu/hypermail/linux/kernel/0504.0/1540.html |title=Linux-Kernel Archive: Kernel SCM saga |accessdate=2014-09-13 |archive-date=2012-06-30 |archive-url=https://archive.is/20120630001050/http://www.uwsg.iu.edu/hypermail/linux/kernel/0504.0/1540.html |dead-url=yes }}</ref><ref>{{cite news|author1=王立恆|title=Git十歲了！Git之父Linus Torvalds說古，大談Git開發秘辛|url=http://www.ithome.com.tw/news/95088|accessdate=2016-05-10|agency=iThome|date=2015-04-10|archive-date=2019-06-16|archive-url=https://web.archive.org/web/20190616150741/https://www.ithome.com.tw/news/95088|dead-url=no}}</ref>。

=== 命名 ===
林纳斯·托瓦兹諷刺地嘲笑git這個名字（在[[英式英語|英式英語]]俚語中表示「不愉快的人」）<ref name="whythegitname">{{cite web
 |url         = https://git.wiki.kernel.org/index.php/GitFaq#Why_the_.27Git.27_name.3F
 |title       = GitFaq: Why the 'Git' name?
 |publisher   = Git.or.cz
 |access-date = 2012-07-14
 |archiveurl  = https://web.archive.org/web/20120723224559/https://git.wiki.kernel.org/index.php/GitFaq#Why_the_.27Git.27_name.3F
 |archivedate = 2012-07-23
 |dead-url    = no
}}</ref><ref>{{cite web |url= http://www.pcworld.idg.com.au/article/129776/after_controversy_torvalds_begins_work_git_/ |title= After controversy, Torvalds begins work on 'git' |date= 2012-07-14 |publisher= PC World |archiveurl= https://web.archive.org/web/20110201184934/http://www.pcworld.idg.com.au/article/129776/after_controversy_torvalds_begins_work_git_/ |archivedate= 2011-02-01 |accessdate= 2020-02-18 |dead-url= no }}</ref><ref>{{cite web |url= https://git-scm.com/docs/git.html |title= git(1) Manual Page |access-date= 2012-07-21 |archiveurl= https://web.archive.org/web/20120621133627/http://www.git-scm.com/docs/git.html |archivedate= 2012-06-21 |dead-url= no }}</ref>

源代碼的自述文件進一步闡述了：<ref>{{cite web |title= Initial revision of 'git', the information manager from hell · git/git@e83c516 |url= https://github.com/git/git/blob/e83c5163316f89bfbde7d9ab23ca2e25604af290/README |website= GitHub |access-date= 2016-01-21 |archiveurl= https://web.archive.org/web/20171008211145/https://github.com/git/git/blob/e83c5163316f89bfbde7d9ab23ca2e25604af290/README |archivedate= 2017-10-08 |dead-url= no }}</ref>

{{quote|The name "git" was given by Linus Torvalds when he wrote the very first version. He described the tool as "the stupid content tracker" and the name as (depending on your way):
* random three-letter combination that is pronounceable, and not actually used by any common UNIX command. The fact that it is a mispronunciation of "get" may or may not be relevant.
* "global information tracker": you're in a good mood, and it actually works for you. Angels sing, and a light suddenly fills the room.
* stupid. contemptible and despicable. simple. Take your pick from the dictionary of slang.
林纳斯·托瓦兹在編寫第一個版本時就使用了“git”這個名稱。 他將工具描述為“愚蠢的內容跟踪器”，並將其描述為（取決於您的方式）：
*可以發音唸出的隨機三個字母組合，而且並未被實際用在任何 UNIX 指令上。它是“get”的錯誤發音，這點可能相關也可能無關。
*“全球信息跟踪器”：您的心情不錯，對你而言它也確實說得通。天使唱歌，房間突然充滿光明。
*愚蠢的。鄙視和卑鄙的。簡單。從俚語字典中選擇。
}}

===版本===
{| class="wikitable"
|-
! 版本
! 最初发布日期  
! 最新修订版本
! 最新修订版本发布日期  
|-
| {{Version|o|0.99}}
| 2005-07-11
| 0.99.9n
| 2005-12-15
|-
| {{Version|o|1.0}}
| 2005-12-21
| 1.0.13
| 2006-01-27
|-
| {{Version|o|1.1}}
| 2006-01-08
| 1.1.6
| 2006-01-30
|-
| {{Version|o|1.2}}
| 2006-02-12
| 1.2.6
| 2006-04-08
|-
| {{Version|o|1.3}}
| 2006-04-18
| 1.3.3
| 2006-05-16
|-
| {{Version|o|1.4}}
| 2006-06-10
| 1.4.4.5
| 2008-07-16
|-
| {{Version|o|1.5}}
| 2007-02-14
| 1.5.6.6
| 2008-12-17
|-
| {{Version|o|1.6}}
| 2008-08-17
| 1.6.6.3
| 2010-12-15
|-
| {{Version|o|1.7}}
| 2010-02-13
| 1.7.12.4
| 2012-10-17
|-
| {{Version|o|1.8}}
| 2012-10-21
| 1.8.5.6
| 2014-12-17
|-
| {{Version|o|1.9}}
| 2014-02-14
| 1.9.5
| 2014-12-17
|-
| {{Version|o|2.0}}
| 2014-05-28
| 2.0.5
| 2014-12-17
|-
| {{Version|o|2.1}}
| 2014-08-16
| 2.1.4
| 2014-12-17
|-
| {{Version|o|2.2}}
| 2014-11-26
| 2.2.3
| 2015-09-04
|-
| {{Version|o|2.3}}
| 2015-02-05
| 2.3.10
| 2015-09-29
|-
| {{Version|o|2.4}}
| 2015-04-30
| 2.4.12
| 2017-05-05
|-
| {{Version|o|2.5}}
| 2015-07-27
| 2.5.6
| 2017-05-05
|-
| {{Version|o|2.6}}
| 2015-09-28
| 2.6.7
| 2017-05-05
|-
| {{Version|o|2.7}}
| 2015-10-04
| 2.7.6
| 2017-07-30
|-
| {{Version|o|2.8}}
| 2016-03-28
| 2.8.6
| 2017-07-30
|-
| {{Version|o|2.9}}
| 2016-06-13
| 2.9.5
| 2017-07-30
|-
| {{Version|o|2.10}}
| 2016-09-02
| 2.10.5
| 2017-09-22
|-
| {{Version|o|2.11}}
| 2016-11-29
| 2.11.4
| 2017-09-22
|-
| {{Version|o|2.12}}
| 2017-02-24
| 2.12.5
| 2017-09-22
|-
| {{Version|o|2.13}}
| 2017-05-10
| 2.13.7
| 2018-05-22
|-
| {{Version|o|2.14}}
| 2017-08-04
| 2.14.5
| 2018-09-27
|-
| {{Version|o|2.15}}
| 2017-10-30
| 2.15.3
| 2018-09-27
|-
| {{Version|o|2.16}}
| 2018-01-17
| 2.16.5
| 2018-09-27
|-
| {{Version|co|2.17}}
| 2018-04-02
| 2.17.5
| 2018-04-19
|-
| {{Version|co|2.18}}
| 2018-06-21
| 2.18.4
| 2020-04-19
|-
| {{Version|co|2.19}}
| 2018-09-10
| 2.19.5
| 2020-04-19
|-
| {{Version|co|2.20}}
| 2018-12-09
| 2.20.4
| 2020-04-19
|-
| {{Version|co|2.21}}
| 2019-02-24
| 2.21.3
| 2020-04-19
|-
| {{Version|co|2.22}}
| 2019-06-07
| 2.22.4
| 2020-04-19
|-
| {{Version|co|2.23}}
| 2019-08-16
| 2.23.3
| 2020-04-19
|-
| {{Version|co|2.24}}
| 2019-11-04
| 2.24.3
| 2020-04-19
|-
| {{Version|co|2.25}}
| 2020-01-13
| 2.25.4
| 2020-04-19
|-
| {{Version|co|2.26}}
| 2020-03-23
| 2.26.2
| 2020-04-19
|-
| {{Version|co|2.27}}
| 2020-06-01
| 2.27.0
| 2020-06-01
|-
| {{Version|co|2.28}}
| 2020-07-27
| 2.28.0
| 2020-07-27
|-
| {{Version|co|2.29}}
| 2020-10-19
| 2.29.2
| 2020-10-29
|-
| {{Version|co|2.30}}
| 2020-12-27
| 2.30.0
| 2020-12-27
|-
| {{Version|co|2.31}}
| 2021-03-15
| 2.31.1
| 2021-04-02
|-
| {{Version|co|2.32}}
| 2021-06-06
|
|
|-
| {{Version|c|2.33}}
| 2021-08-16
|
|
|-
| colspan="4" | <small>{{Version |l |show=111110}}</small>
|}

== 主要功能 ==
'''git'''是用于Linux内核开发的版本控制工具。与CVS、[[Subversion|Subversion]]一類的集中式版本控制工具不同，它采用了分布式版本库的作法，不需要服务器端软件，就可以運作版本控制，使得源代码的发布和交流极其方便。git的速度很快，这对于诸如Linux内核这样的大项目来说自然很重要。git最为出色的是它的合并追踪（merge tracing）能力。

实际上Linux内核开发团队决定开始开发和使用git来作为内核开发的版本控制系统的时候，世界上开源社群的反对声音不少，最大的理由是git太艰涩难懂，从git的内部工作机制来说，的确是这样。但是随着开发的深入，git的正常使用都由一些友善的命令来执行，使git变得非常好用。现在，越来越多的著名项目采用git来管理项目开发，例如：[[wine|wine]]、{{tsl|en|U-boot|}}等<ref>{{Cite web |url=http://www.kernel.org/git |title=存档副本 |accessdate=2009-04-02 |archive-date=2008-10-07 |archive-url=https://web.archive.org/web/20081007111146/http://kernel.org./git |dead-url=no }}</ref>。

作为开源自由原教旨主义项目，git没有对版本库的浏览和修改做任何的权限限制，通过其他工具也可以达到有限的权限控制，比如：gitosis、CodeBeamer MR。原本git的使用范围只适用于Linux/Unix平台，但在Windows平台下的使用也日渐成熟，這主要归功于[[Cygwin|Cygwin]]、[[msysgit|msysgit]]环境，以及[[TortoiseGit|TortoiseGit]]这样易用的GUI工具。git的源代码中也已经加入了对Cygwin与[[MinGW|MinGW]]编译环境的支援且逐漸完善，為Windows使用者帶來福音。

== 实现原理 ==
git和其他[[版本控制系统|版本控制系统]]（如CVS）有不小的差别，git本身关心檔案的整体性是否有改變，但多數的版本控制系统如CVS或Subversion系统則在乎檔案内容的差异。git拒绝保持每个文件的版本修订关系。因此查看一个文件的历史需要遍历各个history快照；git隐式处理文件更名，即同名文件默认为其前身，如果没有同名文件则在前一个版本中搜索具有类似内容的文件。

git更像一個檔案系统，直接在本機上取得資料，不必連線到主机端获取資料。 每个开发者都可有全部开发历史的本地副本，changes从这种本地repository复制给其他开发者。这些changes作为新增的开发分支被导入，可以与本地开发分支合并。 

分支是非常轻量级的，一个分支仅是对一个commit的引用。

git是用C语言开发的，以追求最高的性能。git自动完成[[垃圾回收_(计算机科学)|垃圾回收]]，也可以用命令<code>git gc --prune</code>直接调用。

git存储每个新创建的object作为一个单独文件。为了压缩存储空间占用， packs操作把很多文件（启发式类似名字的文件往往具有类似内容）使用[[差分压缩|差分压缩]]入一个文件中（packfile），并创建一个对应的索引文件，指明object在packfile中的偏移值。新创建的对象仍然作为单独文件存在。repacks操作非常费时间，git会在空闲时间自动做此操作。也可用命令<code>git gc</code>来直接启动repack。packfile与索引文件都用SHA-1作为[[校验和|校验和]]并作为文件名。<code>git fsck</code>命令做校验和的完整性验证。

Git服务器典型的TCP监听端口为9418。

== -{zh-cn:庫;zh-tw:儲存庫}-目录 ==
*hooks：存儲-{zh-cn:钩子;zh-tw:hook}-的文件夾
*logs：存儲日誌的文件夾
*refs：存儲指向各個分支的指標（SHA-1标识）文件
*objects：存放git對象
*config：存放各種-{zh-cn:設置文檔;zh-tw:組態檔}-
*HEAD：指向當前所在分支的指標文件路徑，一般指向refs下的某文件

==数据結構==
[[File:Git_operations.svg|thumb]]
Git有两种数据结构：可变的索引（index、stage或cache）用于缓冲工作目录信息与下一次提交的版本信息；不变的、仅追加的对象数据库。

对象数据库包含4类对象：
*[[blob|blob]] （-{zh-cn:二进制大对象;zh-tw:二進位大型物件}-）是使用[[zlib|zlib]]压缩算法对一个文件的内容压缩后的结果。Blobs没有保存文件名、时间戳或其他[[元数据|元数据]]。Git将其存储在位于隐藏的.git/objects文件夹中。文件的名称为使用SHA-1哈希函数对原文件内容生成的哈希值。这些对象文件称为Blob，每次将新文件添加到存储库时会创建Blob对象。
*tree对象对应于文件目录。包含文件名列表以及文件的类型比特（包含-{zh-cn:许可权;zh-tw:許可權}-{{clarify|post-text=此處許可權具體指涉的是什麼概念}}）、到blob（对应于文件）或tree对象的引用。tree对象是源树（source tree）的快照。用[[默克尔树|-{zh-cn:默克尔树;zh-tw:雜湊樹}-]]-{zh-cn:实现;zh-tw:實作}-。
*commit对象链接tree对象在一起而成为history，包含顶层源目录的tree对象名字、一个时间戳、log信息、0个或多个父commit对象的名字。用于保存特定版本的树型文件夹结构以及提交作者，电子邮件地址，日期和描述性提交消息。
*tag对象是一个容器，包含了到另一个对象的引用，也可以增加关于另外对象的元数据。通常它保存需要追溯的特定版本数据的一个commit对象的数字签名。

以上4类的对象用其内容的SHA-1 hash值标识：hash值的前两个字符作为存放的目录名字，其余hash字符作为这个对象的文件名。 

Git数据库中不变引用的对象将会被垃圾回收清除。Git命令可以创建、移动、删除引用。"git show-ref"列出所有引用。某些引用类型：
* ''heads''：引用一个本地对象，是commit的指针。每个head可以指任意一个这样的指针。可以包含任意数量的heads。而"HEAD"（全部大写），仅仅指的是当前有效的head。默认情况下，在每个仓库下都有一个head，叫做master。
* ''remotes''：引用远程repository中的一个对象
* ''stash''：引用一个还没有committed的一个对象
* ''meta''：例如一个bare repository中的一个配置，用户权限；refs/meta/config命名空间等<ref>{{Cite web |url=https://gerrit-review.googlesource.com/Documentation/config-project-config.html |title=Gerrit Code Review – Project Configuration File Format |accessdate=2017-05-22 |archive-date=2020-12-03 |archive-url=https://web.archive.org/web/20201203033602/https://gerrit-review.googlesource.com/Documentation/config-project-config.html |dead-url=no }}</ref>
* ''tags''：

某些操作（例如，将提交推送到远程存储库，存储太多对象或手动运行Git的垃圾收集命令）可能会导致Git将对象重新打包为打包文件，在打包过程中，采用反向差异并进行压缩以消除多余的内容并减小尺寸。该过程将生成包含对象内容的.pack文件，每个文件都有一个对应的.idx索引文件，其中包含对打包对象及其在打包文件中位置的引用。当将分支推送到远程存储库或从远程存储库拉出分支时，这些打包文件将通过网络传输。提取或获取分支时，将打包文件解压缩以在对象存储库中创建松散对象。

== 移植性 ==
在[[Windows|Windows]]平台上有msysgit與[[TortoiseGit|TortoiseGit]]可資利用。TortoiseGit還提供有[[GUI|GUI]]。

Git也提供[[Windows|Windows]]版本下载。

[[Visual_Studio|Visual Studio]] 自 2013 版本开始内置 Git 功能。

==GIT GUI客户端==
* [[GitHub_Desktop|GitHub Desktop]]：可用于第三方Git仓库网站<ref>{{Cite web |url=https://desktop.github.com/ |title=GitHub Desktop |accessdate=2017-05-24 |archive-date=2021-02-04 |archive-url=https://web.archive.org/web/20210204192256/https://desktop.github.com/ |dead-url=no }}</ref><ref>{{Cite web |url=http://haacked.com/archive/2012/05/30/using-github-for-windows-with-non-github-repositories.aspx/ |title=Using GitHub for Windows with non-GitHub repositories |accessdate=2017-05-24 |archive-date=2020-10-22 |archive-url=https://web.archive.org/web/20201022033919/https://haacked.com/archive/2012/05/30/using-github-for-windows-with-non-github-repositories.aspx/ |dead-url=no }}</ref>
* [[Git_for_Windows|Git for Windows]]<ref>{{Cite web |url=http://msysgit.github.io/ |title=Git for Windows |accessdate=2017-05-24 |archive-date=2021-01-18 |archive-url=https://web.archive.org/web/20210118195713/https://msysgit.github.io/ |dead-url=no }}</ref>
* [[TortoiseGit|TortoiseGit]]
* [[Atlassian|SourceTree]]
* [[GitEye|GitEye]]<ref>{{Cite web |url=http://www.collab.net/giteyeapp |title=GitEye |accessdate=2017-05-24 |archive-date=2014-11-19 |archive-url=https://web.archive.org/web/20141119161907/http://www.collab.net/giteyeapp |dead-url=no }}</ref>

==使用==

=== 使用git的專案 ===

有不少的專案目前都使用git:<ref>{{cite web |url=http://git.wiki.kernel.org/index.php/gitProjects |title=Projects that use git for their source code management |accessdate=2008-02-20 |archive-date=2020-10-21 |archive-url=https://web.archive.org/web/20201021070828/https://git.wiki.kernel.org/index.php/GitProjects |dead-url=no }}</ref>

{{colbegin|3}}
* [[Amarok|Amarok]]<ref>{{Cite web |url=http://techbase.kde.org/Getting_Started/Sources/KDE_git-tutorial |title=Getting Started/Sources/Amarok git Tutorial - KDE TechBase |accessdate=2010-04-27 |archive-date=2020-08-09 |archive-url=https://web.archive.org/web/20200809010639/https://techbase.kde.org/Getting_Started/Sources/KDE_git-tutorial |dead-url=no }}</ref>
* [[Android|Android]]<ref>{{Cite web |url=http://source.android.com/download/using-repo |title=Using Repo and git (Android Open Source Project) |accessdate=2010-04-27 |archive-date=2010-01-09 |archive-url=https://web.archive.org/web/20100109133732/http://source.android.com/download/using-repo |dead-url=no }}</ref>
* [[Arch_Linux|Arch Linux]]
* {{tsl|en|Aquamacs Emacs|}}
* {{tsl|en|BlueZ|}}<ref>{{Cite web |url=http://www.bluez.org/development/git/ |title=BlueZ » git access |accessdate=2010-04-27 |archive-date=2020-10-24 |archive-url=https://web.archive.org/web/20201024155230/http://www.bluez.org/development/git/ |dead-url=no }}</ref>
* [[Btrfs|Btrfs]]<ref>{{cite web |url=http://btrfs.wiki.kernel.org/index.php/Btrfs_source_repositories |title=Btrfs source repositories - btrfs Wiki |publisher=Btrfs.wiki.kernel.org |date= |accessdate=2009-06-15 |archive-date=2020-06-02 |archive-url=https://web.archive.org/web/20200602093134/https://btrfs.wiki.kernel.org/index.php/Btrfs_source_repositories |dead-url=no }}</ref>
* [[Clojure|Clojure]]
* {{tsl|en|CakePHP|}}
* [[Debian|Debian]]<ref>{{Cite web |url=http://git.debian.org/ |title=git.debian.org git |accessdate=2021-02-06 |archive-date=2021-01-15 |archive-url=https://web.archive.org/web/20210115064000/http://git.debian.org/ |dead-url=no }}</ref>
* [[Digg|Digg]]<ref>{{Cite web |url=http://about.digg.com/blog/digggit-part-1 |title=digg.git - part 1 {{!}} Digg About |access-date=2010-04-27 |archive-url=https://web.archive.org/web/20100211025622/http://about.digg.com/blog/digggit-part-1 |archive-date=2010-02-11 |dead-url=yes }}</ref>
* [[DragonFly_BSD|DragonFly BSD]]<ref>[http://wiki.dragonflybsd.org/index.cgi/TypicalgitUsage TypicalgitUsage - dragonflywiki]{{dead link|date=2017年11月 |bot=InternetArchiveBot |fix-attempted=yes }}</ref>
* [[Drupal|Drupal]]<ref>{{Cite web |url=http://wikipedia.org/wiki/Drupal |title=存档副本 |accessdate=2011-03-07 |archive-date=2019-10-16 |archive-url=https://web.archive.org/web/20191016232335/https://en.wikipedia.org/wiki/Drupal |dead-url=no }}</ref>
* {{tsl|en|Elinks|}}<ref>{{Cite web |url=http://elinks.or.cz/download.html |title=Download |accessdate=2010-04-27 |archive-date=2020-10-28 |archive-url=https://web.archive.org/web/20201028094828/http://elinks.or.cz/download.html |dead-url=no }}</ref>
* [[Fedora_(作業系統)|Fedora]]
* [[FFmpeg|FFmpeg]] <ref>{{cite web |url=http://ffmpeg.org/download.html |title=Get FFmpeg |publisher=Ffmpeg.org |date= |accessdate=2009-06-15 |archive-date=2013-09-15 |archive-url=https://www.webcitation.org/6JdfM7HE0?url=http://ffmpeg.org/download.html |dead-url=no }}</ref>
* [[Freenet|Freenet]]
* '''git'''<ref>{{cite web|url=http://git-scm.com/|title=git - Fast Version Control System|accessdate=2010-04-24|archive-url=https://web.archive.org/web/20090101104542/http://git-scm.com/|archive-date=2009-01-01|dead-url=yes}}</ref>
* [[GIMP|GIMP]]
* [[GNOME|GNOME]]<ref>{{cite web |url=http://mail.gnome.org/archives/gnome-infrastructure/2009-March/msg00064.html |title=Mailing List Announcement |author=Lucas Rocha |accessdate=2009-03-19 |quote=GNOME to migrate to git version control system... |archive-date=2020-10-27 |archive-url=https://web.archive.org/web/20201027071342/https://mail.gnome.org/archives/gnome-infrastructure/2009-March/msg00064.html |dead-url=no }}</ref><ref>{{Cite web |url=http://live.gnome.org/git |title=git - GNOME Live! |accessdate=2015-10-10 |archive-date=2012-04-10 |archive-url=https://web.archive.org/web/20120410101757/http://live.gnome.org/Git |dead-url=no }}</ref>
* {{tsl|en|GPM|}}
* [[GStreamer|GStreamer]]<ref>{{Cite web |url=http://gstreamer.freedesktop.org/wiki/gitDeveloperGuidelines |title=gstreamer Wiki - gitDeveloperGuidelines |accessdate=2015-10-10 |archive-date=2013-02-06 |archive-url=https://web.archive.org/web/20130206134924/http://gstreamer.freedesktop.org/wiki/GitDeveloperGuidelines |dead-url=yes }}</ref>
* [[gThumb|gThumb]]<ref>{{Cite web |url=http://live.gnome.org/gthumb |title=gthumb - GNOME Live! |accessdate=2010-04-27 |archive-date=2013-05-24 |archive-url=https://web.archive.org/web/20130524081918/https://live.gnome.org/gthumb |dead-url=no }}</ref>
* [[GTK+|GTK+]]<ref>{{Cite web |url=http://www.gtk.org/download.html |title=GTK+ - Download |accessdate=2010-04-27 |archive-date=2010-07-03 |archive-url=https://web.archive.org/web/20100703061550/http://www.gtk.org/download.html |dead-url=yes }}</ref>
* [[GNU_Hurd|Hurd]]<ref>{{Cite web |url=http://www.gnu.org/software/hurd/rules/source_repositories.html |title=source repositories |accessdate=2010-04-27 |archive-date=2020-10-24 |archive-url=https://web.archive.org/web/20201024155410/http://www.gnu.org/software/hurd/rules/source_repositories.html |dead-url=no }}</ref>
* [[jQuery|jQuery]]<ref>{{Cite web |url=http://docs.jquery.com/Downloading_jQuery#git |title=Downloading jQuery - jQuery JavaScript Library |accessdate=2010-04-27 |archive-date=2012-09-19 |archive-url=https://web.archive.org/web/20120919105101/http://docs.jquery.com/Downloading_jQuery#git |dead-url=no }}</ref>
* {{tsl|en|Laika (EHR testing framework)|}}<ref>{{Cite web |url=http://github.com/CCHIT/laika |title=CCHIT's laika at master - gitHub |accessdate=2010-04-27 |archive-date=2010-04-20 |archive-url=https://web.archive.org/web/20100420072122/http://github.com/CCHIT/laika |dead-url=no }}</ref>
* [[LilyPond|LilyPond]] (music typesetting)<ref>{{Cite web |url=http://lilypond.org/ |title=LilyPond, music notation for everyone |access-date=2019-10-16 |archive-url=https://web.archive.org/web/20181211151417/http://lilypond.org/ |archive-date=2018-12-11 |dead-url=yes }}</ref>
* [[Linux_kernel|Linux kernel]]
* [[Linux_Mint|Linux Mint]]<ref>{{Cite web |url=http://www.linuxmint.com/blog/?p=970 |title=The Linux Mint Blog » Blog Archive » Mint to use Launchpad for translations, bugs, blueprints and github for code hosting and version control |accessdate=2010-04-27 |archive-date=2010-02-08 |archive-url=https://web.archive.org/web/20100208054451/http://www.linuxmint.com/blog/?p=970 |dead-url=no }}</ref>
* [[LMMS|LMMS]] Music Production Software <ref>{{Cite web |url=http://lmms.sourceforge.net/ |title=LMMS - Linux MultiMedia Studio |accessdate=2021-02-06 |archive-date=2014-04-18 |archive-url=https://web.archive.org/web/20140418035624/http://lmms.sourceforge.net/ |dead-url=no }}</ref>
* [[Maemo|Maemo]]<ref>{{Cite web |url=http://maemo.gitorious.org/ |title=Maemo - gitorious |accessdate=2010-04-27 |archive-date=2009-10-08 |archive-url=https://web.archive.org/web/20091008221820/http://maemo.gitorious.org/ |dead-url=yes }}</ref>
* [[MeeGo|MeeGo]]<ref>{{Cite web |url=http://meego.gitorious.org/ |title=MeeGo - gitorious |accessdate=2010-04-27 |archive-date=2011-01-29 |archive-url=https://web.archive.org/web/20110129195217/http://meego.gitorious.org/ |dead-url=yes }}</ref>
* {{tsl|en|Merb|}}<ref>{{Cite web |url=http://rubyonrails.org/merb/ |title=Ruby on Rails: Merb |accessdate=2010-04-27 |archive-date=2010-04-30 |archive-url=https://web.archive.org/web/20100430212740/http://rubyonrails.org/merb |dead-url=yes }}</ref>
* {{tsl|en|MooTools|}}<ref>{{Cite web |url=http://mootools.net/ |title=MooTools - a compact javascript framework |accessdate=2010-04-27 |archive-date=2021-02-05 |archive-url=https://web.archive.org/web/20210205181855/https://mootools.net/ |dead-url=no }}</ref>
* [[OLPC|One Laptop Per Child]] (OLPC)<ref name="#1"/>
* [[OpenFOAM|OpenFOAM]]
* [[openSUSE|openSUSE]]<ref>{{cite web |url=http://gitorious.org/opensuse |title=openSUSE - gitorious |language=en |deadurl=yes |archiveurl=https://web.archive.org/web/20100527144200/http://gitorious.org/opensuse |archivedate=2010-05-27 |accessdate=2010-04-27 }}</ref>
* [[Perl|Perl]]<ref>{{cite web |url=http://www.nntp.perl.org/group/perl.perl5.porters/2008/12/msg142823.html |title=Mailing List Announcement |author=Léon Brocard |accessdate=2008-12-22 |quote=The Perl Foundation has migrated Perl 5 to the git version control system... |archive-date=2011-08-10 |archive-url=https://web.archive.org/web/20110810035144/http://www.nntp.perl.org/group/perl.perl5.porters/2008/12/msg142823.html |dead-url=no }}</ref>
* [[PHP|PHP]]<ref>{{cite web|author=PHP|url=http://www.php.net/archive/2012.php#id2012-03-20-1|title=PHP migrates to git|publisher=PHP Group|date=2012-03-20|accessdate=2012-03-20|archive-date=2021-02-04|archive-url=https://web.archive.org/web/20210204005239/https://www.php.net/archive/2012.php#id2012-03-20-1|dead-url=no}}</ref>
* [[phpBB|phpBB]]<ref>{{cite web|author=phpBB|url=http://www.phpbb.com/community/viewtopic.php?f=14&t=2015905|title=phpBB moves source code versioning from Subversion to git|publisher=phpBB Group|date=2010-03-07|accessdate=2010-03-07|archive-date=2010-09-24|archive-url=https://web.archive.org/web/20100924130621/http://www.phpbb.com/community/viewtopic.php?f=14&t=2015905|dead-url=no}}</ref>
* [[PostgreSQL|PostgreSQL]]
* [[Prototype_JavaScript框架|Prototype JavaScript框架]]<ref>{{Cite web |url=http://prototypejs.org/contribute |title=Prototype JavaScript framework: Contribute |accessdate=2010-04-27 |archive-date=2020-10-24 |archive-url=https://web.archive.org/web/20201024155517/http://prototypejs.org/contribute |dead-url=no }}</ref>
* [[Qt_(toolkit)|Qt]]<ref>{{cite web |url=http://www.qtsoftware.com/about/news/qt-contribution-model-announced |date=2009-05-11 |accessdate=2009-06-22 |title=Qt now open for community contributions |deadurl=yes |archiveurl=https://web.archive.org/web/20090514172803/http://www.qtsoftware.com/about/news/qt-contribution-model-announced |archivedate=2009-05-14 }}</ref>
* [[Reddit|Reddit]]<ref>{{cite web |url=http://blog.reddit.com/2008/06/reddit-goes-open-source.html |title=Reddit Goes Open Source |accessdate=2010-02-26 |archive-date=2011-12-22 |archive-url=https://web.archive.org/web/20111222234825/http://blog.reddit.com/2008/06/reddit-goes-open-source.html |dead-url=yes }}</ref>
* [[rsync|rsync]]
* [[Ruby_on_Rails|Ruby on Rails]]<ref>{{cite web |url=http://weblog.rubyonrails.org/2008/4/2/rails-is-moving-from-svn-to-git |title="Rails is moving from SVN to git" |accessdate=2008-04-03 |archive-date=2009-02-24 |archive-url=https://web.archive.org/web/20090224091748/http://weblog.rubyonrails.org/2008/4/2/rails-is-moving-from-svn-to-git |dead-url=no }}</ref>
* [[Samba|Samba]]<ref>{{Cite web |url=http://wiki.samba.org/index.php/Using_git_for_Samba_Development |title=Using git for Samba Development - SambaWiki |accessdate=2015-10-10 |archive-date=2015-10-15 |archive-url=https://web.archive.org/web/20151015174752/https://wiki.samba.org/index.php/Using_Git_for_Samba_Development |dead-url=no }}</ref>
* {{tsl|en|SproutCore|}}<ref>{{Cite web |url=http://www.sproutcore.com/documentation/hacking/ |title=SproutCore Documentation |accessdate=2010-04-27 |archive-date=2009-07-16 |archive-url=https://web.archive.org/web/20090716120810/http://www.sproutcore.com/documentation/hacking/ |dead-url=yes }}</ref>
* [[Sugar_(用戶界面)|Sugar (用戶界面)]]<ref>{{Cite web |url=http://git.sugarlabs.org/ |title=Sugar Labs project hosting |accessdate=2010-04-27 |archive-date=2020-11-27 |archive-url=https://web.archive.org/web/20201127045351/http://git.sugarlabs.org/ |dead-url=no }}</ref>
* {{tsl|en|SWI-Prolog|}}<ref>[http://www.swi-prolog.org/git.html Accessing SWI-Prolog source] {{Wayback|url=http://www.swi-prolog.org/git.html |date=20201129141836 }} via [http://git-scm.com/ git] {{Wayback|url=http://git-scm.com/ |date=20090101104542 }}</ref>
* [[VLC_media_player|VLC]]<ref name="wiki.videolan.org">{{Cite web |url=http://wiki.videolan.org/git |title=git - VideoLAN Wiki |accessdate=2015-10-10 |archive-date=2021-01-28 |archive-url=https://web.archive.org/web/20210128222408/https://wiki.videolan.org/Git |dead-url=no }}</ref>
* [[Wine|Wine]]<ref>{{Cite web |url=http://wiki.winehq.org/gitWine |title=gitWine - The Official Wine Wiki |accessdate=2015-10-10 |archive-date=2021-02-03 |archive-url=https://web.archive.org/web/20210203053542/https://wiki.winehq.org/GitWine |dead-url=no }}</ref>
* [[Xiph.Org基金會|Xiph]]<ref>{{Cite web |url=http://git.xiph.org/ |title=Xiph git |access-date=2010-04-27 |archive-url=https://web.archive.org/web/20100507155358/http://git.xiph.org/ |archive-date=2010-05-07 |dead-url=yes }}</ref>
* [[X.Org服务器|X.org Server]]<ref>{{Cite web |url=http://www.x.org/wiki/Development/git |title=X.Org Wiki - Development/git |accessdate=2009-04-02 |archive-date=2020-09-22 |archive-url=https://web.archive.org/web/20200922112615/https://www.x.org/wiki/Development/git/ |dead-url=no }}</ref>
* [[x264|x264]]<ref name="wiki.videolan.org"/>
* [[Yahoo!_UI_Library|YUI]]<ref>{{cite web|url=http://yuiblog.com/blog/2009/01/14/github/|title=YUI 2 and YUI 3 Source Code Now on gitHub|accessdate=2009-01-20|archive-date=2009-02-12|archive-url=https://web.archive.org/web/20090212080022/http://yuiblog.com/blog/2009/01/14/github|dead-url=yes}}</ref>
{{colend}}
* [[NOJ|NOJ]]

=== 支持git的源码存取服务 ===
以下是部分知名的支持git的源码存取服务：

* {{tsl|en|BerliOS|}}
* {{tsl|en|Beanstalk|}}
* [[Bitbucket|Bitbucket]]
* [[CodePlex|CodePlex]]（已於2017年12月15日起關閉）
* [[GitHub|GitHub]]
* {{tsl|en|gitorious|}}
* [[GNU_Savannah|GNU Savannah]]
* [[Google_Code|Google Code]]
* [[JavaForge|JavaForge]]
* [https://web.archive.org/web/20120325042753/http://pikacode.com/ Pikacode]
* [[SourceForge|SourceForge]]
* [https://gitee.com 码云 Gitee] {{Wayback|url=https://gitee.com/ |date=20210201025217 }}
* [https://web.archive.org/web/20180905021908/http://code.csdn.net/ CSDN CODE]
* [https://coding.net/ Coding] {{Wayback|url=https://coding.net/ |date=20210202144136 }}
* [[GitLab|GitLab]]

== 参见 ==
{{Portal box|電腦程式設計|自由軟體}}
* [[分布式版本控制|分布式版本控制]]
* [[Gitee|Gitee]]
* [[代码库|代码库]]
* [[仓库_(版本控制)|仓库 (版本控制)]]
* [[Github|Github]]

== 参考文献 ==
{{Reflist|2}}

== 外部链接 ==
{{div col|cols=2}}
*[https://web.archive.org/web/20090101104542/http://git-scm.com/ git官方网站]{{en}}
*[https://web.archive.org/web/20081025105540/http://www.kernel.org/pub/software/scm/git/docs/v1.4.4.4/tutorial.html git快速入门]{{en}}
*[http://www.kernel.org/pub/software/scm/git/docs/ git Man Page]{{Wayback|url=http://www.kernel.org/pub/software/scm/git/docs/v1.4.4.4/tutorial.html |date=20081025105540 }}{{en}}
*[http://www.kernel.org/pub/software/scm/git/docs/user-manual.html git用户手册] {{Wayback|url=http://www.kernel.org/pub/software/scm/git/docs/user-manual.html |date=20180305063745 }}{{en}}
*[https://web.archive.org/web/20120206095720/http://book.git-scm.com/ git Community Book]{{en}}
*[http://www.ibm.com/developerworks/cn/linux/l-git/ 使用git管理源代码] {{Wayback|url=http://www.ibm.com/developerworks/cn/linux/l-git/ |date=20190629212730 }}
*[http://www.eqqon.com/index.php/gitSharp git# (gitSharp)] {{Wayback|url=http://www.eqqon.com/index.php/gitSharp |date=20200817180900 }}{{en}}
*[https://www.gnu.org/software/gnuit/ GNU Interactive Tools] {{Wayback|url=https://www.gnu.org/software/gnuit/ |date=20210130135718 }}
*[https://web.archive.org/web/20141220234913/http://www.ihref.com/read-16369.html git从入门到精通]P
*[https://backlogtool.com/git-guide/tw/ 連猴子都能懂的Git入門指南] {{Wayback|url=https://backlogtool.com/git-guide/tw/ |date=20170722050211 }}{{zh-tw}}
{{div col end}}

{{-}}
{{版本控制软件}}

{{Authority control}}
[[Category:自由版本控制软件|Category:自由版本控制软件]]
[[Category:分布式版本控制系统|Category:分布式版本控制系统]]
[[Category:Perl软件|Category:Perl软件]]
[[Category:用C編程的自由軟體|Category:用C編程的自由軟體]]
[[Category:2005年软件|Category:2005年软件]]
[[Category:Git|Category:Git]]