{{NoteTA
|G1 = IT
|G2 = Math
}}
'''二元素布尔代数'''是最简单的[[布尔代数|布尔代数]]，它只有二个元素，习惯指名为 1 和 0。[[保罗·哈尔莫斯|保罗·哈尔莫斯]]给这个起名为 '''2'''，被一些文献和本文采用。

任何布尔代数都关联着叫做“全集”或“载体”的一个[[偏序集合|偏序集合]] ''B''，使得这个布尔代数的[[运算|运算]]是从 ''Bn'' 到 ''B'' 的映射。这个载体是由于有显著的成员 0 和 1 而是[[有界集合|有界]]的。'''2''' 简单的就是其载体同一于它的界的集合的布尔代数，即 ''B''={0,1}。

布尔代数的二个二元运算有很多名字和符号。这里把它们叫做“和”与“积”，分别符号表示为中缀 + 和 <math>\cdot \,</math>。积经常指示为二个操作数的简单串联。和与积是交换的和结合的，如同普通的实数代数中那样。在[[运算次序|运算次序]]上，<math>\cdot</math> 优先于 + 但是括号可以超越它。所以“A <math>\cdot \,</math> B + C”被分析为“(A <math>\cdot \,</math> B) + C”而非“A <math>\cdot \,</math> (B + C)”。

一元运算总是被称为“补”，这里的符号表示是对参数放置上横杠。''x'' 的补的数值类似者是 1-''x''。在[[泛代数|泛代数]]的语言中，所有布尔代数是 <math>\langle B,+,\cdot,\overline{..},1,0\rangle</math> 代数，型为 <math>\langle 2,2,1,0,0\rangle</math>。

解释 0 和 1 中的一个为“真”另一个为“假”产生了经典的等式形式的[[二值逻辑|二值逻辑]]。在这种情况下，+ 被读做[[逻辑或|或]]，<math>\cdot \,</math> 被读做[[逻辑与|与]]，而补被读做[[逻辑非|非]]。

==参见==
*[[逻辑代数|逻辑代数]]
*[[卡诺图|卡诺图]]
*[[Quine-McCluskey算法|Quine-McCluskey算法]]

==引用==
Many elementary texts on Boolean algebra were published in the early years of the computer era. Perhaps the best of the lot, and one still in print, is:
* Mendelson, Elliot, 1970. ''Schaum's Outline of Boolean Algebra''. McGraw-Hill.
The following items, more challenging than this entry, reveal how even the simplest nontrivial Boolean algebra is a rich mathematical subject. 
* [[Stanford_Encyclopedia_of_Philosophy|Stanford Encyclopedia of Philosophy]]："[http://plato.stanford.edu/entries/boolalg-math/ The Mathematics of Boolean Algebra,]{{Wayback|url=http://plato.stanford.edu/entries/boolalg-math/ |date=20201106235633 }}" by J. Donald Monk.
* Burris, Stanley N., and H.P. Sankappanavar, H. P., 1981. ''[http://www.thoralf.uwaterloo.ca/htdocs/ualg.html A Course in Universal Algebra.]{{Wayback|url=http://www.thoralf.uwaterloo.ca/htdocs/ualg.html |date=20050123031934 }}''  Springer-Verlag. ISBN 3-540-90578-2.

[[Category:布尔代数|L]]