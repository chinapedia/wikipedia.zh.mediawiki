{{noteTA|G1=IT}}
{{Expert|time=2010-12-31|subject=计算机科学}}
{{Expand|time=2010-12-31}}
'''Web應用框架'''（Web application framework）是一種[[電腦|電腦]][[軟體框架|軟體框架]]，用來支援[[動態網站|動態網站]]、[[網絡應用程式|網絡應用程式]]及[[網路服務|網路服務]]的開發。這種框架有助於減輕網頁開發時共通性活動的工作負荷，例如許多框架提供[[資料庫|資料庫]]存取介面、標準樣板以及[[會話|會話]]管理等，可提昇程式碼的可再用性。

==种类==
===模型 - 视图 - 控制器（MVC（Model view controller））===
{{main|MVC}}

许多框架遵循模型 - 视图 - 控制器（MVC）体系模型的结构模式，使数据模型与用户界面分开。这被普遍认为是一个很好的做法，因为它模块化的代码，能提高代码的重复使用，并允许多个接口。在Web应用中，这允许不同的应用方面，如网页，远程应用程序和Web服务接口。MVC是业界比较认可的架构模型。
=== 三部分组织模式 ===

在这种组织模式中，应用程序建立在三个部分：客户端，应用程序和数据库。数据库通常是一个RDBMS。而客户端指的是由Web应用程序生成的HTML，在用户的浏览器运行。应用程序运行在服务器上。

===内容管理系统（CMS）===
{{main|内容管理系统}}

指的是一种内容编辑程序。就像在博客写文章一样，不需要懂得编程的人，也可以通过CMS发布，更改，管理内容。

==特點==
===網頁模版系統===
{{see|en:Web template system}}
===網頁快取===
{{see|en:Web cache}}
===安全性===
===資料庫關聯與映射===
===URL映射===
===AJAX===
{{main|AJAX}}
{{see|en:Ajax framework}}
AJAX即“Asynchronous JavaScript and XML”（异步的JavaScript与XML技术），指的是一套综合了多项技术的浏览器端网页开发技术。Ajax的概念由Jesse James Garrett所提出[1]。

传统的Web应用允许用户端填写表单（form），当提交表单时就向Web服务器发送一个请求。服务器接收并处理传来的表单，然后送回一个新的网页，但这个做法浪费了许多带宽，因为在前后两个页面中的大部分HTML码往往是相同的。由于每次应用的沟通都需要向服务器发送请求，应用的回应时间依赖于服务器的回应时间。这导致了用户界面的回应比本机应用慢得多。

与此不同，AJAX应用可以仅向服务器发送并取回必须的数据，并在客户端采用JavaScript处理来自服务器的回应。因为在服务器和浏览器之间交换的数据大量减少（大约只有原来的5%）[来源请求],服务器回应更快了。同时，很多的处理工作可以在发出请求的客户端机器上完成，因此Web服务器的负荷也减少了。

类似于DHTML或LAMP，AJAX不是指一种单一的技术，而是有机地利用了一系列相关的技术。虽然其名称包含XML，但实际上数据格式可以由JSON代替，进一步减少数据量，形成所谓的AJAJ。而客户端与服务器也并不需要异步。一些基于AJAX的“派生／合成”式（derivative/composite）的技术也正在出现，如AFLAX。

===自動configuration===
===Web服务===
{{main|Web服务}}

==程式語言==
各種[[程式語言|程式語言]]使用框架分類如下：

=== PHP ===
{{main|PHP框架列表}}
{{div col|colwidth=20em}}
* [[Zend_framework|Zend framework]]
* {{link-en|CakePHP|CakePHP}}
* {{link-en|Yii|Yii}}
* ThinkPHP<ref>[https://web.archive.org/web/20171120115057/http://www.thinkphp.cn/ ThinkPHP]</ref>
* [[Symfony|Symfony]]
* [[Laravel|Laravel]]
* {{link-en|Kohana|Kohana_(framework)}}
* {{link-en|Seagull|Seagull_PHP_Framework}}
* [[Drupal|Drupal]]
* [[CodeIgniter|CodeIgniter]]
* WindFramework<ref>{{Cite web |url=http://phpwind.github.io/windframework/ |title=WindFramework |access-date=2016-04-04 |archive-date=2022-02-08 |archive-url=https://web.archive.org/web/20220208084014/http://phpwind.github.io/windframework/ }}</ref>
* [[Phalcon|Phalcon]]
* [[FuelPHP|FuelPHP]]
{{div col end}}

=== Javascript ===
（按字母排序）
{{div col|colwidth=20em}}
* [[AngularJS|AngularJS]]
* [[Backbone.js|Backbone.js]]
* [[Dojo_Toolkit|Dojo Toolkit]]
* [[Ember.js|Ember.js]]
* [[jQuery|jQuery]]
* {{link-en|MooTools|MooTools}}
* [[Prototype_(框架)|Prototype]]
* [[Vue.js|Vue.js]]
* [[ZK|ZK]]
{{div col end}}

=== Python ===
{{div col|colwidth=20em}}
* [[Django|Django]]
*[[Flask|Flask]]
*Pinax<ref>{{Cite web |url=https://pinaxproject.com/pinax/ |title=Pinax |access-date=2020-04-05 |archive-date=2022-02-08 |archive-url=https://web.archive.org/web/20220208084048/https://pinaxproject.com/pinax/ }}</ref>
*Grok<ref>{{Cite web |url=http://grok.zope.org/ |title=Grok |access-date=2020-04-05 |archive-date=2022-03-07 |archive-url=https://web.archive.org/web/20220307181440/http://grok.zope.org/ }}</ref>
* [[Pylons|Pylons]]
* [[TurboGears|TurboGears]]
* [[Web2py|Web2py]]
* [[Zope|Zope]]
*[[Quixote_(web框架)|Quixote]]
*[[Pyramid|Pyramid]]
*[[Tornado|Tornado]]
{{div col end}}

=== Ruby ===
{{div col|colwidth=20em}}
* [[Ruby_On_Rails|Ruby On Rails]]
* [[Sinatra|Sinatra]]
{{div col end}}

=== JAVA ===
{{div col|colwidth=20em}}
* [[Spring|Spring]]
* [[Struts|Struts]]
* [[hibernate|hibernate]]
* [[Grails|Grails]]
* [[GWT|GWT]]
* [[JSF|JSF]]
* [[Tapestry|Tapestry]]
* [[Vaadin|Vaadin]]
* [[ZK|ZK]]
{{div col end}}
==引用==
{{reflist}}

{{-}}
{{網頁設計}}
{{Application frameworks}}

[[Category:軟體工程|Category:軟體工程]]