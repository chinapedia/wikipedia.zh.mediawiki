{{Multiple issues|
{{Copy edit|time=2020-10-20T00:34:49+00:00}}
{{External links|time=2020-10-20T00:34:49+00:00}}
{{Refimprove|time=2020-10-20T00:34:49+00:00}}
{{Rough translation|time=2020-10-20T00:34:49+00:00}}
{{Citation style|time=2020-10-20T00:34:49+00:00}}
}}
{{noteTA|G1=IT}}
{{lang|en|'''W'''indows '''P'''resentation '''F'''oundation}}（{{lang|en|WPF}}）是美國[[微軟|微軟]]公司推出[[.NET_Framework_3.0|.NET Framework 3.0]]及以后版本的组成部分之一，它是一套基于[[XML|XML]]、[[.NET_Framework|.NET Framework]]、[[向量|向量]]绘图技术的展示層开发框架，微软视其为下一代使用者介面技术，广泛被用于[[Windows_Vista|Windows Vista]]的界面开发。其早期开发阶段的[[微软产品代号列表|代号]]为“[[阿瓦隆|Avalon]]”<ref>{{cite web |url=http://www.codeproject.com/Articles/13993/WPF-Avalon-Demo-1 |title=WPF ("Avalon") Demo 1 |work=CodeProject.com |publisher=CodeProject |date=2006-05-02 |accessdate=2013-08-22 |first=A. |last=Gharighi |archive-date=2021-07-16 |archive-url=https://web.archive.org/web/20210716104218/https://www.codeproject.com/Articles/13993/WPF-Avalon-Demo-1 }}</ref>。

WPF使用一种新的[[XAML|XAML]]（eXtensible Application Markup Language）语言来开发界面。同时WPF自带MVVM(Model-ViewModel-View)框架,这种设计模式将把界面开发以及后台逻辑很好的分开，降低了[[耦合度_(計算機科學)|耦合度]]，使用户界面设计师与程序开发者能更好的合作，降低维护和更新的成本。

[[WPF/E|WPF/E]]是WPF的子集合，全名是：''Windows Presentation Foundation Everywhere''。在基於XAML與[[JavaScript|JavaScript]]之下，可跨越各種平台，目前WPF/E已演化為Microsoft [[Silverlight|Silverlight]]，擔負微軟在[[丰富互联网应用程序|丰富互联网应用程序]]領域，並正面與Adobe [[Flash|Flash]]競爭的產品。

== 特徵 ==
WPF部份之特徵如下：

=== 繪圖服務 ===
* 所有的圖形皆可由[[Direct3D|Direct3D]]產生。
** 目標在於統一各種顯示圖形。
** Windows可以透過Direct3D來減輕在繪圖任務上的負荷，這項技術乃基於電腦[[顯示卡|顯示卡]]的[[繪圖處理單元|繪圖處理單元]]（Graphics Processing Unit）。
** 支援向量繪圖（vector graphic）。
** 支援3D透視圖並且影響2D應用程式。

=== 佈署 ===
* WPF不僅僅是建立傳統的獨立程式（standalone applications）。其部署方式可分成兩類：standalone與XAML Browser Applications（XBAP）觀點。這些佈署方式在程式的撰寫上大致類似。
** 獨立程式之安裝方式可以借由[[ClickOnce|ClickOnce]]或[[Windows_Installer|微軟安裝器]]（MSI）完成。獨立程式可被視為完全信任（full trust）具有完全存取系統資源的優點。
** [[XAML_Browser_Application|XAML Browser Application]]（XBAPs）是一種寄宿於網頁瀏覽器上的程式，像是[[Internet_Explorer|Internet Explorer]]。寄宿的程式可取得部份信任（partial trust）的[[沙箱_(資訊安全)|沙箱]]（sandbox）環境之下，且無法取得完整的系統資源，WPF的功能亦無法完全發揮。寄宿的環境必須有意地防衛惡意的程式碼。從網頁上執行XBAP（讀音"ex-bap"）必須是毫無破綻的（沒有安全性或安裝提示）。雖然這樣的寄宿程式在感觀上與傳統微軟的[[DLL|DLL]]（out of process）有相異處。

=== 互操作性 ===
* WPF可與[[Win32|Win32]]互相操作：經由主導（hosting）機制，可以在Win32碼之下使用Windows Presentation Foundation，或是在Windows Presentation Foundation環境下使用Win32程式碼<ref>{{Cite web |url=http://msdn2.microsoft.com/en-us/library/ms742522.aspx |title=WPF and Win32 Interoperation Overview |access-date=2007-04-03 |archive-date=2008-02-06 |archive-url=https://web.archive.org/web/20080206082439/http://msdn2.microsoft.com/en-us/library/ms742522.aspx }}</ref>。
* [[Windows_Forms|Windows Forms]]的互操作性亦可利用<code>ElementHost</code>（繼承自System.Windows.Forms.ContainerControl）以及<code>WindowsFormsHost</code>（繼承自System.Windows.Forms.Integration）等類別達成，同時提供了Host Avalon Element的能力。

=== 媒體播放 ===
* WPF針對2D圖形提供形狀基元（shape primitives），內建筆刷（brushes）、畫筆（pens）、幾何（geometries），與變形（transforms）。
* WPF以Direct3D提供完整的3D功能。但是，WPF提供更完整的整合性在於使用者介面上（UI）、文件（documents），與媒體（media）。這使得儘可以實現3D UI, 3D文件，和3D媒體。
* 支援了大量的圖片格式（image formats）。
* WPF支援大量影音格式，如：[[WMV|WMV]]，[[MPEG|MPEG]]以及某些[[AVI|AVI]]檔。
* WPF支援以時間為基礎的動畫效果，不同於以影格為基礎的處理方式。如此動畫的速度與系統效能就不會有所關連。
* 文件的呈現支援[[ClearType|ClearType]]，這提供一種次像素（sub-pixel）定位功能，強化其自然風格。WPF同時支援[[OpenType|OpenType]]字型樣式。

=== 数据绑定 ===
数据绑定是在应用 UI 与其显示的数据之间建立连接的过程。 如果绑定具有正确的设置，并且数据提供适当的通知，则在数据更改其值时，绑定到该数据的元素会自动反映更改。 数据绑定还意味着，如果元素中数据的外部表示形式发生更改，则基础数据可以自动进行更新以反映更改。 例如，如果用户编辑 <code>TextBox</code> 元素中的值，则基础数据值会自动更新以反映该更改。

数据绑定的典型用法是将服务器或本地配置数据放置到窗体或其他 UI 控件中。 此概念在 WPF 中得到扩展，包括将大量属性绑定到不同类型的数据源。 在 WPF 中，元素的依赖属性可以绑定到 .NET 对象（包括 ADO.NET 对象或与 Web 服务和 Web 属性关联的对象）和 XML 数据。数据绑定的方式一共有四种：

* 通过 OneWay 绑定，对源属性的更改会自动更新目标属性，但对目标属性的更改不会传播回源属性。 如果绑定的控件为隐式只读，则此类型的绑定适用。 例如，可能会绑定到股票行情自动收录器这样的源，也可能目标属性没有用于进行更改的控件接口（例如表的数据绑定背景色）。 如果无需监视目标属性的更改，则使用 OneWay 绑定模式可避免 TwoWay 绑定模式的系统开销。
* 通过 TwoWay 绑定，更改源属性或目标属性时会自动更新另一方。 此类型的绑定适用于可编辑窗体或其他完全交互式 UI 方案。 大多数属性默认为 OneWay 绑定，但某些依赖属性（通常为用户可编辑控件的属性，例如 TextBox.Text 和 CheckBox.IsChecked）默认为 TwoWay 绑定。 用于确定依赖属性绑定在默认情况下是单向还是双向的编程方法是：使用 DependencyProperty.GetMetadata 获取属性元数据，然后检查 FrameworkPropertyMetadata.BindsTwoWayByDefault 属性的布尔值。
* OneWayToSource 绑定与 OneWay 绑定相反；当目标属性更改时，它会更新源属性。 一个示例方案是只需要从 UI 重新计算源值的情况。
* OneTime 绑定未在图中显示，该绑定会使源属性初始化目标属性，但不传播后续更改。 如果数据上下文发生更改，或者数据上下文中的对象发生更改，则更改''不会''在目标属性中反映。 如果适合使用当前状态的快照或数据实际为静态数据，则此类型的绑定适合。 如果你想使用源属性中的某个值来初始化目标属性，且提前不知道数据上下文，则此类型的绑定也有用。 此模式实质上是 OneWay 绑定的一种简化形式，它在源值不更改的情况下提供更好的性能

数据绑定在展示層並無太大負擔。WPF提供有数据模板（data templates）來控制這些数据。

=== 使用者介面 ===
* WPF提供了內建元件控制項集合，包括有按鈕（button）、選單（menu）、列表盒（list box）等。
* WPF的邏輯層與外觀展示層已形成強力的分離模式。
** 元件的外貌樣品可以被完全改寫。

=== 文件 ===

對OpenType的支援包括：
* [[合字|合字]]（Ligatures）
* 舊式數碼（Old-style numerals，for example, parts of the glyph hang below the text baseline）
* [[花体字|花体字]]（Swash）
* 分數形式（Fractions）
* [[上标|上标]]及[[下标|下标]]
* [[小型大写字母|小型大写字母]]

== 工具 ==

在以往Win32應用程式發展時，絕大多數的工作都由開發人員（Developer）來處理，美術設計人員（Designer）可以涉入的相當有限，而且在Win32 API時代，要在使用者介面中實作特效的話，都需要撰寫大量的程式碼才可以做到。

在WPF中，因為大多數的使用者介面元素都可以利用XAML來宣告，因此微軟試著要將Designer和Developer結合在一起，如此可以讓Designer可以充份發揮，並且Developer也不用傷腦筋在外觀設計上，微軟的Designer工具為[[Microsoft_Expression|Microsoft Expression]]產品集，其中的[[Expression_Blend|Expression Blend]]即為設計WPF應用程式的設計工具，它也可以用來設計[[Silverlight|Silverlight]]程式。

開發人員仍然可以使用Visual Studio來開發WPF應用程式，在Visual Studio中內含WPF Designer可供開發人員使用。

== WPF/E ==

{{main|Silverlight}}

WPF/E發展初期為微軟計畫將WPF推向各平台的計畫，目前此計畫已經被發展成為[[Silverlight|Silverlight]]技術。

== WPF應用程式 ==
WPF是下一代圖形API在桌面上的延伸。以WPF撰寫應用程式，具有更高的視覺品質。下表列出微軟自家的產品或是第三協力廠商的主力產品：

{{main|List of WPF applications}}

* [[Microsoft_Visual_Studio|Microsoft Visual Studio 2010]]
* [[Microsoft_Expression_Design|Microsoft Expression Design]]
* [[Microsoft_Expression_Blend|Microsoft Expression Blend]]
* [[Yahoo!_Messenger|Yahoo! Messenger]]
* [[New_York_Times_Reader|New York Times Reader]]
* [[Blu|Blu]]
* [[腾讯QQ|腾讯QQ]]概念版（只能在[[Windows_7|Windows 7]]上使用）<ref>{{Cite web |url=http://im.qq.com/qq/gainian |title=QQ实验室 |access-date=2012-06-16 |archive-date=2022-04-18 |archive-url=https://web.archive.org/web/20220418010919/https://im.qq.com/qq/gainian/ }}</ref>

== 發行歷史 ==
{| style="font-size:95%;" class="wikitable"
|+
! width="7%" | 系列
! 版本
! 發佈日期
! 重要變更／事項
! width="15%" | 一同發佈的產品
|-
! rowspan="3" | 3
| style="white-space: nowrap; background-color:Orange ;" | 3.0
| style="white-space: nowrap;" | 2006年11月
| -
| -
|-
| style="white-space: nowrap;background-color:Orange ;" | 3.5
| style="white-space: nowrap;" | 2007年11月
| -
| -
|-
| style="white-space: nowrap;background-color:Orange ;" | 3.5 SP1
| style="white-space: nowrap;" | 2008年8月
| -
| -
|-
! rowspan="5" | 4
| style="white-space: nowrap; background-color:Orange ;" | 4.0
| style="white-space: nowrap;" | 2010年4月
| -
| -
|-
| style="white-space: nowrap;background-color:Orange ;" | 4.5
| style="white-space: nowrap;" | 2012年8月
| -
| -
|-
| style="white-space: nowrap;background-color:Orange ;" | 4.5.1
| style="white-space: nowrap;" | 2013年10月
| -
| -
|-
| style="white-space: nowrap;background-color:Orange ;" | 4.52
| style="white-space: nowrap;" | 2014年5月
| -
| -
|-
| style="white-space: nowrap;background-color:MediumSeaGreen ;" | 4.6
| style="white-space: nowrap;" | 2015年7月
| [[每英寸点数|高解析度]] (High Dots Per Inch; HDPI) 改善；觸控行為焦點 (Touch) 改善；程式子視窗透明 (Transparent child window) 支援
| Visual Studio 2015
|-
|}


== 参考資料 ==
{{Reflist}}

== 外部链接 ==
* [https://web.archive.org/web/20080728104257/http://windowsclient.net/default.aspx - .Net Framework 3.0官方社区]{{en}}
*[https://archive.is/20060615073033/http://wpf.netfx3.com/ The Windows Presentation Foundation community portal]—The WPF section of the .NET Framework 3.0 community site.
*[http://msdn2.microsoft.com/en-us/library/ms754130.aspx MSDN Windows Presentation Foundation SDK] {{Wayback|url=http://msdn2.microsoft.com/en-us/library/ms754130.aspx |date=20080821190524 }}—Software Development Kit for WPF.
*[http://wpfwiki.com WPFwiki.org] {{Wayback|url=http://wpfwiki.com/ |date=20220328122926 }}—The largest WPF FAQ question and answer repository & Wiki.
*[http://msdn2.microsoft.com/en-us/library/ms742119.aspx Getting Started (WPF)] {{Wayback|url=http://msdn2.microsoft.com/en-us/library/ms742119.aspx |date=20080429221844 }}—Roadmap to information for developers new to WPF.
*[http://blogs.msdn.com/wpfsdk/ WPF SDK Blog] {{Wayback|url=http://blogs.msdn.com/wpfsdk/ |date=20100427005925 }}—Active blog maintained by the WPF SDK team.
*[http://www.samspublishing.com/title/0672328917 Windows Presentation Foundation Unleashed]—The first WPF book to market, written by the lead developers [http://www.samspublishing.com/authors/bio.asp?a=dcf2a49a-f8c3-4af8-95fa-b5cee04540e2&rl=1 Adam Nathan] {{Wayback|url=http://www.samspublishing.com/authors/bio.asp?a=dcf2a49a-f8c3-4af8-95fa-b5cee04540e2&rl=1 |date=20070510233525 }}。
*[http://safari.awprofessional.com/0321374479 Essential Windows Presentation Foundation] {{Wayback|url=http://safari.awprofessional.com/0321374479 |date=20070930155245 }}—An online WPF tutorial and reference, written by [https://web.archive.org/web/20070416201612/http://www.simplegeek.com/ Chris Anderson]。
*[http://www.microsoft.com/products/expression/en/Expression-Blend/default.mspx Microsoft Expression Blend] {{Wayback|url=http://www.microsoft.com/products/expression/en/Expression-Blend/default.mspx |date=20080720044748 }}—Visual tool for creating Windows Presentation Foundation applications.
*[http://blogs.msdn.com/llobo wpf made simple] {{Wayback|url=http://blogs.msdn.com/llobo |date=20100429055935 }}—Provides info/samples on WPF.
*[http://www.XAML.net/ XAML.net] {{Wayback|url=http://www.xaml.net/ |date=20200726011116 }} Information on XAML and XBAPs, the Windows Presentation Foundation (WPF), .NET Framework 3.0 and Windows Vista]]。
*[https://web.archive.org/web/20140627000105/http://msdn.microsoft.com/windowsvista/building/presentation/default.aspx?pull=%2Flibrary%2Fen-us%2Fdnlong%2Fhtml%2Fwpf101.asp A Guided Tour of Windows Presentation Foundation]—Microsoft's overview of Windows Presentation Foundation.
*[http://msdn.microsoft.com/windowsvista/default.aspx?pull=/library/en-us/dnlong/html/wpfsecuritysandbox.asp Windows Presentation Foundation Security Sandbox]—An overview of the sandbox in which WPF browser applications run.
*[http://arquivo.pt/wayback/20080218183022/http://forums.microsoft.com/MSDN/ShowForum.aspx?ForumID=119&SiteID=1 MSDN Forums for Windows Presentation Foundation]—Active discussion forum for WPF developers.
*[http://groups.google.com/group/wpf-everywhere WPF/E Google Group] {{Wayback|url=http://groups.google.com/group/wpf-everywhere |date=20070924140940 }}—Discussion group and list of examples.
*[https://web.archive.org/web/20070329022455/http://www.itwriting.com/wpfe.php Microsoft goes cross-platform with WPF/E]—WPF/E explained in an interview with Microsoft's Director of Developer Tools.
*[https://archive.is/20130425132405/http://news.com.com/More+than+meets+the+eye+in+Microsoft+plan/2100-1012_3-6053893.html?tag=carsl More than meets the eye in Microsoft's plans]—News.com's article on WPF/E
*[https://web.archive.org/web/20070427172627/http://www.netfxguide.com/guide/WPF.aspx WPF page on NetFXGuide.com]
*[https://web.archive.org/web/20070119045725/http://www.infusionblogs.com/blogs/jsmith/archive/2006/07/22/665.aspx A Five Mile Overview of WPF]—A high-level overview of WPF for software developers.
*[http://xbap.org xbap.org] {{Wayback|url=http://xbap.org/ |date=20220418011021 }}—Comprehensive information on XBAP applications.
*[https://web.archive.org/web/20070329064636/http://www.dxten.com/wiki/Main_Page DirectX 10 Wiki] - Wiki covering WPF and DirectX 10 Tutorials, Samples, Effect, News.
*[https://answers.microsoft.com/zh-hant/windows/forum/windows_10-start-winpc/%E6%88%91%E7%94%A843%E5%90%8B%E8%9E%A2%E5%B9%95/6692e34f-669e-4748-a3bb-6198177b3701 我用43吋螢幕 各種排版錯誤] {{Wayback|url=https://answers.microsoft.com/zh-hant/windows/forum/windows_10-start-winpc/%E6%88%91%E7%94%A843%E5%90%8B%E8%9E%A2%E5%B9%95/6692e34f-669e-4748-a3bb-6198177b3701 |date=20220418011030 }} - 在高解析度下，WPF的排版會錯誤
{{DotNET}}
{{Microsoft APIs}}

[[Category:微軟API|Category:微軟API]]
[[Category:Windows多媒体|Category:Windows多媒体]]