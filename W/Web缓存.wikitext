{{noteTA
|G1=IT
}}
'''Web缓存'''（或'''HTTP缓存'''）是用于临时存储（[[缓存|缓存]]）[[網頁|Web文档]]（如[[網頁|HTML页面]]和[[数字图像|图像]]），以减少[[带宽_(计算机)|服务器]]延迟的一种[[信息技术|信息技术]]。Web缓存系统会保存下通过这套系统的文档的副本；如果满足某些条件，则可以由缓存满足后续请求。<ref>{{cite web | title=Web Caching | url=http://www.cisco.com/web/about/ac123/ac147/ac174/ac199/about_cisco_ipj_archive_article09186a00800c8903.html | publisher=Cisco. The Internet Protocol Journal - Volume 2, No. 3 | author=Geoff Huston | accessdate=2009-09-10 | archive-date=2015-09-23 | archive-url=https://web.archive.org/web/20150923231812/http://www.cisco.com/web/about/ac123/ac147/ac174/ac199/about_cisco_ipj_archive_article09186a00800c8903.html | dead-url=no }}</ref> Web缓存[[系統|系統]]既可以指{{le|服务器设备|Server appliance|设备}}，也可以指计算机程序。

==系统==
Web缓存可以用于各种系统（从Web内容的传输方向来看）：

=== 前向位置系统（接受者或客户端） ===
前向缓存是[[網頁伺服器|Web服务器]]网络外部的缓存，例如在客户电脑、ISP或公司网络上。<ref>{{cite web | url=http://www.isaserver.org/tutorials/Understanding-Web-Caching-Concepts-ISA-Firewall.html | title=Understanding Web Caching Concepts for the ISA Firewall | author=Thomas Shinder | accessdate=2011-02-27 | archive-date=2013-01-16 | archive-url=https://web.archive.org/web/20130116225403/http://isaserver.org/tutorials/Understanding-Web-Caching-Concepts-ISA-Firewall.html | dead-url=no }}</ref> 网络感知前向缓存就像一个前向缓存，但只缓存大量访问的项目。<ref>{{cite paper | url = http://www.research.att.com/export/sites/att_labs/techdocs/TD_7LAUDD.pdf | citeseerx = 10.1.1.159.1786 | title = Network-Aware Forward Caching | first1 = Jeffrey | last1 = Erman | first2 = Alexandre | last2 = Gerber | first3 = Mohammad T. | last3 = Hajiaghayi | first4 = Dan | last4 = Pei | first5 = Oliver | last5 = Spatscheck | publisher = AT&T Labs | date = 2008 | journal =  | access-date = 2018-01-27 | archive-date = 2011-04-01 | archive-url = https://web.archive.org/web/20110401145549/http://www.research.att.com/export/sites/att_labs/techdocs/TD_7LAUDD.pdf }}</ref> 客户端（如[[网页浏览器|网页浏览器]]）也可以存储网络内容以供重用。例如，如果按下后退按钮，则可以显示本地缓存版本的页面，而不是发送到Web服务器的新请求。位于客户端和服务器之间的[[代理服务器|Web代理]]可以通过评估[[HTTP头字段|HTTP头]]来选择是否存储网页内容。

=== 反向位置系统（内容提供者或Web服务器端） ===
反向缓存位于一个或多个Web服务器和[[网络应用程序|Web应用]]的前端，加速来自互联网的请求，<ref>{{cite web | url=http://docforge.com/wiki/Web_application/Caching | title=Web application/Caching | author=Multiple (wiki) | work=Docforge | accessdate=2010-03-06 | archive-date=2019-12-12 | archive-url=https://web.archive.org/web/20191212152625/http://www.docforge.com/wiki/Web_application/Caching | dead-url=yes }}</ref> 从而减少Web服务器的高峰负载。[[內容傳遞網路|內容傳遞網路]]（CDN）可以在整个网络的各个点上保留网页内容的副本。[[网络搜索引擎|搜索引擎]]也可能会缓存一个网站；它提供了一种从最近停机的网站检索信息的方法，或者比点击直接链接更快地检索数据的方式。例如，[[Google搜索|Google]]就是这么做的。Google搜索结果中可以找到缓存内容的链接。

==缓存控制==
[[HTTP|HTTP]]定义了三种控制缓存的基本机制：新鲜度，验证和失效。<ref>{{cite web |url=http://ws-rest.org/files/03-Link%20Header-based%20Invalidation%20of%20Caches.pdf |title=PowerPoint Presentation |format=PDF |date= |accessdate=2013-06-14 |archive-date=2010-07-10 |archive-url=https://web.archive.org/web/20100710072021/http://www.ws-rest.org/files/03-Link%20Header-based%20Invalidation%20of%20Caches.pdf |dead-url=no }}</ref>
; 新鲜度 : 允许在不在源服务器上重新检查的情况下使用一个响应，并且可以由服务器和客户端来控制。例如，Expires响应头给出文档过期的日期，而Cache-Control: max-age指示告诉缓存该响应在多少秒内保持新鲜。
; 验证 : 可用于检查缓存的响应是否过时之后仍然有效。例如，若响应有一个Last-Modified头，缓存可以使用If-Modified-Since头来发出一个条件请求，来查看它是否已经改变。[[HTTP_ETag|ETag]]（实体标签）机制还允许强弱验证。
; 失效 : 通常是另一个请求通过缓存的一个结果。例如，如果与缓存的响应关联的URL随后获得POST、PUT或DELETE请求，则缓存的响应将失效。
许多[[內容傳遞網路|CDN]]和网络设备制造商已经用动态缓存取代了这个标准的HTTP缓存控制。

==法律问题==
1998年，[[數字千年版權法|數字千年版權法]]增加了[[美国法典|美国法典]]（{{tsl|en|Online Copyright Infringement Liability Limitation Act||17 U.S.C. §: 512}}）的规定，放弃追究以缓存为目的的系统运营商的版权责任。

==Web缓存软件==
以下是专门的Web缓存服务器软件列表：
{| style="font-size: 85%; text-align: center; width: auto;" class="sortable wikitable"
|-
!名称
!操作系统
!前向模式
!反向模式
!协议
|-
! scope="row" | [[Apache_HTTP_Server|Apache HTTP Server]]
| Windows, OS X, Linux, Unix, FreeBSD, Solaris, Novell NetWare, OS/2, TPF, OpenVMS and eComStation
|{{No}}
|{{Yes}}
| {{free|[[Apache许可证|Apache License 2.0]]}}
|-
! scope="row" | {{tsl|en|aiScaler|}} Dynamic Cache Control
| Linux
| {{Yes}}
| {{Yes}}
| {{Proprietary}}
|-
! scope="row" | {{tsl|en|ApplianSys||ApplianSys CACHEbox}}
| Linux
| {{Yes}}
| {{Yes}}
| {{Proprietary}}
|-
! scope="row" | {{tsl|en|Blue Coat Systems|}} ProxySG
| SGOS
| {{Yes}}
| {{Yes}}
| {{Proprietary}}
|-
! scope="row" | [[Nginx|Nginx]]
| [[Linux|Linux]], [[BSD|BSD variants]], [[MacOS|OS X]], [[Solaris_(消歧义)|Solaris]], [[IBM_AIX|AIX]], [[HP-UX|HP-UX]], other [[类Unix系统|*nix]] flavors
| {{Yes}}
| {{Yes}}
| {{free|2-clause [[BSD许可证|BSD]]-like}}
|-
! scope="row" | {{tsl|en|Microsoft Forefront Threat Management Gateway|}}
| Windows
| {{Yes}}
| {{Yes}}
| {{Proprietary}}
|-
! scope="row" | [[Polipo|Polipo]]
| [[Microsoft_Windows|Windows]], [[MacOS|OS X]], [[Linux|Linux]], [[OpenWrt|OpenWrt]], [[FreeBSD|FreeBSD]]
| {{Yes}}
| {{Yes}}
| {{free|[[MIT許可證|MIT License]]}}
|-
! scope="row" | [[Squid_(软件)|Squid]]
| Linux, Unix, Windows
| {{Yes}}
| {{Yes}}
| {{free|[[GNU通用公共许可证|GNU General Public License]]}}
|-
! scope="row" | [[Traffic_Server|Traffic Server]]
| Linux, Unix
| {{Yes}}
| {{Yes}}
| {{free|[[Apache许可证|Apache License 2.0]]}}
|-
! scope="row" | {{tsl|en|Untangle|}}
| Linux
| {{Yes}}
| {{Yes}}
| {{Proprietary}}
|-
! scope="row" | [[Varnish_cache|Varnish cache]]
| Linux, Unix
| {{Yes}} (possible with a VMOD)
| {{Yes}}
| {{free|[[BSD许可证|BSD许可证]]}}
|-
! scope="row" | {{tsl|en|WinGate|}}
| Windows
| {{Yes}}
| {{Yes}}
| {{Proprietary}} / Free for 3 users
|-
!Nuster
|Linux| Linux, Unix
| {{Yes}}
| {{Yes}}
| {{free|[[GNU通用公共许可证|GNU通用公共许可证]]}}
|}

== 参见 ==
* [[內容傳遞網路|內容傳遞網路]]（CDN）
* [[代理服务器|代理服务器]]
* {{le|网络加速器|Web accelerator}}

==注释==
{{Reflist}}

==延伸阅读==
* Ari Luotonen, ''Web Proxy Servers'' (Prentice Hall, 1997) {{ISBN|0-13-680612-0}}
* Duane Wessels, ''Web Caching'' (O'Reilly and Associates, 2001). {{ISBN|1-56592-536-X}}
* Michael Rabinovich and Oliver Spatschak, ''Web Caching and Replication'' (Addison Wesley, 2001). {{ISBN|0-201-61570-3}}

==外部链接==
* Caching Tutorial for Web Authors and Webmasters
* Web Caching and Content Delivery Resources
* [http://www.visolve.com/squid/whitepapers/ViSolve_Web_Caching.pdf Web Caching] {{Wayback|url=http://www.visolve.com/squid/whitepapers/ViSolve_Web_Caching.pdf |date=20111223230158 }}, Web caching in general with some references to SQUID

[[Category:HTTP|Category:HTTP]]
[[Category:缓存|Category:缓存]]
[[Category:代理服务器|*]]