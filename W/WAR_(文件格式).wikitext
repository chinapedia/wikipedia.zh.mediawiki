{{NoteTA|G1=IT}}
{{Infobox file format
| name = Web ARchive
| extension = .war
| mime = 
| owner = [[昇陽電腦|昇陽電腦]]
| creatorcode = 
| genre = 
| containerfor = [[JSP|JSP]], [[Java_Servlet|Java Servlet]]
| containedby = 
| extendedfrom = [[JAR_(文件格式)|JAR]]
| extendedto = 
}}
{{for|英文单词“war”的含义|战争}}
在[[软件工程|软件工程]]中，'''WAR文件'''（Web应用程序归档，{{lang-en|'''W'''eb application '''AR'''chive}}<ref>{{cite web |url=http://www.oracle.com/technetwork/articles/javase/servletapi-137835.html |title=What's New in Java Servlet API 2.2? |publisher=[[JavaWorld|JavaWorld]]([[Oracle|Oracle]]转载) |date=1999-10 |accessdate=2014-08-26 |archive-date=2017-10-18 |archive-url=https://web.archive.org/web/20171018080141/http://www.oracle.com/technetwork/articles/javase/servletapi-137835.html }}</ref>）是一种[[JAR文件|JAR文件]]，其中包含用来分发的[[JSP|JSP]]、[[Java_Servlet|Java Servlet]]、[[Java|Java]]类、[[XML|XML]]文件、标签库、静态网页（[[HTML|HTML]]和相关文件），以及构成[[Web应用程序|Web应用程序]]的其他资源。

== 内容和结构 ==
一个WAR文件可能会以与[[JAR文件|JAR文件]]相同的方式进行[[数字签名|数字签名]]，以便他人确定哪些源代码来自哪一个JAR文件。

而WAR文件也有其特殊的文件和目录。如果Web应用程序使用的[[Java_Servlet|servlet]]，则Servlet[[Web容器|容器]]会使用web.xml文件，以确定某个[[URL|URL]]请求将被路由到哪个Servlet上。web.xml还用于定义Servlet中可以引用的上下文变量，以及部署器所需配置的环境依赖关系。例如，一个依赖于邮件会话、用于发送电子邮件的程序，而Servlet容器负责提供这项服务。这就需要在web.xml进行一些配置。

== 优缺点 ==
WAR文件有如下优点：
* 易于部署和测试
* 已部署的应用程序，其版本很容易辨别
* 所有的Java EE容器都支持.WAR文件

使用WAR文件进行Web部署的一个缺点是，即便是细微的修改，也不能在程序运行时进行。任何修改都需要重新生成和部署整个WAR文件。

== 示例 ==
下面的示例web.xml文件，演示了一个Servlet是怎样被声明和被关联的。

 <syntaxhighlight lang="xml">
 <?xml version="1.0" encoding="UTF-8"?>
 <!DOCTYPE web-app
     PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.2//EN"
     "http://java.sun.com/j2ee/dtds/web-app_2_2.dtd">
 
 <web-app>
     <servlet>
         <servlet-name>HelloServlet</servlet-name>
         <servlet-class>mypackage.HelloServlet</servlet-class>
     </servlet>
 
     <servlet-mapping>
         <servlet-name>HelloServlet</servlet-name>
         <url-pattern>/HelloServlet</url-pattern>
     </servlet-mapping>
 
     <resource-ref>
         <description>
             資源引用到一個可被用於發送電子郵件的javax.mail.Session的實例工廠。
         </description>
         <res-ref-name>mail/Session</res-ref-name>
         <res-type>javax.mail.Session</res-type>
         <res-auth>Container</res-auth>
     </resource-ref>
 </web-app>
 </syntaxhighlight>

== 参见 ==
相关的文件格式有：
* {{tsl|en|EAR (file format)|EAR}}
* [[JAR|JAR]]
* [[EXE格式|EXE格式]]

== 参考文献 ==
{{Reflist}}

== 外部链接 ==
*[https://web.archive.org/web/20140421001433/http://docs.oracle.com/javaee/7/tutorial/doc/packaging003.htm Oracle Java EE 7指南：打包Web文档]
*[http://docs.oracle.com/javaee/6/tutorial/doc/bnadx.html Oracle Java EE 6指南：Web模块] {{Wayback|url=http://docs.oracle.com/javaee/6/tutorial/doc/bnadx.html |date=20220426100808 }}
*[http://docs.oracle.com/javaee/5/tutorial/doc/bnadx.html Oracle Java EE 5指南：Web模块] {{Wayback|url=http://docs.oracle.com/javaee/5/tutorial/doc/bnadx.html |date=20220307211854 }}
*[http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd 太阳计算机系统：Servlet 2.5 WAR文件的XML Schema] {{Wayback|url=http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd |date=20120625232409 }}
*[http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd 太阳计算机系统：Servlet 2.4 WAR文件的XML Schema] {{Wayback|url=http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd |date=20120626123136 }}
*[http://jcp.org/en/jsr/detail?id=154 JSR 154：Java Servlet 2.4规范] {{Wayback|url=http://jcp.org/en/jsr/detail?id=154 |date=20220321200251 }}

[[Category:归档格式|Category:归档格式]]
[[Category:Java企业平台|Category:Java企业平台]]