'''标记系统'''是 [[Emil_Leon_Post|Emil Leon Post]] 在1943年创立的确定性[[计算模型|计算模型]]，作为一种简单形式的[[字符串重写系统|字符串重写系统]]。标记系统也可以看作抽象机，叫做 '''Post 标记机'''（不要混淆于[[Post-图灵机|Post-图灵机]]）——简单的说，其唯一的磁带是无限长度的[[先進先出|FIFO]][[队列|队列]]的[[有限状态自动机|有限状态自动机]]，在每次状态转变中机器读在队列头部的符号，从头部删除固定数目的符号，并可以向尾部增加符号。

== 定义 ==

''标记系统''是三元组 (''m'', ''A'', ''P'')，这里的
* ''m'' 是正数，叫做'''删除数'''。
* ''A'' 是有限的符号字母表，其中一个是特殊的'''停机符号'''。在 ''A'' 上的有限的（可能空）字符串叫做'''字'''。
* ''P'' 是'''产生规则'''的集合，指派一个字 ''P(x)''（叫做''产品''）到''A'' 中的每个符号 ''x''。指派给停机符号的产品（就是 ''P(<tt>H</tt>)''）在下面会看到在计算中没有扮演任何角色，但是出于方便采用 ''P(<tt>H</tt>)'' = ''<tt>'H'</tt>''。  

术语'''m-标记系统'''经常用来强调删除数。定义在文献 [1][2][3][4] 有着不同，上面的定义（来自[4]）可能最适合作为[[计算模型|计算模型]]：
* '''停机字'''是要么开始于停机符号要么长度小于 ''m'' 的字。
* 变换 ''t'' 定义在非停机字上，使得如果 ''x'' 指示一个字 ''S'' 的最左符号，则 ''t''(''S'') 是删除 ''S'' 的最左的 ''m'' 符号并添加字 ''P(x)'' 到右边。
* 标记系统做的'''计算'''是重复变换 ''t'' 所产生的字的有限序列，开始于初始给定的字并在产生停机字的时候停机。（计算不被认为要退出，除非在有限多重复中生成停机字。）

对于每个 ''m'' > 1，''m''-标记系统的集合是[[图灵完全|图灵完全]]的。特别是，Rogozhin [4] 建立了 2-标记系统普遍性的类，使用字母表 {''a<sub>1</sub>'', ..., ''a<sub>n</sub>'', <tt>H</tt>} 和相应的产品 {''a<sub>n</sub>a<sub>n</sub>W<sub>1</sub>'', ..., ''a<sub>n</sub>a<sub>n</sub>W<sub>n-1</sub>'', ''a<sub>n</sub>a<sub>n</sub>'', <tt>H</tt>}，这里的 ''W<sub>k</sub>'' 是非空字。

注意不像标记系统的某些可替代的定义那样，当前的定义中一个计算的“输出”可以编码在最终的字中。

==例子==
<pre>
2-标记系统
    字母表: {a,b,c,H} 
    产生规则:
         a  -->  ccbaH
         b  -->  cca
         c  -->  cc

计算
    初始字: baa
             acca
               caccbaH
                 ccbaHcc
                   baHcccc
                     Hcccccca (停机)。
</pre>

==引用==  

* [1] [[Hao_Wang|Wang, H.]]："Tag Systems and Lag Systems", ''Math. Annalen'' '''152''', 65-74, 1963.
* [2] [[John_Cocke|Cocke, J.]]，and [[Marvin_Minsky|Minsky]]，M.: "Universality of Tag Systems with P=2", ''J. Assoc. Comput. Mach.'' '''11''', 15-20, 1964.
* [3] Uspensky, V.A.: "A Post Machine" (in Russian), Moscow, "[[Nauka|Nauka]]", 1979.
* [4] Rogozhin, Yu.: "Small Universal Turing Machines", ''Theoret. Comput. Sci.'' '''168''', 215-240, 1996.

== 外部链接 ==
* http://mathworld.wolfram.com/TagSystem.html {{Wayback|url=http://mathworld.wolfram.com/TagSystem.html |date=20210227065944 }}
* http://mathworld.wolfram.com/CyclicTagSystem.html {{Wayback|url=http://mathworld.wolfram.com/CyclicTagSystem.html |date=20190916015649 }}
* http://www.wolframscience.com/nksonline/page-95 {{Wayback|url=http://www.wolframscience.com/nksonline/page-95 |date=20170321083656 }} (cyclic tag systems)
* http://www.wolframscience.com/nksonline/page-669 {{Wayback|url=http://www.wolframscience.com/nksonline/page-669 |date=20170321083528 }} (emulation of tag systems)
* [https://web.archive.org/web/20060218185852/http://semillon.wpi.edu/~aofa/AofA/msg00021.html C++ Simulator of a Nondeterministic and Deterministic Multitape Post Machine] (free software).
* [https://web.archive.org/web/20060505145025/http://r.s.home.mindspring.com/tag/ Bitwise Cyclic Tag] (a bitwise variant of cyclic tag systems)

[[Category:计算模型|Category:计算模型]]