{{noteTA
|G1=IT
}}

'''NoSQL'''（最初表示'''No'''n-'''SQL'''<ref>http://nosql-database.org/ "NoSQL DEFINITION: Next Generation Databases mostly addressing some of the points : being non-relational, distributed, open-source and horizontally scalable".</ref>，后来有人转解为'''N'''ot '''o'''nly '''SQL'''<ref>{{cite web |url=http://searchdatamanagement.techtarget.com/definition/NoSQL-Not-Only-SQL |title=NoSQL (Not Only SQL) |quote=NoSQL database, also called Not Only SQL}}</ref><ref>{{cite web | url = http://martinfowler.com/bliki/NosqlDefinition.html | title = NosqlDefinition | first = Martin | last = Fowler | author-link = Martin Fowler (software engineer) | quote = many advocates of NoSQL say that it does not mean a "no" to SQL, rather it means Not Only SQL }}</ref>），是對不同於傳統的[[關聯式資料庫|關聯式資料庫]]的[[数据库管理系统|数据库管理系统]]的統稱。

允許部分資料使用SQL系統儲存，而其他資料允許使用NOSQL系統儲存。其數據儲存可以不需要固定的表格模式以及[[元数据|元数据]]（metadata），也經常會避免使用SQL的[[连接_(SQL)|JOIN]]操作，一般有{{link-en|水平可扩展性|Database_scalability}}的特征。

== 发展历史 ==
NOSQL一词最早出现于1998年，是Carlo Strozzi开发的一个轻量、开源、不提供SQL功能的关系数据库<ref>
{{cite web
|url = http://publications.lib.chalmers.se/records/fulltext/123839.pdf
|title = Investigating storage solutions for large data: A comparison of well performing and scalable data storage solutions for real time extraction and batch insertion of data
|first = Adam
|last = Lith
|coauthors = Jakob Mattson
|year = 2010
|publisher = Department of Computer Science and Engineering, Chalmers University of Technology
|location = Göteborg
|pages = 15, 70
|format = PDF
|accessdate = 2011-05-12
|quote = Carlo Strozzi first used the term NOSQL in 1998 as a name for his open source relational database that did not offer a SQL interface[...]
|postscript =
}}
</ref>。

2009年，Last.fm的Johan Oskarsson发起了一次关于分布式开源数据库的讨论<ref>{{cite web |url=http://blog.sym-link.com/2009/05/12/nosql_2009.html |title=NOSQL 2009 |publisher=Blog.sym-link.com |date=2009-05-12 |accessdate=2010-03-29 |archive-url=https://web.archive.org/web/20110716174012/http://blog.sym-link.com/2009/05/12/nosql_2009.html |archive-date=2011-07-16 |dead-url=yes }}</ref>，来自Rackspace的Eric Evans再次提出了NOSQL的概念，这时的NOSQL主要指非关系型、分布式、不提供[[ACID|ACID]]的数据库设计模式。

2009年在亚特兰大举行的"no:sql(east)"讨论会是一个里程碑，其口号是"select fun, profit from real_world where relational=false;"。因此，对NOSQL最普遍的解释是“非关聯型的”，强调[[键-值存储|键-值存储]]和[[面向文档数据库|面向文档数据库]]的优点，而不是单纯的反对RDBMS。

基于2014年的收入，NOSQL市场领先企业是{{link-en|MarkLogic|MarkLogic}}，[[MongoDB|MongoDB]]和{{link-en|Datastax|DataStax}}<ref>{{cite web|accessdate=2015-11-17|url=http://wikibon.com/hadoop-nosql-software-and-services-market-forecast-2013-2017/|title=Hadoop-NoSQL-rankings}}</ref>。基于2015年的人气排名，最受欢迎的NOSQL数据库是[[MongoDB|MongoDB]]，[[Apache_Cassandra|Apache Cassandra]]和[[Redis|Redis]]<ref>{{cite web|accessdate=2015-07-31|url=http://db-engines.com/en/ranking|title=DB-Engines Ranking|archive-date=2020-02-21|archive-url=https://web.archive.org/web/20200221093447/https://db-engines.com/en/ranking|dead-url=no}}</ref>。

== 特点 ==
当代典型的[[關聯式資料庫|關聯式資料庫]]在一些数据敏感的应用中表现了糟糕的性能，例如为巨量文档建立索引、高流量网站的[[Web服务|网页服务]]，以及发送[[流式媒体|流式媒体]]<ref name="Agrawal2008">{{cite journal |authors = Agrawal, Rakesh et al. |title = The Claremont report on database research |journal = SIGMOD Record |volume = 37 |number = 3 |year = 2008 |issn = 0163-5808 |pages = 9–19 |doi = 10.1145/1462571.1462573 |publisher = [[計算機協會|計算機協會]]
|url = http://db.cs.berkeley.edu/claremont/claremontreport08.pdf
}}</ref>。关系型数据库的典型实现主要被调整用于执行规模小而读写频繁，或者大批量读而极少写访问的事务。

NOSQL的結構通常提供弱一致性的保證，如最終一致性，或交易僅限於單個的數據項。不過，有些系統，提供完整的[[ACID|ACID]]保證在某些情況下，增加了補充中間件層（例如：CloudTPS）<ref>{{cite web |url = http://www.globule.org/publi/CSTWAC_ircs53.html |title = CloudTPS: Scalable Transactions for Web Applications in the Cloud |website = Globule.org |date= |accessdate=2010-03-29 }}</ref>。有兩個成熟的系統有提供快照隔離的列存儲：像是Google基於過濾器系統的[[BigTable|BigTable]]<ref>{{cite web |url = http://www.google.ca/url?sa=t&source=web&cd=3&ved=0CCQQFjAC&url=http%3A%2F%2Fwww.usenix.org%2Fevents%2Fosdi10%2Ftech%2Ffull_papers%2FPeng.pdf&rct=j&q=Large-scale%20Incremental%20Processing%20Using%20Distributed%20Transactions%20and%20Notifications&ei=eM24TOYnjqedB_mHmLUN&usg=AFQjCNGGm1Xfaml5lq6Aj1R2BlX7WilIuQ&sig2=ZZcPWxhiMVSnY-DmewIFIg&cad=rja |title = Large-scale Incremental Processing Using Distributed Transactions and Notifications |publisher = The 9th USENIX Symposium on Operating Systems Design and Implementation (OSDI 2010), Oct 4–6, 2010, Vancouver, BC, Canada |date= |accessdate = 2010-10-15 }}</ref>，和滑鐵盧大學开发的[[HBase|HBase]]<ref>{{cite web |url = http://www.cs.uwaterloo.ca/~c15zhang/ZhangDeSterckGrid2010.pdf |title = Supporting Multi-row Distributed Transactions with Global Snapshot Isolation Using Bare-bones HBase |publisher = The 11th ACM/IEEE International Conference on Grid Computing (Grid 2010), Oct 25-29, 2010, Brussels, Belgium |date= |accessdate=2010-10-15 |deadurl=yes |archiveurl = https://web.archive.org/web/20110629202324/http://www.cs.uwaterloo.ca/~c15zhang/ZhangDeSterckGrid2010.pdf |archivedate=2011-06-29 }}</ref>。這些系統，自主開發，使用類似的概念來實現多行（multi-row）分散式ACID交易的快照隔離（snapshot isolation）保證為基礎列儲存，無需額外的資料管理開銷，中間件系統部署或維護，減少了中間件層。

少数NOSQL系统部署了分布式结构，通常使用[[分散式雜湊表|分散式雜湊表]]（DHT）将数据以冗余方式保存在多台服务器上。依此，扩充系统时候添加服务器更容易，并且扩大了对服务器失效的承受能程度。<ref>{{cite web |url = http://static.last.fm/johan/nosql-20090611/cassandra_nosql.pdf |title = Cassandra: Structured Storage System over a P2P Network |format=PDF |date= |accessdate=2010-03-29 }}</ref>

== 分类 ==
=== 文档存储 ===
{| style="text-align: center;" class="wikitable sortable"
 ! 名稱 !! 語言 
 |-
 | [[BaseX|BaseX]] || [[XQuery|XQuery]]，[[Java|Java]] 
 |-
 | [[CouchDB|CouchDB]] || [[Erlang|Erlang]] 
 |-
 | [[eXist|eXist]] || [[XQuery|XQuery]] 
 |-
 | [[iBoxDB|iBoxDB]] || [[Java|Java]]，[[CSharp|C#]] 
 |-
 | [[Jackrabbit|Jackrabbit]] || [[Java|Java]] 
 |-
 | [[Lotus_Notes|Lotus Notes]] || [[LotusScript|LotusScript]]，[[Java|Java]]等 
 |-
 | [[MarkLogic_Server|MarkLogic Server]] || [[XQuery|XQuery]] 
 |-
 | [[MongoDB|MongoDB]] || [[C++|C++]] 
 |-
 | RethinkDB || [[C++|C++]] 
 |-
 | [[OrientDB|OrientDB]] || [[Java|Java]] 
 |-
 | [[SimpleDB|SimpleDB]] || [[Erlang|Erlang]] 
 |-
 | [[Terrastore|Terrastore]] || [[Java|Java]] 
 |-
 | [[ElasticSearch|ElasticSearch]] || [[Java|Java]] 
|-
 | [[No2DB|No2DB]] || [[C♯|C#]] 
|}

=== 图数据库 ===
{| style="text-align: center;" class="wikitable sortable"
 ! 名稱 !! 語言 
 |-
 | [[AllegroGraph|AllegroGraph]] || [[SPARQL|SPARQL]] 
 |-
 | [[Sparksee_(graph_database)|Sparksee]] || [[Java|Java]] ， [[C♯|C#]] 
 |-
 | [[Neo4j|Neo4j]] || [[Java|Java]] 
 |-
 | [[FlockDB|FlockDB]] || [[Scala|Scala]] 
 |-
 | [[JanusGraph|JanusGraph]] || Java 
|}

=== 鍵-值（key‐value）儲存 ===
==== [[最終一致性|最終一致性]]的[[鍵-值儲存|鍵-值儲存]] ====
* [[Cassandra|Cassandra]]
* {{tsl|en|Dynamo|}}
* {{tsl|en|Hibari|}}
* {{tsl|en|Project Voldemort|}}
* {{tsl|en|Riak|}} <ref>{{cite web | url = https://wiki.basho.com | title = Riak: An Open Source Scalable Data Store | date = 2010-11-28 | accessdate = 2010-11-28 | deadurl = yes | archiveurl = https://web.archive.org/web/20101231030633/http://wiki.basho.com/ | archivedate = 2010年12月31日 }}</ref>

==== 架構性鍵-值储存 ====
* {{tsl|en|GT.M|}}
* InterSystem Globals<ref>http://nosql.mypopescu.com/post/5633789299/intersystems-globals-and-gt-m-compared</ref>

=== 主機式服務 ===
==== Key/value硬盘存储 ====
* [[BigTable|BigTable]]
* {{tsl|en|MemcacheDB|}}
* [[LevelDB|LevelDB]]

* {{tsl|en|Tokyo Cabinet|}}
* {{tsl|en|Tuple space|}}
* {{tsl|en|TreapDB|}}

==== Key/value RAM存储 ====
* {{tsl|en|Oracle Coherence|}}
* [[memcached|memcached]]
* [[Citrusleaf_database|Citrusleaf database]]
* {{tsl|en|Velocity (memory cache)|}}
* [[Redis|Redis]]
* {{tsl|en|Tuple space|}}

==== Key-value基于Paxos算法的存储 ====
* {{tsl|en|Keyspace (data store)|}}

=== 多数据库 ===
* [[OpenQM|OpenQM]]
* [[Rocket_U2|Rocket U2]]
* Revelation Software's [[OpenInsight|OpenInsight]]
* [[Extensible_Storage_Engine|Extensible Storage Engine]]（ESE/NT）

=== 时序型数据库 ===
{| style="text-align: center;" class="wikitable sortable"
 ! 名稱 !! 語言 
 |-
 | [[Graphite|Graphite]] || [[Python|Python]] 
 |-
 | [[InfluxDB|InfluxDB]] || [[Go|Go]] 
 |-
 | [[Informix_TimeSeries|Informix TimeSeries]] || [[Erlang|Erlang]] 
 |-
 | [[OpenTSDB|OpenTSDB]] || [[Java|Java]] 
 |-
 | [[RRDtool|RRDtool]] || [[C语言|C]] 
 |-
 | [[IoTDB|IoTDB]] || [[Java|Java]] 
|}

=== 对象数据库 ===
* [[Versant_Object_Database|Versant Object Database]]
* [[db4o|db4o]]
* [[Gemstone_(database)|GemStone/S]]
* [[InterSystems_Caché|InterSystems Caché]]
* [[JADE_(programming_language)|JADE]]
* [[Objectivity/DB|Objectivity/DB]]
* [[ZODB|ZODB]]
* [[ObjectStore|ObjectStore]]

=== [[列存储|列存储]] ===
* [[Cassandra|Cassandra]]
* [[HBase|HBase]]
* [[Hypertable|Hypertable]]

== 参考文献 ==
{{Reflist|30em}}

== 外部链接 ==
* [http://www.sigma.me/2011/06/11/intro-to-nosql.html NoSQL非关系数据库简介]
* [http://s3.amazonaws.com/AllThingsDistributed/sosp/amazon-dynamo-sosp2007.pdf Amazon数据库论文]
* [http://nosql-databases.org 在互联网上拥有NoSQL相关链接最多的网站。]
* [https://web.archive.org/web/20110227190046/http://sebug.net/paper/databases/nosql/Nosql.html NoSQL数据库笔谈]
* [http://kkovacs.eu/cassandra-vs-mongodb-vs-couchdb-vs-redis Cassandra vs MongoDB vs CouchDB vs Redis vs Riak vs HBase vs Membase vs Neo4j comparison]

== 参见 ==
* [[最终一致性|最终一致性]]（BASE——基本可用、弱状态、最终一致性——的其中一个组成要求，与关系数据库的[[ACID|Acid]]相对）
* [[CAP|CAP]]

{{-}}
{{NoSQL}}
{{database}}

[[Category:NoSQL|]]