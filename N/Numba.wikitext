{{NoteTA|G1=IT|G2=FL}}
{{Infobox software
| name = Numba
| title = 
| logo = 
| screenshot = <!-- [[File:|File:]] -->
| caption = 
| collapsible = 
| author = Continuum Analytics
| developer = 社区计划
| released = {{Start date and age|2012|08|15|df=yes}}
| discontinued = 
| latest release version = 0.53.1
| latest release date    = {{Start date and age|2021|04|01|df=yes}}
| latest preview version = 0.54.0rc2
| latest preview date    = {{Start date and age|2021|07|16|df=yes}}
| programming language   = [[Python|Python]], [[C语言|C]]
| operating system = [[跨平台|跨平台]]
| platform = 
| size = 
| language = 
| genre = {{en-link|数值分析软件列表|List of numerical analysis software|科学计算}}
| license = 
| website = {{URL|http://numba.pydata.org/}}
}}

Numba是[[开源软件|开源]]的[[即时编译|JIT编译器]]，它通过llvmlite Python包，使用[[LLVM|LLVM]]将[[Python|Python]]的子集和[[NumPy|NumPy]]翻译成快速的机器码。它为在CPU和GPU上并行化Python代码提供了大量选项，而经常只需要微小的代码变更。

Numba由[[Travis_Oliphant|Travis Oliphant]]在2012年开创并在github<ref>[https://github.com/numba/numba github]{{Wayback|url=https://github.com/numba/numba |date=20200819004213 }}</ref>上活跃开发而经常有新的发行。这个计划由[[Anaconda_(Python发行版)|Anaconda公司]]的开发者驱动，并受到[[DARPA|DARPA]]、Gordon和Betty Moore基金会、[[Intel|Intel]]、[[Nvidia|Nvidia]]、[[AMD|AMD]]和GitHub上的社区贡献者的支持。

== 例子 ==

Numba可以通过简单的在进行数值计算的Python函数上应用<code>numba.jit</code>修饰符来使用：

<syntaxhighlight lang="python">
import numba
import random

@numba.jit
def monte_carlo_pi(n_samples: int):
    acc = 0
    for i in range(n_samples):
        x = random.random()
        y = random.random()
        if (x**2 + y**2) < 1.0:
            acc += 1
    return 4.0 * acc / n_samples
</syntaxhighlight>

[[即时编译|即时编译]]在函数被调用时透明地进行：

<syntaxhighlight lang="pycon">
>>> monte_carlo_pi(1000000)
3.14
</syntaxhighlight>

Numba的网站<ref>[https://numba.pydata.org 网站] {{Wayback|url=https://numba.pydata.org/ |date=20210201194941 }}</ref>包含了更多的例子，还有如何从Numba获得更好的性能的信息。

== GPU支持 ==

Numba可以把Python函数编译成GPU代码。目前能获得二个后端：

* [[NVIDIA|NVIDIA]] [[CUDA|CUDA]]<ref>{{cite web |url=https://numba.pydata.org/numba-doc/dev/cuda |title=Numba for CUDA GPUs |accessdate=2020-09-29 |archive-date=2019-04-16 |archive-url=https://web.archive.org/web/20190416144328/http://numba.pydata.org/numba-doc/dev/cuda/ |dead-url=no }}</ref>
* [[AMD|AMD]] ROC {{en-link|异构系统架构|Heterogeneous System Architecture|HSA}}<ref>{{cite web|url=https://numba.pydata.org/numba-doc/dev/roc|title=Numba for AMD ROC GPUs|accessdate=2020-09-29|archive-date=2019-04-16|archive-url=https://web.archive.org/web/20190416144327/http://numba.pydata.org/numba-doc/dev/roc/|dead-url=no}}</ref>

== 替代方式 ==

Numba是使Python快速的方法之一，它编译包含Python和Numpy代码的特定函数。存在很多用Python进行快速数值计算的替代方式，比如[[Cython|Cython]]、[[TensorFlow|TensorFlow]]、[[PyTorch|PyTorch]]、{{en-link|Chainer|Chainer}}、Pythran<ref>[https://pythran.readthedocs.io/en/latest/ Pythran]{{Wayback|url=https://pythran.readthedocs.io/en/latest/ |date=20200219081337 }}</ref>和[[PyPy|PyPy]]。

==引用==
{{reflist}}
{{Python}}
[[Category:Python|Category:Python]]