{{TA
|G1=IT
|1=zh-hant:編程;zh-hans:编程;zh-tw:程式設計;
}}
{{RoughTranslation| time=2012-4-29}}
'''Null''' 在電腦程式設計上有多種含義：

== Null 指標 或是 Null 引用 ==
{{main|Null_(特殊指標值)}}

== Null 值==
在許多定義裡，Null 意指 "没有值" 或是 "未知的值"。[[SQL|SQL]]資料庫查詢語言使用 null 在這種地方上，如同在[[Visual_Basic|Visual Basic]] 及其衍生語言。於此模型上, null operand 等同於 <code>null</code> (VB) or "<code>unknown</code>" (SQL). 故對於A而言, 算式 "<code>A == null</code>" 與 "<code>A <> null</code>" 既非 true 亦非 false。

然而，布林運算 "<code>A and false</code>" 產生 false，且類似 "<code>A or true</code>" 是真 true，甚至當 A 是 null，因為這個算式並非代表在 A的值域之上。另一算式 "<code>A is null</code>" 和 "<code>A is not null</code>" 都是正確的方法，皆可用來測試 SQL 中的null value，一些 SQL 可實作為 <code>A == null</code> 可以是 "true" ，如果 A 是 null; 詳見 '''[[Null_(SQL)|Null (SQL)]]'''。

== Null 字符串 ==
null [[:字符串|字符串]], 也就是[[空字元串|空字符串]]（empty string），是一種長度為0的字串 <ref name="Kernighan and Ritchie, C, p. 38">Kernighan and Ritchie, ''C'', p. 38 </ref>。

== Null 设备==
* 虛擬裝置（[[硬件|device]]-like entity）並不提供輸入亦不支援輸出。在[[Unix|UNIX]]系統中，會被標示為特別檔（{{link-en|special file|special file}}） '''<code>[[:/dev/null|:/dev/null]]</code>''' （亦可視之為[[黑洞|黑洞]]或 [[比特垃圾桶|比特垃圾桶]]）。[[DOS|DOS]] 與 Windows，代表著一種<code>NUL</code> 裝置。[[AmigaOS|AmigaOS]]則是以 <code>NIL:</code> 代表虛擬裝置。

== Null 字符 ==
{{main|空字符}}

在{{link-en|C0 and C1 control |C0 and C1 control codes|C0}} 的控制碼集control code set 定義於 [[ISO/IEC_646|ISO 646]], [[ASCII|ASCII]], 以及 [[Unicode|Unicode]]標準字元集, code value 0 是空字符（null character，NUL）。大多數的程式語言提供語法來表示這樣的字元 (例如：[[Pascal_(程式語言)|Pascal]] 使用 chr(0) 或 #0, [[C语言|C]] 以及其他衍生語言 <code>'\0'</code>). <ref name="Kernighan and Ritchie, C, p. 38"/>

在[[C|C語言]]等程式語言，null字符 意指為[[:字符串|字符串]]的結束。這些字串被編成[[ASCII|ASCII]]字元集有時可視同 ''[[C风格字符串|ASCIIZ]]'' 或 ''ASCIZ'' 字串 — "Z" 是指字串的終點 "Zero"，或 null 字符<ref>Kernighan and Ritchie, ''C'', p. 30 </ref>.

當機電電傳打字電報被用作計算機輸出設備，一個或多個NULL字符被送往在每次印刷線，以便有時間的機制，以返回到第一個印刷上的立場下一行。

== Null 的变种==
一些程式語言（像是 [[LISP|LISP]]，[[Ruby|Ruby]]，[[Pascal_(程式語言)|Pascal]] 和 [[Delphi|Delphi]], 以及其他基於 Pascal發展的語言）使用 [[nil|<code>nil</code>]] 來表示Null變數，這有時會導致混淆。

== Null 脚本 或 Null 子程序 ==
[[脚本语言|command script]] 或 [[子程序|program subroutine]] 不做任何事, 但回傳個常數值。稱為存根函數或 "[[stubroutine|stubroutine]]", 通常使用於 [[程序设计|program development]], 此處的功能執行例程被推遲。這種技術常被用於防盜版。目標程式會被反組譯[[汇编语言|disassembled]]。

== Null 账户 ==
在一些某些論壇或是網際網路, 使用者数据库（user database） 的毀損可能造成帳號突然顯示為「無效」（null） 會要求重設其系統.

== Null函数 ==
[[Null函数|Null函数]]（{{link-en|null function|null function}}）（或稱 null操作符）是一種傳回「非資料值」（no data values）的函數, 故執行後不會有任何狀態的改變。

== 注釋 ==
<references/>

[[Category:電腦術語|Category:電腦術語]]
[[Category:无|Category:无]]