{{noteTA|G1=IT}}
{{Infobox programming language
|name           = Nemerle
|logo           =
|paradigm       = [[编程范型|多范型]]: [[函数式编程|函数式]], [[指令式编程|指令式]], [[元编程|元编程]], [[面向对象编程|面向对象]]
|designers       = Kamil Skalski, Michał Moskal, Prof. Leszek Pacholski, Paweł Olszta 于[[弗羅茨瓦夫大學|弗羅茨瓦夫大學]]
|developer       = [[JetBrains|JetBrains]]
|released        = {{Start date and age|2003}}
|latest release version = 1.2.507.0<ref>[http://nemerle.org/Downloads Nemerle 1.2.507.0]</ref>
|latest release date = {{Start date and age|2016|8|6|df=yes}}
|typing          = [[类型推论|类型推论]], [[类型系统|名称]], [[静态类型|静态]], [[强类型|强类型]]
|implementations = Nemerle
|dialects        =
|influenced_by   = [[C♯|C#]], [[Lisp|Lisp]], [[ML语言|ML]]
|influenced      =
|platform        = [[通用语言架构|CLI]]
|file ext        = .n
|website         = {{URL|nemerle.org}}
}}
'''Nemerle'''，是微軟公司提出的.NET平台上的新語言，由Wrocław大學的Kamil Skalski、Michał Moskal、Prof. Leszek Pacholski、Paweł Olszt等人發明。

== 範例 ==
=== Hello, World! ===
一個傳統的[[Hello_world_program|"Hello World!"]]可以被寫成C#-like的風格：

 class Hello {
   static Main () : void {
     System.Console.WriteLine("Hello, world!");
   }
 }

或更簡捷：

 System.Console.WriteLine("Hello, world!");

=== 巨集的例子 ===
巨集可以讓你擁有自己的模板（boilerplate），具有靜態檢查功能。<!--code generated for you under the hood, with additional static checks performed by the compiler. They give you the power to programatically generate code.-->

==== 資料庫存取 ====
例如，使用Nemerle macros可以將SQL可成：

 ExecuteReaderLoop ("SELECT firstname, lastname FROM employee WHERE firstname = $myparm", dbcon,
 {
   System.Console.WriteLine ("Name: {0} {1}", firstname, lastname) 
 });

取代 

 string sql = "SELECT firstname, lastname FROM employee WHERE firstname = :a";
 NpgsqlCommand dbcmd = new NpgsqlCommand(sql, dbcon, dbtran);
 dbcmd.Parameters.Add("a", myparm);
 
 NpgsqlReader reader = dbcmd.ExecuteReader();
 
 while(reader.Read()) {
   string firstname = reader.GetString (0);
   string lastname = reader.GetString (1);
   System.Console.WriteLine ("Name: {0} {1}", firstname, lastname) 
 }
 reader.Close();
 dbcmd.Dispose();

上述的程式碼不僅只是隱藏部份的動作，更可增加編譯器在查詢字串上的效率。這裡使用的變數，由資料庫回傳行資料（columns）。ExecuteReaderLoop巨集會產生一些你想要的粗略的程式碼。而且，連結資料庫並檢查SQL語法是否合法。

==== 新語言建構 ====
使用Nemerle巨集（macros）可以產生更新式的語法（syntax）：

 macro ReverseFor(i, begin, body) 
 syntax("ford", "(", i, ";", begin, ")", body)
 {
   <[ for($i = $begin; $i >= 0; $i--)$body ]>
 }

定義一個巨集ford(EXPR ; EXPR)EXPR syntax可被寫成 

 ford(i ; n)print (i);

=== Nemerle結合ASP.NET ===
Nemerle可以被直接嵌入ASP.NET:
 <nowiki><%@ Page Language="Nemerle" %>
 <script runat="server">
 
     Page_Load(_ : object, _ : EventArgs): void {
         Message.Text = $"You last accessed this page at: $(DateTime.Now)";
     }
 
     EnterBtn_Click(_ : object, _ : EventArgs): void {
         Message.Text = $"Hi $(Name.Text), welcome to ASP.NET!";
     }
 
 </script>
 
 <html>
     <body>
         <form runat="server">
             Please enter your name: <asp:TextBox ID="Name" runat="server" />
             <asp:Button OnClick="EnterBtn_Click" Text="Enter" runat="server" />
 
             <p><asp:Label ID="Message" runat="server" /></p>
         </form>
     </body>
 </html></nowiki>
...或者儲成單一檔案格式，一行完成：
 <nowiki><%@ Page Language="Nemerle" Src="test.n" Inherits="Test" %></nowiki>

=== PInvoke ===
Nemerle有更多'''原生平台函式庫'''（native platform libraries）。風格非常類似C#'s和其它[[Microsoft_.NET|.NET]]平台上的語言。下面是最簡單的例子： 

 using System;
 using System.Runtime.InteropServices;
 
 class PlatformInvokeTest
 {
     [DllImport("msvcrt.dll")]
     public extern static puts(c : string): int;
  
     [DllImport("msvcrt.dll")]
     internal extern static _flushall() : int;
     
     public static Main() : void
     {
         _ = puts("Test");
         _ = _flushall();
     }
 }

== 外部連結 ==
*[http://nemerle.org/ Language Homepage]*{{Wayback|url=http://nemerle.org/ |date=20071009155042 }}

*[http://www.99-bottles-of-beer.net/language-nemerle-869.html Nemerle at 99 Bottles of Beer]{{Wayback|url=http://www.99-bottles-of-beer.net/language-nemerle-869.html |date=20070928030347 }}
*[http://d.hatena.ne.jp/akiramei/searchdiary?word=%2a%5bNemerle%5d Interesting entries about Nemerle from akiramei's diary (in Japanese)]{{Wayback|url=http://d.hatena.ne.jp/akiramei/searchdiary?word=%2a%5bNemerle%5d |date=20071101110807 }}

{{dotNET}}

[[Category:.NET程式語言|N]]
[[Category:2003年建立的程式語言|Category:2003年建立的程式語言]]