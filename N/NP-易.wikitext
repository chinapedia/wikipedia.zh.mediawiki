在[[計算複雜度理論|計算複雜度理論]]內，'''NP-易'''（或称“NP-容易”，NP-easy）這個[[複雜度類|複雜度類]]是使用帶有在[[NP_(複雜度)|NP]]裡面某個[[決定性問題|決定性問題]][[諭示機|神諭]]的[[圖靈機|圖靈機]]，能在[[多項式時間|多項式時間]]內解決掉的[[功能性問題|功能性問題]]。

換句話說，一個問題X屬於NP-易，[[若且唯若|若且唯若]]存在某個在NP裡面的問題Y，令X可以於[[多項式時間|多項式時間]]內[[圖靈歸約|圖靈歸約]]（polynomial-time Turing reducible）至Y。<ref>{{harvtxt|Garey|Johnson|1979}}, p. 117, 120.</ref>換句話說，給予一個解決Y的[[諭示機|神諭]]（一個只需要單位時間就可以），則存在一個在多項式時間內解決X的演算法（可能需要藉由不斷的使用神諭，這是可以接受的）。

NP-易也是FP<sup>NP</sup>（參見[[功能性問題|功能性問題]]頁面）或者FΔ<sub>2</sub>P（參見[[多項式層級|多項式層級]]頁面）的別名。

一個NP-易的例子是將一堆字串進行排序。決定型問題"字串A是否比B來的大"是一個NP問題。然後我們已經有[[快速排序|快速排序]]（quicksort）或者[[合併排序|合併排序]]（merge sort）這些演算法，它們只要有單位時間比較大小的方式，即可以在多項式時間之內排序一個集合。因此我們結合以上兩點可以得知，字串排序是NP-易的問題。

NP-易裡面也是有非常困難的問題。例如說，可以參考[[NP-等價|NP-等價]]（NP-equivalent）頁面裡面的例子。

NP-易的定義上使用圖靈規約而非[[多對一歸約|多對一歸約]]（many to one reduction），因為''Y''是決定型問題，答案只有TRUE或者FALSE，但是問題''X''是功能性問題，答案可以有很多種。因此，並不存在一個將X跟Y以相同答案互相轉換的方法。

==參考資料==
{{RefList}}

{{複雜度類}}

[[Category:複雜度類|Category:複雜度類]]