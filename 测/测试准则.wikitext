'''测试准则'''，是软件测试员或[[软件工程师|软件工程师]]用来检测测试是否通过的一种机制。<ref>Kaner, Cem; [http://www.testingeducation.org/k04/OracleExamples.htm ''A Course in Black Box Software Testing''], 2004</ref>测试准则决定在给定的测试用例输入下产品应有的输出，从而与被测试系统的输出做比较。这一术语在威廉·豪登（William Howden）的《测试理论入门》一书中首次被使用和定义。<ref>Miller, Edward; and Howden, William E.; ''Software Testing and Validation Techniques'', Long Beach, CA: IEEE Computer Society Press, 1978 (first edition), pp. 16-19</ref>{{link-en|艾琳·韋約克|Elaine Weyuker}}又对不同类型的测试准则给予了拓展。<ref>Weyuker, Elaine J.; "The Oracle Assumption of Program Testing", in ''Proceedings of the 13th International Conference on System Sciences (ICSS), Honolulu, HI, January 1980'', pp. 44-49</ref>测试准则经常独立于被测试系统。<ref name="038720881X">Jalote, Pankaj; ''An Integrated Approach to Software Engineering'', Springer/Birkhäuser, 2005, ISBN 0-387-20881-X</ref> 在自动化测试中后置条件方法是通常被使用的自动化了的测试准则。<ref>Meyer, Bertrand; ''et al.''; "Programs that Test Themselves", ''IEEE Computer'', '''42''':9 (September 2009), pp. 46-55</ref>测试准则问题往往比看起来要难得多，同时会连带要求解决可控性和可观测性问题。<ref name="ammann-intro">Ammann, Paul; and Offutt, Jeff; "Introduction to Software Testing", ''Cambridge University Press'', 2008, ISBN 978-0-521-88038-1</ref>

常见的测试准则包括：
* [[设计规格|设计规格]]和[[软件文档|软件文档]]<ref>{{cite thesis | last = Peters | first = Dennis K. | id = {{citeseerx|10.1.1.69.4331}} | title = Generating a Test Oracle from Program Documentation | publisher = McMaster University | degree = M. Eng. | year = 1995 }}</ref><ref>{{cite conference | last1 = Peters | first1 = Dennis K. | last2 = Parnas | first2 = David L. | url = http://www.engr.mun.ca/~dpeters/papers/issta.pdf | title = Generating a Test Oracle from Program Documentation | booktitle = Proceedings of the 1994 International Symposium on Software Testing and Analysis | conference = ISSTA | publisher = ACM Press | pages = 58–65 }}</ref>
* 其它产品（例如：作为一个软件程序的测试准则，有可能是使用不同算法计算同一个数学表达式的其它程序）
* 为一组少量测试输入提供近似或准确结果的"启发式准则"<ref>Hoffman, Douglas; [http://www.softwarequalitymethods.com/Papers/STQE%20Heuristic.pdf Heuristic Test Oracles], Software Testing & Quality Engineering Magazine, 1999</ref>
* 使用统计学特征的"统计式准则"<ref>Mayer, Johannes; and Guderlei, Ralph; [http://www.mathematik.uni-ulm.de/sai/mayer/publications/oracles.pdf ''Test Oracles Using Statistical Methods'']</ref>
* 由相似性比较一个测试执行结果而产生的"一致性准则"<ref>Hoffman, Douglas; [http://www.softwarequalitymethods.com/Papers/OracleTax.pdf ''Analysis of a Taxonomy for Test Oracles''], Quality Week, 1998</ref>
* 由使用相同模型而产生和确认系统行为的"基于模型的准则"<ref>Robinson, Harry; [http://www.geocities.com/model_based_testing/shoestring.htm ''Finite State Model-Based Testing on a Shoestring''], STAR West 1999</ref>
* 人工准则（例如：由手工分析来确定被测试系统的正确性）<ref name="ammann-intro" />

==參考資料==
{{reflist}}

==參見==
* Binder, Robert V. (1999). "Chapter 18 - Oracles" in ''Testing Object-Oriented Systems: Models, Patterns, and Tools'', Addison-Wesley Professional, 7 November 1999, ISBN 978-0-201-80938-1

[[Category:软件测试|Category:软件测试]]