{{Multiple issues|{{Expand language|1=en|status=yes|time=2021-10-13T11:10:05+00:00}}}}
{{noteTA
|G1=IT
|G2=FL
|1=zh-hans:语法分析器; zh-hant:剖析器;
|2=zh-tw:架構; zh-cn:框架;
}}
{{about|程式設計語言|貨幣單位|菲律賓披索|出版社|PHP研究所}}
{{infobox_programming_language
| name                   = PHP
| logo                   = PHP-logo.svg
| logo_size              = 200px
| designer               = [[拉斯姆斯·勒多夫|拉斯姆斯·勒多夫]]
| developer              = The PHP Group
| influenced             = [[Hack_(程式語言)|Hack]]、[[JSP|JSP]]、[[Active_Server_Pages|ASP]]
| influenced_by          = [[Perl|Perl]]、[[HTML|HTML]]、[[C語言|C]]、[[C++|C++]]、[[Java|Java]]、[[JavaScript|JavaScript]]、[[Hack_(程式語言)|Hack]]

| released = {{start date and age|1995}}<ref name="mysqlconference">{{cite web | last=Lerdorf | first=Rasmus | title=PHP on Hormones – history of PHP presentation by Rasmus Lerdorf given at the MySQL Conference in Santa Clara, California | date=2007-04-26 | access-date=2009-12-11 | publisher=The Conversations Network | url=http://itc.conversationsnetwork.org/shows/detail3298.html | archive-date=2019-01-06 | archive-url=https://web.archive.org/web/20190106230504/http://web.archive.org/web/20130729204354id_/http://itc.conversationsnetwork.org/shows/detail3298.html }}</ref>

| latest_release_version = {{wikidata|property|reference|edit|Q59|P548=Q2804309|P348}}
| latest_release_date    = {{wikidata|qualifier|single<!-- + "|single" to fix issue found at https://en.wikipedia.org/w/index.php?title=Wikipedia:Village_pump_(technical)&diff=988734072&oldid=988671342 2020-11-14 - undo this if a better fix is found -->|P348|P577}}
| operating_system       = [[跨平台|跨平台]]
| paradigm               = [[物件導向|物件導向]]、[[指令式編程|指令式編程]]
| typing                 = 動態、弱型別
| license                = [[PHP许可证|PHP许可证]]
| website                = {{official URL}}
}}
'''PHP'''（全称：'''P'''HP：'''H'''ypertext '''P'''reprocessor，即“PHP：超文本预处理器”）是一种[[开源|开源]]的通用[[计算机|计算机]][[脚本语言|脚本语言]]，尤其适用于[[网络开发|网络开发]]并可嵌入[[HTML|HTML]]中使用。PHP的语法借鉴吸收[[C语言|C语言]]、[[Java|Java]]和[[Perl|Perl]]等流行计算机语言的特点，易于一般[[程序员|程序员]]学习。PHP的主要目标是允许网络开发人员快速编写[[动态页面|动态页面]]，但PHP也被用于其他很多领域。<ref>{{cite web|url = https://php.net/manual/zh/preface.php|title = PHP：序言|accessdate = 2013-05-13|archive-date = 2013-08-06|archive-url = https://web.archive.org/web/20130806214935/http://www.php.net/manual/zh/preface.php|dead-url = no}}</ref>

PHP最初是由[[拉斯姆斯·勒多夫|勒多夫]]在1995年开始开发的；現在PHP的標準由the PHP Group<ref>{{cite web |url = https://php.net/credits.php |title = the PHP Group |accessdate = 2015-07-24 |archive-date = 2015-07-24 |archive-url = https://web.archive.org/web/20150724115934/http://php.net/credits.php |dead-url = no }}</ref>維護。PHP以PHP License作為許可協議，不過因為這個協議限制了PHP名稱的使用，所以和[[開放原始碼|開放原始碼]]許可協議[[GPL|GPL]]不相容。<ref>{{cite web | title = GPL-Incompatible, Free Software Licenses | url = https://www.fsf.org/licensing/licenses/index_html#GPLIncompatibleLicenses | work = Various Licenses and Comments about Them | publisher = Free Software Foundation | accessdate = 2008-02-22 | deadurl = yes | archiveurl = https://web.archive.org/web/20081216005913/http://www.fsf.org/licensing/licenses/index_html#GPLIncompatibleLicenses | archivedate = 2008-12-16 }}</ref>

PHP的應用範圍相當廣泛，尤其是在網頁程式的開發上。一般來說PHP大多執行在網頁伺服器上，通過執行PHP程式碼來產生使用者瀏覽的網頁。PHP可以在多數的伺服器和作業系統上執行。根據2013年4月的統計資料，PHP已經被安裝在超過2億4400萬個網站和210萬台伺服器上<ref>{{cite web|url=https://php.net/usage.php|title=Usage Stats for April 2007|accessdate=2015-02-26|archive-date=2015-03-01|archive-url=https://web.archive.org/web/20150301034540/http://php.net/usage.php|dead-url=no}}</ref>。

PHP在[[Microsoft_Windows|Windows]]上有专门的官方移植编译项目，并且分多个VC编译器版本和[[线程安全|线程安全]]特性来提供不同的版本支持。

根据W3Techs的报告，截至2021年9月：“有78.9%的网站使用PHP。”<ref>{{cite web |title=Usage statistics of PHP for websites |url=https://w3techs.com/technologies/details/pl-php |website=W3Techs - World Wide Web Technology Surveys |accessdate=2021-09-05}}</ref>

== 開發歷史 ==
{{更新|1=章節|time=2022-05-28T13:02:08+00:00}}
[[File:Andi_Gutmans_1.jpg|缩略图]]
[[File:Zeev_Suraski.jpg|缩略图]]

''PHP''原本的簡稱為Personal Home Page<ref>{{Cite web |url=https://php.net/history |title=php.net/history |accessdate=2018-08-12 |archive-date=2018-08-16 |archive-url=https://web.archive.org/web/20180816203427/http://php.net/history |dead-url=no }}</ref>，是[[拉斯姆斯·勒多夫|拉斯姆斯·勒多夫]]為了要維護個人網頁，而用C語言開發的一些[[通用网关接口|CGI]]工具程式集，來取代原先使用的[[Perl|Perl]]程式。最初這些工具程式用來顯示拉斯姆斯·勒多夫的個人履歷，以及統計網頁流量<ref name="history" />。他將這些程式和一些表單直譯器整合起來，稱為PHP/FI。PHP/FI可以和資料庫連接，產生簡單的動態網頁程式。拉斯姆斯·勒多夫在1995年6月8日將PHP/FI公開釋出，希望可以透過社群來加速程式開發與尋找錯誤<ref>{{cite newsgroup | title = Announce: Personal Home Page Tools (PHP Tools) | author = Lerdorf, Rasmus | date = 1995-06-08 | newsgroup = comp.infosystems.www.authoring.cgi | url = http://groups.google.com/group/comp.infosystems.www.authoring.cgi/msg/cc7d43454d64d133 | accessdate = 2006-09-17 | archive-date = 2006-09-03 | archive-url = https://web.archive.org/web/20060903201423/http://groups.google.com/group/comp.infosystems.www.authoring.cgi/msg/cc7d43454d64d133 | dead-url = no }}</ref>。這個釋出的版本命名為PHP 2，已經有今日PHP的一些雛型，像是類似[[Perl|Perl]]的變數命名方式、表單處理功能、以及嵌入到HTML中執行的能力。程式語法上也類似Perl，有較多的限制，不過更簡單、更有彈性。<ref name="history" />

在1997年，任職於Technion IIT公司的兩個[[以色列|以色列]]程式設計師：Zeev Suraski和Andi Gutmans，重寫了PHP的[[語法分析器|剖析器]]，成為PHP 3的基礎，而PHP也在這個時候改稱為''PHP: Hypertext Preprocessor''.<ref name="history">{{cite web|accessdate=2008-02-25|url=https://php.net/history|title=History of PHP and related projects|publisher=The PHP Group|archive-date=2008-07-08|archive-url=https://web.archive.org/web/20080708214256/http://www.php.net/history|dead-url=no}}</ref>。經過幾個月測試，開發團隊在1997年11月釋出了PHP/FI 2，隨後就開始PHP 3的開放測試，最後在1998年6月正式釋出PHP 3。Zeev Suraski和Andi Gutmans在PHP 3釋出後開始改寫PHP的核心，這個在1999年釋出的剖析器稱為[[Zend引擎|Zend Engine]]<ref>{{cite web | title = Zend Engine version 2.0: Feature Overview and Design | publisher = Zend Technologies Ltd. | url = http://www.zend.com/zend/zend-engine-summary.php | accessdate = 2006-09-17 | deadurl = yes | archiveurl = https://web.archive.org/web/20060719204721/http://www.zend.com/zend/zend-engine-summary.php | archivedate = 2006-07-19 }}</ref>，他們也在[[以色列|以色列]]的Ramat Gan成立了Zend Technologies來管理PHP的開發。<ref name="history" />

在2000年5月22日，以Zend Engine 1.0為基礎的PHP 4正式釋出，2004年7月13日則釋出了PHP 5，PHP 5則使用了第二代的Zend Engine<ref name="history" />。PHP 5包含了許多新特色，像是強化的[[物件導向|物件導向]]功能、引入PDO（PHP Data Objects，一個存取[[資料庫|資料庫]]的延伸函式庫）、以及許多效能上的增強<ref>{{cite web|title=Why PHP 5 Rocks!|url=http://www.onlamp.com/pub/a/php/2004/07/15/UpgradePHP5.html|publisher=O'Reilly|accessdate=2008-02-22|date=2004-07-15|author=Trachtenberg, Adam|archive-date=2016-03-31|archive-url=https://web.archive.org/web/20160331232050/http://www.onlamp.com/pub/a/php/2004/07/15/UpgradePHP5.html|dead-url=no}}</ref>。目前PHP 4已經不會繼續更新，以鼓勵用戶轉移到PHP 5。<ref name="2007 news">{{cite web|title=php.net 2007 news archive|url=https://php.net/archive/2007.php|publisher=The PHP Group|accessdate=2008-02-22|date=2007-07-13|archive-date=2019-04-07|archive-url=https://web.archive.org/web/20190407090314/https://www.php.net/archive/2007.php|dead-url=no}}</ref><ref>{{cite web|accessdate=2008-03-16|url=http://www.internetnews.com/dev-news/article.php/3725291|title=PHP 4 is Dead—Long Live PHP 5|publisher=InternetNews|date=2008-02-01|author=Kerner, Sean Michael|archive-date=2016-03-24|archive-url=https://web.archive.org/web/20160324024410/http://www.internetnews.com/dev-news/article.php/3725291|dead-url=no}}</ref>

2008年时，PHP 5成為了PHP唯一維護中的穩定版本。

PHP 7的首个版本于2015年12月3日開發完成，包含了大量性能上的改进，同时也带来了一些新特性，最值得注意的是返回值类型声明、标量类型声明（可用于参数及返回值）。

=== 版本歷程 ===
{| class="wikitable"
|-
!
! 代表意義
|-
| style="background-color:#fa8072;" | 紅色
| 过期版本；官方停止支援
|-
| style="background-color:#f0e68c;" | 黃色
| 当前版本；官方仅提供安全问题修复
|-
| style="background-color:#A0E75A;" | 綠色
| 当前版本；官方提供安全问题和一般问题的修复
|-
| style="background-color:#87CEEB;" | 藍色
| 未來版本
|}<!--
RELEASE HISTORY -->
{| class="wikitable"
! 版本 !! 釋出日期
!结束支持日期<ref>{{Cite web|url=https://php.net/eol.php|title=PHP: Unsupported Branches|accessdate=2016-06-17|work=php.net|archive-date=2019-05-15|archive-url=https://web.archive.org/web/20190515084927/https://www.php.net/eol.php|dead-url=no}}</ref>!! 說明
|-
| style="background-color:#fa8072;" | 1.0
|1995年6月8日
|
|正式名稱為"Personal Home Page Tools (PHP Tools)"，第一次使用了"PHP"的名字。<ref name="history" />
|-
| style="background-color:#fa8072;" | 2.0
|1996年4月16日
|
|針對PHP 1.0的改進版，速度更快、體積更小，更容易產生動態網頁。<ref name="history" />
|-
| style="background-color:#fa8072;" | 3.0
|1998年6月6日
|2000年10月20日
|開發方式改成多人共同參與。Zeev Suraski和Andi Gutmans為了這個版本重寫了剖析引擎。<ref name="history" />
|-
| style="background-color:#fa8072;" | 4.0
|2000年5月22日
|2001年6月23日
|改成以Zend引擎作為剖析器，具有兩階段剖析/標籤剖析系統等先進功能。<ref name="php4changelog">{{cite web|title=PHP: PHP 4 ChangeLog|url=https://php.net/ChangeLog-4.php|publisher=The PHP Group|accessdate=2008-02-22|date=2008-01-03|archive-date=2008-02-28|archive-url=https://web.archive.org/web/20080228034907/http://www.php.net/ChangeLog-4.php|dead-url=no}}</ref>
|-
| style="background-color:#fa8072;" | 4.1
|2001年12月10日
|2002年3月2日
|加入"超全域變數"（superglobals）功能，包含了<code>$_GET</code>、<code>$_POST</code>、<code>$_SESSION</code>等。<ref name="php4changelog" />
|-
| style="background-color:#fa8072;" | 4.2
|2002年4月22日
|2002年9月6日
|預設取消register_globals功能。從網路接收的資料將不會設定成全域變數，增加程式安全性。<ref name="php4changelog" />
|-
| style="background-color:#fa8072;" | 4.3
|2002年12月27日
|2005年3月31日
|加入命令列執行檔，稱為CLI，用以补充CGI<ref name="php4changelog" /><ref>{{Cite web|url=https://php.net/manual/en/features.commandline.php|title=PHP: Command line usage - Manual|accessdate=2016-06-17|work=php.net|archive-date=2016-06-26|archive-url=https://web.archive.org/web/20160626001700/http://php.net/manual/en/features.commandline.php|dead-url=no}}</ref>
|-
| style="background-color:#fa8072;" | 4.4
|2005年7月11日
|2008年8月8日
|新增<code>phpize</code> 及 <code>php-config</code> 的手冊頁。<ref name="php4changelog" />
|-
| style="background-color:#fa8072;" | 5.0
|2004年7月13日
|2005年9月5日
|推出有着新的对象模型的Zend Engine II。<ref name="php5changelog">{{cite web|title=PHP: PHP 5 ChangeLog|url=https://php.net/ChangeLog-5.php|publisher=The PHP Group|accessdate=2008-02-22|date=2007-11-08|archive-date=2008-02-27|archive-url=https://web.archive.org/web/20080227234348/http://www.php.net/ChangeLog-5.php|dead-url=no}}</ref>
|-
| style="background-color:#fa8072;" | 5.1
|2005年11月24日
|2006年8月24日
|在往重新设计的PHP引擎引入编译变量时做了性能提升。<ref name="php5changelog" />添加了PHP数据对象（PDO）作为访问数据库的统一接口。<ref>{{Cite web|url=https://php.net/manual/en/intro.pdo.php|title=PHP: Introduction - Manual|accessdate=2016-06-17|work=php.net|archive-date=2016-07-03|archive-url=https://web.archive.org/web/20160703021418/http://php.net/manual/en/intro.pdo.php|dead-url=no}}</ref>
|-
| style="background-color:#fa8072;" | 5.2
|2006年11月2日
|2011年1月6日
|預設開啟"過濾"的擴充功能。<ref name="php5changelog" />原生的JSON支援。<ref>{{Cite web|url=https://php.net/ChangeLog-5.php|title=PHP: PHP 5 ChangeLog|accessdate=2016-06-17|work=www.php.net|archive-date=2016-06-17|archive-url=https://web.archive.org/web/20160617035558/http://php.net/ChangeLog-5.php|dead-url=no}}</ref>
|-
| style="background-color:#fa8072;" | 5.3
|2009年6月30日<ref name="PHP5_3_0">{{Cite web |url=https://php.net/archive/2009.php#id2009-06-30-1 |title=存档副本 |accessdate=2018-08-12 |archive-date=2018-08-11 |archive-url=https://web.archive.org/web/20180811165936/http://php.net/archive/2009.php#id2009-06-30-1 |dead-url=no }}</ref>
|2014年8月14日
|支持[[命名空间|命名空间]];使用XMLReader和XMLWriter增强XML支持;支持SOAP ,<ref>{{Cite web |url=http://devzone.zend.com/node/view/id/2739 |title=Zend Weekly Summaries Issue #359 |accessdate=2008-12-16 |archive-date=2009-01-03 |archive-url=https://web.archive.org/web/20090103215043/http://devzone.zend.com/node/view/id/2739 |dead-url=no }}</ref>延迟静态绑定，跳转标签（有限的[[goto|goto]]）, [[闭包_(计算机科学)|闭包]]，Native PHP archives。
|-
| style="background:#fa8072;" | 5.4
|{{nowrap|2012年3月1日}}
|2015年9月3日
| 支持[[Trait|Trait]]、简短数组表达式。移除了<code>register_globals</code>, <code>safe_mode</code>, <code>allow_call_time_pass_reference</code>, <code>session_register()</code>, <code>session_unregister()</code>, <code>magic_quotes</code>以及<code>session_is_registered()</code>。加入了内建的Web服务器。<ref>{{cite web |url=https://php.net/manual/en/features.commandline.webserver.php |title=Built-in web server |accessdate=2012-03-26 |archive-date=2012-03-20 |archive-url=https://web.archive.org/web/20120320093926/http://php.net/manual/en/features.commandline.webserver.php |dead-url=no }}</ref>增强了性能，减小内存使用量。
|-
| style="background:#fa8072;" | 5.5
|{{nowrap|2013年6月20日}}
|2016年7月10日
| 支持generators，用于异常处理的finally ，将OpCache（基于 Zend Optimizer+）加入官方发布中。
|-
| style="background:#fa8072;" | 5.6
|{{nowrap|2014年8月28日}}
|2018年12月31日
| 支持常量标量表达式、可变参数函数、指数运算符，增加phpdbg SAPI、统一的默认字符集。<ref>{{Cite web |url=https://php.net/ChangeLog-5.php#5.6.0 |title=PHP: PHP 5 Changelog |accessdate=2018-08-12 |archive-date=2018-08-13 |archive-url=https://web.archive.org/web/20180813225846/http://php.net/ChangeLog-5.php#5.6.0 |dead-url=no }}</ref>
|-
| style="background:"| 6.x
| {{n/a|未发布}}
| {{n/a}}
| 取消掉的、从未正式发布的PHP版本。<ref>{{cite web|url=https://lwn.net/Articles/379909/|title=Resetting PHP 6|quote=There have been books on the shelves purporting to cover PHP 6 since at least 2008. But, in March 2010, the PHP 6 release is not out - in fact, it is not even close to out. Recent events suggest that PHP 6 will not be released before 2011 - if, indeed, it is released at all.|accessdate=2015-07-24|archive-date=2015-07-24|archive-url=https://web.archive.org/web/20150724120837/https://lwn.net/Articles/379909/|dead-url=yes}}</ref><ref>{{cite web|url=http://www.infoworld.com/article/2841561/php/php-7-moves-full-speed-ahead.html|title=PHP 7 moves full speed ahead|quote=Recent versions of PHP have been part of the 5.x release series, but there will be no PHP 6. “We’re going to skip [version] 6 because years ago, we had plans for a 6 but those plans were very different from what we’re doing now,” Gutmans said. Going right to version 7 avoids confusion.|accessdate=2015-07-24|archive-date=2015-07-24|archive-url=https://web.archive.org/web/20150724121529/http://www.infoworld.com/article/2841561/php/php-7-moves-full-speed-ahead.html|dead-url=no}}</ref>
|-
| style="background:#fa8072;"| 7.0
| 2015年12月3日<ref>{{cite web|url=https://wiki.php.net/todo/php70#timetable|title=PHP: todo:php70|accessdate=2015-06-01|date=2015-05-27|archive-date=2015-06-21|archive-url=https://web.archive.org/web/20150621221929/https://wiki.php.net/todo/php70#timetable|dead-url=no}}</ref>
|2018年12月3日
| Zend Engine 3 (性能提升<ref>{{Cite web|url=https://wiki.php.net/phpng|title=PHP: phpng|accessdate=2016-06-17|work=wiki.php.net|archive-date=2016-06-16|archive-url=https://web.archive.org/web/20160616090410/https://wiki.php.net/phpng|dead-url=no}}</ref>并在Windows上支持 64-bit 整数)，统一的变量语法， 

基于抽象语法树编译过程。
|-
|style="background-color:#fa8072;" | 7.1
|2016年12月1日
|2019年12月1日
|void返回值类型，类常量可见性修饰符
|-
|style="background-color:#fa8072;" | 7.2
|2017年11月30日
|2020年11月30日
|
|-
|-
|style="background-color:#fa8072;" | 7.3
|2018年12月6日
|2021年12月6日
|
|-
|-
|style="background-color:#f0e68c;" | 7.4
|2019年11月28日
|2022年11月28日
| 属性添加限定类型、箭头函数、空合并运算符赋值、数组展开操作

|-

|-
|style="background-color:#A0E75A;" | 8.0
|2020年11月26日
|2023年11月26日
| JIT即时编译，增加命名参数，注解实现，构造器属性提升，联合类型，Match 表达式，Nullsafe 运算符，字符串与数字的比较更符合逻辑，内部函数类型错误的一致性。
|-

|-
|style="background-color:#A0E75A;" | 8.1
|2021年11月25日
|2024年11月25日
|
|-

|}

== {{Anchor|ELEPHPANT}}吉祥物 ==
[[File:Webysther_20160423_-_Elephpant.svg|缩略图]]

PHP計畫的吉祥物名叫「elePHPant」，PHP的logo在一頭藍象的裡面，由文森·龐蒂爾(Vincent Pontier)<ref>{{cite web|title=PHP: ElePHPant|url=https://php.net/elephpant.php|date=2014-10-04|accessdate=2014-10-04|archive-date=2014-10-04|archive-url=https://web.archive.org/web/20141004212322/http://php.net/elephpant.php|dead-url=no}}</ref>在1998年<ref>{{cite web|url=https://wwphp-fb.github.io/faq/community/elephpant/|title=What is ElePHPant and Why PHP Uses Elephants in Some Logotypes?|publisher=|accessdate=2017-09-30|archive-date=2017-02-14|archive-url=https://web.archive.org/web/20170214195812/https://wwphp-fb.github.io/faq/community/elephpant/|dead-url=yes}}</ref>設計。其設計概念是從側面看 PHP 像隻大象<ref>{{cite web|url=https://7php.com/elephpant/|title=The PHP Mascot's Birth - Creator Of The elePHPant Vincent Pontier Reveals The True Story!|publisher=|accessdate=2018-08-13|archive-date=2018-08-13|archive-url=https://web.archive.org/web/20180813210404/https://7php.com/elephpant/|dead-url=no}}</ref>。當elePHPant被製作成[[毛絨玩具|毛絨玩具]]時，有時顏色會有不同。

{{clear}}

== 應用 ==
[[File:WebSite-PHP_Schema_MVC.png|220px]]
PHP是一個應用範圍很廣的語言，特別是在網路程式開發方面。一般來說PHP大多在伺服器端執行，透過執行PHP的程式碼來產生網頁提供瀏覽器讀取，此外也可以用來開發命令列腳本程式和使用者端的GUI應用程式。PHP可以在許多的不同種的伺服器、作業系統、平台上執行，也可以和許多[[資料庫|資料庫系統]]結合。使用PHP不需要任何費用，官方組織PHP Group提供了完整的-{zh-hans:程序源代码;zh-hant:程式原始碼;}-，允許使用者修改、編譯、擴充來使用。<ref name="foundations">{{cite web|accessdate=2008-02-25|url=http://www.onlamp.com/pub/a/php/2001/05/03/php_foundations.html|title=Embedding PHP in HTML|publisher=O'Reilly|date=2001-05-03|archive-date=2008-02-19|archive-url=https://web.archive.org/web/20080219180226/http://www.onlamp.com/pub/a/php/2001/05/03/php_foundations.html|dead-url=no}}</ref>

== 安全 ==
据[[National_Vulnerability_Database|National Vulnerability Database]]数据显示，与PHP有关的数据库攻击比例为：20% 2004, 28% 2005, 43% 2006, 36% 2007, 35% 2008 and 32% 2009<ref>{{cite web|title=PHP-related vulnerabilities on the National Vulnerability Database|url=http://www.coelho.net/php_cve.html|date=2008-03-01|accessdate=2009-08-20|archive-date=2009-06-28|archive-url=https://web.archive.org/web/20090628173101/http://www.coelho.net/php_cve.html|dead-url=no}}</ref>。其中很多的漏洞都可以通过远程操作完成，如：[[黑客|黑客]]可以通过网络连接攻击服务器，达到盗取或毁坏数据，发送[[垃圾邮件|垃圾邮件]]或进行[[分散式阻斷服務攻擊|分散式阻斷服務攻擊]]。但是随着更多的关注，PHP也变得越来越安全了。

=== PHP官网被駭入事件 ===
2010年12月17日，PHP代码“贡献者名单”中被加入“[[中式英语|Wolegequ Gelivable]]”字样（中文含义“我勒个去 给力”），约半小时后被删除。<ref>[http://svn.php.net/viewvc/php/php-src/trunk/ext/standard/credits.c?r1=305420&r2=306409]{{失效链接}}</ref><ref>{{Cite web |url=http://www.h-online.com/open/news/item/PHP-developer-wiki-server-hacked-1211874.html |title=PHP developer wiki server hacked |accessdate=2013-12-28 |archive-date=2013-12-28 |archive-url=https://web.archive.org/web/20131228124521/http://www.h-online.com/open/news/item/PHP-developer-wiki-server-hacked-1211874.html |dead-url=no }}</ref><ref>{{Cite web |url=http://www.i-mz.net/posts/2011/03/1671.html |title=PHP官方网站被入侵，近期请勿从官方下载源码 |access-date=2013-12-28 |archive-url=https://web.archive.org/web/20131228175848/http://www.i-mz.net/posts/2011/03/1671.html |archive-date=2013-12-28 |dead-url=yes }}</ref>2011年3月19日，PHP官方发布声明<ref>{{Cite web |url=https://php.net/archive/2011.php#id2011-03-19-2 |title=存档副本 |accessdate=2018-08-12 |archive-date=2018-08-13 |archive-url=https://web.archive.org/web/20180813190209/http://php.net/archive/2011.php#id2011-03-19-2 |dead-url=no }}</ref>指出，黑客可能是通过wiki.php.net作为入口攻击了代码系统。并且，官方已经检查过自版本5.3.5以来釋出的代码，并没有发现恶意内容。但官方同时表示，尚未完全掌握黑客发动本次攻击的具体细节。

== 語法 ==
PHP的語法參考了[[Perl|Perl]]、[[C語言|C語言]]，而且可以整合在[[HTML|HTML]]之中，以下是一個簡單的[[Hello_World|Hello World]]程式碼：
<syntaxhighlight lang="php">
 <?= 'Hello World!'; ?>
</syntaxhighlight>

PHP剖析引擎只剖析'''<?php'''到'''?>'''之間的程式碼，而不包含在'''<?php'''到'''?>'''之間的內容則會直接送出，所以可以用以下的方式來將PHP程式碼嵌入在HTML之中：
<syntaxhighlight lang="php">
 <?php
     //-PHP-{zh-hans:代码;zh-hant:程式碼：}-
 ?>
 html內容
 <?php
     //-PHP-{zh-hans:代码;zh-hant:程式碼：}-
 ?>
</syntaxhighlight>

在HTML中嵌入PHP时，比如需要單獨输出某個變數，除了正常採用 echo 方式外，也可以直接採用下列方式：

<syntaxhighlight lang="php">
 <?=$title?>
</syntaxhighlight>

但是上述這種方式曾經引起爭議，有的人並不推薦這種方式的縮寫<ref>[http://stackoverflow.com/questions/14188397/why-are-echo-short-tags-permanently-enabled-as-of-php-5-4] {{Wayback|url=http://stackoverflow.com/questions/14188397/why-are-echo-short-tags-permanently-enabled-as-of-php-5-4 |date=20150414121236 }}，Why are “echo” short tags permanently enabled as of PHP 5.4?</ref>（其原因為：並不是所有伺服器都支援縮寫，但在後期之後此選項為預設開啟），也有人因為採用這種方法，造成與 XML 搞混<ref>[http://stackoverflow.com/questions/10457409/escaping-on-php-shorthand-enabled-server-when-using-require] {{Wayback|url=http://stackoverflow.com/questions/10457409/escaping-on-php-shorthand-enabled-server-when-using-require |date=20150510034725 }}，Escaping <? on php shorthand enabled server when using require</ref>的情況。

在判斷語句中的HTML代碼並不會被直接送出：
<syntaxhighlight lang="php">
 <?php
 if (false) {
 ?>
 HTML Code
 <?php
 }
 ?>
</syntaxhighlight>

PHP可以用三種註解的形式：C與C++所使用的「/*...*/」與「//」，和Perl的「#」。
<syntaxhighlight lang="php">
 <?php
 /* 多行註解的第一行
 多行註解的另一行 */

 // 單行註解

 # 單行註解
 ?>
</syntaxhighlight>

=== 類型 ===

PHP主要有八种基本数据类型<ref>[https://php.net/manual/en/language.types.php Types Introduction] {{Wayback|url=https://php.net/manual/en/language.types.php |date=20180807091758 }}，The PHP Group</ref>，其中包括：

* 四種[[变量|变量]]類型
** [[整数_(计算机科学)|整數型]]（integer）
** [[浮点数|浮點數型]]（float）
** [[布尔型|布尔型]]（boolean）
** [[字符串|字符串]]（string）
* 兩種[[複合類型|複合類型]]
** [[陣列|陣列]]（array）
** [[对象_(计算机科学)|对象]]（object）
* 兩種特殊類型
** [[Null_(编程)|NULL]]
** 資源 （resource）

=== 變數 ===
PHP中，[[變數|變數]]以「$」後接变量名稱來表示。 變數名稱區分大小寫。

有效的變數名稱以字母或底線開頭，後接任意數目的字母、數字或底線，PHP也支持使用多字节文字作为變數名。<ref>[https://php.net/manual/en/language.variables.php Language variables] {{Wayback|url=https://php.net/manual/en/language.variables.php |date=20180813214249 }}，The PHP Group</ref>

=== 物件導向 ===
PHP從PHP 3開始有了基本的[[物件導向|物件導向]]（Object oriented）的特性，但直到PHP 5將物件導向部份重新改寫之後，PHP的物件導向功能才比較完善。現在PHP可以說是一個有完整物件導向功能的語言。

== PHP相關資源 ==

=== PHP框架 ===
{{main|PHP框架列表}}
使用PHP框架可以更快更简单的部署项目並提高开发效率，但学习使用这些框架需要付出额外的学习成本。

最流行的PHP框架包括：[[Symfony|Symfony]], [[Zend_Framework|Zend Framework]], [[Laravel|Laravel]]、[[Phalcon|Phalcon]]、[[CodeIgniter|CodeIgniter]]、[[Yii|Yii]]、[[ThinkPHP|ThinkPHP]]等等。

=== 函式庫 ===
內建多樣化的函數是PHP主要的特點之一，這些開放程式碼的函數提供了各種不同的功能，例如-{zh-hans:文件; zh-hant:檔案;}-處理、[[FTP|FTP]]、-{zh-hans:字符串;zh-hant:字串;}-處理、等等。這些函數的使用方法和[[C語言|C語言]]相近（例如<tt>printf</tt>），這也是PHP廣為流行的原因之一。

除了內建的函數之外，PHP也提供了很多-{zh-cn:扩展;zh-tw:延伸;}-函式庫（extension），像是各種[[資料庫|資料庫]]連接函數、[[資料壓縮|資料壓縮]]函數、圖形處理等等。有些延伸函式庫需要從[[PECL|PECL]]（PHP Extension Community Library）取得。

以下是'''PHP'''程式語言提供的函式庫列表

{{col-begin}}
{{col-break}}
* [[Apache_HTTP_Server|Apache]]
* [[BCMath|BCMath]]
* [[Bzip2|Bzip2]]
* [[Calendar|Calendar]]s
* [[CCVS|CCVS]]
* [[COM|COM]]
* [[ClibPDF|ClibPDF]]
* [[cURL|cURL]]
* [[Cybercash|Cybercash]]
* [[IBM_DB2|DB2]]
* [[dBase|dBase]]
* [[DBM|DBM]]
* [[dbx|dbx]]
* [[DBpp|DB++]]
* [[Document_Object_Model|DOM XML]]
* [[.NET_Framework|.NET]]
* [[FileMaker_Pro|FileMaker Pro]]
* [[FrontBase|FrontBase]]
* [[filePro|filePro]]
* [[GNU_FriBidi|FriBiDi]]
* [[File_transfer_protocol|FTP]]
* [[Gettext|Gettext]]
* [[GD_Graphics_Library|GD Graphics Library]]
* [[GNU_Multi-Precision_Library|GNU Multi-Precision Library]]
* [[Hyperwave|Hyperwave]]
* [[iconv|iconv]]
* [[Internet_Message_Access_Protocol|IMAP]]，[[Post_Office_Protocol|POP3]] and [[Network_News_Transfer_Protocol|NNTP]]

{{col-break}}
* [[Informix|Informix]]
* [[Ingres|Ingres]] II
* [[InterBase|InterBase]]
* [[Internet_Relay_Chat|IRC]]

* [[Lightweight_Directory_Access_Protocol|LDAP]]
* [[Lotus_Notes|Lotus Notes]]
* [[mailparse|mailparse]]
* [[MCAL|MCAL]]
* [[Mcrypt|Mcrypt]]
* [[MCVE|MCVE]]
* [[Mhash|Mhash]]
* [[MIME_type|MIME]] Functions
* [[MS-SQL|MS-SQL]]
* [[Ming_(PHP_Module)|Ming]]
* [[mnoGoSearch|mnoGoSearch]]
* [[mSQL|mSQL]]
* [[MySQL|MySQL]]
* [[Mowhawk|Mowhawk]]
* [[muscat_(PHP)|muscat]]
* [[Ncurses|Ncurses]]
* [[Open_Database_Connectivity|ODBC]]
* [[Oracle_database|Oracle]]
* [[OpenSSL|OpenSSL]]
* [[Ovrimos_SQL|Ovrimos SQL]]
* [[Portable_Document_Format|PDF]]
* [[PayFlow_Pro|PayFlow Pro]]
* [[PHP_Data_Objects|PDO]]
* [[POSIX|POSIX]]

{{col-break}}
* [[PostgreSQL|PostgreSQL]]
* [[Computer_printer|Printer]]
* [[Pspell|Pspell]]
* [[GNU|GNU]] [[Readline|Readline]]
* GNU [[Recode|Recode]]
* [[Regular_expressions|Regular expressions]]
* [[QT-Dom|QT-Dom]]
* [[Semaphore_(programming)|Semaphores]]
* [[SESAM|SESAM]]
* [[Session_(computer_science)|Session]] Handling
* [[Shared_memory|Shared memory]]
* [[Simple_Mail_Transfer_Protocol|SMTP]]
* [[Simple_Network_Management_Protocol|SNMP]]
* [[Socket|Socket]]s
* [[SimpleXML|SimpleXML]]
* [[SQLite|SQLite]]
* [[Stream|Stream]]s
* [[Sybase|Sybase]]
* [[Token|Token]]
* [[vpopmail|vpopmail]]
* [[WDDX|WDDX]]
* [[Windows_API|Win32 API]]
* [[XML|XML]]（[[Xpath|Xpath]]）
* [[XML-RPC|XML-RPC]]
* [[XSLT|XSLT]]
* [[YAZ|YAZ]]
* [[Yellow_Page|Yellow Page]]s / [[網路資訊服務|網路資訊服務]]（NIS）
* [[ZIP_file_format|ZIP]]
* [[Zlib|Zlib]]
{{col-end}}

=== 原始碼編碼和加速 ===
{{see also|PHP加速軟件}}
PHP原始碼是可以直接讀取的，即使放到伺服器上執行也是一樣。雖然讓PHP多了彈性，但相對的會造成安全危機和性能下降的問題。

透過PHP編碼器，可以保護PHP的原始碼不被讀取（對商業軟體來說特別有需求），也可以提昇執行的效能。有許多公司或團體開發PHP的編碼器，將PHP程式編譯成[[位元組碼|位元組碼]]（byte code），再透過伺服器上安裝對應的程式來執行PHP腳本。

除了透過編碼器加速之外，PHP還可以透過動態的快取機制來提昇速度，加速工具有商業版的，例如{{lang|en|Zend Platform}}，也有開放原始碼的[[PHP加速軟件|加速軟體]]如[[eAccelerator|eAccelerator]]、[[Alternative_PHP_Cache|APC]]、[[XCache|XCache]]。

=== php包管理器 ===
Composer是php社区用来管理依赖关系的工具，一般在php项目中通过composer.json声明依赖的外部php库，然后就可以使用Composer管理包依赖。

== PHP編譯器 ==
PHP一直被當作[[直譯器|直譯器]]使用。PHP編譯器則將PHP從直譯器中分離，為加快運行和改善與以其他程式語言編寫部份的互通性，例如[[Phalanger|Phalanger]]將PHP編譯成[[通用中间语言|通用中间语言]]和[[Hiphop_for_PHP|Hiphop for PHP]]把PHP[[原始碼|原始碼]]編譯成[[C++|C++]]等。[[Facebook|Facebook]]因應其網站大量的使用者，整合了HPHPc、HPHPi、HPHPd以及HHVM這四種[[腳本引擎|腳本引擎]]，開發出[[HipHop_for_PHP|HipHop for PHP]]，以加強網站效能。

== 發展 ==

=== PHP 7 ===
* 基于[[PHPNG|PHPNG]]项目（PHP Next-Gen），它能让透明提升PHP程序性能，使PHP7的性能和[[HHVM|HHVM]]相当
* [[JIT|JIT]]引擎
* 抽象语法树编译 AST: Abstract Syntax Tree
* 异步编程

== 彩蛋 ==
PHP含有多個[[彩蛋_(視覺)|彩蛋]]，可以透過在[[網域名稱|網域名稱]]的後面加上特殊字串顯示彩蛋。例如，<code>?=PHPE9568F36-D428-11d2-A769-00AA001ACF42</code>則會出現PHP的logo，PHP版本的不同，logo也會不同；不过该特性已经在5.5版本中被移除<ref>{{Cite web |url=https://php.net/manual/en/ini.core.php#ini.expose-php |title=expose_php |accessdate=2018-08-12 |archive-date=2018-08-13 |archive-url=https://web.archive.org/web/20180813222248/http://php.net/manual/en/ini.core.php#ini.expose-php |dead-url=no }}</ref>。

== 趣聞 ==
PHP程式語言的官方文档中曾写过「PHP是最好的WEB开发語言，那其他的语言如何呢？」，但是这句话被華語圈的[[程式設計師|程式設計師]]讹传为「世界上最好的语言」并加以调侃<ref>原文：{{lang|en|PHP is the best language for web programing, but what about other languages}}，{{Cite web|title=PHP: PHP and other languages - Manual|url=https://web.archive.org/web/20100507024455/https://php.net/manual/fa/faq.languages.php|work=web.archive.org|date=2010-05-07|accessdate=2019-02-21}}</ref>。{{Citation needed}}

== 註釋 ==
{{NoteFoot}}

== 參考文獻 ==
=== 引用 ===
{{Reflist|30em}}

=== 来源 ===
; 网页
* [https://php.net/manual/zh/index.php PHP手冊]{{Wayback|url=https://php.net/manual/zh/index.php |date=20180812120450 }}
* [https://php.net/manual/zh/funcref.php 函数参考]{{Wayback|url=https://php.net/manual/zh/funcref.php |date=20180902160305 }}

== 外部連結 ==
{{Sister_project_links|wikt=no|commons=Category:PHP|n=no|q=no|s=no|b=PHP}}
* {{official_website|https://php.net/}}
* {{dmoz|Computers/Programming/Languages/PHP}}
* [https://wiki.php.net PHP wiki]{{Wayback|url=https://wiki.php.net/ |date=20150527095229 }}
* [https://php.net/manual PHP参考手册]{{Wayback|url=https://php.net/manual |date=20180214115222 }}
* [https://www.ytyzx.org/index.php/%E5%9C%A8CentOS7%E4%B8%8B%E5%AE%89%E8%A3%85PHP7 CentOS下安装PHP7]{{Wayback|url=https://www.ytyzx.org/index.php/%E5%9C%A8CentOS7%E4%B8%8B%E5%AE%89%E8%A3%85PHP7 |date=20190217122924 }}
* [https://www.ltsplus.com/linux/rhel-rocky-linux-oracle-linux-install-multiple-php Rocky Linux 8 安裝多個 PHP 版本] {{Wayback|url=https://www.ltsplus.com/linux/rhel-rocky-linux-oracle-linux-install-multiple-php |date=20220222060412 }}

{{PHP}}
{{網頁技術與標準}}
{{程序設計語言|PHP}}

{{Authority_control}}

[[Category:PHP|]]
[[Category:LAMP|Category:LAMP]]
[[Category:跨平台軟體|Category:跨平台軟體]]
[[Category:面向文本编程语言|Category:面向文本编程语言]]
[[Category:基于类的编程语言|Category:基于类的编程语言]]
[[Category:1995年建立的程式語言|Category:1995年建立的程式語言]]