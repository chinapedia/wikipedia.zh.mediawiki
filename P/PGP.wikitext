{{noteTA|G1=IT}}
{{RoughTranslation}}
{{Infobox Software
|name = <span lang="en">PGP</span>
|screenshot = [[File:PGP.gif|File:PGP.gif]]
|caption = PGP软件截图（[[Windows|Windows]]）
|developer = [[菲爾·齊默爾曼|菲爾·齊默爾曼]]
|proprietary owner = [[PGP_Corporation|PGP Corporation]]
|genre = [[密码学|密码学]]
|website = [http://www.pgp.com/ pgp.com]
}}
{{Internet_security_protocols}}
'''PGP'''（{{lang-en|Pretty Good Privacy}}，直譯：'''优良保密协议'''）是一套用于[[讯息|讯息]]加密、验证的应用程式。

PGP的主要开发者是[[菲尔·齐默曼|菲尔·齐默曼]]。齐默曼于1991年将PGP在互联网上免费发布。PGP本身是商业应用程序；[[开源软件|开源]]并具有同类功能的工具名为[[GnuPG|GnuPG]]（GPG）。PGP及其同类产品均遵守[[#OpenPGP|OpenPGP]]数据加解密标准（RFC 4880）。

== PGP加密如何工作 ==
PGP[[加密|加密]]由一系列[[加密散列函数|散列]]、[[数据压缩|数据压缩]]、[[对称密钥加密|对称密钥加密]]，以及[[公钥加密|公钥加密]]的算法组合而成。每个步骤均支持几种[[算法|算法]]，用户可以选择一个使用。每个公钥均绑定一个用户名和/或者[[E-mail|E-mail]]地址。该系统的最初版本通常称为可信网或[[X.509|X.509]]系统；[[X.509|X.509]]系统使用的是基于[[数字证书认证机构|数字证书认证机构]]的分层方案，该方案后来被加入到PGP的实现中。当前的PGP加密版本通过一个自动密钥管理服务器来进行密钥的可靠存放。<ref>{{cite web|title=PGP如何運作?|url=http://jedi.org/blog/archives/002592.html|accessdate=2016-11-02|date=2003-05-09|work=Jedi's BLOG|language=zh-tw|archiveurl=https://web.archive.org/web/20160314083218/http://jedi.org/blog/archives/002592.html|archivedate=2016-03-14|dead-url=no}}</ref>

=== 兼容性 ===
[[File:PGP_diagram_zh-CN.svg|500px]]

随着PGP的发展，支持更新功能和算法的版本能够创建旧PGP系统无法解密的加密消息，即使使用有效的私钥也是如此。因此，PGP通信中的伙伴必须了解彼此的能力或至少就PGP设置达成一致。

=== 机密性 ===
PGP可用于发送机密消息。为此，PGP结合了对称密钥加密和公钥加密。PGP使用对称加密算法对消息进行加密，该算法需要对称密钥。每个对称密钥也称为会话密钥仅被使用一次。消息及其会话密钥被发送到接收方。 会话密钥必须被发送给接收方以解密消息，但是为了在传输过程中保护它，它使用接收方的公钥进行加密。只有属于接收方的私钥才能解密会话密钥。

=== 数字签名 ===
PGP支持消息身份认证和完整性检查。后者被用来检查消息在传输过程中是否被修改过（即验证'''消息完整性'''），而消息身份认证则是被用来决定消息是否由声称为发送者的个人或实体发出（即[[数字签名|数字签名]]验证）。由于消息的内容是加密的，因此更改任何消息中的内容都将导致密钥解密失败。在PGP中，这些特性默认是和消息加密同时开启的，而且同样可以被应用到[[明文|明文]]的验证。发送者只需使用PGP为消息建立一个数字签名（签名算法采用[[RSA加密演算法|RSA]]或[[数字签名算法|DSA]]）。具体步骤为：PGP以数据或信息建立一个散列（参见[[消息摘要|消息摘要]]），然后使用发送者的私钥利用散列生成数字签名。

=== 信赖网路 ===
不管是在加密消息时还是在验证签名时，都需要注意用来发送消息的公钥是否确实属于期望的接收者。简单的从某个位置下载一个公钥是没有保障的，故意（或偶然）的假冒是有可能发生的。PGP从它的第一个版本起，在'[[身份证书|身份证书]]'中发布用户公钥，身份证书也是以加密方式构造的，所以任何的篡改或意外的变动都可以被迅速的检测出来。但是仅仅有一个任何对于证书的修改都会被检测出来的机制不够的，这样的检测机制只能在证书创建之后用于避免篡改，而不是创建之前。用户还必须用某种形式确保证书中的公钥真正的属于特定的人/实体。从第一个发行版开始，PGP产品就包含一个内部的'审查方案'来协助它，一个被叫做[[信任网络|信赖网路]]（GOOGLE)# 的信任模型。对于一个给定的公钥（具体来说就是一个用户名到对应其密钥的绑定信息）可以被第三方用户数字签名，来证明某人（实指用户名）和一个密钥的关联，而该签名中包含对该关联不同程度的信任度。虽然有许多程序都会读写这个信息，而只有少数会通过信任度来决定是否信任一个密钥。

信赖网路协议在1992年的PGP 1.0手册中被[[菲利普·齐默曼|菲利普·齐默曼]]（Christal Danti）首次提及并描述为：

{{quotation|随着时间的推移，您将积累来自其他人的密钥，您可能希望将其指定为可信赖的介绍人。每个人都会选择自己值得信赖的介绍人。每个人都会逐渐积累并用他们的钥匙分发来自其他人的一系列认证签名，期望任何接收它的人都会至少信任一个或两个签名。这将形成一个针对所有公钥的容错信任网。}}

信赖网路机制比[[S/MIME|S/MIME]]方案的集中管理的[[公钥基础设施|公钥基础设施]]有优势，但是没有被网络普通大众普遍采用，一般只在[[Unix|Unix-like]]的爱好者、[[開源軟體|開源軟體]]界、和对隐私特別注意而且有电脑知识的人群之间使用。如何使一般用户容易并且乐意使用、接收证书然后手动的验证它们的有效性，这些潜在的推广阻碍目前还没有满意的解决方案。

=== 证书 ===
在最近的OpenPGP规范里，信任签名可被用于支持受信任的[[证书颁发机构|证书颁发机构]]，一个信任签名表示公钥属于其声明的所有者，并且公钥的所有者签署的下一级公钥也是可信的。
零级签名与信赖网络签名相当，因为只有其公钥的有效性得到认证。一级签名类似于证书颁发机构，因为拥有一级公钥者能够发出无限数量的零级签名。 二级签名非常类似于用户在使用默认证书颁发机构列表时必须依赖的信任假设（如Web浏览器中包含的那些）;它允许密钥的所有者制作其他公钥证书颁发机构。

所有版本的PGP都包含一种取消（“撤销”）证书的方法。如果该用户的私钥丢失或者被破解则他必须采用这种取消证书的方法以继续保证通信的安全性。这种方式基本等同于集中式PKI方案的证书撤销列表。最新的的PGP版本也支持设置证书的自动过期日期。

并不仅是PGP有如何正确判断特定公钥属于特定的用户的问题。所有采用公钥/私钥加密的加密系统都有这个问题，并且目前并没有令人满意的解决方案。最初的PGP方案至少可以让用户选择是否使用其背书/审批系统，而对于其他PKI方案，它们要求用户必须采信所有被中央证书颁发机构证实的证书。

== 历史 ==
=== 早期历史 ===
[[菲利普·齐默曼|菲利普·齐默曼]]（Philip R. Zimmermann）在1991年创造了第一个版本的PGP，其名称“Pretty Good Privacy”的灵感来自于一个名为“Ralph's Pretty Good Grocery”的杂货店——电台主播[[Garrison_Keillor|Garrison Keillor]]虚构出来的一个名为[[Lake_Wobegon|Lake Wobegon]]的城市的一个杂货店。

软件第一个版本包含一个齐默曼自己设计的[[对称密钥算法|对称密钥算法]]，与[[周六夜现场|周六夜现场]]的一个小品[[BassOmatic|BassOmatic]]同名。作为一个老牌的[[反核能活跃分子|反核能活跃分子]]，齐默曼为了让所有有相似倾向的人们可以安全的使用BBS并且安全存储消息和文件而创造了PGP加密。在非商业用途上是不需要授权的，无须任何费用，并且在所有的发行中附带了完整的[[源代码|源代码]]。

在2001年6月5号发表的一篇标题为"PGP 10周年" <ref>{{cite web |url=http://www.philzimmermann.com/EN/news/PGP_10thAnniversary.html |title=PGP Marks 10th Anniversary |publisher=Phil Zimmermann |date= |accessdate=2010-08-23 |archive-date=2011-05-14 |archive-url=https://web.archive.org/web/20110514200112/http://www.philzimmermann.com/EN/news/PGP_10thAnniversary.html |dead-url=no }}</ref>的文章中，齐默曼描述了他最初开发PGP时的情景：

{{quotation|1991年的某天，我把PGP的第一版发给我几个朋友，以便上传到互联网。我最先发给Allan Hoeltje，他把这个程序发到了Peacenet，一个针对草根政治组织--特别是“和平运动”--的ISP。当时全球政治活跃分子都能访问到Peacenet。然后我又把它上传给了Kelly Goen，他接着就把源码转发到了一个专门分发源代码的Usenet新闻组。基于我的请求，他把该Usenet权限改为了“仅限美国”。Kelly还把PGP传到了（美国）国内很多BBS上面。我记不太清刚开始在网上贴是6月5号还是6号。

说出来吓人，1991年的时候，我对Usenet新闻组确是知之甚少。我并不知道那个“仅限美国”的标签只是个“建议”作用，基本上对贴子的传播（范围）毫无影响。当时，我以为这个标签会控制这个帖子的传播范围。当时我不知道如何在新闻组发贴，甚至不明白新闻组究竟是什么。}}

PGP在[[互联网|互联网]]上传播开来，并且在这个世界上获得了非常多的拥护者。PGP用户和支持者也包括在极权主义国家持不同政见的人们（一些给齐默曼的感人信件被发表了，其中一些在美国国会之前被包括到证据中）。在世界其它地方的{{tsl|en|Civil libertarianism|公民自由意志主义}}支持者（参考齐默曼在各个听政会上发表的证据），以及“自由通讯”激进主义分子，他们称他们自己为[[加密爱好者|加密爱好者]]，进行宣传和分发。

=== 刑事侦察 ===
在发行后不久，PGP加密走出了[[美国|美国]]，在1993年二月，齐默尔曼变成了[[美国政府|美国政府]]针对“没有授权的军需品出口”犯罪调查的正式目标。根据美国出口管理法案中的定义，加密系统使用大于[[40位加密|40位]]的密钥将被认为是军需品。PGP从没有使用小于128位的密钥，因此在那时被如此认定。如果被判有罪，这将会是严重的罪行。几年后，对齐默尔曼的调查未经备案即被关闭，也没有提起针对他本人或其他任何人的刑事指控。

齐默曼使用了一种富有想象力的方法来对抗这一规定。他将PGP的全套[[源代码|源代码]]出版成一本书，<ref name="zimmermann2">{{cite book |last= Zimmermann |first= Philip |authorlink= Phil Zimmermann |title= PGP Source Code and Internals  |year= 1995 |publisher= [[MIT_Press|MIT Press]] |isbn= 0-262-24039-4}}</ref>由[[麻省理工学院出版社|MIT 出版社]]发行，受到了广泛欢迎。任何想要构建自己的PGP版本的人只需买下这本60美元的书，切掉封面，分离页面，然后使用[[OCR|OCR]]（文字扫描识别）程序进行扫描和文字识别（或者直接输入），生成一系列的源代码文本文档。接下来便可以使用自由分发的[[GCC|GCC]]来编译程序。PGP就是这样在全世界变得可用。声明的原则很简单：对军需品——枪支、炸药、飞机和软件的出口是被限制的，然而书本出口受到[[第一修正案|第一修正案]]（言论自由部分）的保护。这个问题从未再在法庭中检查过。后来，在另外两个案件（[[伯恩斯坦诉合众国案|伯恩斯坦诉合众国案]]和[[榮格訴戴利案|荣格诉戴利案]]）中，法院皆判定加密软件的源代码是受第一修正案保护的，享有言论自由。如今PGP不再被认为是军需品，但仍需符合一般出口产品的实体清单规定，不得出售给特定的国家、实体或个人。

=== 司法机关的绕过措施 ===
由于PGP尚无破解方法，使得被指控犯罪的人士青睐使用PGP加密敏感数据，执法部门采证时便会遇到困难。对此，英国通过一项名为{{Link-en|2000年调查权力规范法案|Regulation of Investigatory Powers Act 2000}}（RIPA）的法案迫使这些人士交出密码，拒不配合则会面临牢狱之灾<ref>{{Cite web|title=009 10 Table.xls|url=http://www.whatdotheyknow.com/request/26462/response/74338/attach/html/3/009%2010%20Table.xls.html|access-date=2021-12-09|work=www.whatdotheyknow.com|archive-date=2022-04-12|archive-url=https://web.archive.org/web/20220412012026/https://www.whatdotheyknow.com/request/26462/response/74338/attach/html/3/009%2010%20Table.xls.html}}</ref>；而美国则是通过一项具体判例（{{Link-en|布社案|In re Boucher}}）确定执法机关有此权力。因此，使用PGP来加密敏感数据虽然在技术上是安全的，实际上却并非高枕无忧。一种可行的对抗方式是改用[[可否认加密|可否认加密]]。

==商業應用==
PGP一般在[[企业资源规划|企业资源规划]]（即ERP）软件连接到银行系统时使用，防止信息在传输过程中被删改或盗取，从而减少商业秘密泄露和遭遇诈骗的风险。

==OpenPGP==
1997年7月，PGP Inc.与齐默尔曼同意[[IETF|IETF]]制定一项公开的[[互联网标准|互联网标准]]，称作OpenPGP，任何支持这一标准的程序也被允许称作OpenPGP。<ref>By Eric Geier, PCWorld. “[http://www.pcworld.com/article/2472771/how-to-use-openpgp-to-encrypt-your-email-messages-and-files-in-the-cloud.html How to use OpenPGP to encrypt your email messages and files in the cloud] {{Wayback|url=http://www.pcworld.com/article/2472771/how-to-use-openpgp-to-encrypt-your-email-messages-and-files-in-the-cloud.html |date=20180518132535 }}.” August 22, 2014. September 3, 2014.</ref>

许多电子邮件系统提供了OpenPGP兼容的安全性，由RFC 3156来描述。2007年11月发布的规范RFC 4880作为RFC 2440的替代版，指出一套算法，包括非对称的[[ElGamal加密算法|ElGamal加密算法]], {{tsl|en|Digital Signature Algorithm|Digital Signature Algorithm}}, [[三重資料加密演算法|三重資料加密演算法]]以及[[SHA-1|SHA-1]]. 标准还建议使用[[PKCS_#1|PKCS #1]] v1.5 描述的[[RSA加密演算法|RSA加密演算法]]用作加密与签名，以及[[高级加密标准|AES-128]], {{tsl|en|CAST-128}}，[[國際資料加密演算法|IDEA]]等对称加密算法。许多其他加密算法也被支持。 2009年发布的RFC 5581支持[[Camellia|Camellia]]加密。 基于[[椭圆曲线密码学|椭圆曲线密码学]] ([[ECDSA|ECDSA]], [[橢圓曲線迪菲-赫爾曼金鑰交換|ECDH]])的RFC 6637发布于2012年。支持{{tsl|en|EdDSA}}被2014年发布的标准支持。 [http://tools.ietf.org/html/draft-koch-eddsa-for-openpgp-00 draft-koch-eddsa-for-openpgp-00]{{Wayback|url=http://tools.ietf.org/html/draft-koch-eddsa-for-openpgp-00 |date=20170324015456 }}

[[自由软件基金会|自由软件基金会]]开发的OpenPGP程序叫做[[GnuPG|GnuPG]]，并有多个图形用户界面版本的软件实现，如[[KGPG|KGPG]], {{tsl|en|Seahorse (software)|Seahorse}}, [[MacGPG|MacGPG]]. 也有一些商用OpenPGP软件。

使用[[JavaScript|JavaScript]]编写的开源库OpenPGPjs,<ref>{{cite web|url=https://openpgpjs.org/|title=OpenPGPjs|author=OpenPGPjs-Team|accessdate=2017-07-06|archive-date=2017-07-09|archive-url=https://web.archive.org/web/20170709124936/https://openpgpjs.org/|dead-url=no}}</ref>用于网页程序，如[[ProtonMail|ProtonMail]], [[Mailfence|Mailfence]], [[GlobaLeaks|GlobaLeaks]], and [[Mailvelope|Mailvelope]].

iOS或Android平台上的OpenPGP应用程序有iPGMail<ref>{{cite web|url=http://www.ipgmail.com|title=iPGMail|work=iPGMail|accessdate=2020-09-26|archive-date=2020-09-22|archive-url=https://web.archive.org/web/20200922113053/https://ipgmail.com/|dead-url=no}}</ref> ，OpenKeychain<ref>{{cite web|url=https://www.openkeychain.org|title=OpenKeychain|author=OpenKeychain-Team|work=openkeychain.org|accessdate=2020-09-26|archive-date=2020-08-14|archive-url=https://web.archive.org/web/20200814081349/https://www.openkeychain.org/|dead-url=no}}</ref>。

===[[互联网标准|互联网标准]]===
* PGP
** RFC 1991 PGP Message Exchange Formats (obsolete)<ref name="tools.ietf.org">{{Cite web |url=http://tools.ietf.org/html/rfc4880 |title=存档副本 |accessdate=2017-07-06 |archive-date=2017-07-07 |archive-url=https://web.archive.org/web/20170707150725/https://tools.ietf.org/html//rfc4880 |dead-url=no }}</ref>
* OpenPGP
** RFC 2440 OpenPGP Message Format (obsolete)<ref name="tools.ietf.org"/>
** RFC 4880 OpenPGP Message Format
** RFC 5581 The Camellia Cipher in OpenPGP
** RFC 6637 Elliptic Curve Cryptography (ECC) in OpenPGP
**[//tools.ietf.org/html/draft-koch-eddsa-for-openpgp draft-koch-eddsa-for-openpgp] EdDSA for OpenPGP
* PGP/MIME
** RFC 2015 MIME Security with Pretty Good Privacy (PGP)
** RFC 3156 MIME Security with OpenPGP

==参考文献==
{{Reflist}}

== 外部链接 ==
* [https://web.archive.org/web/20041230152556/http://www.pgp.com/ PGP公司网站]
* [http://www.pgpi.org/ The International PGP Home Page]{{Wayback|url=http://www.pgpi.org/ |date=20150520090152 }}
* [http://www.ezpgp.com  Web-based PGP Encryption Software]{{Wayback|url=http://www.ezpgp.com/ |date=20171219222625 }}

{{加密软件}}

{{Authority control}}
[[Category:网络隐私|Category:网络隐私]]
[[Category:互联网标准|Category:互联网标准]]
[[Category:公開標準|Category:公開標準]]
[[Category:电子商务|Category:电子商务]]
[[Category:加密软件|Category:加密软件]]