
'''库普-库珀施密特方程'''(Kaup-Kupershmidt Equation)是一个非线性偏微分方程：<ref>Qinghua Feng New Analytical Solutions For (3+1) Dimensional Kaup-Kupershmidt Equation,2012 International Conference on Computer Technology and Science (ICCTS 2012) IPCSIT vol. 47 (2012)</ref>


<math>\frac{\partial^4  u(x,t)}{\partial  x^4}   +\frac{\partial  u(x,t)}{\partial  x} +45(\frac{\partial  u(x,t)}{\partial  x}*u(x,t)^2 -(75/2)*\frac{\partial^2  u(x,t)}{\partial  x^2}*\frac{\partial  u(x,t)}{\partial  x} -15*u(x,t)*\frac{\partial^3  u(x,t)}{\partial  x^3}   </math>

==行波解==
利用[[Maple|Maple]]软件包TWSolution，随所选定展开函数不同，可得多种行波解<ref>Inna Shingareva, Carlos Lizárraga-Celaya,Solving Nonlinear Partial Differential Equations with Maple Page 27</ref>
;tanh 展开
<math>g[2] := {u(x, t) = -(2/3)*(-(1/2)*sqrt(2)-(1/2*I)*sqrt(2))^2+(-(1/2)*sqrt(2)-(1/2*I)*sqrt(2))^2*tanh(_C1+(-(1/2)*sqrt(2)-(1/2*I)*sqrt(2))*x+_C3*t)^2}</math>
<math>g[3] := {u(x, t) = -(2/3)*(-(1/2)*sqrt(2)+(1/2*I)*sqrt(2))^2+(-(1/2)*sqrt(2)+(1/2*I)*sqrt(2))^2*tanh(_C1+(-(1/2)*sqrt(2)+(1/2*I)*sqrt(2))*x+_C3*t)^2}</math>
<math>g[4] := {u(x, t) = -(2/3)*((1/2)*sqrt(2)-(1/2*I)*sqrt(2))^2+((1/2)*sqrt(2)-(1/2*I)*sqrt(2))^2*tanh(_C1+((1/2)*sqrt(2)-(1/2*I)*sqrt(2))*x+_C3*t)^2}</math>
<math>g[5] := {u(x, t) = -(2/3)*((1/2)*sqrt(2)+(1/2*I)*sqrt(2))^2+((1/2)*sqrt(2)+(1/2*I)*sqrt(2))^2*tanh(_C1+((1/2)*sqrt(2)+(1/2*I)*sqrt(2))*x+_C3*t)^2}</math>
<math>g[6] := {u(x, t) = -(4/3)*(-(1/22)*sqrt(2)*11^(3/4)-(1/22*I)*sqrt(2)*11^(3/4))^2+2*(-(1/22)*sqrt(2)*11^(3/4)-(1/22*I)*sqrt(2)*11^(3/4))^2*tanh(_C1+(-(1/44)*sqrt(2)*11^(3/4)-(1/44*I)*sqrt(2)*11^(3/4))*x+_C3*t)^2}</math>
<math>g[7] := {u(x, t) = -(4/3)*(-(1/22)*sqrt(2)*11^(3/4)+(1/22*I)*sqrt(2)*11^(3/4))^2+2*(-(1/22)*sqrt(2)*11^(3/4)+(1/22*I)*sqrt(2)*11^(3/4))^2*tanh(_C1+(-(1/44)*sqrt(2)*11^(3/4)+(1/44*I)*sqrt(2)*11^(3/4))*x+_C3*t)^2}</math>
<math>g[8] := {u(x, t) = -(4/3)*((1/22)*sqrt(2)*11^(3/4)-(1/22*I)*sqrt(2)*11^(3/4))^2+2*((1/22)*sqrt(2)*11^(3/4)-(1/22*I)*sqrt(2)*11^(3/4))^2*tanh(_C1+((1/44)*sqrt(2)*11^(3/4)-(1/44*I)*sqrt(2)*11^(3/4))*x+_C3*t)^2}</math>
<math>g[9] := {u(x, t) = -(4/3)*((1/22)*sqrt(2)*11^(3/4)+(1/22*I)*sqrt(2)*11^(3/4))^2+2*((1/22)*sqrt(2)*11^(3/4)+(1/22*I)*sqrt(2)*11^(3/4))^2*tanh(_C1+((1/44)*sqrt(2)*11^(3/4)+(1/44*I)*sqrt(2)*11^(3/4))*x+_C3*t)^2}</math>
{{Gallery
|width=250
|height=200
|align=center
|File:Kaup Kupershmidt eq tanh method animation2.gif|Kaup Kupershmidt eq tanh method animation2
|File:Kaup Kupershmidt eq tanh method animation7.gif|Kaup Kupershmidt eq tanh method animation7
|File:Kaup Kupershmidt eq tanh method animation8.gif|Kaup Kupershmidt eq tanh method animation8
}}

;JacobiSN  展开
<math>g[2] := {u(x, t) = -(1/2)*_C3^2-(1/6)*sqrt(-3*_C3^4-4)+((1/2)*_C3^2+(1/2)*sqrt(-3*_C3^4-4))*JacobiSN(_C2+_C3*x+_C4*t, (1/2)*sqrt(2*_C3^2+2*sqrt(-3*_C3^4-4))/_C3)^2}</math>
<math>g[3] := {u(x, t) = -(1/2)*_C3^2+(1/6)*sqrt(-3*_C3^4-4)+((1/2)*_C3^2-(1/2)*sqrt(-3*_C3^4-4))*JacobiSN(_C2+_C3*x+_C4*t, (1/2)*sqrt(2*_C3^2-2*sqrt(-3*_C3^4-4))/_C3)^2}</math>
<math>g[4] := {u(x, t) = -4*_C3^2-(2/33)*sqrt(-1452*_C3^4-11)+(4*_C3^2+(2/11)*sqrt(-1452*_C3^4-11))*JacobiSN(_C2+_C3*x+_C4*t, (1/22)*sqrt(242*_C3^2+11*sqrt(-1452*_C3^4-11))/_C3)^2}</math>
<math>g[5] := {u(x, t) = -4*_C3^2+(2/33)*sqrt(-1452*_C3^4-11)+(4*_C3^2-(2/11)*sqrt(-1452*_C3^4-11))*JacobiSN(_C2+_C3*x+_C4*t, (1/22)*sqrt(242*_C3^2-11*sqrt(-1452*_C3^4-11))/_C3)^2}</math>
{{Gallery
|width=250
|height=200
|align=center
|File:Kaup Kupershmidt JacobiSN method animation2.gif|Kaup Kupershmidt JacobiSN method animation2
|File:Kaup Kupershmidt JacobiSN method animation3.gif|Kaup Kupershmidt JacobiSN method animation3
|File:Kaup Kupershmidt JacobiSN method animation4.gif|Kaup Kupershmidt JacobiSN method animation4}}
;sech 展开
<math>g[2] := {u(x, t) = (1/3)*(-(1/2)*sqrt(2)-(1/2*I)*sqrt(2))^2-(-(1/2)*sqrt(2)-(1/2*I)*sqrt(2))^2*sech(_C1+(-(1/2)*sqrt(2)-(1/2*I)*sqrt(2))*x+_C3*t)^2}</math>
<math>g[3] := {u(x, t) = (1/3)*(-(1/2)*sqrt(2)+(1/2*I)*sqrt(2))^2-(-(1/2)*sqrt(2)+(1/2*I)*sqrt(2))^2*sech(_C1+(-(1/2)*sqrt(2)+(1/2*I)*sqrt(2))*x+_C3*t)^2}</math>  
<math>g[4] := {u(x, t) = (1/3)*((1/2)*sqrt(2)-(1/2*I)*sqrt(2))^2-((1/2)*sqrt(2)-(1/2*I)*sqrt(2))^2*sech(_C1+((1/2)*sqrt(2)-(1/2*I)*sqrt(2))*x+_C3*t)^2}</math>
<math>g[5] := {u(x, t) = (1/3)*((1/2)*sqrt(2)+(1/2*I)*sqrt(2))^2-((1/2)*sqrt(2)+(1/2*I)*sqrt(2))^2*sech(_C1+((1/2)*sqrt(2)+(1/2*I)*sqrt(2))*x+_C3*t)^2}</math> 
<math>g[6] := {u(x, t) = (2/3)*(-(1/22)*sqrt(2)*11^(3/4)-(1/22*I)*sqrt(2)*11^(3/4))^2-2*(-(1/22)*sqrt(2)*11^(3/4)-(1/22*I)*sqrt(2)*11^(3/4))^2*sech(_C1+(-(1/44)*sqrt(2)*11^(3/4)-(1/44*I)*sqrt(2)*11^(3/4))*x+_C3*t)^2}</math>  
<math>g[7] := {u(x, t) = (2/3)*(-(1/22)*sqrt(2)*11^(3/4)+(1/22*I)*sqrt(2)*11^(3/4))^2-2*(-(1/22)*sqrt(2)*11^(3/4)+(1/22*I)*sqrt(2)*11^(3/4))^2*sech(_C1+(-(1/44)*sqrt(2)*11^(3/4)+(1/44*I)*sqrt(2)*11^(3/4))*x+_C3*t)^2}</math> 
<math>g[8] := {u(x, t) = (2/3)*((1/22)*sqrt(2)*11^(3/4)-(1/22*I)*sqrt(2)*11^(3/4))^2-2*((1/22)*sqrt(2)*11^(3/4)-(1/22*I)*sqrt(2)*11^(3/4))^2*sech(_C1+((1/44)*sqrt(2)*11^(3/4)-(1/44*I)*sqrt(2)*11^(3/4))*x+_C3*t)^2}</math> 
<math>g[9] := {u(x, t) = (2/3)*((1/22)*sqrt(2)*11^(3/4)+(1/22*I)*sqrt(2)*11^(3/4))^2-2*((1/22)*sqrt(2)*11^(3/4)+(1/22*I)*sqrt(2)*11^(3/4))^2*sech(_C1+((1/44)*sqrt(2)*11^(3/4)+(1/44*I)*sqrt(2)*11^(3/4))*x+_C3*t)^2}</math> 
{{Gallery
|width=250
|height=200
|align=center
|File:Kaup Kupershmidt sech method animation2.gif|Kaup Kupershmidt sech method animation2
|File:Kaup Kupershmidt sech method animation4.gif|Kaup Kupershmidt sech method animation4
|File:Kaup Kupershmidt sech method animation8.gif|Kaup Kupershmidt sech method animation8
}}
;sec、coth 展开
<math>g[2] := {u(x, t) = -(1/3)*(-(1/2)*sqrt(2)-(1/2*I)*sqrt(2))^2+(-(1/2)*sqrt(2)-(1/2*I)*sqrt(2))^2*sec(_C1+(-(1/2)*sqrt(2)-(1/2*I)*sqrt(2))*x+_C3*t)^2}</math> 
<math>g[3] := {u(x, t) = -(1/3)*(-(1/2)*sqrt(2)+(1/2*I)*sqrt(2))^2+(-(1/2)*sqrt(2)+(1/2*I)*sqrt(2))^2*sec(_C1+(-(1/2)*sqrt(2)+(1/2*I)*sqrt(2))*x+_C3*t)^2}</math> 
<math>g[4] := {u(x, t) = -(1/3)*((1/2)*sqrt(2)-(1/2*I)*sqrt(2))^2+((1/2)*sqrt(2)-(1/2*I)*sqrt(2))^2*sec(_C1+((1/2)*sqrt(2)-(1/2*I)*sqrt(2))*x+_C3*t)^2}</math> 
<math>g[5] := {u(x, t) = -(1/3)*((1/2)*sqrt(2)+(1/2*I)*sqrt(2))^2+((1/2)*sqrt(2)+(1/2*I)*sqrt(2))^2*sec(_C1+((1/2)*sqrt(2)+(1/2*I)*sqrt(2))*x+_C3*t)^2}</math> 
<math>g[6] := {u(x, t) = -(2/3)*(-(1/22)*sqrt(2)*11^(3/4)-(1/22*I)*sqrt(2)*11^(3/4))^2+2*(-(1/22)*sqrt(2)*11^(3/4)-(1/22*I)*sqrt(2)*11^(3/4))^2*sec(_C1+(-(1/44)*sqrt(2)*11^(3/4)-(1/44*I)*sqrt(2)*11^(3/4))*x+_C3*t)^2}</math> 
<math>g[7] := {u(x, t) = -(2/3)*(-(1/22)*sqrt(2)*11^(3/4)+(1/22*I)*sqrt(2)*11^(3/4))^2+2*(-(1/22)*sqrt(2)*11^(3/4)+(1/22*I)*sqrt(2)*11^(3/4))^2*sec(_C1+(-(1/44)*sqrt(2)*11^(3/4)+(1/44*I)*sqrt(2)*11^(3/4))*x+_C3*t)^2}</math> 
<math>g[8] := {u(x, t) = -(2/3)*((1/22)*sqrt(2)*11^(3/4)-(1/22*I)*sqrt(2)*11^(3/4))^2+2*((1/22)*sqrt(2)*11^(3/4)-(1/22*I)*sqrt(2)*11^(3/4))^2*sec(_C1+((1/44)*sqrt(2)*11^(3/4)-(1/44*I)*sqrt(2)*11^(3/4))*x+_C3*t)^2}</math> 
<math>g[9] := {u(x, t) = -(2/3)*((1/22)*sqrt(2)*11^(3/4)+(1/22*I)*sqrt(2)*11^(3/4))^2+2*((1/22)*sqrt(2)*11^(3/4)+(1/22*I)*sqrt(2)*11^(3/4))^2*sec(_C1+((1/44)*sqrt(2)*11^(3/4)+(1/44*I)*sqrt(2)*11^(3/4))*x+_C3*t)^2}</math> 
<math>g[10] := {u(x, t) = -(2/3)*(-(1/2)*sqrt(2)-(1/2*I)*sqrt(2))^2+(-(1/2)*sqrt(2)-(1/2*I)*sqrt(2))^2*coth(_C1+(-(1/2)*sqrt(2)-(1/2*I)*sqrt(2))*x+_C3*t)^2}</math>  
{{Gallery
|width=250
|height=200
|align=center
|File:Kaup Kupershmidt sec method animation3.gif|Kaup Kupershmidt sec method animation3
|File:Kaup Kupershmidt sec method animation5.gif|Kaup Kupershmidt sec method animation5
|File:Kaup Kupershmidt sec method animation10.gif|Kaup Kupershmidt sec method animation10
}}

;csch 展开
<math> {u(x, t) = _C4}</math>
<math>g[2] := {u(x, t) = (1/3)*(-(1/2)*sqrt(2)-(1/2*I)*sqrt(2))^2+(-(1/2)*sqrt(2)-(1/2*I)*sqrt(2))^2*csch(_C1+(-(1/2)*sqrt(2)-(1/2*I)*sqrt(2))*x+_C3*t)^2}</math>
<math>g[3] := {u(x, t) = (1/3)*(-(1/2)*sqrt(2)+(1/2*I)*sqrt(2))^2+(-(1/2)*sqrt(2)+(1/2*I)*sqrt(2))^2*csch(_C1+(-(1/2)*sqrt(2)+(1/2*I)*sqrt(2))*x+_C3*t)^2}</math>
<math>g[4] := {u(x, t) = (1/3)*((1/2)*sqrt(2)-(1/2*I)*sqrt(2))^2+((1/2)*sqrt(2)-(1/2*I)*sqrt(2))^2*csch(_C1+((1/2)*sqrt(2)-(1/2*I)*sqrt(2))*x+_C3*t)^2}</math>
<math>g[5] := {u(x, t) = (1/3)*((1/2)*sqrt(2)+(1/2*I)*sqrt(2))^2+((1/2)*sqrt(2)+(1/2*I)*sqrt(2))^2*csch(_C1+((1/2)*sqrt(2)+(1/2*I)*sqrt(2))*x+_C3*t)^2}</math>
{{Gallery
|width=250
|height=200
|align=center
|File:Kaup Kupershmidt csch method animation2.gif|Kaup Kupershmidt csch method animation2
|File:Kaup Kupershmidt csch method animation3.gif|Kaup Kupershmidt csch method animation3
|File:Kaup Kupershmidt csch method animation5.gif|Kaup Kupershmidt csch method animation5
}}

==参考文献==
<references/>
# *谷超豪 《[[孤立子|孤立子]]理论中的[[达布变换|达布变换]]及其几何应用》 上海科学技术出版社
# *阎振亚著 《复杂非线性波的构造性理论及其应用》 科学出版社 2007年
# 李志斌编著 《非线性数学物理方程的行波解》 科学出版社
#王东明著 《消去法及其应用》 科学出版社 2002
# *何青 王丽芬编著 《[[Maple|Maple]] 教程》 科学出版社 2010 ISBN 9787030177445
#Graham W. Griffiths William E.Shiesser Traveling Wave Analysis of Partial Differential p135 Equations Academy Press
# Richard H. Enns George C. McCGuire, Nonlinear Physics Birkhauser,1997
#Inna Shingareva, Carlos Lizárraga-Celaya,Solving Nonlinear Partial Differential Equations with Maple Springer.
#Eryk Infeld and George Rowlands,Nonlinear Waves,Solitons and Chaos,Cambridge 2000
#Saber Elaydi,An Introduction to Difference Equationns, Springer 2000
#Dongming Wang, Elimination Practice,Imperial College Press 2004
# David Betounes, Partial Differential Equations for Computational Science: With Maple and Vector Analysis Springer, 1998 ISBN 9780387983004
# George Articolo Partial Differential Equations & Boundary Value Problems with Maple V Academic Press 1998 ISBN 9780120644759

{{非线性偏微分方程}}

[[Category:偏微分方程|Category:偏微分方程]]
[[category:孤立子|category:孤立子]]