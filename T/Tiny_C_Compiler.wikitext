{{多個問題|
{{howto}}
{{external links|time=2014-09-27T14:57:29+00:00}}
}}
{{NoteTA
|G1=IT
|G2=FL
|1=zh-cn:引导程序;zh-hans:啟動程式
}}
{{Infobox software
| name = Tiny C Compiler 
| logo =
| developer = [[Fabrice_Bellard|Fabrice Bellard]]
| latest release version = 0.9.27
| latest release date = {{release date and age|2017|12|17}}
| programming language = [[C語言|C語言]]及[[組合語言|組合語言]]
| operating system = [[Linux|Linux]]、[[Unix|Unix]]、[[Microsoft_Windows|Windows]]
| genre = [[C语言|C语言]][[編譯器|編譯器]]
| license = [[GNU宽通用公共许可证|GNU宽通用公共许可证]]
| website = http://bellard.org/tcc/
}}
'''Tiny C Compiler'''（縮寫為TCC、tCc或TinyCC）是一个用於[[x86|x86]]（16/32位元）或[[x86-64|x86-64]]（64位元）系統的[[C语言|C]][[编译器|编译器]]，開發者為[[Fabrice_Bellard|Fabrice Bellard]]。軟體是設計用於低階電腦環境，或是於磁碟容量有限的空間中（1.44磁片或是硬碟）。軟體可以適用於[[Microsoft_Windows|Windows]]、[[Linux|Linux]]、[[Unix|Unix]]作業系統，而最新版本為0.9.27（2017年12月17日）。TCC是在[[GNU宽通用公共许可证|GNU宽通用公共许可证]]（LGPL）協定規範下發布。

TCC符合[[ANSI_C|ANSI C]]（C89/C90）規範<ref>[http://bellard.org/tcc/tcc-doc.html#SEC6 Tiny C Compiler Reference Documentation] {{Wayback|url=http://bellard.org/tcc/tcc-doc.html#SEC6 |date=20110927111920 }} accessed on 2008-08-07]</ref>亦符合新版的ISO [[C99|C99]]標準規範，與GNU C擴展的內嵌[[組合語言|組合語言]]（即[[內聯彙編|inline assembler]]）功能[[汇编语言|汇编语言]]。

==更新項目==
* 支援C99 VLA規範
* 可產生make的dependencies（-MD/-MF）
* 支援多種平台的程式編寫，例：[[x86-64|x86-64]]、[[ARM|ARM]]、[[OSX|OSX]]、[[WinCE|WinCE]]、[[kFreeBSD|kFreeBSD]]、[[Hurd|Hurd]]
* 修正一些已知的bug 

==特色功能==
TCC與其他C語言編譯器的不同處在於：

* 容量小，軟體大小約為1MB左右，可儲存於1.44MB的磁碟片中使用。
* 速度快，以TCC開發的程式可執行於x86（16/32位元）與 x86-64（64位元）環境中，據開發者說，執行比[[GCC|GCC]]較來得相當快速。<ref>{{Cite web |url=https://bellard.org/tcc/#speed |title=Tiny C Compiler官方網站上关于编译速度的对比 |accessdate=2019-03-01 |archive-date=2019-02-19 |archive-url=https://web.archive.org/web/20190219174922/https://bellard.org/tcc/#speed |dead-url=no }}</ref>程式亦可以包含[[組合語言|組合語言]]（[[內聯彙編|inline assembler]]）於其中執行與編譯。
* 無限制，其他C語言的動態Library祗要符合ISO C99規範，皆可以給予TCC來使用與編譯。
* 安全性，TCC包含一個可選的memory（記憶體）和boundschecker（程式檢測器），經過檢測的程式碼可以隨意地混合於標準程式碼內。
* 其他，TCC為命令列式的使用，目前並無[[整合性開發環境|整合性開發環境]]，但可以配合其他的編輯軟體使用（如：[[UltraEdit|UltraEdit]] ...等）。

==新版本特色==
* 0.9.27版本取消了原有的”tiny_impdef.exe”(產生DLL檔案)與”tiny_libmaker.exe”。
* 在64位元版本中提供可編譯32位元的編譯器i386-win32-tcc.exe，而在32位元版本中則提供64位元的編譯器x86_64-win32-tcc.exe，使用方式相同於tcc的指令。
* 原編譯DLL功能，則以指令方式合併到tcc內，以tcc -impdef *.dll方式來使用

==用途==
著名的 TCC 应用包括：
* TCCBOOT<ref>{{Cite web |url=http://bellard.org/tcc/tccboot.html |title=TCCBOOT |accessdate=2019-03-01 |archive-date=2011-05-18 |archive-url=https://web.archive.org/web/20110518150830/http://bellard.org/tcc/tccboot.html |dead-url=no }}</ref>，一个可以在大约 10 秒内从源码启动 [[Linux内核|Linux内核]]的[[啟動程式|啟動程式]]。该啟動程式可以从硬盘中读取 Linux 源代码，将可执行指令写入内存并执行。
* TCC 曾被用于演示对[[軟體後門|軟體後門]]的防御。 <ref>Wheeler, David A. ''[http://www.dwheeler.com/trusting-trust Countering Trusting Trust through Diverse Double-Compiling] {{Wayback|url=http://www.dwheeler.com/trusting-trust |date=20111008035532 }}''. ACSAC.</ref>
* TCC 曾被用于编译 [[GCC|GCC]]，虽然需要不少补丁才能完成这个操作。
* Cinpy<ref>{{Cite web |url=http://www.cs.tut.fi/~ask/cinpy/ |title=Cinpy |accessdate=2019-03-01 |archive-date=2008-11-20 |archive-url=https://web.archive.org/web/20081120164629/http://www.cs.tut.fi/~ask/cinpy/ |dead-url=no }}</ref>，一个允许在Python模块中添加C函数的库。这些 C 函数在运行时使用 TCC 编译，然后通过 ctypes 库在 Python 代码中调用。
* 被安装在 JSLinux<ref>{{Cite web |url=http://bellard.org/jslinux/ |title=JavaScript Linux |accessdate=2019-03-01 |archive-date=2011-07-09 |archive-url=https://web.archive.org/web/20110709142233/http://bellard.org/jslinux/ |dead-url=no }}</ref> ，一个能在浏览器中运行 Linux 和其它操作系统的虚拟机（也是由 Bellard 开发的）。
* 被用于编译超微型国际象棋引擎。<ref>{{Cite web |url=http://sourceforge.net/projects/smmax/ |title=Super Micro-Max Chess Engine |accessdate=2019-03-01 |archive-date=2019-03-02 |archive-url=https://web.archive.org/web/20190302025116/https://sourceforge.net/projects/smmax/ |dead-url=no }}</ref>
* TCC 曾被內建於 [[Android|Google Android 系統]]，於 Android 2.0 版本中。<!--
--><ref>{{Cite web |url=http://jserv.blogspot.com/2009/12/libacc-android-20-c-compiler.html |title=libacc : Android 2.0內建的輕量級C Compiler |accessdate=2012-05-06 |archive-date=2010-10-23 |archive-url=https://web.archive.org/web/20101023071107/http://jserv.blogspot.com/2009/12/libacc-android-20-c-compiler.html |dead-url=no }}</ref><!--
--><ref>{{Cite web |url=http://blog.linux.org.tw/~jserv/archives/2010/06/_libtcc_c.html |title=透過libtcc來擴充C語言 |accessdate=2012-11-12 |archive-date=2012-09-20 |archive-url=https://web.archive.org/web/20120920003725/http://blog.linux.org.tw/~jserv/archives/2010/06/_libtcc_c.html |dead-url=no }}</ref>

==開發歷史==
TCC 项目起源于 OTCC （Obfuscated TCC，即代码混淆过的 TCC），这是 Bellard 为赢得 2001 年[[国际C语言混乱代码大赛|国际C语言混乱代码大赛]]（IOCCC）编写的一个程序。其後，Bellard 反混淆并延伸發展了该程序，于是有了 TCC。<ref>Bellard, Fabrice. [http://bellard.org/otcc/ Obfuscated Tiny C Compiler] {{Wayback|url=http://bellard.org/otcc/ |date=20110518150322 }}</ref>

在 2012 年 2 月 4 日之前的某个时间， Bellard 在 TCC 的官方网站上宣布他不再参与 TCC 的维护工作。<ref>{{Cite web |url=http://bellard.org/tcc/ |title=archive.org 上最古老的 TCC 官方网站快照，宣布 Bellard 停止维护 TCC 项目。 |accessdate=2012-02-04 |archive-date=2011-04-08 |archive-url=https://web.archive.org/web/20110408200906/http://bellard.org/tcc/ |dead-url=no }}</ref>

自从 Bellard 离开 TCC 项目以来，已经有不少组织和个人分发补丁或创建维护分支，为 TCC 提供构建支持以及问题修复。

==參考文献==
===引用===
{{Reflist|2}}

===来源===
* [http://bellard.org/tcc/tcc-doc.html Tiny C Compiler Reference Documentation]{{Wayback|url=http://bellard.org/tcc/tcc-doc.html |date=20110927111920 }} accessed on 2008-08-07
* Glöckner, Daniel. [http://lists.gnu.org/archive/html/tinycc-devel/2006-09/msg00028.html Re: Tinycc-devel (no subject)]{{Wayback|url=http://lists.gnu.org/archive/html/tinycc-devel/2006-09/msg00028.html |date=20110926204621 }}, September 8, 2006.
* a b grischka, [http://lists.gnu.org/archive/html/tinycc-devel/2005-09/msg00054.html GCC by TCC (some fixes)]{{Wayback|url=http://lists.gnu.org/archive/html/tinycc-devel/2005-09/msg00054.html |date=20110926204617 }}, 29 Sep 2005
* Wheeler, David A. [http://www.dwheeler.com/trusting-trust Countering Trusting Trust through Diverse Double-Compiling. ACSAC]{{Wayback|url=http://www.dwheeler.com/trusting-trust |date=20111008035532 }}.
* Bellard, Fabrice. [http://bellard.org/otcc/ Obfuscated Tiny C Compiler]{{Wayback|url=http://bellard.org/otcc/ |date=20110518150322 }}
* [http://bellard.org/ Bellard Fabrice Project Homepage]{{Wayback|url=http://bellard.org/ |date=20110518145555 }}


==外部連結==
* [http://bellard.org/tcc/ Tiny C Compiler官方網站]{{Wayback|url=http://bellard.org/tcc/ |date=20110408200906 }}
* [https://lists.gnu.org/archive/html/tinycc-devel/ Tiny C Compiler develop archive]{{Wayback|url=https://lists.gnu.org/archive/html/tinycc-devel/ |date=20150214050159 }}
* [http://repo.or.cz/w/tinycc.git Tiny C Compiler GIT]{{Wayback|url=http://repo.or.cz/w/tinycc.git |date=20150214054530 }}


==参见==
{{Portal|自由软件}}
{{wikibooks|TCC使用指南}}
* [[Portable_C_Compiler|Portable C Compiler]]（PCC）
* {{tsl|en|Small-C}}
* [[內聯彙編|內聯彙編]]（inline assembler）

{{-}}
{{C语言}}

[[Category:C編譯器|Category:C編譯器]]
[[Category:組合語言軟體|Category:組合語言軟體]]