{{noteTA
|G1=IT
}}
{{IPstack}}
'''TCP快速打开'''（{{lang-en|'''T'''CP '''F'''ast '''O'''pen}}，简称'''TFO'''）是对计算机网络中[[传输控制协议|传输控制协议]]（TCP）连接的一种简化握手手续的拓展，用于提高两端点间连接的打开速度。

它通过握手开始时的SYN包中的TFO cookie（一个TCP选项）来验证一个之前连接过的客户端。如果验证成功，它可以在三次握手最终的ACK包收到之前就开始发送数据，这样便跳过了一个绕路的行为，更在传输开始时就降低了延迟。这个加密的Cookie被存储在客户端，在一开始的连接时被设定好。然后每当客户端连接时，这个Cookie被重复返回。<ref name=lwn>{{cite news |first=Michael |last=Kerrisk |date=2012-08-01 |title=TCP Fast Open: expediting web services |publisher=[[LWN.net|LWN.net]] |url=http://lwn.net/Articles/508865/ |accessdate=2014-12-03 |archive-date=2014-12-05 |archive-url=https://web.archive.org/web/20141205172618/http://lwn.net/Articles/508865/ |dead-url=no }}</ref>

此Cookie通常采用一种[[分组密码|分组密码]]，私钥由服务器根据客户端的[[IP地址|IP地址]]保存，生成一个第三方难以仿冒的[[訊息鑑別碼|訊息鑑別碼]]标签，即便第三方可以伪造源IP地址或从其他IP地址制造到同一个服务器的连接。尽管使用了加密技术来生成cookie，但TFO并不着眼于提供比它所替换的三次握手有更多的安全性，并且不对所产生的TCP连接提供任何形式的加密保护或端点身份认证。它的目的不是为了抵挡中间人攻击。

这个协议最早提出于2011年<ref>{{cite article
| title=TCP Fast Open
| author=Radhakrishnan S, Cheng Y, Chu J, Jain A, Raghavan B
| date=2011-12-06
| url=http://conferences.sigcomm.org/co-next/2011/papers/1569470463.pdf
| publisher=ACM CoNEXT
| access-date=2014-12-03
| archive-date=2012-10-29
| archive-url=https://web.archive.org/web/20121029003913/http://conferences.sigcomm.org/co-next/2011/papers/1569470463.pdf
| dead-url=no
}}</ref>
并在2012年2月时已为一个IETF互联网草案，<ref>{{cite IETF
| title=TCP Fast Open
| draft=draft-ietf-tcpm-fastopen-06
| author=Cheng Y, Chu J, Radhakrishnan S, Jain A
| date=2013-01-26
| publisher=[[Internet_Engineering_Task_Force|IETF]] }}</ref>
这项规范最终在2014年12月作为RFC 7413发布。<ref name="IETF-RFC-7413">{{cite web 
| url=https://tools.ietf.org/html/rfc7413 
| title=TCP Fast Open 
| publisher=IETF 
| date=December 2014 
| accessdate=10 January 2015 
| author=Yuchung Cheng, Jerry Chu, Sivasankar Radhakrishnan, and Arvind Jain 
| archive-date=2015-01-01 
| archive-url=https://web.archive.org/web/20150101001102/http://tools.ietf.org/html/rfc7413 
| dead-url=no 
}}</ref>

==过程==
===请求Fast Open Cookie===
# 客户端发送SYN数据包，该数据包包含Fast Open选项，且该选项的Cookie为空，这表明客户端请求Fast Open Cookie；
# 支持TCP Fast Open的服务器生成Cookie，并将其置于SYN-ACK数据包中的Fast Open选项以发回客户端；
# 客户端收到SYN-ACK后，缓存Fast Open选项中的Cookie。

===实施TCP Fast Open===
以下描述假定客戶端在此前的TCP連接中已完成請求Fast Open Cookie的過程並存有有效的Fast Open Cookie。
# 客户端发送SYN数据包，该数据包包含数据（对于非TFO的普通TCP握手过程，SYN数据包中不包含数据）以及此前记录的Cookie；
# 支持TCP Fast Open的服务器会对收到Cookie进行校验：如果Cookie有效，服务器将在SYN-ACK数据包中对SYN和数据进行确认（Acknowledgement），服务器随后将数据递送至相应的应用程序；否则，服务器将丢弃SYN数据包中包含的数据，且其随后发出的SYN-ACK数据包将仅确认（Acknowledgement）SYN的对应序列号；
# 如果服务器接受了SYN数据包中的数据，服务器可在握手完成之前发送数据；
# 客户端将发送ACK确认服务器发回的SYN以及数据，但如果客户端在初始的SYN数据包中发送的数据未被确认，则客户端将重新发送数据；
# 此后的TCP连接和非TFO的正常情况一致。
注：客户端在请求并存储了Fast Open Cookie之后，可以不断重复TCP Fast Open直至服务器认为Cookie无效（通常为过期）。<ref name="IETF-RFC-7413" />

==实现==
TFO的实现包括：
* TFO的IPv4支持在3.6（客户端）和3.7（服务端）版本中被合并进[[Linux内核|Linux内核]]主线<ref name="kerrisk-lwn-01-09-2012">{{cite news |first=Michael |last=Kerrisk |url=http://lwn.net/Articles/508865/ |title=TCP Fast Open: expediting web services |publisher=LWN.net |date=2012-08-01 |quote=The client-side support has been merged for Linux 3.6 |accessdate=2014-12-03 |archive-date=2014-12-05 |archive-url=https://web.archive.org/web/20141205172618/http://lwn.net/Articles/508865/ |dead-url=no }}</ref><ref>{{cite news |first=Steven J |last=Vaughan-Nichols |url=http://www.zdnet.com/linux-3-7-arrives-arm-developers-rejoice-7000008638/ |title=Linux 3.7 arrives, ARM developers rejoice |publisher=ZDNet |work=Linux and Open Source |date=2012-12-11 |quote=Linux 3.7. TCP Fast Open will now be supported on servers |accessdate=2014-12-03 |archive-date=2014-11-05 |archive-url=https://web.archive.org/web/20141105164320/http://www.zdnet.com/linux-3-7-arrives-arm-developers-rejoice-7000008638/ |dead-url=no }}</ref><ref>{{cite web
 | title = Linux Kernel 3.13
 | section = 1.10. TCP Fast Open enabled by default
 | url = http://kernelnewbies.org/Linux_3.13#head-159ff61ea3acfd67b88855e75dbbb140f8825c4a
 | work = kernelnewbies.org
 | accessdate = 11 February 2014
 | date = 19 January 2014
 | archive-date = 2014-01-25
 | archive-url = https://web.archive.org/web/20140125103204/http://kernelnewbies.org/Linux_3.13#head-159ff61ea3acfd67b88855e75dbbb140f8825c4a
 | dead-url = no
 }}</ref>。IPv6服务器的TFO支持被合并进入3.16版本。<ref>{{cite web
 | title = Linux Kernel 3.16
 | section = 1.4. TCP Fast Open server mode on IPv6 support
 | url = http://kernelnewbies.org/Linux_3.16#head-93fbb9abc6149e9c3055322f27cdc3a8fcc198e6
 | work = kernelnewbies.org
 | accessdate = 14 September 2014
 | date = 3 August 2014
 | archive-date = 2014-12-15
 | archive-url = https://web.archive.org/web/20141215195040/http://kernelnewbies.org/Linux_3.16#head-93fbb9abc6149e9c3055322f27cdc3a8fcc198e6
 | dead-url = no
 }}</ref>
* FreeBSD自10.3版本<ref>{{Cite web|url=https://svnweb.freebsd.org/base?view=revision&revision=292823|title=[base] Revision 292823|accessdate=2017-08-06|work=svnweb.freebsd.org|language=en|archive-date=2021-05-27|archive-url=https://web.archive.org/web/20210527214417/https://svnweb.freebsd.org/base?view=revision&revision=292823}}</ref>（支援服務端）和12.0版本（支援用戶端）开始支持TFO<ref>{{Cite web|url=https://svnweb.freebsd.org/base?view=revision&revision=292706|title=[base] Revision 292706|accessdate=2017-08-06|work=svnweb.freebsd.org|language=en|archive-date=2018-02-18|archive-url=https://web.archive.org/web/20180218095905/https://svnweb.freebsd.org/base?view=revision&revision=292706|dead-url=no}}</ref>。

* [[Firefox|Mozilla Firefox]] 56支持TFO。<ref>{{Cite web|url=https://bugzilla.mozilla.org/show_bug.cgi?id=1188435|title=1188435 - Support TCP fastopen|accessdate=2017-08-06|work=bugzilla.mozilla.org|language=en|archive-date=2017-09-09|archive-url=https://web.archive.org/web/20170909012124/https://bugzilla.mozilla.org/show_bug.cgi?id=1188435|dead-url=no}}</ref>

* [[Google_Chrome|Google Chrome]]和[[Chromium|Chromium]]浏览器在[[Linux|Linux]]上提供TFO支持，包括[[Chrome_OS|Chrome OS]]和[[Android|Android]]。
* [[wikipedia:Exim|Exim]]（邮件传输代理）从4.88开始启用TFO。<ref>{{Cite web|url=https://lists.exim.org/lurker/message/20161225.101705.4bbe7ae8.en.html|title=[exim] Exim 4.88 released|accessdate=2017-08-06|work=lists.exim.org|language=en|archive-date=2021-05-27|archive-url=https://web.archive.org/web/20210527214419/https://lists.exim.org/lurker/message/20161225.101705.4bbe7ae8.en.html}}</ref>
* [[BIND|BIND]]自9.11.0开始启用。<ref>{{Cite web|url=https://ftp.isc.org/isc/bind9/9.11.0/RELEASE-NOTES-bind-9.11.0.html|title=Release Notes for BIND Version 9.11.0|accessdate=2016-10-05|author=|date=|publisher=|archive-date=2016-10-21|archive-url=https://web.archive.org/web/20161021192345/http://ftp.isc.org/isc/bind9/9.11.0/RELEASE-NOTES-bind-9.11.0.html|dead-url=no}}</ref>

* [[苹果公司|苹果公司]]的[[iOS_9|iOS 9]]和[[OS_X_10.11|OS X 10.11]]支持TCP快速打开，但并未为各连接默认启用。<ref>{{cite web|url=https://developer.apple.com/videos/wwdc/2015/?id=719|title=Your App and Next Generation Networks|publisher=Apple Inc.|date=2015|accessdate=2016-12-10|archive-date=2015-06-15|archive-url=https://web.archive.org/web/20150615162041/https://developer.apple.com/videos/wwdc/2015/?id=719|dead-url=no}}</ref>
* [[Microsoft_Edge|Microsoft Edge]]从[[Windows_10|Windows 10]] Preview build 14352开始支持TFO。<ref>{{cite web|url=https://developer.microsoft.com/en-us/microsoft-edge/platform/changelog/desktop/14352/|title=Windows 10 build 14352 - New web platform features|publisher=Microsoft|accessdate=2016-05-27|archive-date=2016-06-30|archive-url=https://web.archive.org/web/20160630114922/https://developer.microsoft.com/en-us/microsoft-edge/platform/changelog/desktop/14352/|dead-url=no}}</ref>

==替代品==
TCP快速打开（TFO）类似一项1994年被称作[[T/TCP|T/TCP]]（RFC 1644）的提议，但由于它未考虑安全原因而存在漏洞，所以未被广泛使用。

==参见==
* [[SPDY|SPDY]]
* [[SYN_cookies|SYN cookies]]
* [[TCP_Cookie_传输|TCP Cookie 传输]]

==参考文献==
{{Reflist|30em}}

[[Category:TCP/IP|快速打开]]