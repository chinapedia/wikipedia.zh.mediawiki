{{noteTA|G1=IT}}
{{Infobox software
| name = ThreadSafe
| logo =
| screenshot = [[File:ThreadSafe_for_Eclipse_screenshot.png|260px]]
| caption = [[Eclipse|Eclipse]]上的ThreadSafe
| developer = [http://www.contemplateltd.com Contemplate]
| latest release version = 1.3
| latest release date = {{Release date|2014|3|28}}
| operating system = [[跨平台|跨平台]]： [[Linux|Linux]] ，[[OS_X|OS X]] ，[[Microsoft_Windows|Windows]]
| genre = [[靜態程序分析|靜態程序分析]]
| license = [[专有软件|专有软件]]
| website = http://www.contemplateltd.com/threadsafe
}}
ThreadSafe是一个源代码分析工具，用于识别与Java代码库中的并发相关联的应用风险和安全漏洞。<ref name=InfoQnews>{{cite web|first=Vikram|last=Gupta|title=线程安全并发静态分析工具发布首个公开beta版本|url=http://www.infoq.com/cn/news/2013/10/ThreadSafe-Public-Release|publisher=InfoQ.com|date=2013-10-08|accessdate=2014-07-01|archive-date=2014-07-14|archive-url=https://web.archive.org/web/20140714123607/http://www.infoq.com/cn/news/2013/10/ThreadSafe-Public-Release|dead-url=no}}</ref><ref name=DevX>{{cite web|first=Darryl|last=Taft|title=Contemplate Delivers ThreadSafe Java Concurrency Static Analysis Tool|url=http://www.devx.com/Java/contemplate-delivers-threadsafe-java-concurrency-static-analysis-tool.html|publisher=DevX.com|date=2013-09-04|accessdate=2014-07-01|archive-date=2014-07-05|archive-url=https://web.archive.org/web/20140705134155/http://www.devx.com/Java/contemplate-delivers-threadsafe-java-concurrency-static-analysis-tool.html|dead-url=no}}</ref><ref name=InfoQ>{{cite web|first=Robert|last=Atkey|title=使用Contemplate ThreadSafe发现并判断Java并发问题|url=http://www.infoq.com/cn/articles/Java-Concurrency-Static-Analysis-with-ThreadSafe|publisher=InfoQ.com|date=2014-03-24|accessdate=2014-07-01|archive-date=2014-07-14|archive-url=https://web.archive.org/web/20140714165947/http://www.infoq.com/cn/articles/Java-Concurrency-Static-Analysis-with-ThreadSafe|dead-url=no}}</ref><ref name=AVoCS>{{cite journal|last=Atkey|first=Robert|last2=Sannella|first2=Donald|date=2015|title=ThreadSafe: Static Analysis for Java Concurrency|url=http://dx.doi.org/10.14279/tuj.eceasst.72.1025.995|journal=Electronic Communications of the EASST|publisher=European Association of Software Science and Technology|volume=72|doi=10.14279/tuj.eceasst.72.1025.995|accessdate=2016-03-18}}</ref> ThreadSafe被各大投资银行和其他企业所使用，以识别和避免运行在复杂的环境中的并发应用软件的故障。<ref name="InfoQnews" /><ref name="DevX" /><ref name=CFO-insight>{{cite web |first=Ritobaan |last=Roy |title=Software Errors: New Technology Briefing For CFOs |url=http://www.cfo-insight.com/risk-management-it/it/software-errors-new-technology-briefing-for-cfos/ |deadurl=yes |archiveurl=https://web.archive.org/web/20131014022454/http://www.cfo-insight.com/risk-management-it/it/software-errors-new-technology-briefing-for-cfos/ |archivedate=2013-10-14 |publisher=CFO Insight |date=2013-05-01 |accessdate=2014-07-01 }}</ref> 这些是最隐蔽的软件缺陷，因为他们不能可靠地通过试验进行检测。<ref name=CIO.com>{{cite web|author=Paul Rubens|title=Why Software Testing Can't Save You From IT Disasters|url=http://www.cio.com/article/749493/Why_Software_Testing_Can_t_Save_You_From_IT_Disasters|publisher=CIO.com|date=2014-03-12|accessdate=2014-07-01|archive-date=2014-03-14|archive-url=https://web.archive.org/web/20140314181258/http://www.cio.com/article/749493/Why_Software_Testing_Can_t_Save_You_From_IT_Disasters|dead-url=no}}</ref>
== 特点 ==
ThreadSafe检测严重的Java并发缺陷，有助于提高代码并消除风险：<ref name="DevX" /><ref name="InfoQ" /><ref name="AVoCS" />
* [[竞态条件|竞态条件]] - 从而导致不正确或不可预知的行为，很难在调试器中重现。
* [[死锁|死锁]]<ref name=InfoQdeadlocknews>{{cite web|first=Matt|last=Raible|title=Contemplate ThreadSafe Introduces Deadlock Detection|url=http://www.infoq.com/news/2014/06/threadsafe-deadlock-detection|publisher=InfoQ.com|date=2014-06-26|accessdate=2014-07-01|archive-date=2014-07-09|archive-url=https://web.archive.org/web/20140709175652/http://www.infoq.com/news/2014/06/threadsafe-deadlock-detection/|dead-url=no}}</ref> - 由等待共享资源的线程之间的循环等待引起。
* 不可预知的结果 - 由于不正确处理并发集合，不当的错误处理，或混合对象同步。
* 性能瓶颈 - 由于不正确的API使用，多余的同步，以及使用不必要的共享可变状态引起。
ThreadSafe紧密集成[[Eclipse|Eclipse]]软件开发环境，和[[SonarQube|SonarQube]]软件质量管理平台。在开发环境中提供上下文信息，以帮助开发人员直接在代码中调查和解决并发问题。<ref name="DevX" /><ref name="InfoQ" /><ref name="AVoCS" /> 有一个命令行版本提供给非Eclipse的集成开发环境用户和构建过程集成。
== 检查标准的遵守情况 ==
ThreadSafe检测到违反[http://www.informit.com/store/product.aspx?isbn=9780321803955 甲骨文CERT安全编码标准的Java]{{Wayback|url=http://www.informit.com/store/product.aspx?isbn=9780321803955 |date=20121007214659 }}。<ref name=CERT-Oracle>{{cite web|title=SEI CERT Oracle Coding Standard for Java|url=http://www.securecoding.cert.org/confluence/display/java/SEI+CERT+Oracle+Coding+Standard+for+Java|publisher=Software Engineering Institute, Carnegie Mellon University|accessdate=2016-03-18|archive-date=2016-03-24|archive-url=https://web.archive.org/web/20160324142356/https://www.securecoding.cert.org/confluence/display/java/SEI+CERT+Oracle+Coding+Standard+for+Java|dead-url=no}}</ref> 中许多并发相关规则的情况。
== 共同销售的产品 ==
ThreadSafe作为一个完全集成的插件包含于GrammaTech的CodeSonar程序分析工具套件。<ref name=GrammaTech>{{cite web|title=Conquering Complex Java Concurrency Bugs with CodeSonar|url=http://grammatech.com/whitepapers/conquering-complex-java-concurrency-bugs-with-codesonar|publisher=GrammaTech White Paper|date=2014年4月|accessdate=2014-07-01|archive-date=2014-07-14|archive-url=https://web.archive.org/web/20140714202002/http://grammatech.com/whitepapers/conquering-complex-java-concurrency-bugs-with-codesonar|dead-url=no}}</ref>
== 参考文献 ==
{{Reflist}}
== 外部链接 ==
* [http://www.contemplateltd.com/threadsafe ThreadSafe的页面]{{Wayback|url=http://www.contemplateltd.com/threadsafe |date=20140714154334 }}
== 参见 ==
* {{tsl|en|List of tools for static code analysis|静态代码分析工具列表}}
[[Category:静态代码分析工具|Category:静态代码分析工具]]