{{TA
|G1=IT
}}
[[File:Oauth_logo.svg|right]]
'''开放授权'''（OAuth）是一个[[开放标准|开放标准]]，允许用户让第三方应用访问该用户在某一网站上存储的私密的资源（如照片，-{zh-cn:视频; zh-tw:影片;}-，联系人列表），而无需将用户名和[[密码|密码]]提供给第三方应用。

OAuth允许用户提供一个[[令牌|令牌]]，而不是用户名和密码来访问他们存放在特定服务提供者的数据。每一个令牌授权一个特定的网站（例如，-{zh-cn:视频; zh-tw:影片;}-编辑网站)在特定的时段（例如，接下来的2小时内）内访问特定的资源（例如仅仅是某一相册中的-{zh-cn:视频; zh-tw:影片;}-）。这样，OAuth让用户可以授权第三方网站访问他们存储在另外服务提供者的某些特定-{zh-cn:信息; zh-tw:資訊;}-，而非所有内容。

OAuth是[[OpenID|OpenID]]的一个补充，但是完全不同的服务。

== 版本与历史 ==

=== 历史 ===
OAuth开始于2006年11月，当时{{link-en|布莱恩·库克 (程序员)|Blaine Cook (programmer)|布莱恩·库克}}正在开发[[Twitter|Twitter]]的[[OpenID|OpenID]]实现。与此同时，[[社交书签|社交书签]]网站{{tsl|en|Gnolia|Ma.gnolia}}需要一个解决方案允许使用OpenID的成员授权Dashboard访问他们的服务。这样库克、{{link-en|克里斯·梅西纳 (open source advocate)|Chris Messina (open source advocate)|克里斯·梅西纳}}和来自Ma.gnolia的[[拉里·哈尔夫|拉里·哈尔夫]]（Larry Halff）与{{tsl|en|David Recordon|戴维·雷科尔顿}}会面讨论在Twitter和Ma.gnolia API上使用OpenID进行委托授权。他们讨论得出结论，认为没有完成API访问委托的[[开放标准|开放标准]]。

2007年4月，成立了OAuth讨论组，这个由实现者组成的小组撰写了一个开放协议的提议草案。来自[[Google|Google]]的[[德维特·克林顿|德维特·克林顿]]获悉OAuth项目后，表示他有兴趣支持这个工作。2007年7月，团队起草了最初的规范。随后，[[Eran_Hammer-Lahav|Eran Hammer-Lahav]]加入团队并协调了许多OAuth的稿件，创建了更为正式的规范。2007年10月, OAuth核心1.0最后的草案发布了。

2008年11月，在[[明尼阿波利斯|明尼阿波利斯]]举行的[[互联网工程任务组|互联网工程任务组]]第73次会议上，举行了OAuth的BoF<ref>Birds of a Feather，意味起始会议</ref>讨论将该协议纳入IETF做进一步的规范化工作。这个会议参加的人很多，关于正式地授权在IETF设立一个OAuth工作组这一议题得到了广泛的支持。

2010年4月，OAuth 1.0协议发表为RFC 5849，一个非正式[[RFC|RFC]]。

=== OAuth 2.0 ===
OAuth 2.0是OAuth协议的下一版本，但不向下-{zh-cn:兼容; zh-tw:相容;}-OAuth 1.0。OAuth 2.0关注客户端开发者的简易性，同时为Web应用、桌面应用、手机和智能设备提供专门的认证流程。

[[Facebook|Facebook]]的新的Graph API只支持OAuth 2.0<ref>{{Cite web |url=http://developers.facebook.com/docs/authentication/ |title=存档副本 |access-date=2010-07-06 |archive-date=2012-08-07 |archive-url=https://web.archive.org/web/20120807203619/https://developers.facebook.com/docs/authentication/ |dead-url=no }}</ref>，Google在[[2011年3月|2011年3月]]也宣布Google API对OAuth 2.0的支持<ref>{{Cite web |url=http://googlecode.blogspot.com/2011/03/making-auth-easier-oauth-20-for-google.html |title=Making auth easier: OAuth 2.0 for Google APIs |access-date=2011-04-03 |archive-date=2013-07-13 |archive-url=https://www.webcitation.org/6I4cbvB52?url=http://googlecode.blogspot.com/2011/03/making-auth-easier-oauth-20-for-google.html |dead-url=no }}</ref>，Windows Live也支持OAuth 2.0<ref>{{Cite web |url=http://msdn.microsoft.com/en-us/library/hh243647.aspx |title=Windows Live - OAuth 2.0 |access-date=2011-12-23 |archive-date=2017-07-11 |archive-url=https://web.archive.org/web/20170711195343/https://msdn.microsoft.com/en-us/library/hh243647.aspx }}</ref>。

== 安全 ==
2009年4月23日，OAuth宣告了一个1.0协议的安全漏洞。该漏洞影响了OAuth 1.0核心规范第6节的OAuth的认证流程（也称作3阶段OAuth）。<ref>{{Cite web
| title = OAuth Security Advisory: 2009.1
| accessdate = 2009-04-23
| date = 2009-04-23
| url = http://oauth.net/advisories/2009-1
| archive-date = 2016-05-27
| archive-url = https://web.archive.org/web/20160527002938/http://oauth.net/advisories/2009-1/
| dead-url = no
}}</ref>于是，发布了OAuth Core协议1.0a版本来解决这一问题。<ref>{{Cite web |url=http://oauth.net/core/1.0a |title=存档副本 |access-date=2010-07-06 |archive-date=2009-06-30 |archive-url=https://web.archive.org/web/20090630092220/http://oauth.net/core/1.0a |dead-url=no }}</ref>

2014年5月，新加坡南洋理工大学一位名叫王晶（Wang Jing）的数学系博士生<ref>{{cite web |title=Wang Jing |url=http://www.tetraph.com/wangjing |access-date=2014-11-08 |archive-date=2014-11-08 |archive-url=https://web.archive.org/web/20141108112608/http://tetraph.com/wangjing/ |dead-url=no }}</ref>，发现了'''OAuth'''和[[OpenID|OpenID]]开源登录工具的"[[隐蔽重定向漏洞|隐蔽重定向漏洞]]"<ref>{{cite web |title=Covert Redirect |url=http://www.tetraph.com/covert_redirect |publisher=Tetraph. |date=2014-05-01 |access-date=2014-11-08 |archive-url=https://web.archive.org/web/20141108095835/http://tetraph.com/covert_redirect/ |archive-date=2014-11-08 |dead-url=yes }}</ref>。该漏洞首先由CNET报道<ref>{{cite web |title=Serious security flaw in OAuth, OpenID discovered |url=http://www.cnet.com/news/serious-security-flaw-in-oauth-and-openid-discovered/ |publisher=CNET |date=2014-05-02 |access-date=2014-05-09 |archive-date=2015-11-02 |archive-url=https://web.archive.org/web/20151102002904/http://www.cnet.com/news/serious-security-flaw-in-oauth-and-openid-discovered/ |dead-url=no }}</ref>。[[腾讯QQ|腾讯QQ]]、[[新浪微博|新浪微博]]、阿里巴巴[[淘宝|淘宝]]、支付宝、[[搜狐|搜狐网]]、[[网易|网易]]、[[人人网|人人网]]、开心网、亚马逊、[[Windows_Live|微软Live]]、WordPress、eBay、PayPal、[[脸书|脸书]]、[[谷歌|谷歌]]、[[雅虎|雅虎]]、[[領英|領英]]、VK.com、Mail.Ru、Odnoklassniki.ru、[[GitHub|GitHub]]等大量知名网站受影响<ref>{{cite web |title=Covert Redirect Vulnerability Related to OAuth 2.0 and OpenID |url=http://tetraph.com/covert_redirect/oauth2_openid_covert_redirect.html |publisher=Tetraph |date=2014-05-01 |access-date=2014-11-08 |archive-url=https://web.archive.org/web/20141016043649/http://tetraph.com/covert_redirect/oauth2_openid_covert_redirect.html |archive-date=2014-10-16 |dead-url=yes }}</ref>。黑客可利用该漏洞给钓鱼网站“变装”，用知名大型网站链接引诱用户登录钓鱼网站，一旦用户访问钓鱼网站并成功登陆授权，黑客即可读取其在网站上存储的私密信息<ref>{{cite web |title=
针对近期“博全球眼球OAuth漏洞”的分析与防范建议 |url=
http://blog.knownsec.com/2014/05/oauth_vulnerability_analysis/ |publisher=
知道创宇 |date=
2014-05-06 |access-date=
2014-11-08 |archive-url=
https://web.archive.org/web/20141108100150/http://blog.knownsec.com/2014/05/oauth_vulnerability_analysis/ |archive-date=
2014-11-08 |dead-url=
yes }}</ref>。该问题被凤凰网<ref>{{cite web |title=两款互联网登录系统曝出重大漏洞短期内或无法修复 |url=http://tech.ifeng.com/internet/detail_2014_05/03/36130721_0.shtml |publisher=凤凰网 |date=2014-05-03 |access-date=2014-11-08 |archive-date=2014-11-08 |archive-url=https://web.archive.org/web/20141108171651/http://tech.ifeng.com/internet/detail_2014_05/03/36130721_0.shtml/ |dead-url=no }}</ref>，网易<ref>{{cite web |title=OAuth与OpenID登录工具曝出重大漏洞 |url=http://digi.163.com/14/0503/08/9RACJBK900162OUT.html |publisher=网易 |date=2014-05-03 |access-date=2014-11-08 |archive-url=https://web.archive.org/web/20141108102054/http://digi.163.com/14/0503/08/9RACJBK900162OUT.html |archive-date=2014-11-08 |dead-url=yes }}</ref>，搜狐<ref>{{cite web |title=两款互联网登录系统曝出重大漏洞短期内或无法修复 |url=http://media.sohu.com/20140504/n399096249.shtml |publisher=搜狐 |date=2014-05-04 |access-date=2014-11-08 |archive-url=https://web.archive.org/web/20141108101341/http://media.sohu.com/20140504/n399096249.shtml |archive-date=2014-11-08 |dead-url=yes }}</ref>，太平洋电脑网<ref>{{cite web |title=OAuth和OpenID两款登六系统再曝重大漏洞 |url=http://network.pconline.com.cn/471/4713896.html |publisher=太平洋电脑网 |date=2014-05-04 |deadurl=yes |archiveurl=https://web.archive.org/web/20141108100217/http://network.pconline.com.cn/471/4713896.html |archivedate=2014-11-08 }}</ref>，人民网<ref>{{cite web |title=Oauth2.0协议曝漏洞大量社交网隐私或遭泄露 |url=http://it.people.com.cn/n/2014/0504/c1009-24969253.html |publisher=人民网 |date=2014-05-04 |deadurl=yes |archiveurl=https://web.archive.org/web/20141108131652/http://it.people.com.cn/n/2014/0504/c1009-24969253.html |archivedate=2014-11-08 }}</ref>，CSDN<ref>{{cite web |title=OAuth与OpenID登录工具曝出重大漏洞 |url=http://www.csdn.net/article/2014-05-04/2819588 |publisher=CSDN |date=2014-05-04 |access-date=2014-11-08 |archive-url=https://web.archive.org/web/20150721180420/http://www.csdn.net/article/2014-05-04/2819588 |archive-date=2015-07-21 |dead-url=yes }}</ref>等大量中文网站报道。其实漏洞不是出现在OAuth这个协议本身，这个协议本身是没有问题的，之所以存在问题是因为各个厂商没有严格参照官方文档，只是实现了简版。问题的原因在于OAuth的提供方提供OAuth授权过程中没有对回调的URL进行校验，从而导致可以被赋值为非原定的回调URL，就可以导致跳转、XSS等问题，甚至在对回调URL进行了校验的情况可以被绕过<ref>{{cite web |title=
针对近期“博全球眼球OAuth漏洞”的分析与防范建议 |url=
http://www.freebuf.com/vuls/33750.html |publisher=
FreeBuf |date=
2014-05-07 |access-date=
2014-11-08 |archive-date=
2018-04-11 |archive-url=
https://web.archive.org/web/20180411201119/http://www.freebuf.com/vuls/33750.html }}</ref>。目前大部分被涉及的网站都已经修复该问题。

== OAuth与其他标准 ==
[[File:OpenIDvs.Pseudo-AuthenticationusingOAuth-zh-hans.svg|OpenID vs. pseudo-authentication using OAuth]]

== 参见 ==
* [[OpenID|OpenID]]
* [[隐蔽重定向漏洞|隐蔽重定向漏洞]]

== 参考文献 ==
{{Reflist|2}}

== 外部链接 ==
* [http://oauth.net/ OAuth.net] {{Wayback|url=http://oauth.net/ |date=20151204191333 }}
* [https://www.ietf.org/mailman/listinfo/oauth OAuth WG] {{Wayback|url=https://www.ietf.org/mailman/listinfo/oauth |date=20160421181250 }} at the [[IETF|IETF]]
* [http://groups.google.com/group/oauth OAuth Code Library Support] {{Wayback|url=http://groups.google.com/group/oauth |date=20130603063605 }} on [[Google_Groups|Google Groups]]
* [http://hueniverse.com/oauth OAuth Beginner's Guide and Resource Center] {{Wayback|url=http://hueniverse.com/oauth |date=20151127164628 }} on Hueniverse
* [http://sites.google.com/site/oauthgoog/ Google OAuth & Federated Login Research] {{Wayback|url=http://sites.google.com/site/oauthgoog/ |date=20160308025741 }}
* [https://web.archive.org/web/20090121205001/http://developer.yahoo.com/oauth/guide/ Yahoo! OAuth Quick Start Guide]
* [http://article.yeeyan.org/view/sakinijino/38693 OAuth安全忠告] {{Wayback|url=http://article.yeeyan.org/view/sakinijino/38693 |date=20190606131038 }}
* [http://www.ibm.com/developerworks/cn/java/j-lo-oauth/index.html 基于OAuth安全协议的Java应用编程] {{Wayback|url=http://www.ibm.com/developerworks/cn/java/j-lo-oauth/index.html |date=20190612100010 }}
* [http://www.rollingcode.org/blog/f/oauth-core-1.0-final-cn.html OAuth Core规范的译文] {{Wayback|url=http://www.rollingcode.org/blog/f/oauth-core-1.0-final-cn.html |date=20220314034846 }}
* [http://tetraph.com/covert_redirect/ Covert Redirect] {{Wayback|url=http://tetraph.com/covert_redirect/ |date=20160310005903 }}
* [http://tech.ifeng.com/internet/detail_2014_05/03/36130721_0.shtml/ 凤凰网] {{Wayback|url=http://tech.ifeng.com/internet/detail_2014_05/03/36130721_0.shtml/ |date=20190725135610 }}
* [https://web.archive.org/web/20141108131652/http://it.people.com.cn/n/2014/0504/c1009-24969253.html 人民网]
* [https://web.archive.org/web/20141016043649/http://tetraph.com/covert_redirect/oauth2_openid_covert_redirect.html  Covert Redirect Vulnerability Related to OAuth 2.0 and OpenID]
* [http://www.cnet.com/news/serious-security-flaw-in-oauth-and-openid-discovered/ Serious security flaw in OAuth, OpenID discovered] {{Wayback|url=http://www.cnet.com/news/serious-security-flaw-in-oauth-and-openid-discovered/ |date=20151102002904 }}
* [https://web.archive.org/web/20141108100150/http://blog.knownsec.com/2014/05/oauth_vulnerability_analysis/ 针对近期“博全球眼球OAuth漏洞”的分析与防范建议]
[[Category:雲端運算|Category:雲端運算]]
[[Category:网际协议|Category:网际协议]]
[[Category:计算机访问控制协议|Category:计算机访问控制协议]]