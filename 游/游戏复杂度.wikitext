{{noteTA
|G1=IT
| G2=Games
}}
{{roughtranslation|time=2018-04-27T13:27:28+00:00}}
'''游戏复杂度'''（{{lang-en|game complexity}}）可以用许多方法加以衡量。本条目讲述其中的5種方法：状态空间复杂度（{{lang|en|state-space complexity}}）、[[游戏树|游戏树]]的大小（{{lang|en|game tree size}}）、策略复杂度（{{lang|en|decision complexity}}）、博弈树复杂度（{{lang|en|game-tree complexity}}）與[[计算复杂度|计算复杂度]]（{{lang|en|computational complexity}}）。

==游戏复杂度的衡量==
=== 状态空间复杂度 ===
游戏的'''状态空间复杂度'''指的是从游戏最开始的状态可以变化出的符合规则的状态的数量。<ref name="Allis1994"/>

当这太难以计算时，常常通过包含一些不符合规则的状态或不可能在游戏中出现的状态, 从而计算出一个[[上界限|上界限]]。

=== 游戏树的大小 ===
'''游戏树的大小'''指的是游戏可以被玩弄的总次数：从[[游戏树|游戏树]]最初的根节点开始延伸出的叶子节点的数量.

游戏树通常比状态空间要大得多，因为同一个状态可以由不同的行为顺序形成。（例如，在一回合[[井字棋|井字棋]]游戏中，面板上有两个X和一个O，这个状态可能由两个不同的方式形成，具体的形成过程由第一个X的下子位置所决定）。一个游戏树的大小的最大值有时可以这么计算：通过仅增大游戏树的方式，简化游戏的过程（例如，允许一些本来不符合规则的行为），直到游戏树的大小变得易于计算。

不过，对于一些没有行为上限的游戏（比如说没棋盘大小的界限，或者有一个可以重复游戏状态的规则），游戏树的大小将会是无限的。

=== 决策树 ===
之后的两种方案用到了'''决策树'''的方法。一个决策树是游戏树的子树。决策树的状态会被标记上「玩家A获胜」、「玩家B获胜」或者「平手」；如果有那个状态可以被证明具有一个标记（假设双方都作出了最好的决策），并且光从其它状态就可以得出结论.。（终端的状态可以直接标记；如果现在该A行动：如果下一个状态标志着A的胜利，那么现在的状态可以被标记为「玩家A获胜」；如果下一个状态标志着B的胜利，那么现在的状态可以被标记为「玩家B获胜」；或者可以被标记为「平手」，如果下一个状态是平局或者B胜利。相应的对于现在该B行动也是一样。）

==== 决策复杂度 ====
一个游戏的'''决策复杂度'''指的是在构成初始状态取值的最小的决策树中，叶子节点的数量。

==== 博弈树复杂度 ====
一个游戏的「博弈树复杂度」指的是在构成初始状态取值的最小「整个」决策树中，叶子节点的数量。<ref name="Allis1994"/> 整个决策树包含树中所有深度的节点。

这是一个为了尝试决定初始状态取值，所做出的对于需要考虑的节点数量的一个[[极小化极大算法|极小化极大算法]]（[[Minimax|Minimax]]）。

就算是去估量博弈树复杂度，那也十分困难。不过对于一些游戏，一个合理的下界限可以由底数为游戏的平均[[分支因子|分支因子]]，指数为游戏的{{link-en|平均步数|Ply (game theory)}}的幂得出，即可以表示为：

<math>GTC \geq b^d</math>

=== 计算复杂度 ===
一个游戏的'''[[計算複雜性理論|計算複雜性理論]]'''描述对游戏进行[[渐近分析|渐近分析]]的难度，随着它变得过于巨大，用[[大O符号|大O符号]]表示，或者用[[复杂性类|复杂性类]]的成员关系表示。这个概念并不应用于特定的游戏，而是用于{{link-en|广义的游戏|Generalized game}}，它们会变得非常大，通常在一个n宽n高的面板上玩弄它们。（从计算复杂度的角度来看，一个在有限面板上进行的游戏是一个有限问题，可以通过计算O(1)解决。例如遍历从方案到最佳的移动方案的所有方案。）

==例子: 井字棋==
{{seealso|井字棋}}

以井字棋而言，一个简单的状态空间大小的上界限是3<sup>9</sup> = 19,683。（ 每一个格子中有3种状态,，有9个格子）这样计算包含了许多不合规则的状态，比如有5个X却没有0的状态，或者两方玩家都有形成一字的状态。一个更精细的计算，除去了这些不合规则的状态之后，留下5,478个状态。然后，如果把旋转或翻转后会得到相同结果的状态算作同一个的状态话，那么就可以得出765个真正本质上不同的状态。

一个简单的游戏树大小的上界限是9! = 362,880。（一开始有9个格子可以下子,，第二回合变为8个，以此类推）这包括了一方玩家获胜后继续下子的不符合规则的情况。一个更精细的计算得出的是255,168种游戏过程。如果把旋转或翻转后会得到相同结果的状态当作相同的话，那么就仅有26,830种游戏过程。

井字棋的计算复杂度取决与它如何[[广义化|广义化]]。一种自然的广义化是将其变为[[m,n,k型游戏|m,n,k型游戏]]：在一个宽"m"高"n"的棋盘上，第一个将"k"个子连成一线的玩家获胜。很容易就可以发现，这个游戏可以通过查找整个游戏树，解[[DSPACE|DSPACE]](''mn'')，得出结果。这将它归类到了重要的复杂性类[[PSPACE|PSPACE]]里面。稍微再花点功夫，可以将它变换为{{link-en|PSPACE完整|PSPACE-complete}}。<ref name="Reisch1980">{{cite journal | author = Stefan Reisch | title = Gobang ist PSPACE-vollstandig (Gomoku is PSPACE-complete) | journal = Acta Informatica | volume = 13 | page = 5966 | year = 1980}}</ref>

==一些知名游戏的复杂度==
由于游戏复杂度非常巨大，下面表中一些数据只显示了以10为底数的指数部分。下面的表中的数值都需要小心对待：在游戏中，一个看起来很微小的规则变换会引起结果的巨大变化（通常依然会被粗略地估计），可能实际情况会比数值估计的结果要大得多。

{| class="wikitable sortable" cellpadding="5"
|-
!游戏
!棋盘大小
(格数)
!状态[[空间复杂度|空间复杂度]]
(以10为底数的指数部分)
!博弈树复杂度
(以10为底数的指数部分)
!平均游戏长度
({{link-en|步数|Ply (game theory)}})
!分枝因素
!引用
!对应{{link-en|广义化游戏|generalized game}}的[[复杂性类|复杂性类]]
|-
|[[井字棋|井字棋]]
|align="right"|9
|align="right"|3
|align="right"|5
|align="right"|9
|align="right"|4
|align="right"|
|[[PSPACE-complete|PSPACE-complete]]<ref name="Reisch1980"/>
|-
|[[Sim_(pencil_game)|Sim]]
|align="right"|15
|align="right"|3
|align="right"|8
|align="right"|14
|align="right"|3.7
|align="right"|
|[[PSPACE-complete|PSPACE-complete]]<ref>[http://portal.acm.org/citation.cfm?id=728124 Wolfgang Slany: The Complexity of Graph Ramsey Games]</ref>
|-
|[[五格骨牌|五格骨牌]]
|align="right"|64
|align="right"|12
|align="right"|18
|align="right"|10
|align="right"|75
|align="right"|<ref name="GamesSolved"/> <ref>Hilarie K. Orman: ''Pentominoes: A First Player Win'' in ''[http://www.msri.org/publications/books/Book29/contents.html Games of no chance] {{Wayback|url=http://www.msri.org/publications/books/Book29/contents.html |date=20100828233536 }}'', MSRI Publications – Volume 29, 1996, pages 339-344. Online: [http://www.msri.org/publications/books/Book29/files/orman.pdf pdf] {{Wayback|url=http://www.msri.org/publications/books/Book29/files/orman.pdf |date=20090325093218 }}.</ref>
|?, but in [[PSPACE|PSPACE]]
|-
|[[美國播棋|美國播棋]]<ref> See van den Herik et al for rules. </ref>
|align="right"|14
|align="right"|13
|align="right"|18
|align="right"|
|align="right"|
|align="right"|<ref name="GamesSolved"/>
|Generalization is unclear
|-
|[[屏風式四子棋|屏風式四子棋]]
|align="right"|42
|align="right"|13
|align="right"|21
|align="right"|36
|align="right"|4
|align="right"|<ref>{{cite web | title = John's Connect Four Playground | author = John Tromp | year = 2010 | url = http://www.cwi.nl/~tromp/c4/c4.html | deadurl = yes | archiveurl = https://web.archive.org/web/20030408101433/http://www.cwi.nl/~tromp/c4/c4.html | archivedate = 2003-04-08 | access-date = 2014-02-12 }}</ref> <ref name="Allis1994"/>
|?, but in [[PSPACE|PSPACE]]
|-
|[[Domineering|Domineering]] (8 × 8)
|align="right"|64
|align="right"|15
|align="right"|27
|align="right"|30
|align="right"|8
|align="right"|<ref name="GamesSolved"/>
|?, but in [[PSPACE|PSPACE]]; in [[P_(complexity_class)|P]] for certain dimensions<ref> {{cite paper| authors=Michael Lachmann | author2= Cristopher Moore | author3=Ivan Rapaport|title=Who wins domineering on rectangular boards? | volume=MSRI Combinatorial Game Theory Research Workshop | date=July 2000 }}</ref>
|-
|[[馬來播棋|馬來播棋]]
|align="right"|14
|align="right"|15
|align="right"|33
|align="right"|
|align="right"|
|align="right"|<ref name="GamesSolved">{{cite journal | title= Games solved: Now and in the future | author = H. J. van den Herik | author2 = J. W. H. M. Uiterwijk | author3 = J. van Rijswijck | year = 2002 | journal = Artificial Intelligence | volume = 134 | issue=1–2 | pages=277–311 | doi= 10.1016/S0004-3702(01)00152-7}} </ref>
|
|-
|[[英國跳棋|英國跳棋]]
|align="right"|32
|align="right"|20 or 18
|align="right"|31
|align="right"|70
|align="right"|2.8
|align="right"|<ref>{{cite journal | author = Jonathan Schaeffer et al. | title = Checkers is Solved | journal = Science | date = July 6, 2007 | doi=10.1126/science.1144079 | volume=317 |issue= 5844 |pages= 1518–1522 | pmid=17641166 }}</ref> or <ref name="Allis1994"/>
|[[EXPTIME-complete|EXPTIME-complete]]<ref name="robson1984">{{cite journal | author = J. M. Robson | title = N by N checkers is Exptime complete | journal = [[SIAM_Journal_on_Computing|SIAM Journal on Computing]], | volume = 13 | issue = 2 | pages = 252–267 | year = 1984 | doi = 10.1137/0213018 }}</ref>
|-
|[[西非播棋|西非播棋]]<ref>See Allis 1994 for rules</ref>
|align="right"|12
|align="right"|12
|align="right"|32
|align="right"|60
|align="right"|3.5
|align="right"|<ref name="Allis1994"/>
|Generalization is unclear
|-
|[[多層式四子棋|多層式四子棋]]
|align="right"|64
|align="right"|30
|align="right"|34
|align="right"|20
|align="right"|54.2
|align="right"|<ref name=Allis1994/>
|[[PSPACE-complete|PSPACE-complete]]<ref name="Reisch1980"/>
|-
|[[迂棋|迂棋]]
|align="right"|45
|align="right"|21
|align="right"|46
|align="right"|44
|align="right"|11
|align="right"|<ref name="Schadd2008">{{cite journal | author = M.P.D. Schadd, M.H.M. Winands, J.W.H.M. Uiterwijk, H.J. van den Herik and M.H.J. Bergsma | year = 2008 | title = Best Play in Fanorona leads to Draw | journal = [[New_Mathematics_and_Natural_Computation|New Mathematics and Natural Computation]] | volume = 4 | issue = 3 | pages = 369–387 | url = https://dke.maastrichtuniversity.nl/m.winands/documents/Fanorona.pdf | doi = 10.1142/S1793005708001124 | access-date = 2014-02-12 | archive-date = 2020-10-25 | archive-url = https://web.archive.org/web/20201025021008/https://dke.maastrichtuniversity.nl/m.winands/documents/Fanorona.pdf | dead-url = no }}</ref>
|?, but in [[EXPTIME|EXPTIME]]
|-
|[[直棋|直棋]]
|align="right"|24
|align="right"|10
|align="right"|50
|align="right"|50
|align="right"|10
|align="right"|<ref name="Allis1994"/>
|?, but in [[EXPTIME|EXPTIME]]
|-
|[[西洋跳棋|西洋跳棋]]
|align="right"|50
|align="right"|30
|align="right"|54
|align="right"|90
|align="right"|4
|align="right"|<ref name="Allis1994"/>
|[[EXPTIME-complete|EXPTIME-complete]]<ref name="robson1984"/>
|-
|[[中國跳棋|中國跳棋]](2人)
|align="right"|121
|align="right"|23
|align="right"|
|align="right"|
|align="right"|
|align="right"|<ref name=Bell_Halma>{{cite journal|author=G.I. Bell|title=The Shortest Game of Chinese Checkers and Related Problems|journal=Integers|year=2009|arxiv=0803.1245|url=http://emis.ams.org|access-date=2020-03-24|archive-url=https://web.archive.org/web/20190902211912/http://www.emis.ams.org/|archive-date=2019-09-02|dead-url=yes}}</ref>
|[[EXPTIME|EXPTIME]]-complete <ref name=pebble>{{cite journal|title=Classes of Pebble Games and Complete Problems|journal= SIAM Journal on Computing| volume = 8| year = 1979 |pages= 574–586|author=Takumi Kasai, Akeo Adachi, and Shigeki Iwata|doi=10.1137/0208046|issue=4}} Proves completeness of the generalization to arbitrary graphs.</ref>
|-
|[[中國跳棋|中國跳棋]](6人)
|align="right"|121
|align="right"|78
|align="right"|
|align="right"|
|align="right"|
|align="right"|<ref name=Bell_Halma/>
|[[EXPTIME|EXPTIME]]-complete <ref name=pebble/>
|-
|[[集結棋|集結棋]]
|align="right"|64
|align="right"|23
|align="right"|64
|align="right"|44
|align="right"|29
|align="right"|<ref name="Winands2004">{{cite thesis | author = Mark H.M. Winands | year = 2004 | title = Informed Search in Complex Games | degree = Ph.D. | publisher = Maastricht University, Maastricht, The Netherlands | isbn = 90-5278-429-9 | url = https://dke.maastrichtuniversity.nl/m.winands/documents/informed_search.pdf | access-date = 2014-02-12 | archive-date = 2020-07-31 | archive-url = https://web.archive.org/web/20200731210435/https://dke.maastrichtuniversity.nl/m.winands/documents/informed_search.pdf | dead-url = no }}</ref>
|?, but in [[EXPTIME|EXPTIME]]
|-
|[[黑白棋|黑白棋]]
|align="right"|64
|align="right"|28
|align="right"|58
|align="right"|58
|align="right"|10
|align="right"|<ref name="Allis1994"/>
|[[PSPACE-complete|PSPACE-complete]]<ref>{{cite journal | author = S. Iwata and T. Kasai | title = The Othello game on an n*n board is PSPACE-complete | journal = Theor. Comp. Sci. | issue = 2 | year = 1994 | pages = 329–340 | volume = 123 | doi = 10.1016/0304-3975(94)90131-7}}</ref>
|-
|[[OnTop_(board_game)|OnTop]] (2人局)
|align="right"|72
|align="right"|88
|align="right"|62
|align="right"|31
|align="right"|23.77
|align="right"|<ref name="OnTopComputer">{{cite thesis | title=Analysis and Implementation of the Game OnTop | url=https://project.dke.maastrichtuniversity.nl/games/files/msc/Briesemeister_Thesis.pdf | author=Robert Briesemeister | year=2009 | publisher=Maastricht University, Dept of Knowledge Engineering | access-date=2014-02-12 | archive-date=2014-03-06 | archive-url=https://web.archive.org/web/20140306093917/https://project.dke.maastrichtuniversity.nl/games/files/msc/Briesemeister_Thesis.pdf | dead-url=no }}</ref>
|
|-
|[[六貫棋|六貫棋]]
|align="right"|121
|align="right"|57
|align="right"|98
|align="right"|40
|align="right"|280
|align="right"|<ref name="GamesSolved"/>
|[[PSPACE-complete|PSPACE-complete]]<ref>{{cite journal | author = Stefan Reisch | title = Hex ist PSPACE-vollst?ndig (Hex is PSPACE-complete) | journal = Acta Inf. | issue = 15 | year = 1981 | pages = 167–191}}</ref>
|-
|[[五子棋|五子棋]](15x15, 无禁手)
|align="right"|225
|align="right"|105
|align="right"|70
|align="right"|30
|align="right"|210
|align="right"|<ref name="Allis1994"/>
|[[PSPACE-complete|PSPACE-complete]]<ref name="Reisch1980"/>
|-
|[[围棋|围棋]](9x9)
|align="right"|81
|align="right"|38
|align="right"|
|align="right"|45
|align="right"|
|align="right"|<ref name="cwi">{{cite web | title = Combinatorics of Go | author = John Tromp and Gunnar Farneb?ck | year = 2007 | url = http://www.cwi.nl/~tromp/go/gostate.ps }}{{dead link|date=2018年1月 |bot=InternetArchiveBot |fix-attempted=yes }} This paper derives the bounds 48<log(log(''N''))<171 on the number of possible games ''N''.</ref> <ref name="Allis1994" />
|[[EXPTIME-complete|EXPTIME-complete]]<ref name="Robson1983">{{cite book | author = J. M. Robson | chapter = The complexity of Go | title = Information Processing; Proceedings of IFIP Congress | year = 1983 | pages = 413–417}}</ref>
|-
|[[國際象棋|國際象棋]]
|align="right"|64
|align="right"|47
|align="right"|123
|align="right"|80
|align="right"|35
|align="right"|<ref name="Shannon1950">The size of the state space and game tree for chess were first estimated in {{cite journal |author=[[Claude_Shannon|Claude Shannon]] |title=Programming a Computer for Playing Chess |journal=Philosophical Magazine |volume=41 |issue=314 |year=1950 |url=http://archive.computerhistory.org/projects/chess/related_materials/text/2-0%20and%202-1.Programming_a_computer_for_playing_chess.shannon/2-0%20and%202-1.Programming_a_computer_for_playing_chess.shannon.062303002.pdf |deadurl=yes |archiveurl=https://www.webcitation.org/5oFLE7Mgx?url=http://archive.computerhistory.org/projects/chess/related_materials/text/2-0%20and%202-1.Programming_a_computer_for_playing_chess.shannon/2-0%20and%202-1.Programming_a_computer_for_playing_chess.shannon.062303002.pdf |archivedate=2010-03-15 |access-date=2014-02-12 }} Shannon gave estimates of 10<sup>43</sup> and 10<sup>120</sup> respectively, smaller than the upper bound in the table,
which is detailed in [[Shannon_number|Shannon number]].</ref>
|[[EXPTIME-complete|EXPTIME-complete]] (without 50-move drawing rule) <ref name="Fraenkel1981">{{cite journal | author = [[Aviezri_Fraenkel|Aviezri Fraenkel]] and D. Lichtenstein | title = Computing a perfect strategy for n×n chess requires time exponential in n | journal = J. Comb. Th. A | issue = 31 | year = 1981 | pages = 199–214 }}</ref>
|-
|[[連六棋|連六棋]]
|align="right"|361
|align="right"|172
|align="right"|140
|align="right"|30
|align="right"|46000
|align="right"|<ref name=EnhancePNConn6> {{cite book | title=2009 Chinese Control and Decision Conference |doi = 10.1109/CCDC.2009.5191963 | chapter=Enhancements of proof number search in connect6 | year=2009 | last1=Chang-Ming Xu | last2=Ma | first2=Z.M. | last3=Jun-Jie Tao | last4=Xin-He Xu |ISBN = 978-1-4244-2722-2 | page = 4525 }}</ref>
|[[PSPACE|PSPACE-complete]]<ref>[http://portal.acm.org/citation.cfm?id=1290250 On the fairness and complexity of generalized k-in-a-row games<!-- Bot generated title -->]</ref>
|-
|[[雙陸棋|雙陸棋]]
|align="right"|28
|align="right"|20
|align="right"|144
|align="right"|50-60
|align="right"|250
|align="right"|<ref>{{cite web |url=http://books.nips.cc/papers/txt/nips04/0259.txt |title=存档副本 |accessdate=2008-04-15 |deadurl=yes |archiveurl=https://web.archive.org/web/20090226220040/http://books.nips.cc/papers/txt/nips04/0259.txt |archivedate=2009-02-26 }}</ref>
|Generalization is unclear
|-
|[[象棋|象棋]]
|align="right"|90
|align="right"|40
|align="right"|150
|align="right"|95
|align="right"|38
|align="right"|<ref name="Allis1994">{{cite thesis | author = [[Victor_Allis|Victor Allis]] | year = 1994 | title = Searching for Solutions in Games and Artificial Intelligence | degree = Ph.D. | publisher = University of Limburg, Maastricht, The Netherlands | isbn = 90-900748-8-0 | url = https://project.dke.maastrichtuniversity.nl/games/files/phd/SearchingForSolutions.pdf | access-date = 2014-02-12 | archive-date = 2020-09-27 | archive-url = https://web.archive.org/web/20200927154443/https://project.dke.maastrichtuniversity.nl/games/files/phd/SearchingForSolutions.pdf | dead-url = no }}</ref> <ref name="Hsu2004">{{cite journal |author=Shi-Jim Yen, Jr-Chang Chen, Tai-Ning Yang, and Shun-Chin Hsu |title=Computer Chinese Chess |date=March 2004 |journal=International Computer Games Association Journal |volume=27 |issue=1 |pages=3–18 |url=http://www.csie.ndhu.edu.tw/~sjyen/Papers/2004CCC.pdf |deadurl=yes |archiveurl=https://web.archive.org/web/20070614111609/http://www.csie.ndhu.edu.tw/~sjyen/Papers/2004CCC.pdf |archivedate=2007-06-14 |access-date=2014-02-12 }}</ref><ref name="Donghwi">{{cite web | author = Donghwi Park | title = Space-state complexity of Korean chess and Chinese chess | url = http://arxiv.org/abs/1507.06401 | year = 2015 | access-date = 2015-08-19 | archive-date = 2020-08-01 | archive-url = https://web.archive.org/web/20200801034015/https://arxiv.org/abs/1507.06401 | dead-url = no }}</ref>
|?, believed to be [[EXPTIME-complete|EXPTIME-complete]]
|-
|[[角力棋|角力棋]]
|align="right"|61
|align="right"|25
|align="right"|154
|align="right"|87
|align="right"|60
|align="right"|<ref name=PasChor>{{cite web|last=Chorus|first=Pascal|title=Implementing a Computer Player for Abalone Using Alpha-Beta and Monte-Carlo Search|url=https://project.dke.maastrichtuniversity.nl/games/files/msc/pcreport.pdf|publisher=Dept of Knowledge Engineering, Maastricht University|accessdate=29 March 2012|archive-date=2020-09-18|archive-url=https://web.archive.org/web/20200918150717/https://project.dke.maastrichtuniversity.nl/games/files/msc/pcreport.pdf|dead-url=no}}</ref> 
|?, but in [[EXPTIME|EXPTIME]]
|-
|[[三寶棋|三寶棋]]
|align="right"|271
|align="right"|127
|align="right"|157
|align="right"|66
|align="right"|240
|align="right"|<ref name="GamesSolved"/> <ref>{{cite web|last=Joosten|first=B|title=Creating a Havannah Playing Agent|url=https://project.dke.maastrichtuniversity.nl/games/files/bsc/bscHavannah.pdf|accessdate=29 March 2012|archive-date=2016-03-03|archive-url=https://web.archive.org/web/20160303191008/https://project.dke.maastrichtuniversity.nl/games/files/bsc/bscHavannah.pdf|dead-url=no}}</ref> 
|?, but in [[PSPACE|PSPACE]]
|-
|[[韓國將棋|韓國將棋]]
|align="right"|90
|align="right"|44
|align="right"|160
|align="right"|100
|align="right"|40
|align="right"|<ref name="Donghwi" />
|?, believed to be [[EXPTIME-complete|EXPTIME-complete]]
|-
|[[牆棋|牆棋]]
|align="right"|81
|align="right"|42
|align="right"|162
|align="right"|91
|align="right"|60
|align="right"|<ref name=MasterQuor>{{cite thesis |author=Lisa Glendenning |title=Mastering Quoridor |department=Computer Science |degree=B.Sc. |publisher=[[University_of_New_Mexico|University of New Mexico]] |url=http://hyperion.cs.washington.edu/attachments/15/glendenning_ugrad_thesis.pdf |date=May 2005 |deadurl=yes |archiveurl=https://web.archive.org/web/20120315192840/http://hyperion.cs.washington.edu/attachments/15/glendenning_ugrad_thesis.pdf |archivedate=2012-03-15 |access-date=2014-02-12 }}</ref>
|?, but in [[PSPACE|PSPACE]]
|-
|[[卡卡頌|卡卡頌]](2p base game)
|align="right"|72
|align="right"|>40
|align="right"|195
|align="right"|71
|align="right"|55
|align="right"|<ref name="CarcassoneComputer">{{cite thesis | title=Implementing a Computer Player for Carcassonne | url=https://project.dke.maastrichtuniversity.nl/games/files/msc/MasterThesisCarcassonne.pdf | author=Cathleen Heyden | year=2009 | publisher=Maastricht University, Dept of Knowledge Engineering | access-date=2014-02-12 | archive-date=2014-03-06 | archive-url=https://web.archive.org/web/20140306093851/https://project.dke.maastrichtuniversity.nl/games/files/msc/MasterThesisCarcassonne.pdf | dead-url=no }}</ref>
|Generalization is unclear
|-
|[[亞馬遜棋|亞馬遜棋]]
|align="right"|100
|align="right"|40
|align="right"|212
|align="right"|84
|align="right"|374 or 299<ref>The lower branching factor is for the second player.</ref>
|align="right"|<ref name="Kloetzer_themonte-carlo">{{cite journal | author = Julien Kloetzer | author2 = Hiroyuki Iida | author3 = Bruno Bouzy | title = The Monte-Carlo Approach in Amazons | year = 2007 | url = http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.79.7640 | access-date = 2014-02-12 | archive-date = 2012-10-17 | archive-url = https://web.archive.org/web/20121017013942/http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.79.7640 | dead-url = no }}</ref> <ref name="Hengens_thesis">{{cite paper | author = P. P. L. M. Hensgens | title = A Knowledge-Based Approach of the Game of Amazons | year = 2001 | publisher = Universiteit Maastricht, Institute for Knowledge and Agent Technology | url = https://project.dke.maastrichtuniversity.nl/games/files/msc/Hensgens_thesis.pdf | access-date = 2014-02-12 | archive-date = 2016-03-03 | archive-url = https://web.archive.org/web/20160303214802/https://project.dke.maastrichtuniversity.nl/games/files/msc/Hensgens_thesis.pdf | dead-url = no }}</ref>
|[[PSPACE-complete|PSPACE-complete]]<ref>{{cite arxiv | author = R. A. Hearn | title = Amazons is PSPACE-complete | date = 2005-02-02 | eprint = cs.CC/0502013}}</ref>
|-
|[[围棋|围棋]](13x13)
|align="right"|169
|align="right"|79
|align="right"|
|align="right"|90
|align="right"|
|align="right"|<ref name="Allis1994"/> <ref name="cwi" />
|[[EXPTIME-complete|EXPTIME-complete]]<ref name="Robson1983" />
|-
|[[日本将棋|日本将棋]]
|align="right"|81
|align="right"|71
|align="right"|226
|align="right"|115
|align="right"|92
|align="right"|<ref name="Hsu2004"/> <ref> {{cite journal | title = Computer shogi | doi = 10.1016/S0004-3702(01)00157-6 | journal = Artificial Intelligence | volume=134 | issue=1–2 |date=january 2002 | pages=121–144 | author= Hiroyuki Iida, Makoto Sakuta, [[Jeff_Rollason|Jeff Rollason]] }} </ref>
|[[EXPTIME-complete|EXPTIME-complete]]<ref>{{cite journal | author = H. Adachi, H. Kamekawa, and S. Iwata | title = Shogi on n × n board is complete in exponential time | journal = Trans. IEICE | volume= J70-D | pages = 1843–1852 | year = 1987}}</ref>
|-
|[[印度鬥獸棋|印度鬥獸棋]]
|align="right"|64
|align="right"|43
|align="right"|402
|align="right"|92
|align="right"|17281
|align="right"|<ref name="Cox2006">{{cite web | title = Analysis and Implementation of the Game Arimaa | author = Christ-Jan Cox | year = 2006 | url = https://project.dke.maastrichtuniversity.nl/games/files/msc/Cox_thesis1.pdf | access-date = 2014-02-12 | archive-date = 2020-10-27 | archive-url = https://web.archive.org/web/20201027002021/https://project.dke.maastrichtuniversity.nl/games/files/msc/Cox_thesis1.pdf | dead-url = no }}</ref> <ref name="Wu2011">{{cite web | title = Move Ranking and Evaluation in the Game of Arimaa | author = David Jian Wu | year = 2011 | url = http://icosahedral.net/downloads/djwuthesis.pdf | access-date = 2014-02-12 | archive-date = 2017-03-17 | archive-url = https://web.archive.org/web/20170317234908/http://icosahedral.net/downloads/djwuthesis.pdf | dead-url = no }}</ref> <ref name="Haskin2006">{{cite web | title = A Look at the Arimaa Branching Factor | author = Brian Haskin | year = 2006 | url = http://arimaa.janzert.com/bf_study/ | access-date = 2014-02-12 | archive-date = 2009-11-07 | archive-url = https://web.archive.org/web/20091107141949/http://arimaa.janzert.com/bf_study/ | dead-url = no }}</ref>
|?, but in [[EXPTIME|EXPTIME]]
|-
|[[围棋|围棋]](19x19)
|align="right"|361
|align="right"|171
|align="right"|360
|align="right"|150
|align="right"|250
|align="right"|<ref name="cwi" /> <ref name="Allis1994"/>
|[[EXPTIME-complete|EXPTIME-complete]]<ref name="Robson1983" />
|-
|[[西洋陸軍棋|西洋陸軍棋]]
|align="right"|92
|align="right"|115
|align="right"|535
|align="right"|381
|align="right"|21.739
|align="right"|<ref name="ArtsStratego">{{cite thesis | author = A.F.C. Arts | title = Competitive Play in Stratego | year = 2010 | url = https://project.dke.maastrichtuniversity.nl/games/files/msc/Arts_thesis.pdf | institution = Maastricht | access-date = 2014-02-12 | archive-date = 2016-03-04 | archive-url = https://web.archive.org/web/20160304062518/https://project.dke.maastrichtuniversity.nl/games/files/msc/Arts_thesis.pdf | dead-url = no }}</ref>
|
|-
|[[Computer_bridge|Double dummy bridge]]{{NoteTag|Double dummy bridge (i.e. double dummy problems in the context of [[contract_bridge|contract bridge]]) is not a proper board game but has a similar game tree, and is studied in [[computer_bridge|computer bridge]], which motivates including it in the list. The bridge table can be regarded as having one slot for each player and trick to play a card in, which corresponds to board size 52. Game-tree complexity is a very weak upper bound: 13! to the power of 4 players regardless of legality. State-space complexity is for one given deal; likewise regardless of legality but with many transpositions eliminated. Note that the last 4 plies are always forced moves with branching factor 1.}}
|align="right"|(52)
|align="right"|<17
|align="right"|<40
|align="right"|52
|align="right"|5.6
|align="right"|
|
|}

== 注释 ==
{{NoteFoot}}

== 参考文献 ==
{{Reflist|30em}}

== 外部链接 ==
* [[David_Eppstein|David Eppstein]]'s [http://www.ics.uci.edu/~eppstein/cgt/hard.html Computational Complexity of Games and Puzzles] {{Wayback|url=http://www.ics.uci.edu/~eppstein/cgt/hard.html |date=20061206012118 }}

== 参见 ==
{{Portal|数学|计算机科学|电子游戏}}
{{div col}}
*[[围棋与数学|围棋与数学]]
*[[已解遊戲|已解遊戲]]
*{{le|香农数|Shannon number}}
*[[List_of_NP-complete_problems#Games_and_puzzles|list of NP-complete games and puzzles]]
*[[List_of_PSPACE-complete_problems#Games_and_puzzles|list of PSPACE-complete games and puzzles]]
* [[AlphaZero|AlphaZero]]
* [[时间复杂度|时间复杂度]]
* [[計算複雜性理論|計算複雜性理論]]
{{div col end}}

[[Category:组合博弈论|Category:组合博弈论]]
[[Category:博弈论|Category:博弈论]]