{{Update|time=2020-06-23T07:53:08+00:00}}
{{noteTA
|G1=IT
|1=zh-hans:实现;zh-hant:實作;
}}
{{Infobox programming language
| name = ECMAScript
| paradigm = [[多重編程範式|多重編程範式]]、[[基于原型编程|基于原型编程]]、[[函數程式語言|函數程式語言]]、[[指令式編程|指令式編程]]
| year = {{Start date and age|1997}}
| designer = [[布蘭登·艾克|布蘭登·艾克]]、[[Ecma國際|Ecma國際]]
| turing-complete = Yes
| typing = [[弱类型|弱类型]]、[[型別系統|動態]]
| implementations = [[SpiderMonkey|SpiderMonkey]]、[[V8_(JavaScript引擎)|V8]]、[[ActionScript|ActionScript]]、[[JScript|JScript]]、[[QtScript|QtScript]]、[[InScript_(JavaScript_engine)|InScript]]
| influenced_by = [[Self|Self]]、[[HyperTalk|HyperTalk]]、[[AWK|AWK]]、[[C语言|C]]、[[Perl|Perl]]、[[Python|Python]]、[[Java|Java]]、[[Scheme|Scheme]]
}}
{{Infobox file format
| name = ECMAScript
| icon = [[File:Crystal_source.png|File:Crystal source.png]]
| logo =
| screenshot =
| caption =
| extension = .es
| mime = application/ecmascript
| type code =
| uniform type =
| magic =
| owner = [[昇陽電腦公司|昇陽電腦公司]]<br />Ecma國際
| released = {{Start date and age|1997|06}}
| latest release version = 第 11 版
| latest release date = {{start date and age|2020|06}}
| genre = [[脚本語言|脚本語言]]
| container for          =
| contained by           =
| extensions             = JavaScript
| extended to            =
| standard               =
| url                    = [http://www.ecma-international.org/publications/standards/Ecma-262.htm ECMA-262][http://www.ecma-international.org/publications/standards/Ecma-290.htm ECMA-290]<br />[http://www.ecma-international.org/publications/standards/Ecma-327.htm ECMA-327][http://www.ecma-international.org/publications/standards/Ecma-357.htm ECMA-357]<br />[http://www.ecma-international.org/publications/standards/Ecma-402.htm ECMA-402]
}}
{{lang|en|'''ECMAScript'''}}是一种由[[Ecma国际|Ecma国际]]（前身为[[欧洲计算机制造商协会|欧洲计算机制造商协会]]）在标准ECMA-262中定义的[[脚本语言|脚本语言]]规范。这种语言在[[万维网|万维网]]上应用广泛，它往往被称为[[JavaScript|JavaScript]]或[[JScript|JScript]]，但实际上后两者是ECMA-262标准的实现和扩展。

== 历史 ==
ECMAScript是由[[网景公司|网景]]的[[布蘭登·艾克|布蘭登·艾克]]開發的一種腳本語言的標準化規範；最初命名為Mocha，後來改名為LiveScript，最後重新命名為JavaScript<ref>{{cite web |last=Krill |first=Paul |url=http://www.infoworld.com/article/2653798/application-development/javascript-creator-ponders-past--future.html |title=JavaScript creator ponders past, future |publisher=InfoWorld |date=2008-06-23 |accessdate=2013-10-31 |archive-date=2014-09-20 |archive-url=https://web.archive.org/web/20140920141040/http://www.infoworld.com/article/2653798/application-development/javascript-creator-ponders-past--future.html |dead-url=no }}</ref>。1995年12月，[[升阳电脑公司|升阳]]与网景聯合發表了JavaScript<ref>{{cite web |url=http://wp.netscape.com/newsref/pr/newsrelease67.html |archiveurl=https://web.archive.org/web/20070916144913/http://wp.netscape.com/newsref/pr/newsrelease67.html |archivedate=2007-09-16 |title=Press Release |publisher=Web.archive.org |date= |accessdate=2013-10-31 |deadurl=yes }}</ref>。1996年11月，网景公司将JavaScript提交给欧洲计算机制造商协会进行标准化。ECMA-262的第一个版本于1997年6月被Ecma组织采纳。ECMAScript是由ECMA-262标准化的脚本语言的名称。

儘管JavaScript和JScript与ECMAScript相容，但包含超出ECMAScript的功能<ref>{{cite web |url=http://javascript.about.com/od/reference/a/jscript.htm |title=JScript VS JavaScript |publisher=About.com |date=2015-11-25 |accessdate=2018-06-30 |archive-date=2015-11-26 |archive-url=https://web.archive.org/web/20151126040655/http://javascript.about.com/od/reference/a/jscript.htm |dead-url=no }}</ref>。

== 版本 ==
{| class="wikitable"
|- style="background: #ccccff;"
!版本
!发表日期
!与前版本的差异
|-
|1
|style="width:90px" |1997年6月
|首版
|-
|2
| 1998年6月
|格式修正，以使得其形式与ISO/IEC16262国际标准一致
|-
|3
|1999年12月
|强大的正则表达式，更好的词法作用域链处理，新的控制指令，异常处理，错误定义更加明确，数据输出的格式化及其它改变
|-
|4
|放棄
|由於關於語言的複雜性出現分歧，第4版本被放棄，其中的部分成為了第5版本及Harmony的基礎；由[[ActionScript|ActionScript]]實現
|-
|5
|2009年12月
|新增「嚴格模式（strict mode）」，一個子集用作提供更徹底的錯誤檢查,以避免結構出錯。澄清了許多第3版本的模糊規範，並適應了與規範不一致的真實世界實現的行為。增加了部分新功能，如getters及setters，支持[[JSON|JSON]]以及在物件屬性上更完整的[[反射式编程|反射]]<ref>{{Cite web |url=http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-262.pdf |title=ECMA-262 5th Edition: ECMAScript Language Specification |accessdate=2010-04-08 |archive-date=2015-04-12 |archive-url=https://web.archive.org/web/20150412040502/http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-262.pdf |dead-url=no }}</ref><ref>{{Cite web |url=http://www.youtube.com/watch?v=Kq4FpMe6cRs |title=Changes to JavaScript, Part 1: EcmaScript 5 |accessdate=2009-07-07 |archive-date=2011-02-09 |archive-url=https://web.archive.org/web/20110209185045/http://www.youtube.com//watch?v=Kq4FpMe6cRs |dead-url=no }}</ref><ref>{{Cite web |url=http://www.ecma-international.org/news/PressReleases/PR_Ecma_finalises_major_revision_of_ECMAScript.htm |title=存档副本 |accessdate=2009-07-07 |archive-date=2011-08-22 |archive-url=https://www.webcitation.org/618ETYcXh?url=http://www.ecma-international.org/news/PressReleases/PR_Ecma_finalises_major_revision_of_ECMAScript.htm |dead-url=no }}</ref><ref>{{Cite web |url=http://www.infoq.com/cn/news/2009/12/ecmascript5 |title=InfoQ: ECMAScript 5正式发布 |accessdate=2010-04-08 |archive-date=2010-04-10 |archive-url=https://web.archive.org/web/20100410063801/http://www.infoq.com/cn/news/2009/12/ecmascript5 |dead-url=no }}</ref><ref>{{Cite web |url=http://ithelp.ithome.com.tw/question/10031677 |title=Javascript面面觀：核心篇《ECMA-262 Edition 5》 |accessdate=2010-04-08 |archive-date=2011-02-18 |archive-url=https://web.archive.org/web/20110218012041/http://ithelp.ithome.com.tw/question/10031677 |dead-url=no }}</ref>
|-
| 5.1
| 2011年6月
| ECMAScript标5.1版形式上完全一致于国际标准ISO/IEC 16262:2011。
|-
|6
|2015年6月
|ECMAScript 2015（ES2015），第 6 版，最早被称作是 ECMAScript 6（ES6），添加了类和模块的语法，其他特性包括迭代器，Python风格的生成器和生成器表达式，箭头函数，二进制数据，静态类型数组，集合（maps，sets 和 weak maps），promise，reflection 和 proxies。作为最早的 ECMAScript Harmony 版本，也被叫做ES6 Harmony。
|-
|7
|2016年6月
|ECMAScript 2016（ES2016），第 7 版，多個新的概念和語言特性<ref name="ES2016">{{cite web|title=ECMAScript 2016 Language Specification|url=http://www.ecma-international.org/ecma-262/7.0/index.html|date=2016-06|publisher=[[Ecma_International|Ecma International]]|accessdate=2016-08-20|archive-date=2016-08-20|archive-url=https://web.archive.org/web/20160820215647/http://www.ecma-international.org/ecma-262/7.0/index.html|dead-url=no}}</ref>
|-
|8
|2017年6月
|ECMAScript 2017（ES2017），第 8 版，多個新的概念和語言特性<ref name=":0">{{Cite web|url=http://2ality.com/2016/02/ecmascript-2017.html|title=ECMAScript 2017 (ES8): the final feature set|website=2ality|access-date=2018-04-23|archive-date=2018-04-23|archive-url=https://web.archive.org/web/20180423232252/http://2ality.com/2016/02/ecmascript-2017.html|dead-url=yes}}</ref>
|-
|9
|2018年6月
|ECMAScript 2018 （ES2018），第 9 版，包含了异步循环，生成器，新的正则表达式特性和 rest/spread 语法。
|-
|10
|2019年6月
|ECMAScript 2019 （ES2019），第 10 版
|-
|-
|11
|2020年6月
|ECMAScript 2020 （ES2020），第 11 版
|-
|}

2004年6月Ecma组织发表了ECMA-357标准，它是ECMAScript的一个扩延，也被称为[[E4X|E4X]]（ECMAScript for XML）。

== 相容性 ==
许多应用程序支持ECMAScript，尤其是[[网页浏览器|网页浏览器]]。下列表格列出了目前版本的軟體與ECMAScript最新版本的相容性。
{| class="wikitable sortable"
|- style="background:#ccf;"
! rowspan="2" | 腳本引擎
! rowspan="2" | 參考應用程式
! colspan="4" | 相容性<ref>ES5 is the baseline for this test suite. The conformance rate for other editions reflects support for new features only, not a comprehensive score.</ref>
|-
! ES5<ref name="kangax5">{{Cite web|url=https://kangax.github.io/compat-table/es5|title=ECMAScript 5 相容性列表|website=kangax.github.io|language=en|access-date=2018-11-18|archive-date=2018-11-19|archive-url=https://web.archive.org/web/20181119145151/http://kangax.github.io/compat-table/es5/|dead-url=yes}}</ref>
! ES6<ref name="kangax6">{{Cite web|url=https://kangax.github.io/compat-table/es6|title=ECMAScript 6 相容性列表|website=kangax.github.io|language=en|access-date=2018-11-18|archive-date=2018-11-17|archive-url=https://web.archive.org/web/20181117194027/http://kangax.github.io/compat-table/es6/|dead-url=yes}}</ref>
! ES7<ref name="kangax2016plus">{{Cite web|url=https://kangax.github.io/compat-table/es2016plus|title=ECMAScript 2016+ 相容性列表|website=kangax.github.io|language=en|access-date=2018-11-18|archive-date=2018-11-24|archive-url=https://web.archive.org/web/20181124112954/http://kangax.github.io/compat-table/es2016plus/|dead-url=yes}}</ref>
! 較新（2016+）<ref name="kangax2016plus"/><ref>包括從ES7到下一版草案的綜合評分</ref>
|-
| [[Chakra_(JavaScript引擎)|Chakra]]
| [[Microsoft_Edge|Microsoft Edge]] 18
| 100% || 96% || 100% || 48%
|-
| [[SpiderMonkey|SpiderMonkey]]
| [[Firefox|Firefox]] 67
| 100% || 98% || 100% || 83%
|-
| [[V8_(JavaScript引擎)|Chrome V8]]
| [[Google_Chrome|Google Chrome]] 75、[[Opera電腦瀏覽器|Opera]] 62
| 100% || 98% || 100% || 98%
|-
| [[JavaScriptCore|JavaScriptCore]]（Nitro）
| [[Safari|Safari]] 12.1
| 99% || 99% || 100% || 87%
|}

該測試的內容託管在官方存儲庫 https://github.com/tc39/test262{{Wayback|url=https://github.com/tc39/test262 |date=20191001032806 }} 中，也可以在 https://v8.github.io/test262/website/default.html{{Wayback|url=https://v8.github.io/test262/website/default.html |date=20200409023745 }} 和 https://bakkot.github.io/test262-web-runner/{{Wayback|url=https://bakkot.github.io/test262-web-runner/ |date=20190811195517 }} 上訪問最新的Web瀏覽器測試套件工具。官方存儲庫還指向由社區維護的其他項目測試套件，以測試其他例如 Node.js 的 ECMAScript / JavaScript 環境。

== 參考文獻 ==
{{Reflist|30em}}

== 外部連結 ==
{{Portal|计算机程序设计}}
* {{official website}}

{{-}}
{{程序设计语言|Script}}
{{網頁技術與標準}}
{{ECMAScript}}
{{JavaScript}}
{{ISO}}

[[Category:腳本語言|E]]
[[Category:程序設計語言|E]]
[[Category:JavaScript|E]]
[[Category:基于原型的编程语言|Category:基于原型的编程语言]]
[[Category:基于对象的编程语言|Category:基于对象的编程语言]]