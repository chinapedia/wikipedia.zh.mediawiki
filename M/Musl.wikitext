{{NoteTA|G1=IT|G2=FL}}
{{lowercase|title=musl}}
{{Infobox software
| name                   = musl
| logo                   = [[File:Musl_libc.svg|File:Musl libc.svg]]
| developer              = 瑞奇·費爾克 (dalias) 與其他開發者
| released = {{Start date and years ago|2011|02|11}}<ref>{{cite web
 | title=musl - obsolete versions
 | url=https://www.musl-libc.org/oldversions.html
 | website=musl-libc.org
 | date=2017-10-31
 | accessdate=2018-01-14
 | archive-date=2020-01-17
 | archive-url=https://web.archive.org/web/20200117141349/http://www.musl-libc.org/oldversions.html
 | dead-url=no
 }}</ref>
| latest release version = 1.2.2
| latest release date    = {{release date and age|2021|01|15}}
| operating_system       = [[Linux|Linux]] 2.6或更新
| platform               = [[x86|x86]], [[x86_64|x86 64]], [[ARM_architecture|ARM]], [[MIPS_architecture|MIPS]], {{link-en|Microblaze|Microblaze}}, [[PowerPC|PowerPC]], [[ppc64|ppc64]], [[X32_ABI|x32]], {{link-en|OpenRISC|OpenRISC}}, [[SuperH|SuperH]]
| genre                  = {{ubl|[[C標準函式庫|C標準函式庫]]|[[嵌入式Linux|嵌入式Linux]]|{{link-en|行動裝置上的Linux|Linux for mobile devices}}}}
| license                = [[MIT許可證|MIT許可證]]
| website                = {{url|https://musl.libc.org/}}
}}
'''musl'''，一種[[C標準函式庫|C標準函式庫]]，主要使用於以[[Linux內核|Linux內核]]為主的[[作業系統|作業系統]]上，目標為[[嵌入式系統|嵌入式系統]]與[[行動裝置|行動裝置]]，採用[[MIT許可證|MIT許可證]]釋出。作者為瑞奇·費爾克（Rich Felker）。开发此库的目的是写一份干净、高效、符合标准的C标准库。<ref name="musl-intro" />

==概述==
Musl是从零开始设计的。一是希望让[[静态链接|静态链接]]更高效；二是现有的C标准库在一些极端条件下表现很糟糕，竞态条件、资源不足时常常会出问题，而Musl试图避免它们来达到较高的实时[[健壮性_(计算机科学)|強健性]]。<ref name="musl-intro">{{cite web |url=https://www.musl-libc.org/intro.html |title=Introduction to musl |date=2016-04-21 |accessdate=2016-09-26 |archive-date=2020-11-12 |archive-url=https://web.archive.org/web/20201112003438/https://www.musl-libc.org/intro.html |dead-url=no }}</ref>Musl的动态运行时只有一个文件，有稳定的[[应用二进制接口|ABI]]，因此可以实现无竞态的版本升级。对静态链接的支持也让可移植单文件应用部署成为可能，而且不会使文件体积膨胀很多。

Musl声称与[[POSIX|POSIX]] 2008标准和[[C11|C11]]标准兼容，<ref>{{cite web |url=http://wiki.musl-libc.org/wiki/Compatibility |title=Compatibility |website=wiki.musl-libc.org |date=2014-05-27 |accessdate=2016-09-26 |archive-date=2017-07-26 |archive-url=https://web.archive.org/web/20170726200308/http://wiki.musl-libc.org/wiki/Compatibility |dead-url=no }}</ref>还实现了多数广泛使用但非标准的[[Linux|Linux]]、[[BSD|BSD]]和[[glibc|glibc]]函数。{{Citation needed|date=May 2016}}

==使用==
有些[[Linux发行版|Linux发行版]]可以使用Musl作为标准C库，例如[[Alpine_Linux|Alpine Linux]]、{{Tsl|en|Dragora GNU/Linux-Libre|Dragora GNU/Linux-Libre|Dragora 3}}、[[Gentoo_Linux|Gentoo Linux]]、[[OpenWrt|OpenWrt]]、Sabotage<ref>{{Github|sabotage-linux/sabotage/blob/master/README.md}}</ref>、Morpheus Linux<ref>{{cite web|url=https://morpheus.2f30.org/|title=morpheus:|accessdate=2018-06-15|archive-date=2020-11-08|archive-url=https://web.archive.org/web/20201108140241/http://morpheus.2f30.org/|dead-url=yes}}</ref>、[[Void_Linux|Void Linux]]。对于链接到glibc的二进制程序，gcompat<ref>{{Cite web|url=https://code.foxkit.us/adelie/gcompat|title=Adélie Linux / gcompat|website=GitLab|language=en|access-date=2019-10-21|archive-date=2020-10-28|archive-url=https://web.archive.org/web/20201028075859/https://code.foxkit.us/adelie/gcompat/|dead-url=no}}</ref>能让它们在基于Musl的发行版上运行。

==参见==
{{portalpar|自由軟體}}
{{Div col|colwidth=20em}}
* [[Bionic_(軟體)|Bionic libc]]
* [[dietlibc|dietlibc]]
* [[Embedded_GLIBC|EGLIBC]]
* [[GNU_C函式庫|glibc]]
* [[klibc|klibc]]
* [[Newlib|Newlib]]
* [[uClibc|uClibc]]
{{div col end}}

==註釋==
{{reflist}}
==外部連結==
* {{Official website|http://www.musl-libc.org/}}
* [http://www.etalabs.net/compare_libcs.html Comparison of C/POSIX standard library implementations for Linux]{{Wayback|url=http://www.etalabs.net/compare_libcs.html |date=20201111235209 }}
{{CProLang}}
{{Embedded systems}}
{{DEFAULTSORT:Musl}}
[[Category:C標準函式庫|Category:C標準函式庫]]