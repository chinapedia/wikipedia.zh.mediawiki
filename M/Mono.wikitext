{{多個問題|
{{Expand English|Mono (software)}}
{{Proofreader needed|en|Mono (software)}}
{{更新|time=2016-05-17T17:29:14+00:00}}
{{lead section|time=2020-04-26T09:13:42+00:00}}
}}
{{otheruses|Mono (消歧義)}}
{{noteTA
|G1=IT
|G2=FL
}}
{{Infobox_Software
| name = Mono
| logo = Mono project logo.svg
| logo size = 100px
| screenshot =
| caption =
| developer = [[Novell|Novell]], [[Xamarin|Xamarin]]
| latest_release_version = 6.12.0.122
| latest_release_date = {{Release date and age|2021|02|23}}
| operating_system = [[跨平台|跨平台]]
| genre = [[系统平台|系统平台]]
| license = [[GNU通用公共许可证|GPL]]、[[GNU宽通用公共许可证|LGPL]]与[[MIT許可證|MIT許可證]]，或[[多許可|双重许可]]
| website = [http://www.mono-project.com/ http://www.mono-project.com/]
}}
'''Mono'''是一个由[[Xamarin|Xamarin]]公司（先前是[[Novell|Novell]]，最早為[[Ximian|Ximian]]）所主持的自由開放源碼專案。該專案的目標是创建一系列符合[[Ecma国际|ECMA]]标准（[http://www.ecma-international.org/publications/standards/Ecma-334.htm Ecma-334]{{Wayback|url=http://www.ecma-international.org/publications/standards/Ecma-334.htm |date=20101031042906 }}和[http://www.ecma-international.org/publications/standards/Ecma-335.htm Ecma-335]{{WebCite|url=https://www.webcitation.org/6HfXxFXH8?url=http://www.ecma-international.org/publications/standards/Ecma-335.htm |date=20130626173319 |dateformat=iso }}）的[[.NET|.NET]]工具，包括[[C_Sharp|C#]]编译器和[[通用语言架构|通用语言架构]]。与微软的[[.NET_Framework|.NET Framework]]（[[Common_Language_Runtime|共通語言執行平臺]]）不同，Mono项目不仅可以运行于[[Windows|Windows]]系统上，还可以运行于[[Linux|Linux]]、[[FreeBSD|FreeBSD]]、[[Unix|Unix]]、[[OS_X|OS X]]和[[Solaris|Solaris]]，甚至一些遊戲平台，例如：Playstation 3、Wii或XBox 360。Mono的標誌是一個猴子格式的臉。

Mono现由Novell持有[[多許可|双重许可]]，这和[[Qt|Qt]]和[[Mozilla_Application_Suite|Mozilla Application Suite]]的情况相似。Mono的C#编译器及其相关工具发布于[[GNU通用公共许可证|GNU通用公共许可证]]（GPL）之下，其运行时库发布于[[GNU宽通用公共许可证|GNU宽通用公共许可证]]（LGPL）之下，其类库发布于[[MIT許可證|MIT許可證]]之下。这些均是[[开源协议|开源协议]]因此Mono是一个[[开源软件|开源软件]]。

[[微软|微软]]开发了一个称为[[通用语言架构|通用语言架构]]（Shared Source Common Language Infrastructure，Shared Source CLI；即今[[ECMA|ECMA]]—[[通用语言架构|通用语言架构]]）的可用于[[FreeBSD|FreeBSD]]，Windows和Mac OS X的.NET实现版本。微软的[[共享源代码|共享源代码]]协议并不是开源软件协议，且可能对于社区来说也是不足够的（它明文禁止了对软件的商业用途）。另外，[[GNU|GNU]]也有一个.NET实现版本{{link-en|Portable.NET|Portable.NET}}项目，该项目与Mono项目有着很多相同的目标。

Mono虚拟机包含一个[[即時編譯|即時編譯]]引擎，该引擎可用于如下处理器：[[x86|x86]]、[[SPARC|SPARC]]、[[PowerPC|PowerPC]]、[[ARM_architecture|ARM]]、[[S390|S390]]（32位模式和64位模式）、[[AMD64|x86-64]]、[[IA-64|IA-64]]和64位模式的SPARC。该虚拟机可以将代码编译为本机代码。

== 历史 ==
當[[Microsoft|Microsoft]]在2000年6月第一次公佈.NET Framework時，它被描述為一個以網際網路標準為基底的新的平台。並且在12月發表了基本的共通語言架構開放標準的形式（ECMA-335），提供了無相依性實作的可能。Ximian的
[[米格爾·德伊卡薩|米格爾·德伊卡薩]]在.NET的文档于2000年10月发布时就马上对.NET产生了兴趣。在查看字节码解释器后，他发现对于元数据（metadata）没有相应的说明文档。2001年2月，德伊卡薩在.NET邮件列表中索要到了那段缺失了的关于元数据文件格式的信息，并开始了采用C#编写一个C#编译器的工作，作为对C#的实践。2001年4月ECMA公布了那段缺失的文件格式，而在[[GUADEC|GUADEC]]（2001年4月6日－4月8日）德伊卡薩展示了他的编译器的一些特性（那个时候他的编译可以解释自身）。

Ximian内部对如何创建能有效提升生产效率的工具进行了大量的讨论，他们的目标是通过这些创建出来的工具让使用者可以在更短时间内创建出更多的应用程序从而缩短开发周期和降低开发成本。经过可行性研究后，他们清楚地见到创建这样的一项技术是可行的，于是Ximian从其它的项目抽调人员并创建了Mono的开发小组。由于缺少人力来创建整个.NET替代产品，他们在2001年7月19日的[[歐萊禮|歐萊禮]]大会创建了Mono的开源项目。

差不多三年后，Mono于2004年7月30日发布了1.0版本。Mono逐步從一開始的重點為Linux桌面應用程式開發者平台，到支援寛廣範圍的架構和作業系統，包含了[[嵌入式系統|嵌入式系統]]。

在2011年4月，Attachmate收購Novell後，針對Novell發布了上百位人力的解僱。在3月16號德伊卡薩在他的blog發佈在被Novell解僱後，他找到一家公司將透過Xamarin繼續支援Mono。原本的Mono團隊也被移到新的公司。[[Xamarin|Xamarin]]計畫維持在Mono的工作。由於在這時間點Novell仍然擁有MonoTouch和專為Android的Mono，所以計畫針對iOS和Android上重寫商業化的.NETstacks。

在這發表之後，這個專案的未來被質疑。因為，專屬 Android的MonoTouch and Mono變成跟現存Attachmate所屬的商業化商品有直接競爭，也考量了Xamarin團隊為了相同的作品而不使用之前在[[Novell|Novell]]開發的技術，證實是有困難的。無論如何，在2011年七月Novell、Attachmate的子公司及Xamarin發表了對Xamarin for Mono, MonoTouch and Mono for Android的永久性許可證，正式地帶起這個案子的管理方式。
{| class="wikitable sortable" style="width:50em;"
|+發行歷史（Release History）
! 發行日（Date） !!版本（Version）<ref>{{cite web |url=http://www.mono-project.com/OldReleases |title=OldReleases - Mono |publisher=Mono-project.com |date= |accessdate=2013-07-17 |archive-date=2020-09-24 |archive-url=https://web.archive.org/web/20200924051529/https://www.mono-project.com/OldReleases/ |dead-url=no }}</ref>!! 備註（Notes）
|-
| 2004-06-30 || 1.0<ref>{{cite web |url=http://go-mono.com/archive/1.0/ |title=Mono 1.0 Release Notes |publisher=Go-mono.com |date= |accessdate=2013-07-17 |archive-date=2020-04-09 |archive-url=https://web.archive.org/web/20200409044144/http://go-mono.com/archive/1.0/ |dead-url=no }}</ref>|| [[C_Sharp_(programming_language)|C#]] 1.0 support
|-
| 2004-09-21 || 1.1<ref>{{cite web |url=http://www.go-mono.com/archive/1.1.1/ |title=Mono 1.1.1: Development Release: Features and Known Issues |publisher=Go-mono.com |date= |accessdate=2013-07-17 |archive-date=2020-04-09 |archive-url=https://web.archive.org/web/20200409044150/http://www.go-mono.com/archive/1.1.1/ |dead-url=no }}</ref>||
|-
| 2006-11-09 || 1.2<ref>{{cite web |url=http://go-mono.com/archive/1.2/ |title=Mono 1.2: Release Notes |publisher=Go-mono.com |date= |accessdate=2013-07-17 |archive-date=2020-04-09 |archive-url=https://web.archive.org/web/20200409044155/http://go-mono.com/archive/1.2/ |dead-url=no }}</ref>|| [[C_Sharp_2.0|C# 2.0]] support
|-
| 2008-10-06 || 2.0<ref>{{cite web |url=http://www.mono-project.com/Release_Notes_Mono_2.0 |title=Release Notes Mono 2.0 - Mono |publisher=Mono-project.com |date=2008-10-06 |accessdate=2013-07-17 |archive-date=2020-11-09 |archive-url=https://web.archive.org/web/20201109040338/https://www.mono-project.com/Release_Notes_Mono_2.0/ |dead-url=no }}</ref>|| Mono's APIs are now in par with .NET 2.0. Introduces the [[C_Sharp_3.0|C# 3.0]] and Visual Basic 8 compilers. New Mono-specific APIs: MonoCecil, MonoCairo and MonoPosix. Gtk# 2.12 is released. The Gendarme verification tool and Mono Linker are introduced.
|-
| 2009-01-13 || 2.2<ref>{{cite web |url=http://www.mono-project.com/Release_Notes_Mono_2.2 |title=Release Notes Mono 2.2 - Mono |publisher=Mono-project.com |date= |accessdate=2013-07-17 |archive-date=2020-06-12 |archive-url=https://web.archive.org/web/20200612190814/https://www.mono-project.com/Release_Notes_Mono_2.2/ |dead-url=no }}</ref>|| Mono switches its JIT engine to a new internal representation <ref>{{cite web |url=http://www.mono-project.com/Linear_IL |title=Linear IR - Mono |publisher=Mono-project.com |date= |accessdate=2013-07-17 |archive-date=2020-11-09 |archive-url=https://web.archive.org/web/20201109041234/https://www.mono-project.com/Linear_IL/ |dead-url=no }}</ref>that gives it a performance boost and introduces [[SIMD|SIMD]] support in the MonoSimd <ref name="Mono.Simd">{{cite web |url=http://tirania.org/blog/archive/2008/Nov-03.html |title=Mono's SIMD Support: Making Mono safe for Gaming - Miguel de Icaza |publisher=Tirania.org |date=2008-11-03 |accessdate=2013-07-17 |archive-date=2010-11-04 |archive-url=https://web.archive.org/web/20101104173338/http://tirania.org/blog/archive/2008/Nov-03.html |dead-url=no }}</ref>MonoSimd namespace. <br>Mono introduces [http://tirania.org/blog/archive/2008/Nov-05.html Full Ahead of Time]{{Wayback|url=http://tirania.org/blog/archive/2008/Nov-05.html |date=20200409044221 }} compilation that allows developers to create full static applications and debuts the C# Compiler as a Service <ref name="tirania.org">{{cite web |url=http://tirania.org/blog/archive/2010/Apr-27.html |title=Mono's C# Compiler as a Service on Windows. - Miguel de Icaza |publisher=Tirania.org |date=2010-04-27 |accessdate=2013-07-17 |archive-date=2020-11-09 |archive-url=https://web.archive.org/web/20201109003335/https://tirania.org/blog/archive/2010/Apr-27.html |dead-url=no }}</ref>and the C# Interactive Shell <ref name="CsharpRepl">{{cite web |url=http://www.mono-project.com/CsharpRepl |title=CsharpRepl - Mono |publisher=Mono-project.com |date= |accessdate=2013-07-17 |archive-date=2020-09-20 |archive-url=https://web.archive.org/web/20200920101700/https://www.mono-project.com/CsharpRepl/ |dead-url=no }}</ref>（C# REPL）
|-
| 2009-03-30 || 2.4<ref>{{cite web |url=http://www.mono-project.com/Release_Notes_Mono_2.4 |title=Release Notes Mono 2.4 - Mono |publisher=Mono-project.com |date= |accessdate=2013-07-17 |archive-date=2020-11-09 |archive-url=https://web.archive.org/web/20201109035031/https://www.mono-project.com/Release_Notes_Mono_2.4/ |dead-url=no }}</ref>|| This release mostly polishes all the features that shipped in 2.2 and became the foundation for the Long-Term support of Mono in SUSE Linux.
|-
| 2009-12-15 || 2.6<ref>{{cite web |url=http://www.mono-project.com/Release_Notes_Mono_2.6 |title=Release Notes Mono 2.6 - Mono |publisher=Mono-project.com |date= |accessdate=2013-07-17 |archive-date=2020-08-29 |archive-url=https://web.archive.org/web/20200829024946/https://www.mono-project.com/Release_Notes_Mono_2.6/ |dead-url=no }}</ref>|| The Mono runtime is now able to use LLVM as a code generation backend and this release introduces Mono co-routines, the Mono Soft Debugger and the CoreCLR security system required for Moonlight and other Web-based plugins. <br>On the class library System.IO.Packaging, WCF client, WCF server, LINQ to SQL debut. The Interactive shell supports auto-completion and the LINQ to SQL supports multiple database backends. The xbuild build system is introduced.
|-
| 2010-09-22 || 2.8<ref>{{cite web |url=http://www.mono-project.com/Release_Notes_Mono_2.8 |title=Release Notes Mono 2.8 - Mono |publisher=Mono-project.com |date= |accessdate=2013-07-17 |archive-date=2020-11-09 |archive-url=https://web.archive.org/web/20201109023605/https://www.mono-project.com/Release_Notes_Mono_2.8/ |dead-url=no }}</ref>|| Defaults to .NET 4.0 profile, [[C_Sharp_4.0|C# 4.0]] support, new generational garbage collector, includes {{link-en|Parallel Extensions|Parallel Extensions}}, WCF Routing, [[契约式设计|CodeContracts]], ASP.NET 4.0, drops the 1.0 profile support; the LLVM engine tuned to support 99.9% of all generated code, runtime selectable llvm and gc; incorporates [[Dynamic_Language_Runtime|Dynamic Language Runtime]], {{link-en|Managed Extensibility Framework|Managed Extensibility Framework|MEF}}, [[ASP.NET_MVC_Framework|ASP.NET MVC2]], OData Client open source code from Microsoft;. Will become release 3.0
|-
| 2011-02-15 || 2.10<ref>{{cite web |url=http://www.mono-project.com/Release_Notes_Mono_2.10 |title=Release Notes Mono 2.10 - Mono |publisher=Mono-project.com |date= |accessdate=2013-07-17 |archive-date=2020-08-04 |archive-url=https://web.archive.org/web/20200804145048/https://www.mono-project.com/Release_Notes_Mono_2.10/ |dead-url=no }}</ref>||
|-
| 2012-10-18 || 3.0<ref name="rel30">{{cite web |url=http://www.mono-project.com/Release_Notes_Mono_3.0 |title=Release Notes Mono 3.0 |publisher=Mono-project.com |date= |accessdate=2013-09-23 |archive-date=2020-11-12 |archive-url=https://web.archive.org/web/20201112042630/https://www.mono-project.com/Release_Notes_Mono_3.0/ |dead-url=no }}</ref>|| [[C_Sharp_5.0|C# 5.0]] support, async support, Async Base Class Library Upgrade and MVC4 - Partial, no async features support.
|-
| 2013-07-24 || 3.2<ref name="rel32">{{cite web |url=http://www.mono-project.com/Release_Notes_Mono_3.2 |title=Release Notes Mono 3.2 |publisher=Mono-project.com |date= |accessdate=2013-09-23 |archive-date=2020-11-12 |archive-url=https://web.archive.org/web/20201112024806/https://www.mono-project.com/Release_Notes_Mono_3.2/ |dead-url=no }}</ref>||
|-
| 2014-05-31 || 3.4<ref name="rel34">{{cite web |url=http://www.mono-project.com/docs/about-mono/releases/3.4.0 |title=Release Notes Mono 3.4.0 |publisher=Mono-project.com |date= |accessdate=2014-05-31 |archive-date=2020-09-24 |archive-url=https://web.archive.org/web/20200924050231/https://www.mono-project.com/docs/about-mono/releases/3.4.0/ |dead-url=no }}</ref>||
|-
| 2014-05-31 || 3.6<ref name="rel36">{{cite web |url=http://www.mono-project.com/docs/about-mono/releases/3.6.0 |title=Release Notes Mono 3.6 |publisher=Mono-project.com |date= |accessdate=2014-05-31 |archive-date=2020-09-24 |archive-url=https://web.archive.org/web/20200924050410/https://www.mono-project.com/docs/about-mono/releases/3.6.0/ |dead-url=no }}</ref>||
|-
| 2014-09-04 || 3.8<ref name="rel38">{{cite web |url=http://www.mono-project.com/docs/about-mono/releases/3.8.0 |title=Release Notes Mono 3.8.0 |publisher=Mono-project.com |date= |accessdate=2014-09-04 |archive-date=2020-09-24 |archive-url=https://web.archive.org/web/20200924050459/https://www.mono-project.com/docs/about-mono/releases/3.8.0/ |dead-url=no }}</ref>||
|-
| 2014-10-04 || 3.10<ref name="rel310">{{cite web |url=http://www.mono-project.com/docs/about-mono/releases/3.10.0 |title=Release Notes Mono 3.10.0 |publisher=Mono-project.com |date= |accessdate=2014-10-04 |archive-date=2020-09-24 |archive-url=https://web.archive.org/web/20200924051409/https://www.mono-project.com/docs/about-mono/releases/3.10.0/ |dead-url=no }}</ref>||
|}

==  目前的狀況與藍圖　==

Mono目的的版本為3.10.0（2014年10月）。這個版本提供了.NET Framework的核心API、[[Visual_Basic_.NET|Visual Basic .NET]]的支援、[[C♯|C#]]版本2.0,3.0，及4.0、[[LINQ|LINQ]] to Objects、[[XML|XML]]及[[SQL|SQL]]等。在[[C♯|C#]]編譯器的目前操作的預設模式是C# 4.0。[[Windows_Forms|Windows Forms]] 2.0也有被支援，但沒有積極地被開發，因此，它在Mono的支援不完整。Mono的目標是達成在.NET 4.0的完整功能支援，除了[[Windows_Presentation_Foundation|Windows Presentation Foundation]]（WPF）和[[Limited_Windows_Communication_Foundation|Limited Windows Communication Foundation]]（WCF）。
在實驗性質mono的開發.NET Framework的一些遺失部份稱做[[Olive|Olive]]
Mono專案也建立了[[Visual_Basic_.NET|Visual Basic .NET]]編譯器與一個runtime的[[VB.NET|VB.NET]]的應用程式。它目前一直由[[Rolf_Bjarne_Kvinge|Rolf Bjarne Kvinge]]進行開發。

===Moonlight===
[[Moonlight|Moonlight]]是一個[[Microsoft|Microsoft]] [[Silverlight|Silverlight]]的開源實作，自從Mono 1.9起即包含了這實作。在2009年1月20日釋出的Moonlight 1.0支援Silverlight 1.0 APIs。而Moonlight 2.0支援Silverlight 2.0。Moonlight 3.0則在2010年2月被發表，包含了Silverlight 3.0的支援。Moonlight最終在2012年3月29日被放棄。依據米格爾所言，兩個因素扼殺了這個專案的命運：[[Microsoft|Microsoft]]增加了“人为限制”...這造成了桌面程式無用武之地..."，並且在Web上的技術沒有獲得足夠的配合。

== Mono組成元件 ==
Mono組成元件包含了以下三類：
# 核心元件
# Mono/Linux/GNOME開發堆疊
# 微軟相容堆疊

''核心元件''包含了C# 編譯器，[[Common_Language_Infrastructure|Common Language Infrastructure]]虛擬機器，以及核心類別程式庫。這些元件都是基於[[Ecma_International#Standards|Ecma-334 and Ecma-335標準]],<ref name="Ecma-335">{{cite web|url=http://www.ecma-international.org/publications/standards/Ecma-335.htm|title=Ecma-335|accessdate=2006-04-14|archive-date=2013-06-26|archive-url=https://www.webcitation.org/6HfXxFXH8?url=http://www.ecma-international.org/publications/standards/Ecma-335.htm|dead-url=no}}</ref>而使得Mono能夠提供與標準相容、免費、並且是開放原始碼的CLI [[虛擬機器|虛擬機器]]。微軟曾經聲明這些標準都是基於[[Microsoft_Open_Specification_Promise|Community Promise license]]的社群保護承諾之下。<ref>{{cite web|url=http://port25.technet.com/archive/2009/07/06/the-ecma-c-and-cli-standards.aspx|title=Technet.com|access-date=2014-06-10|archive-url=https://www.webcitation.org/6HZF1RbUz?url=http://blogs.technet.com/b/port25/archive/2009/07/06/the-ecma-c-and-cli-standards.aspx|archive-date=2013-06-22|dead-url=yes}}</ref>

''Mono/Linux/GNOME開發堆疊''則是提供了工具以用於開發應用軟體。這些工具使用了既有的[[GNOME|GNOME]]以及[[free_and_open_source_software|自由並且開放原始碼]]程式庫，它們包含了針對[[圖形使用者介面|圖形使用者介面]]（GUI）開發的[[Gtk_Sharp|Gtk#]]、可套用[[Gecko_(layout_engine)|Gecko rendering engine]]的Mozilla程式庫、Unix整合程式庫（Mono.Posix）、安全性推疊、以及XML schema語言[[RelaxNG|RelaxNG]]。Gtk# 讓Mono應用程式融入Gnome桌面環境而成為原生程式。資料庫程式庫則提供了與物件關連式資料庫連結的能力，這些資料庫包含了 [[db4o|db4o]]、[[Firebird_(database_server)|Firebird]]、[[Microsoft_SQL_Server|Microsoft SQL Server]]（MSSQL）、[[MySQL|MySQL]]、[[Open_Database_Connectivity|Open Database Connectivity]]（ODBC）、[[Oracle_database|Oracle]]、[[PostgreSQL|PostgreSQL]]、[[SQLite|SQLite]]等等。在網站上可看見Mono專案一直都在持續更新維護資料庫程式庫。<ref>{{cite web|url=http://www.mono-project.com/Database_Access|title=Database Access - Mono|accessdate=2014-06-10|archive-date=2020-04-09|archive-url=https://web.archive.org/web/20200409044337/https://www.mono-project.com/Database_Access/|dead-url=no}}</ref>

''微軟相容堆疊''則是提供了一種方式來使得Windows .NET應用程式可以被移植到GNU/Linux上。這個堆疊包含了[[ADO.NET|ADO.NET]]、[[ASP.NET|ASP.NET]]以及[[Windows_Forms|Windows Forms]]等等。不過，由於這些元件並沒有被上述所說[[Ecma_International|Ecma]]標準所涵蓋，因此部份元件有所謂[[#Mono_and_Microsoft's_patents|專利恐懼與疑慮]]的問題。

== 架构 ==

[[File:Mono_architecture.svg|400px]]

===程式執行引擎===
Mono程式的執行包含一個程式碼運作引擎，它會將ECMA CIL的byte code轉譯為原生碼（Native Code），它支援了以下處理器：[[ARM_architecture|ARM]]、[[MIPS_architecture|MIPS]]（只有32位元模式）、[[SPARC|SPARC]]、[[PowerPC|PowerPC]]、[[S390|S390]]（64位元模式）、[[x86|x86]]、[[x86-64|x86-64]]以及[[IA-64|IA-64]] 64位元模式。

程式的轉譯有三種模式：
* Just-in-time (JIT)編譯：在程式執行當中將ECMA CIL的byte code轉譯為原生碼。
* Ahead-of-Time (AOT)編譯：ECMA CIL的byte code（通常在.exe檔或.dll檔中）會轉譯出原生碼並儲存在作業系統中、以及CPU架構設定檔（例如在Linux上，如果是foo.exe，就會產生foo.exe.so檔）。通常，此種模式可產生出絕大部份前種模式所產生的原生碼，部份的例外是[[Trampoline_(computers)|trampolines]]或是控管監督相關的碼（仍舊需要JIT來執行），由此可知AOT影像檔並非可以完全獨立執行的。

* 完全靜態編譯：這個模式只支援少數平台，它基於AOT編譯模式上，更進一步產生所有的trampoline、[[Wrapper_function|wrappers]]以及[[Proxy_pattern|proxies]]，這幾樣東西是用於靜態連結出靜態檔案時所需。完全靜態編譯模式可以讓程式的執行期完全不需要用到JIT，這個做法適用於[[IOS_(Apple)|Apple iOS作業系統]]、Sony [[PlayStation_3|PlayStation 3]]以及微軟的[[XBox_360|XBox 360]]等作業系統。{{Citation needed|date=April 2011}}

從2.6版起，Mono開始支援使用[[LLVM|LLVM]]來產生執行碼，而非原本自帶的方式。這對於高效能計算方面非常有用，因為在這種場合下，程式的執行效能比啟動速度來得重要。

從2.7 Preview版開始，使用者不再需要在程式編譯前的Configuration時就必須選定執行碼產生引擎，執行碼的產生可以在程式啟動時以<code>--llvm</code>或<code>--nollvm</code>的參數來指定即可，預設是以自帶的引擎為主，因為它的產生速度比較快。

===垃圾回收===
當2.8版推出時，Mono runtime提供了兩套[[garbage_collector_(computer_science)|垃圾回收器]]：generational collector<ref name="mono-compacting_gc"/>以及Boehm conservative collector。在Mono 3.1.1版之前，預設的垃圾回收器（''[[貝姆垃圾收集器|Boehm-Demers-Weiser Conservative Garbage Collector]]''），<ref name="mono-compacting_gc">{{cite web|title=Compacting GC|url=http://www.mono-project.com/Compacting_GC|publisher=mono-project.com|accessdate=2008-12-16|archive-date=2020-11-09|archive-url=https://web.archive.org/web/20201109024939/https://www.mono-project.com/Compacting_GC/|dead-url=no}}</ref><ref>{{cite web|title=Advantages and Disadvantages of Conservative Garbage Collection|url=http://www.hpl.hp.com/personal/Hans_Boehm/gc/issues.html|last=Boehm|first=Hans-J.|publisher=[[PARC_(company)|Xerox PARC]]|accessdate=2008-12-16|archive-url=https://web.archive.org/web/20130724030259/http://www.hpl.hp.com/personal/Hans_Boehm/gc/issues.html|archive-date=2013-07-24|dead-url=yes}}</ref>跟商業環境如[[Java_Virtual_Machine|Java Virtual Machine]]或.NET framework的垃圾回收器相比，一直有很大的限制，在某些狀況的應用軟體上會發生[[内存泄漏|内存泄漏]]的現象，這使得Mono無法用於需要長時間執行的伺服器應用。

{{As of|2010|10}}，一個稱之為「Simple Generational GC」（SGen-GC）的新一代垃圾回收器開始用於Mono中，在3.1.1版之後就直接變成是預設的垃圾回收器。對於Mono 2.8到3.1.0，使用者可以以傳入參數<code>--gc=sgen</code>來讓Mono runtime啟動時使用SGen垃圾回收器。<ref name="mono-compacting_gc"/>這個新的垃圾回收器相較於傳統基於保守型掃描方式的回收器，有很多優點，它使用了[[garbage_collection_(computer_science)#Generational_GC_(ephemeral_GC)|generational garbage collection]]，從物件一開始被配置、到各個週期，所有活著的物件都會被轉移到較早代的記憶體池，這個想法是來自於因為許多物件都只是短暫使用的，因此可以被快速回收再利用，只有少數物件是長期性的存活在應用程式的整個生命期中。另外，為了改善效率，這個回收器對每個執行緒配置了個別的記憶體池，讓執行緒不需要跟別的執行緒打交道就可以自行配置記憶體區塊。對於前述所說，物件的轉移到較早代記憶體池的做法則是，在轉移之後，將所有目前指向該物件的指標都更新為新的位址。由於這樣的做法在大型物件時比較浪費記憶體，因此SGen為大型物件使用了獨自的記憶體池（Large Object Section），並且對這些物件使用mark-and-sweep演算法。

目前SGen是以比較保守的方式來對待堆疊與暫存器，並且，那些可被參考到的物件是由它們的root來負責pin的動作。未來版本的Mono將會以精確方式來掃描託管的堆疊，藉此減少那些被pin的物件。

=== 類別庫 ===

類別庫为应用程序开发提供一套广泛而有效的工具类。这些工具类可以用于任何.NET语言。類別庫被按命名空间进行了结构化，并被放置于称为程序集的共享库中。在我们谈到.NET Framework时，我们多数是指这个类库。

==== 命名空间和程序集 ====

命名空间是一种用于将逻辑上相似的类按层次结构分组的机制。这种机制防止了命名冲突。在这种结构化采用被点号"."分隔的单词来实现。通常最顶层的命名空间是System，例如System.IO和System.Net（完整的命名空间列表可以在[http://www.go-mono.com/docs/ Mono文档]{{Wayback|url=http://www.go-mono.com/docs/ |date=20110806050216 }}中找到）。当然还有别的顶层命名空间，例如Accessibility和Windows就是这样的例子。新建的命名空间还可以以开发组织的名字开头。

'''程序集'''是这些类库的物理载体。它们跟Win32共享库一样都是dll文件，尽管不完全一样。一些程序集的例子有：mscorlib.dll，System.dll，System.Data.dll和Accessibility.dll。命名空间经常被分拆到几个程序集中，而一个程序集可以由几个文件组成。

=== 公共语言基础和公共语言规范 ===

公共语言基础（Common Language Infrastructure，CLI）是一套标准（ECMA335），公共语言运行时（Common Language Runtime）即CLR是CLI标准的实现，Mono是实现者之一。该运行时用于执行已编译的.NET应用程序。公共语言基础已被ECMA定义为标准ECMA-335。要运行一个.NET应用程序，你必须使用相应的参数调用运行时。

在ECMA-335的第六章详细说明了「公共语言规范」（Common Language Specification，CLS）并定义了提供给公共语言基础的接口，例如对于枚举类型的隐含表示类型的协定。Mono的编译器负责生成符合公共语言规范的映射代码，即公共中间语言（Common Intermediate Language，CIL）。Mono的运行时将运行这类代码。ECMA标准先前还定义了一个符合公共语言规范的程序库作为应用框架。

=== 托管与非托管代码 ===

在原生的.NET/Mono应用程序中，所有代码都是[[托管|托管]]的，也就是说，是受管于CLI式的内存管理和线程安全管理的。其它的.NET或Mono应用程序可以通过使用System.InterOpServices库创建C#绑定来调用已存的非托管代码。很多移植到Mono的类库使用了CLI的这个特性，例如Gtk#。

=== 相关项目 ===

现有大量与Mono相关的用于扩展Mono的项目，这些项目允许开发者在他们的开发环境中使用Mono。这些项目包括：
* [http://www.cocoasharp.org/ Cocoa#]{{Wayback|url=http://www.cocoasharp.org/ |date=20200810075523 }}，对原生Mac OS X工具包的一系列包装（[[Cocoa_(API)|Cocoa]]）。
* Gecko#，一个对在Mozilla中使用的嵌入式布局引擎的绑定（[[Gecko_(layout_engine)|Gecko]]）。
* [[Gtk_Sharp|Gtk#]]，对使用[[C语言|C]]的[[GTK+|GTK+]]库的C#的外包。
* [[Tao_(software)|Tao]]，一个图形及游戏库的绑定。

== 授權 ==
Mono是透過Xamarin的雙重授權，相似於其他產品，如[[Qt|Qt]]和Mozilla application Suite。Mono's C#編譯器與工具是依照GNU Leasser General Public License（LGPLv2 only）來釋出（開始於Mono 2.0，Mono C#的編譯器源碼在MIT X11 License仍然是有效的），屬於GNU Leasser General Public License（LGPLv2 only）的runtime函式庫及屬於MIT X11 License的類別函式庫。

有完全免費的軟體與開源授權，因此Mono是免費的開源軟體。

C#編譯器的授權改變是從[[GPL|GPL]]到[[MIT_X11|MIT X11]]授權，允許編譯器的程式碼在少許的GPL限制例子中被重複使用，如例：

* 作為服務的Mono編譯器
  * Mono互動介面的Shell
  * Mono可崁入的的C#編譯器
* Mono的C# 4.0的動態綁定的實作
* MonoDevelop的內建parser和[[AST|AST]]圖

== Mono与微软的专利 ==

人们对于微软能否采用专利摧毁Mono项目进行了大量的争论。其实，专利问题不在于已被提交到[[ECMA|ECMA]]组织的核心技术或Unix/Gnome的专有部分，而在于由微软基于.NET Framework创建的技术，例如[[ASP.NET|ASP.NET]]、[[ADO.NET|ADO.NET]]和[[Windows_Forms|Windows Forms]]。这些技术在Mono中至今还没有被完全地实现，事实上，在开发Mono应用程序时也不需要用到，然而，在开发基于Windows平台的程序时却是不可缺少的。Mono团队将目标定为将这些技术纳入到项目中，并制订了一个三步驟策略来处理它们：

# 采用其它实现方式来实现从而绕过专利问题
# 把包含专利的代码清除出项目
# 找出“现有技术（[[prior_art|prior art]]）”从而将专利变为非专利

显然，第一个选项并不总是可行的。对于一些问题，例如那些与协同工作和交互相关的，可能就只有一种解决方案。由于这个相同的原因，尽管第二个选项总是可行的，它却可能导致一个开发出来的产品并不能作为.NET的替代品。第三个选项则是昂贵的，甚至不可能的，这需要一定程度的运气。

== 使用Mono开发的软件 ==

[[File:F-Spot_screenshot.png|thumb]]
[[File:Muine.png|thumb]]
以下是使用Mono [[应用程序编程接口|API]]和[[C＃|C#]]编写的部分程序：

* [[Banshee|Banshee]]是一个用于[[GNOME|GNOME]]的音乐管理和播放软件。
* [[Beagle_(软件)|Beagle]]是一个[[桌面搜索|桌面搜索]]软件。
* [[Blam!|Blam!]]是一个[[RSS|RSS]] [[新闻聚集器|新闻聚集器]]，特别适合于阅读如[http://planet.gnome.org/ Planet Gnome]{{Wayback|url=http://planet.gnome.org/ |date=20201130041452 }}这样的[http://planetplanet.org/ 行星]{{Wayback|url=http://planetplanet.org/ |date=20051109050440 }}资讯。
* [http://home.gna.org/bless/ Bless]{{Wayback|url=http://home.gna.org/bless/ |date=20051101195427 }}是一个[[十六进制编辑器|十六进制编辑器]]。
* [http://cdcollect.sourceforge.net/index.php CDCollect]{{Wayback|url=http://cdcollect.sourceforge.net/index.php |date=20191107191044 }}是一个[[CD|CD]] [[编目|编目]]应用程序。
* [[Diva_(software)|Diva]]是一个用于GNOME的视频编辑器。
* [[F-Spot|F-Spot]]是有个由[[Novell|Novell]]开发的图片便捷管理程序。
* [https://www.telerik.com/fiddler Fiddler]{{Wayback|url=https://www.telerik.com/fiddler |date=20181215131145 }}是一个强大的[[Web|Web]] [[抓包|抓包]]工具，与[[Charles|Charles]]齐名。
* [http://galaxium.sourceforge.net/index.html Galaxium]{{Wayback|url=http://galaxium.sourceforge.net/index.html |date=20131021151625 }}是一个[[MSN|MSN]] [[即时通讯软件|即时通讯软件]]客户端。
* [https://web.archive.org/web/20050404141520/http://zapdos.codemonkey.cl/glyrics/ GLyrics]是一个[[歌词|歌词]]搜索器。
* [http://gpremacy.nongnu.org/ Gpremacy]{{Wayback|url=http://gpremacy.nongnu.org/ |date=20201020174653 }}是以Mono/Gtk# 實作的[[圖版遊戲|圖版遊戲]]Supremacy
* [[iFolder|iFolder 3]]（by Novell）让你使用点对点协议（[[peer-to-peer|peer-to-peer]]）或Novell的群集服务器产品与其它计算机和用户共享文件。
* [http://www.imeem.com/ imeem]{{Wayback|url=http://www.imeem.com/ |date=20130613075604 }}一個社交網路軟體。Mac版本的用戶端和伺服器使用Mono運行，而Windows版本的用戶端仰賴於Microsoft.Net
* [[KeePass|KeePass]]是一款開源的密碼管理器。
* [https://web.archive.org/web/20060428223812/http://www.icebreaker.net/mindfire/ MindFire]是一个用于辅助速读（[[Rapid_Serial_Visual_Presentation|speed reading]]）的跨平台电子书阅读器
* [[MonoDevelop|MonoDevelop]]是一个用于创建Mono应用程序的[[集成开发环境|集成开发环境]]。该软件原先是[[SharpDevelop|SharpDevelop]]向[[Gtk_Sharp|Gtk#]]的一个移植，而现今该软件已独立开发。该软件在Windows上有测试版的可用版本。
* [[Pinta|Pinta]]是一个简单的[[位图形编辑软件|位图形编辑软件]]。

== 分支版本 ==
2011年4月，[[Novell|Novell]]公司被{{link-en|Attachmate|Attachmate}}公司所併購，而原先在Novell公司裡的Mono開發者被大量資遣。2011年5月，原先Mono的開發者另外成立一家[[Xamarin|Xamarin]]的公司，仿Mono發行他們的Xamarin跨平台.NET套件，在Windows下能與整合到[[Microsoft_Visual_Studio|Microsoft Visual Studio]]的IDE之中。2011年7月，{{link-en|Attachmate|Attachmate}}公司旗下的[[Novell|Novell]]公司批准了Mono相關專案到Xamarin的授權。

== 备注 ==

# {{note|license}}For more information about the licensing, see [http://www.mono-project.com/FAQ:_Licensing#Licensing Mono FAQ: Licensing]{{Wayback|url=http://www.mono-project.com/FAQ:_Licensing#Licensing |date=20180624122054 }}

== 参考文献 ==
{{Reflist|}}

* ''This article incorporates text from Mono's [http://www.mono-project.com/ homepage]{{Wayback|url=http://www.mono-project.com/ |date=20090106171423 }}，which is in the [[GNU_Free_Documentation_License|GNU Free Documentation License]].''
* {{cite web
 |author      = [[Miguel_de_Icaza|Miguel de Icaza]]
 |date        = 2009-10-13
 |url         = http://lists.ximian.com/archives/public/mono-list/2003-October/016345.html
 |title       = <nowiki>[Mono-list] Mono early history.</nowiki>
 |format      = mailing list
 |accessdate  = 6 December 2005
 |deadurl     = yes
 |archiveurl  = https://web.archive.org/web/20110606210557/http://lists.ximian.com/archives/public/mono-list/2003-October/016345.html
 |archivedate = 2011-06-06
}}

* {{cite web
| author= [[Eugenia_Loli-Queru|Eugenia Loli-Queru]]
| date= 2005-02-22
| url= http://www.osnews.com/story.php?news_id=9780
| title= Mono Applications? Aplenty!
| publisher= [[OSNews|OSNews]]
| accessdate= 6 December 2005
| archive-date= 2006-11-11
| archive-url= https://web.archive.org/web/20061111023734/http://www.osnews.com/story.php?news_id=9780
| dead-url= no
}}

== 外部链接 ==
* [http://www.gotmono.com GotMono?,]{{Wayback|url=http://www.gotmono.com/ |date=20201022054443 }} Mono community homepage
* [https://web.archive.org/web/20060624051316/http://www.nabble.com/Mono-f1367.html Mono Forum]
* [http://mono-live.org/ Mono Live]{{Wayback|url=http://mono-live.org/ |date=20200409044504 }}，LiveCD website
* [https://web.archive.org/web/20041125084433/http://bdn.borland.com/article/0,1410,32056,00.html Running .NET on Linux or Windows]
* [https://web.archive.org/web/20060411193721/http://www.nabble.com/Ximian-f1406.html Ximian Forum]
* [http://linux.slashdot.org/article.pl?sid=06/01/10/139255&tid=131&tid=106 Slashdot: Fedora Core 5 includes Mono]{{Wayback|url=http://linux.slashdot.org/article.pl?sid=06%2F01%2F10%2F139255&tid=131&tid=106 |date=20191018141431 }}
* [http://www.novell.com/ Novell, Inc.]{{Wayback|url=http://www.novell.com/ |date=20061007200748 }}

;国际站点
* [https://web.archive.org/web/20060106132306/http://pascalfresnay.free.fr/monoweb/wiki/ Mono France]，A French Mono WebSite
* [https://web.archive.org/web/20070704093741/http://monobrasil.softwarelivre.org/ MonoBrasil]，A Brazilian Mono WebSite
* [https://web.archive.org/web/20051125203753/http://www.monocolombia.com/wiki/doku.php MonoColombia]，A Colombian Mono WebSite
* [http://www.mono-project.de MonoGermany]{{Wayback|url=http://www.mono-project.de/ |date=20201026095510 }}，A German Mono WebSite
* [https://web.archive.org/web/20181103231007/http://monohispano.es/ MonoHispano]，A Spanish Mono community
* [https://web.archive.org/web/20060616184831/http://monkey.workarea.jp/trans/mono/ Japanese Mono] Mono web site translation to Japanese.
* [https://web.archive.org/web/20060420001938/http://www.go-mono.pl/ MonoPoland]，Polish Mono Web site.
* [https://web.archive.org/web/20060409231042/http://www.go-mono.nl/ Mono Netherlands]，Dutch Mono site.

{{-}}
{{Novell}}

[[Category:计算平台|Category:计算平台]]
[[Category:程序设计工具|Category:程序设计工具]]
[[Category:.NET|Category:.NET]]
[[Category:Novell軟件|Category:Novell軟件]]