{{noteTA
|G1=IT
}}
{{For|Visual C#|Microsoft Visual C♯}}
{{Infobox software
| name = Visual C++
| screenshot = <!-- Deleted image removed:  [[File:MSVC_Quake_II.png|250px]] -->
| caption = <!--Microsoft Visual C++ 2005, Professional Edition-->
| developer = [[微软公司|微软公司]]
| released = {{Start date and age|1993|02}}<ref name="Visual C++ adds Windows support">{{cite news |title = Visual C++ adds Windows support |newspaper = InfoWorld |date = 1993-02-22 |page = 17 |url = https://books.google.com/books?id=vjsEAAAAMBAJ }}</ref>
| latest release version = 14.28.29333
| latest release date = {{Start date and age|2020|11|10}}
| operating system = [[Microsoft_Windows|Microsoft Windows]]
| platform = [[x86|x86]]、[[x86-64|x86-64]]、[[Itanium_2|Itanium]]
| language = [[英语|英语]]、[[法语|法语]]、[[德语|德语]]、[[西班牙语|西班牙语]]、[[俄语|俄语]]、[[意大利语|意大利语]]、[[韩语|韩语]]、[[日语|日语]]、[[汉语|汉语]]（另有[[捷克语|捷克语]]、[[葡萄牙语|葡萄牙语]]（巴西）、[[波兰语|波兰语]]、[[土耳其语|土耳其语]]仅提供语言包）<ref>{{Cite web |url= http://www.microsoft.com/visualstudio/eng/downloads |title= Microsoft Visual Studio 2012下载页面 |accessdate= 2017-04-13 |archive-date= 2013-11-12 |archive-url= https://web.archive.org/web/20131112183242/http://www.microsoft.com/visualstudio/eng/downloads |dead-url= no }}</ref>
| genre = [[集成开发环境|集成开发环境]]
| license = [[微软|微软]]的[[最终用户许可协议|最终用户许可协议]]
| website = {{URL|https://docs.microsoft.com/zh-tw/cpp/}}
}}

'''Microsoft Visual C++'''（简称'''Visual C++'''、'''MSVC'''、'''VC++'''或'''VC'''）是[[微軟公司|微軟公司]]的[[C++|C++]]開發工具，具有[[集成开发环境|集成开发环境]]，可提供編輯[[C語言|C語言]]，[[C++|C++]]以及[[C++/CLI|C++/CLI]]等[[编程語言|编程語言]]。VC++整合了便利的除錯工具，特別是整合了微軟[[Microsoft_Windows|Windows]]视窗操作系统应用程序接口（[[Windows_API|Windows API]]）、[[三维動畫|三维動畫]][[DirectX|DirectX]] API，[[Microsoft_.NET|Microsoft .NET]]框架。目前最新的版本是Microsoft Visual C++ 2022。

== 風格 ==
Visual C++以拥有[[語法突顯|语法高亮]]、[[IntelliSense|IntelliSense]]（智能提示）以及高级调试功能而著称。比如，它允许用户进行远程调试，单步执行等。还有允许用户在调试期间重新编译被修改的代码，而不必重新启动正在调试的程序。其编译及创建預編譯頭文件（<code>stdafx.h</code>）、最小重建功能及累加連結（link）著稱。這些特徵明顯縮短程式編輯、編譯及連結的時間花費，在大型軟體計畫上尤其顯著。
== 发行版本 ==
Visual C++被整合在Visual Studio之中，但仍可單獨安裝使用。

通常细分为多个发行版本。以Visual C++ 2013为例：
* Visual C++ 2013 Community社群版(功能同專業版)(非商業免費)
* Visual C++ 2013 Express速成版
* Visual C++ 2013 Professional专业版
* Visual C++ 2013 Premium高级版
* Visual C++ 2013 Ultimate旗舰版

其中Microsoft Visual C++ 2013 Express可從[[MSDN|MSDN]]的網站免費下載使用，並且不限制商業使用（但不包含[[MFC_(微軟)|MFC]]）。
== 歷史 ==
微软的C/C++编译器有一个内置的宏<syntaxhighlight lang="c++" inline>_MSC_VER</syntaxhighlight>来表示编译器的当前版本。<ref>{{Cite web|title = Pre-defined Compiler Macros / Wiki / Compilers|url = https://sourceforge.net/p/predef/wiki/Compilers/#microsoft-visual-c|website = sourceforge.net|access-date = 2016-02-11|archive-date = 2020-11-11|archive-url = https://web.archive.org/web/20201111213923/https://sourceforge.net/p/predef/wiki/Compilers/#microsoft-visual-c|dead-url = no}}</ref>

Visual C++的前身是[[Microsoft_C/C++|Microsoft C/C++]]。还有相关产品：''Microsoft [[QuickC|QuickC]]'' 2.5 与''Microsoft Quick C for Windows'' 1.0. Visual C++ [[编译器|编译器]]仍然叫做''Microsoft C/C++''。例如Visual C++ 2015 Update 2的版本号是19.00.23918.
{| class="wikitable"
|+ VC++, MFC 和 ATL的版本历史
|-
! 产品!! Codename!! 发布日期 !! C++版本!! _MSC_VER!! MFC版本 !! _MFC_VER!! ATL版本 !! _ATL_VER !! 注释
|-
| colspan="10" align="center"|'''16-bit版本'''
|-
| MSC 1.0||   || 1983年10月||   || 100 ||   ||   ||   ||  || 基于[[Lattice_C|Lattice C]], Microsoft的第一款C产品。遵循K&R C语言标准。售价500美元。
|-
| MSC 2.0||   ||   ||   || 200 ||   ||   ||   ||  || 增加了large model支持
|-
| MSC 3.0||   || 1985年||   || 300||   ||   ||   ||  || 第一款Microsoft自己开发的C产品. 目标是兼容K&R与ANSI标准。1984年初微软用它开发了[[Microsoft_Windows|Windows]]与[[Xenix|Xenix]]。
|-
| MSC 4.0||   ||   ||   || 400||   ||   ||   ||  || 增加了优化器与源级调试器[[CodeView|CodeView]]
|-
| MSC 5.0||   ||   ||   || 500||   ||   ||   ||  || 增加了循环优化与''Huge Model'' (数组大于64k)支持。Microsoft [[Fortran|Fortran]]与80386上第一款32位编译器也是此计划的一部分。
|-
| Microsoft C 5.1 Optimizing Compiler||   || 1988年||   ||  ||   ||   ||   ||  || 允许[[OS/2|OS/2]] 1.x编译
|-
| MSC 6.0||   || 1989年 ||   || 600||   ||   ||   ||  || 增加了全局流分析、源浏览器、新调试器、可选的C++前端.<ref>{{cite web
| title = Optimizing With Microsoft C 6.0
| date = 1990-08-01
| url = http://www.drdobbs.com/windows/optimizing-with-microsoft-c-60/184408398
| first = Scott Robert
| last = Ladd
| access-date = 2016-11-28
| archive-url = https://web.archive.org/web/20170320231404/http://www.drdobbs.com/windows/optimizing-with-microsoft-c-60/184408398
| archive-date = 2017-03-20
| dead-url = yes
}}</ref>
|-
| MS C/C++ 7.0||   || 1992年||   || 700|| 1.0|| 0x0100||   ||  || 内建支持C++与MFC 1.0.<ref>Retrieved from http://support.microsoft.com/kb/196831 {{Wayback|url=http://support.microsoft.com/kb/196831 |date=20140830145530 }}.</ref>
|-
| Visual C++ 1.0|| Caviar|| 1993年2月22日|| 1.0|| 800|| 2.0|| 0x0200||   ||  || [[Cfront|Cfront]] 2.1 兼容<ref name="IWreview">{{cite news
| title = Visual C++ is a strong development tool
| newspaper = InfoWorld
| date = 1993-06-21
| page = 94
| url = https://books.google.com/books?id=OjsEAAAAMBAJ
| accessdate = 2017-04-13
| archive-date = 2020-08-05
| archive-url = https://web.archive.org/web/20200805234936/https://books.google.com/books?id=OjsEAAAAMBAJ
| dead-url = no
}}</ref>。IDE称“Visual Workbench”。有两个版本:<ref name="Visual C++ adds Windows support"/>
** Standard – 替换“QuickC for Windows”。售价199美元。
** Professional – 替换 C/C++ 7.0. 可建构 DOS与Windows应用程序。包含了优化编译器、源profiler, Windows 3.1 SDK。<ref name="IWreview"/>以及[[Phar_Lap_(company)|Phar Lap]] 286 DOS Extender Lite<ref>{{cite news
| title = Rival DOS Extenders debut at show
| newspaper = InfoWorld
| date = 1993-03-01
| page = 18
| url = https://books.google.com/books?id=fzwEAAAAMBAJ
}}</ref>售价499美元。
|-
| Visual C++ 1.1|| Barracuda|| 1993|| 1.1||  ||   ||   ||   ||  ||  
|-
| Visual C++ 1.5|| Dolphin|| 1993年12月|| 1.5|| 850|| 2.5|| 0x0250||   ||  ||  增加了[[Object_Linking_and_Embedding|OLE]] 2.0与[[Open_Database_Connectivity|ODBC]] 支持.<ref>{{cite news
| title = Visual C++ 1.5 integrates OLE, ODBC
| newspaper = InfoWorld
| date = 1993-11-08
| page = 5
| url = https://books.google.com/books?id=8ToEAAAAMBAJ
| accessdate = 2017-04-13
| archive-date = 2020-08-05
| archive-url = https://web.archive.org/web/20200805225841/https://books.google.com/books?id=8ToEAAAAMBAJ
| dead-url = no
}}</ref> 是首款仅用[[CD-ROM|CD-ROM]]发布的Visual C++.這個版本-{只}支持16位开发。
|-
| Visual C++ 1.51||   ||   || 1.5||  ||   ||   ||   ||  || 作为subscription service可利用
|-
| Visual C++ 1.52||   ||   || 1.52||  ||   ||   ||   ||  || 作为subscription service可利用
|-
| Visual C++ 1.52b||   ||   || 1.52b||  ||   ||   ||   ||  ||类似于1.52, 但不包括Control Development Kit
|-
| 'Visual C++ 1.52c||   ||   || 1.52c||  ||   ||   ||   ||  || 是1.5的加补丁版. 是最后一版，也是有争议的最为流行的[[Microsoft_Windows|Microsoft Windows]] 3.x开发平台. 可通过[[Microsoft_Developer_Network|Microsoft Developer Network]]使用它
|-
| colspan="10" align="center"|'''32-bit版本'''
|-
| Visual C++ 1.0||   ||   ||  ||  ||   ||   ||   ||  ||最初称Visual C++ 32-bit Edition<ref>{{cite news
| title = Microsoft set to prerelease 32-bit Visual C++
| newspaper = InfoWorld
| date = 1993-07-19
| page = 12
| url = https://books.google.com/books?id=mTsEAAAAMBAJ
}}</ref> 1993年7月发布时，已经有了16位的VC++ 1.5，但这个版本不支持OLE2与ODBC. 套装叫做'''Visual C++ 16/32-bit Suite''', 其中包含了Visual C++ 1.5.<ref>{{cite news
| title = C++ IDEs evolve
| newspaper = InfoWorld
| date = 1994-04-04
| page = 79
| url = https://books.google.com/books?id=FTsEAAAAMBAJ
}}</ref>
|-
|Visual C++ 2.0||   ||   || 2.0 || 900 || 3.0  ||  0x0300 ||   ||  ||第一個只發行32位的版本。這個版本提前發行了，幾乎成了一個「丟失的版本」。這是因為那個時候[[Windows_95|Windows 95]]（開發代碼為"Chicago"）還沒有發行，而[[Windows_NT|Windows NT]]又只佔有很小的市場份額。該版本用戶可以通過[[微軟|微軟]]公司的訂閱服務（[[Microsoft|Microsoft]] Subscription Service）升級至2.1和2.2版本。微軟公司在這個版本中还包含了升級后的Visual C++ 1.5：2.0版本中包含了Visual C++ 1.51；2.1版本包含了Visual C++ 1.52。Visual C++ 2.x附帶了16位和32位版本的[[CDK|CDK]]，同時支持[[Win32s|Win32s]]的開發。Visual C++ 2.2及其後續版本不再升級Visual C++ 1.5（儘管它一直被集成至Visual C++ 4.x）。儘管出生的比Windows 95早，這個版本的發行日期還是非常接近[[Windows_95|Windows 95]]，可是當[[Windows_95|Windows 95]]發行時，Visual C++ 4.0也已經發行了。因此很多程序開發者直接從1.x過渡到4.0，把2.x跳過去了。 
|-
|Visual C++ 2.1||   ||   || 2.1  ||  ||   ||   ||   ||  ||可通过订阅服务获得
|-
| Visual C++ 2.2||   ||   || 2.2 ||  ||   ||   ||   ||  ||可通过订阅服务获得
|-
| Visual C++ 4.0|| Olympus || 1995-12-11 || 4.0 || 1000  || 4.0  || 0x0400||   ||  ||为与MFC版本号对齐，跳过了VC++3.0版本号。專門為[[Windows_95|Windows 95]]以及[[Windows_NT|Windows NT]]設計的。<ref name="Obsolete Products">{{cite web |url=http://support.microsoft.com/gp/lifeobsoleteproducts |title=Obsolete Products |deadurl=yes |archiveurl=https://web.archive.org/web/20050814234847/http://support.microsoft.com/gp/lifeobsoleteproducts |archivedate=2005-08-14 |accessdate=2017-04-13 }}</ref>，引入了Developer Studio IDE，<ref>{{cite book |last=Toth |first=Viktor |title=Visual C++ 4.0 unleashed |url=https://books.google.com/books?id=93o_AQAAIAAJ&q=visual+c%2B%2B+4.0+unleashed&dq=visual+c%2B%2B+4.0+unleashed&hl=en&sa=X&ei=jyjzUdyFGaSbygGnjIHgBQ&ved=0CGUQ6AEwCQ |accessdate=2013-07-26 |year=1996 |publisher=[[SAMS_Publishing|SAMS Publishing]] |location=Indianapolis |isbn=9780672308741 |chapter=1 |chapterurl=http://doc.sumy.ua/prog/unleash4/vcu01fi.htm |archive-date=2019-08-11 |archive-url=https://web.archive.org/web/20190811093428/https://books.google.com/books?id=93o_AQAAIAAJ&q=visual+c%2B%2B+4.0+unleashed&dq=visual+c%2B%2B+4.0+unleashed&hl=en&sa=X&ei=jyjzUdyFGaSbygGnjIHgBQ&ved=0CGUQ6AEwCQ |dead-url=no }}</ref>用戶可以通過[[微軟|微軟]]公司的訂閱服務（[[Microsoft|Microsoft]] Subscription Service）升級至4.1版本（包含Microsoft Game SDK）和4.2版本（此版本不再支持[[Win32s|Win32s]]開發）。 为支持老的(Windows 3.x/DOS)项目，还包含了Visual C++ 1.52安装光盘。 VC++ 3.0版本号被跳过，以与MFC 4.0的版本号相同.<ref>{{cite web|url=http://blogs.msdn.com/ricom/archive/2009/10/07/my-history-of-visual-studio-part-3.aspx|title=History of Visual Studio (Part 3)|accessdate=2017-04-13|archive-date=2009-10-11|archive-url=https://web.archive.org/web/20091011081603/http://blogs.msdn.com/ricom/archive/2009/10/07/my-history-of-visual-studio-part-3.aspx|dead-url=no}}</ref>
|-
| Visual C++ 4.2||   ||   || 4.2 || 1020 || 4.2  || 0x0420  ||   ||  ||Developer Studio 4.2
|-
| Visual C++ 5.0 || Boston || 1997-04-28|| 5.0 ||  1100 || 4.21  || 0x0421  ||  2.1 || 0x0210 ||[[Visual_Studio|Visual Studio 97]]是第一个集成了多个产品 (Visual C++, Visual Basic, Visual J++)。是4.2版以來比較大的一次升級。<ref>{{cite web|url=http://msdn.microsoft.com/en-us/library/aa697419(VS.71).aspx|title=Major Changes from Visual C++ 4.2 to 5.0|accessdate=2017-04-13|archive-date=2015-08-28|archive-url=https://web.archive.org/web/20150828063154/https://msdn.microsoft.com/en-us/library/aa697419(VS.71).aspx|dead-url=no}}</ref>包含了四个版本：
**Learning版<ref>{{cite web|url=http://www.microsoft.com/products/prodref/199_ov.htm|title=Microsoft Visual C++ 5.0 Learning Edition|archiveurl=https://web.archive.org/web/19990427114135/http://www.microsoft.com/products/prodref/199_ov.htm|archivedate=1999-04-27|accessdate=2017-04-13|dead-url=no}}</ref> 
**Professional,<ref>{{cite web|url=http://www.microsoft.com/products/prodref/197_ov.htm|title=Microsoft Visual C++ 5.0 Professional Edition|archiveurl=https://web.archive.org/web/19990427101205/http://www.microsoft.com/products/prodref/197_ov.htm|archivedate=1999-04-27|accessdate=2017-04-13|dead-url=no}}</ref> 
**Enterprise,<ref>{{cite web|url=http://www.microsoft.com/products/prodref/198_ov.htm|title=Microsoft Visual C++ 5.0 Enterprise Edition|archiveurl=https://web.archive.org/web/19990417134138/http://www.microsoft.com/products/prodref/198_ov.htm|archivedate=1999-04-17|accessdate=2017-04-13|dead-url=no}}</ref>
**RISC.<ref>{{cite web|url=http://www.microsoft.com/products/prodref/501_ov.htm|title=Microsoft Visual C++ 5.0 RISC Edition|archiveurl=https://web.archive.org/web/19990429121236/http://www.microsoft.com/products/prodref/501_ov.htm|archivedate=1999-04-29|accessdate=2017-04-13|dead-url=no}}</ref>
|-
| Visual C++ 6.0|| Aspen|| 1998年8月|| 6.0 || 1200 || 6.0  || 0x0600 		|| 3.0   || 0x0300  ||Visual Studio 6.0是惟一不用年份命名的[[Visual_Studio|Visual Studio]]。 MFC DLL的名字没有改变，还是叫做mfc42.dll。發行至今一直被廣泛地用於大大小小的項目開發。<ref>{{cite web|url=http://msdn.microsoft.com/en-us/library/aa729389(VS.71).aspx|title=Major Changes from Visual C++ 5.0 to 6.0|accessdate=2017-04-13|archive-date=2008-09-14|archive-url=https://web.archive.org/web/20080914202003/http://msdn.microsoft.com/en-us/library/aa729389(VS.71).aspx|dead-url=no}}</ref>但是，這個版本在Windows XP下運行會出現問題，尤其是在調試模式的情況下（例如：靜態變量的值並不會顯示）。這個調試問題可以通過打一個叫「Visual C++ 6.0 Processor Pack」的補丁來解決。奇怪的是，這個網頁強調用戶也必須運行Windows 98、Windows NT 4.0、或Windows 2000。版本号12.00.8804
|-
| Visual C++ .NET 2002|| Rainier|| 2002年|| 7.0  || 1300 || 7.0  || 0x0700 		||  7.0  || 0x0700   ||支持[[鏈接時代碼生成|鏈接時代碼生成]]和[[調試執行時檢查|調試執行時檢查]]。這個版本還集成了[[Managed_Extension_for_C++|Managed Extension for C++]]，以及一個全新的用戶界面（與[[Visual_Basic|Visual Basic]]和[[C_Sharp|Visual C#]]共用）。這也是為什麼Visual C++ 6.0仍然被廣泛使用的一個主要原因。版本号13.00.9466
|-
| Visual C++ .NET 2003|| Everett|| 2003年|| 7.1  || 1310 || 7.1  || 0x0710 	 	||  7.1 || 0x0710   ||类似于1.52, 但不包括Control Development Kit
|-
| eMbedded Visual C++||   ||   ||   ||  ||   ||   ||   ||  ||用於[[Windows_CE|Windows CE]]操作系统。<ref>Douglas Boling :''Programming Microsoft Windows CE .NET, Third Edition'' Microsoft Press; 3rd edition (June 25, 2003) Paperback: 1264 pages ISBN 978-0735618848 - [http://examples.oreilly.de/english_examples/9780735618848/cd_contents/Readme.txt Companion CD with Microsoft eMbedded Visual C++ 4.0 Service Pack 2] {{Webarchive|url=https://archive.is/20130211131045/http://examples.oreilly.de/english_examples/9780735618848/cd_contents/Readme.txt|date=2013-02-11}}</ref>Visual C++作為一個獨立的開發環境被[[Microsoft_Visual_Studio|Microsoft Visual Studio 2005]]所替代。
|-
| colspan="10" align="center"|'''32-bit/64-bit版本'''
|-
| Visual C++ 2005 || Whidbey|| 2005年11月|| 8.0 || 1400 ||  8.0 || 0x0800 		|| 8.0   || 0x0800   || 引進了全新版本的[[C++/CLI|C++/CLI]]語言以替换[[Managed_C++|Managed C++]]，以及[[OpenMP|OpenMP]]的支持
|-
| Visual C++ 2008 || Orcas|| 2007年11月|| 9.0 || 1500 ||9.0  || 0x0900 	 	|| 9.0  || 0x0900   || 支持.NET 3.5。Visual Studio 2008 Team Suite更同時支援x64與IA-64編譯
|-
| Visual C++ 2010 || Dev10|| 2010年4月12日|| 10.0 || 1600  || 10.0  || 0x0A00 	 	|| 10.0  || 0x0A00   || Visual C++開發團隊考慮使用SQL Server Compact格式的資料庫來儲存源碼的相關資訊<ref name="cpp10">{{cite web | title = IntelliSense, part 2: The Future | url = http://blogs.msdn.com/vcblog/archive/2008/02/29/intellisense-part-2-the-future.aspx | author = Visual C++ Team Blog | accessdate = 2008-03-12 | archive-date = 2010-03-11 | archive-url = https://web.archive.org/web/20100311072749/http://blogs.msdn.com/vcblog/archive/2008/02/29/intellisense-part-2-the-future.aspx | dead-url = no }}</ref>.本版也加入了現代化的C++并行運算庫-Parallel Patterns Library，部分支援C++0x。本版建構於.NET 4.0之上，但仍支持機器碼的編譯。
|-
| Visual C++ 2012 || Dev11|| 2012年8月15日|| 11.0 || 1700  || 11.0  || 0x0B00 	 	|| 11.0  ||0x0B00    || 支持[[Windows_Runtime|Windows Runtime]]开发。<ref>{{cite web |url=https://msdn.microsoft.com/en-us/library/vstudio/hh409293(v=vs.110).aspx |title=What's New for Visual C++ in Visual Studio 2012 |author=<!--Staff writer(s); no by-line.--> |publisher=Microsoft |work=[[Microsoft_Developer_Network|Microsoft Developer Network]] |accessdate=2015-09-20 |archive-date=2015-09-23 |archive-url=https://web.archive.org/web/20150923104053/https://msdn.microsoft.com/en-us/library/vstudio/hh409293(v=vs.110).aspx |dead-url=no }}</ref>从该版本起，编译出的32位程序不能在Windows NT4.0 / 2000 / XP上运行，这是因为在程序内部使用了自Vista起出现在kernel32.dll中的GetTickCount64函数。解决办法是在编译project的platform set选择为“Visual Studio 2012 - Windows XP (v110_xp) ”。
|-
| Visual C++ 2013 || Dev12|| 2013年10月17日|| 12.0 || 1800  ||  12.0 ||  0x0C00 	 	||  12.0 || 0x0C00  || 支持[[C++11|C++11]]与[[C99|C99]]特性，并引入了REST SDK。<ref>{{cite web |url=https://msdn.microsoft.com/en-us/library/vstudio/hh409293(v=vs.120).aspx |title=What's New for Visual C++ in Visual Studio 2013 |author=<!--Staff writer(s); no by-line.--> |publisher=Miicrosoft |work=[[Microsoft_Developer_Network|Microsoft Developer Network]] |accessdate=2015-09-20 |archive-date=2015-05-23 |archive-url=https://web.archive.org/web/20150523123907/https://msdn.microsoft.com/en-us/library/vstudio/hh409293(v=vs.120).aspx |dead-url=no }}</ref>
**    RTM version number: 18.0.21005.1
**    Update 2 version number: 18.00.30501
|-
| Visual C++ 2015 || Dev14|| 2015年7月20日|| 14.0 || 1900 || 14.0  ||  0x0E00 		||  14.0  || 0x0E00  || 改进了对C++11/14支持。<ref>{{cite web|url=http://blogs.msdn.com/b/vcblog/archive/2015/06/19/c-11-14-17-features-in-vs-2015-rtm.aspx|title=C++11/14/17 Features In VS 2015 RTM|author=Stephan T. Lavavej|date=2015-06-19|publisher=Microsoft|work=Visual C++ Team Blog|accessdate=2017-04-13|archive-date=2015-06-20|archive-url=https://web.archive.org/web/20150620025301/http://blogs.msdn.com/b/vcblog/archive/2015/06/19/c-11-14-17-features-in-vs-2015-rtm.aspx|dead-url=no}}</ref><ref>{{cite web|url=http://blogs.msdn.com/b/vcblog/archive/2015/07/20/visual-studio-2015-rtm-now-available.aspx|title=Visual Studio 2015 RTM Now Available|author=Eric Battalio|date=2015-07-20|publisher=Microsoft|work=Visual C++ Team Blog|accessdate=2017-04-13|archive-date=2015-07-22|archive-url=https://web.archive.org/web/20150722023018/http://blogs.msdn.com/b/vcblog/archive/2015/07/20/visual-studio-2015-rtm-now-available.aspx|dead-url=no}}</ref> 
|-
| Visual C++ 2017 || Dev15|| 2017年3月7日|| 14.10 || 1910  || 14.10  ||  0x0E00 		||  14.10  || 0x0E00   || 从此版本开始，MSVC++版本号与Visual Studio版本号不再同步，并且每个子版本都会递增
MSVC++ 14.0  _MSC_VER == 1900 (Visual Studio 2015 version 14.0)。开始支持C++17<ref>{{Cite web|title=Visual Studio 2017: Productivity, Performance, and Partners|url=https://devblogs.microsoft.com/visualstudio/visual-studio-2017-productivity-performance-and-partners/|accessdate=2020-08-14|author=John|date=2017-03-07|format=|work=Visual Studio Blog|publisher=Microsoft|language=|archive-date=2020-09-19|archive-url=https://web.archive.org/web/20200919093416/https://devblogs.microsoft.com/visualstudio/visual-studio-2017-productivity-performance-and-partners/|dead-url=no}}</ref>
|-
| Visual C++ 2019 || Dev16|| 2019年4月2日|| 14.20 || 1920  ||  14.20  ||  0x0E00 		||  14.20  || 0x0E00  || 开始支持C++19<ref>{{Cite web|title=Visual Studio 2019: Code faster. Work smarter. Create the future.|url=https://devblogs.microsoft.com/visualstudio/visual-studio-2019-code-faster-work-smarter-create-the-future/|accessdate=2020-08-14|author=John|date=2019-04-02|format=|work=Visual Studio Blog|publisher=Microsoft|language=en-US|archive-date=2021-01-29|archive-url=https://web.archive.org/web/20210129210248/https://devblogs.microsoft.com/visualstudio/visual-studio-2019-code-faster-work-smarter-create-the-future/|dead-url=no}}</ref>
|}

==语言标准支持==
===C99===
在Visual C++ 2012以前，完全不支持[[C99|C99]]与[[C11|C11]]的新特性，仅支持1989年版的[[ANSI_C|ANSI C]]。<ref>{{cite web|url=https://connect.microsoft.com/VisualStudio/feedback/details/653336/c99-support|title=C99 support|work=Microsoft Connect|accessdate=2017-04-13|archive-date=2016-03-04|archive-url=https://web.archive.org/web/20160304185822/http://connect.microsoft.com/VisualStudio/feedback/details/653336/c99-support|dead-url=no}}</ref>Visual C++ 2012开始在C模式下支持C99的部分特性，如designated initializers、compound literals、<code>_Bool</code>类型。Visual C++ 2013很大改进了对C99特性的支持。<ref>{{cite web|url=http://blogs.msdn.com/b/vcblog/archive/2013/07/19/c99-library-support-in-visual-studio-2013.aspx|title=C99 library support in Visual Studio 2013|author=Pat Brenner|date=2013-07-19|publisher=Microsoft|work=Visual C++ Team Blog|accessdate=2017-04-13|archive-date=2014-08-05|archive-url=https://web.archive.org/web/20140805062548/http://blogs.msdn.com/b/vcblog/archive/2013/07/19/c99-library-support-in-visual-studio-2013.aspx|dead-url=no}}</ref> Visual C++ 2015基本上完整支持了C99标准库，但需要编译器尚未支持的C99语言特性的那部分标准库除外。<ref>{{cite web|url=https://msdn.microsoft.com/en-us/library/hh409293(v=vs.140).aspx|title=What's New for Visual C++ in Visual Studio 2015|work=Microsoft Developer Network|publisher=Microsoft|accessdate=2017-04-13|archive-date=2018-11-05|archive-url=https://web.archive.org/web/20181105230004/https://msdn.microsoft.com/en-us/library/hh409293(v=vs.140).aspx|dead-url=no}}</ref>
===C++===
至VC++2017 Version 15.7已经完全实现了[[C++17|C++17]]

详细情况见<ref>{{Cite web |url=https://docs.microsoft.com/en-us/cpp/visual-cpp-language-conformance?view=vs-2017 |title=MSDN: Visual C++ Language Conformance  |accessdate=2018-11-14 |archive-date=2019-01-09 |archive-url=https://web.archive.org/web/20190109221203/https://docs.microsoft.com/en-us/cpp/visual-cpp-language-conformance?view=vs-2017 |dead-url=no }}</ref>

== 工具链生态环境==
* Universal CRT (UCRT)包含了[[C99|C99]]运行时库的函数与全局变量。UCRT现在是Windows component，随Windows 10安装。UCRT的静态库、DLL的导入库、头文件是Windows 10 SDK的一部分。
* vcruntime库包含Visual C++ CRT实现相关的代码，如[[异常处理|异常处理]]、调试支持、运行时检查、类型信息、实现细节与特定扩展库函数。 vcruntime库相关于特定编译器。
* CRT(C 运行时库)初始化库处理进程启动（CRT startup）、内部的逐线程的初始化、终止。CRT初始化库相关于特定编译器。CRT初始化库总是静态链接，即使使用了动态链接的UCRT。
* 对于本地代码与受管代码混合的情形，使用/clr编译选项，这会动态链接 UCRT与vcruntime，静态链接msvcmrt.lib或msvcmrtd.lib；msvcmrt.lib或msvcmrtd.lib提供了受管代码与本地CRT之间的proxy。对于纯受管代码情形，使用/clr:pure编译选项，这会静态链接msvcurt.lib或msvcurtd.lib。
* '''msvcmrt.lib、msvcmrtd.lib'''，用于 DLL UCRT 和 vcruntime 的混合本机和托管 CRT 启动的调试版本的静态库。不可再分发。
* '''UCRT'''现在是一个 Windows 组件，并作为 Windows 10 及更高版本的一部分提供。UCRT 的静态库、DLL 导入库和头文件现在可以在 Windows SDK 中找到<ref>{{Cite web |url=https://docs.microsoft.com/en-us/cpp/c-runtime-library/crt-library-features?view=msvc-170 |title=C runtime (CRT) and C++ Standard Library (STL) .lib files |accessdate=2022-04-03 |archive-date=2021-11-23 |archive-url=https://web.archive.org/web/20220122233012/https://docs.microsoft.com/en-us/cpp/c-runtime-library/crt-library-features?view=msvc-170 |dead-url=no }}</ref>。

编译时，根据项目是调试版还是发布版，动态还是静态链接[[运行时库|运行时库]]，编译器可自动使用默认库。如果使用编译选项/nodefaultlib，需要显式指定使用的库。对于VC++2015，所有下述库均为多线程：<ref>{{Cite web |url=https://blogs.msdn.microsoft.com/vcblog/2015/03/03/introducing-the-universal-crt/ |title=Visual C++ Team Blog: "Introducing the Universal CRT" |accessdate=2017-03-22 |archive-date=2019-07-01 |archive-url=https://web.archive.org/web/20190701222958/https://blogs.msdn.microsoft.com/vcblog/2015/03/03/introducing-the-universal-crt/ |dead-url=no }}</ref>
{| class="wikitable"
|-
! 情形  !! 编译选项 !! 预处理directives !! CRT初始化库<br>（均为静态链接） !! vcruntime库 !! vcruntime DLL !! Universal CRT !! UCRT DLL !! Standard C++库
|-
| Release DLLs || /MD || _MT, _DLL || msvcrt.lib|| vcruntime.lib || vcruntime<version>.dll || ucrt.lib || ucrtbase.dll || MSVCPRT.LIB<br><small>是MSVCP<version>.dll的输入库</small>
|-
|  Debug DLLs  || /MDd || _DEBUG, _MT, _DLL || msvcrtd.lib|| vcruntimed.lib|| vcruntime<version>d.dll || ucrtd.lib || ucrtbased.dll || MSVCPRTD.LIB<br><small>是MSVCP<version>D.dll的输入库</small>
|-
| Release Static || /MT || _MT || libcmt.lib|| libvcruntime.lib || None || libucrt.lib || None || LIBCPMT.LIB
|-
| Debug Static  || /MTd || _DEBUG, _MT || libcmtd.lib|| libvcruntimed.lib|| None || libucrtd.lib || None || LIBCPMTD.LIB
|-
| Mixed Release Static || /clr || _MT || msvcmrt.lib ||   ||  ||   ||  ||  
|-
| Mixed Debug Static || /clr || _MT || msvcmrtd.lib ||   ||  ||   ||  ||  
|-
| Pure Release Static(过时) || /clr:pure || _MT || msvcurt.lib ||   ||  ||   ||  ||  
|-
| Pure Debug Static(过时) || /clr:pure || _MT || msvcurtd.lib ||   ||  ||   ||  ||  
|}
===Visual C++运行时库===
Visual C++编译出的应用程序，其运行环境通常需要安装Visual C++运行时库。官方下载网址见<ref>{{Cite web |url=https://support.microsoft.com/en-us/help/2977003/the-latest-supported-visual-c-downloads |title=MSDN: The latest supported Visual C++ downloads |accessdate=2018-11-14 |archive-date=2019-08-10 |archive-url=https://web.archive.org/web/20190810235647/https://support.microsoft.com/en-us/help/2977003/the-latest-supported-visual-c-downloads |dead-url=no }}</ref>。

== 參見 ==

* [[Visual_C++名字修饰|Visual C++名字修飾]]

== 参考文献 ==
{{Reflist|2}}

== 外部連結 ==
* {{zh-cn}}[http://msdn2.microsoft.com/zh-cn/express/default.aspx Visual Studio Express首页] {{Wayback|url=http://msdn2.microsoft.com/zh-cn/express/default.aspx |date=20080406014413 }}
* {{zh-cn}}[http://msdn2.microsoft.com/zh-cn/express/aa975050.aspx Visual Studio Express下载页面] {{Wayback|url=http://msdn2.microsoft.com/zh-cn/express/aa975050.aspx |date=20080409143928 }}
* {{en}}[http://msdn.microsoft.com/visualc/ 微软的Visual C++开发者中心] {{Wayback|url=http://msdn.microsoft.com/visualc/ |date=20101210080954 }}
* {{en}}[http://msdn.microsoft.com/visualc/community/ 微软的Visual C++开发社区] {{Wayback|url=http://msdn.microsoft.com/visualc/community/ |date=20081201211224 }}
* {{en}}[http://blogs.msdn.com/brianjo/archive/2004/08/08/211085.aspx Building Win32 Applications Using Visual C++ 2005 Express] {{Wayback|url=http://blogs.msdn.com/brianjo/archive/2004/08/08/211085.aspx |date=20100124161628 }}
* {{en}}[https://web.archive.org/web/20061118034423/http://wi-fizzle.com/howtos/vc-stl/templates.htm Visual C++ STL Templates Tutorial]

{{-}}
{{程序设计语言}}
{{Microsoft development tools}}

[[Category:集成开发环境|Category:集成开发环境]]
[[Category:C編譯器|Category:C編譯器]]
[[Category:C++編譯器|Category:C++編譯器]]
[[Category:Microsoft_Visual_Studio|Category:Microsoft Visual Studio]]