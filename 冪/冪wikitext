{{not|楊冪}}
{{Otheruses|subject=代数概念|other=几何定理|圆幂定理}}
{{refimprove|time=2014-02-28T11:22:37+00:00}}
{{noteTA
|G1=Math
}}
'''幂運算'''（{{lang-en|Exponentiation}}），又稱'''指數運算'''，是[[數學|數學]][[運算|運算]]，[[表達式|表達式]]為 <math>b^n</math>，讀作“<math>b</math> 的 <math>n</math> 次方”或「<math>b</math> 的 <math>n</math> 次幂」。其中，<math>b</math> 稱為[[底數|底數]]，而 <math>n</math> 稱為[[指數|指數]]，通常指數寫成[[上標|上標]]，放在底數的[[右邊|右邊]]。當不能用上標時，例如在[[編程語言|編程語言]]或[[電子郵件|電子郵件]]中，<math>b^n</math> 通常寫成 '''b^n''' 或 '''b**n'''；也可視為[[超運算|超運算]]，記為 '''b[3]n'''；亦可以用[[高德納箭號表示法|高德納箭號表示法]]，寫成 '''b↑n'''。

若''n''為[[正整數|正整數]]，可以把 <math>b^n</math> 看作乘方的结果，等同於 <math>b</math> 自乘 <math>n</math> 次。

:<math>b^n = \underbrace{b \times \cdots \times b}_n</math>

當指數為 1 時，通常不寫出來，因為運算出的值和底數的[[數值|數值]]一樣；指數為 2 時，可以讀作“<math>b</math> 的[[平方数|平方]]”；指數為 3 時，可以讀作“<math>b</math> 的[[立方数|立方]]”。

起始值 1（乘法的[[單位元|單位元]]）乘上底數（<math>b</math>）自乘指數（<math>n</math>）這麼多次。這樣[[定義|定義]]了後，很易想到如何一般化指數 0 和負數的情況：除 0 外所有數的零次方都是 1 ；指數是負數時就等於重複[[除法|除以]]底數（或底數的[[倒數|倒數]]自乘指數這麼多次），即：
:<math> b^{0} = 1 \qquad </math>
:<math>b^{-n} = {1 \over \underbrace{b\times\cdots\times b}_n} = \frac{1}{b^n} = \left(\frac{1}{b}\right)^{n} \qquad (b \ne 0)</math>。

以[[分數|分數]]為指數的冪定義為 <math>b^{\frac{m}{n}} = \sqrt[n]{b^{m}}</math>，即 <math>b</math>的<math>m</math> 次方再开 <math>n</math> 次[[方根|方根]]

[[0的0次方|0的0次方]]目前沒有[[數學家|數學家]]給予正式的定義。在部分[[數學領域|數學領域]]中，如[[組合數學|組合數學]]，常用的慣例是定義為 1 ，也有人主張定義為 1 。

因為在[[十进制|十进制]]，[[十的次方|十的次方]]很易計算，只需在後面加零即可，所以[[科学记数法|科学记数法]]借此[[簡化|簡化]][[記錄|記錄]]的數字；[[二的幂|二的幂]]在[[計算機科學|計算機科學]]相當重要。

當''n''是[[複數_(數學)|複數]]及''b''是正實數時,
:<math>b^n = \exp(n \ln(b))</math>

exp 是[[指數函數|指數函數]]而 ln 是[[自然對數|自然對數]]。

== 重要的[[恆等式|恆等式]] ==
=== 运算法则 ===
* 同底数幂相乘，底数不变，指数相加：
::<math>a^m \times a^n = a^{m + n} </math> 
* 同底数幂相除，底数不变，指数相减：
::<math>a^m \div a^n = a^{m - n} </math>
* 同指数幂相除，指数不变，底数相除：
::<math>\frac{a^n}{b^n} = \left(\frac{a}{b}\right)^n</math>

=== 其他等式 ===
* <math>x^\frac{m}{n} = \sqrt[n]{x^m}</math>
* <math>x^{-m} = \frac{1}{x^m} \qquad (x \ne 0)</math>
* <math>x^0 = 1 \qquad (x \ne 0)</math>
* <math>x^1 = x\,\!</math>
* <math>x^{-1} = \frac{1}{x} \qquad (x \ne 0)</math>

== 运算律 ==
加法和乘法存在[[交换律|交换律]]，比如：<math>2+3=5=3+2</math>，<math>2 \times 3 =6 =3 \times 2</math>，但是幂的运算不存在交换律，<math>2^3 = 8 </math>，但是<math>3^2 = 9 </math>。

同样，加法和乘法存在[[结合律|结合律]]，比如：<math>(2+3)+4=9=2+(3+4)</math>，<math>(2 \times 3) \times 4=24=2 \times (3 \times 4)</math>。不過，冪運算沒有結合律：<math>(2^3)^4 = 8^4 = 4096 </math>，而<math>2^{(3^4)} = 2^{81} = 2,417,851,639,229,258,349,412,352 </math>，所以<math>(2^3)^4\neq 2^{(3^4)} </math>。

但是冪運算仍然有其運算律，稱為'''指數律'''：
* <math>a^m \cdot a^n = a^{m+n}</math>
* <math>\frac{a^m}{a^n} = a^{m-n}</math>
* <math>(a^m)^n = a^{mn}</math>
* <math>\sqrt[n]{a^m} = a^{\frac{m}{n}}</math>
* <math>a^n \cdot b^n = (a \cdot b)^n</math>
* <math>\frac{a^n}{b^n} = \left(\frac{a}{b}\right)^n</math>

== 整数指数幂 ==
整数指数幂的运算只需要[[初等代数|初等代数]]的知识。

=== 正整数指数幂 ===
表达式<math>a^2 = a\cdot a</math>被称作<math>a</math>的[[平方|平方]]，因为边长为''<math>a</math>''的正方形面积是<math>a^2</math>。

表达式<math>a^3 = a\cdot a\cdot a</math>被称作''<math>a</math>''的[[立方数|立方]]，因为邊长为''<math>a</math>''的正方体体积是<math>a^3</math>。

所以<math>3^2</math>读作「3的平方」，<math>2^3</math>读作「2的立方」。

指数表示的是底数反复相乘多少次。比如<math>3^5 = 3\times 3\times 3\times 3\times 3 = 243</math>，指数是5，底数是3，表示3反复相乘5次。

或者，整数指数幂可以[[递归|递归]]地定义成：

:<math>a^n=
\begin{cases}
1 & (n= 0) \\
a \cdot a^{n-1} & (n> 0) \\
\left(\frac{1}{a}\right)^{-n} & (n< 0)
\end{cases}
</math>

=== 指数是1或者0 ===
注意<math>3^1</math>表示仅仅1个3的乘积，就等于3。

注意<math>3^5 = 3\times 3^4</math>，<math>3^4 = 3\times 3^3</math>，<math>3^3 = 3\times 3^2</math>，<math>3^2=3\times 3^1</math>，

继续，得到<math>3^1 = 3\times 3^0 = 3</math>，所以<math>3^0 = 1</math>

另一个得到此结论的方法是：通过运算法则<math> \frac{x^n}{x^m} = x^{n - m}</math>

当<math>m=n</math>时，<math> 1 = \frac{x^n}{x^n} = x^{n - n} = x^0 </math>

* 任何数的'''1'''次方是它本身。

=== 零的零次方 ===
{{main|零的零次方}}
<math> 0^0 </math> 其实还并未被数学家完整的定义，但部分看法是<math> 0^0 = 1 </math> ，在程式语言中（python） <math> 0**0 = 1 </math> 

在这里给出这一种极限的看法

<math>\lim _{x \to 0^+} x ^ x= 0^0</math>
于是，可以求出 x 取值从 1 到 0.0000001 计算得到的值，如图

=== 负数指数 ===
我们定义任何不为''' 0 '''的数''' a '''的''' -1 '''次方等于它的倒数。
:<math>a^{-1} = \frac{1}{a}</math>

对于非零'''<math>a</math>'''定义

:<math>a^{-n} = \frac{1}{a^n}</math>,
而<math>a=0</math>时分母為''' 0 '''没有意义。

证法一：

根据定义<math>a^m\cdot a^n = a^{m+n}</math>，当<math>m=-n</math>时
:<math>a^{-n} \, a^{n} = a^{-n\,+\,n} = a^0 = 1,</math>
得<math> a^{-n} \, a^{n} = 1 </math>, 所以<math>a^{-n} = \frac{1}{a^{n}}</math>。

证法二：

通过运算法则<math> \frac{a^m}{a^n} = a^{m - n}</math>

当<math>m=0</math>时，可得<math>a^{-n} = a^{0-n} = \frac{a^0}{a^n} = \frac{1}{a^{n}}</math>

负数指数<math>a^{-n}</math>还可以表示成'''1'''连续除以<math>n</math>个<math>a</math>。比如：
:<math>3^{-4} = \frac{\frac{\frac{\frac{1}{3}}{3}}{3}}{3} = \frac{1}{81} = \frac{1}{3^{4}}</math>.

=== 特殊数的幂 ===
==== 10的幂 ====
{{main|科学计数法}}
在[[十进制|十进制]]的计数系统中，10的幂写成1后面跟着很多个0。例如：<math>10^3 = 1000,\ 10^{-3} = 0.001</math>

因此10的幂用来表示非常大或者非常小的数字。如：299,792,458（真空中[[光速|光速]]，单位是[[米每秒|米每秒]]），可以写成 <math>2.99792458\times 10^8</math>，[[近似值|近似值]] <math>2.998\times 10^8</math> 或 <math>3\times 10^8</math>

[[国际单位制词头|国际单位制词头]]也使用10的幂来描述特别大或者特别小的数字，比如：词头“千”就是 <math>10^3</math>，词头“毫”就是 <math>10^{-3}</math>

==== 2的幂 ====
{{main|2的幂}}

==== 1的幂 ====
1的任何次幂都为1

==== 0的幂 ====
0的正数幂都等于0。

0的负数幂没有定义。

任何非0之数的0次方都是1；而[[0的0次方|0的0次方]]是懸而未決的，某些領域下常用的慣例是約定為1。<ref>Augustin-Louis Cauchy, ''Cours d'Analyse de l'École Royale Polytechnique'' (1821).  In his ''Oeuvres Complètes'', series 2, volume 3.</ref>但某些教科書表示0的0次方為無意義。<ref>康軒國中1上《FUN學練功坊①》P.35：a的0次方=1(a≠0)(註：0的0次方為無意義)</ref>也有人主張定義為1。

==== 负1的幂 ====
-1的奇数幂等于-1

-1的偶数幂等于1

=== 指数非常大时的幂 ===
一个大于1的数的幂趋于[[无穷大|无穷大]]，一个小于-1的数的幂趋于负无穷大
:当<math>a > 1</math>，<math> n \to \infty</math>，<math> a^n \to \infty</math>
:当<math>a < -1</math>，<math> n \to \infty</math>，<math> a^n \to -\infty </math> 或 <math>\infty</math> , (視乎n 是奇數或偶數)
一个绝对值小于1的数的幂趋于0
:当<math>|a| < 1</math>，<math> n \to \infty</math>，<math> a^n \to 0</math>
1的幂永远都是1
:当<math>a = 1</math>，<math> n \to \infty</math>，<math> a^n \to 1</math>

如果数''a''趋于1而它的幂趋于无穷，那么极限并不一定是上面几个。一个很重要的例子是：
:当<math> n \to \infty,  \left(1+\frac{1}{n}\right)^n \to e</math>
参见[[#e的幂|e的幂]]

其他指数的极限参见[[#幂的极限|幂的极限]]

== 正实数的实数幂 ==
一个正实数的[[实数|实数]]幂可以通过两种方法实现。

* [[有理数|有理数]]幂可以通过N次[[方根|方根]]定义，任何非0实数次幂都可以这样定义<!-- This method is perhaps the one most widely taught in schools. This needs a source to be reinserted -->
* [[自然对数|自然对数]]可以被用来通过指数函数定义实数幂

=== N次方根 ===
[[File:Root_graphs.svg|thumb]]

{{主条目|方根}}

一个[[数|数]]<math>a</math>的<math>n</math>次方根是<math>x</math>，''<math>x</math>''使<math>x^n=a</math>。

如果''<math>a</math>''是一个正实数，''<math>n</math>''是正整数，那么方程<math>x^n=a</math>只有一个正实数[[根_(数学)|根]]。
这个根被称为''<math>a</math>''的''<math>n</math>''次方根，记作：<math>\sqrt[n]{a}</math>，其中<math>\sqrt{\ }</math>叫做根号。或者，''<math>a</math>''的''<math>n</math>''次方根也可以写成<math>a^{\frac{1}{n}}</math>.
例如<math>4^{\frac{1}{2}} = 2,\ 8^{\frac{1}{3}} = 2</math>

当指数是<math>\frac{1}{2}</math>时根号上的2可以省略，如：<math>\sqrt{4}=4^{\frac{1}{2}}= \sqrt[2]{4} = 2</math>

=== 有理数幂 ===
有理数指数幂定义为

:<math>a^{\frac{m}{n}} = (a^m)^{\frac{1}{n}} = \sqrt[n]{a^m}</math>

=== e的幂 ===
{{主条目|指数函数}}

这个重要的数学常数[[E_(数学常数)|''e'']]，有时叫做[[欧拉数|欧拉数]]，近似2.718，是[[自然对数|自然对数]]的底。它提供了定义非整数指数幂的一个方法。
它是从以下极限定义的：
:<math>e =\lim_{n \to \infty} \left(1+\frac{1}{n} \right)^n </math>

'''[[指数函数|指数函数]]'''的定义是： 
:<math>e^x =\lim_{n \to \infty} \left(1+\frac{x}{n} \right)^n </math>

可以很简单地证明''e''的正整数''k''次方<math>e^k</math>是：
:<math>e^k = \left[\lim_{n \to \infty} \left(1+\frac{1}{n} \right) ^n\right]^k </math>
:<math>= \lim_{n \to \infty} \left[\left(1+\frac{1}{n} \right) ^n\right]^k </math>
:<math>= \lim_{n \to \infty} \left(1+\frac k {n\cdot k} \right)^{n \cdot k} </math>
:<math>= \lim_{n \cdot k \to \infty} \left(1+\frac k {n\cdot k} \right)^{n \cdot k} </math>
:<math>= \lim_{m \to \infty} \left(1+\frac k m \right)^m </math>

=== 实数指数幂 ===
[[File:Expo02.svg|thumb]]
因为所有[[实数|实数]]可以近似地表示为有理数，任意实数指数''x''可以定义成<ref name=Denlinger>{{cite book |title=Elements of Real Analysis |last=Denlinger |first=Charles G. |publisher=Jones and Bartlett |year=2011 |pages=278–283 |isbn=978-0-7637-7947-4}}</ref>：
:<math> b^x = \lim_{r \to x} b^r,</math>

例如：
:<math>x \approx 1.732 </math>
于是
:<math>5^x \approx 5^{1.732} =5^{\frac{433}{250}}=\sqrt[250]{5^{433}} \approx 16.241</math>

实数指数幂通常使用对数来定义，而不是近似有理数。

[[自然对数|自然对数]]<math>\ln{x} </math>是指数函数<math>e^x</math>的[[反函数|反函数]]。
它的定义是：对于任意<math>b>0</math>，满足
:<math>b = e^{\ln b}</math>
根据对数和指数运算的规则：
:<math>b^x = (e^{\ln b})^x = e^{x \cdot\ln b}</math>
这就是实数指数幂的定义：
:<math>b^x = e^{x\cdot\ln b}\,</math>

实数指数幂<math>b^x</math>的这个定义和上面使用有理数指数和连续性的定义相吻合。对于复数，这种定义更加常用。

== 负实数的实数幂 ==
如果<math>a</math>是负数且<math>n</math>是[[偶数|偶数]]，那么<math>x = a^n</math>是正數。如果''<math>a</math>''是负数且''<math>n</math>''是[[奇数|奇数]]，那么<math>x = a^n</math>是负数。

使用对数和有理数指数都不能将<math>a^k</math>（其中''<math>a</math>''是负实数，<math>k</math>实数）定义成实数。在一些特殊情况下，给出一个定义是可行的：负指数的整数指数幂是实数，有理数指数幂对于<math>a^\frac{m}{n}</math>（<math>n</math>是奇数）可以使用''<math>n</math>''次方根来计算，但是因为没有实数<math>x</math>使<math>x^2 = -1</math>，对于<math>a^\frac{m}{n}</math>（''<math>n</math>''是偶数）时必须使用[[虚数单位|虚数单位]]<math>i</math>。

使用对数的方法不能定义<math>a\leq 0</math>时的<math>a^k</math>为实数。实际上，<math>e^x</math>对于任何实数''<math>x</math>''都是正的，所以<math>\ln(a)</math>对于负数没有意义。

使用有理数指数幂来逼近的方法也不能用于负数<math>a</math>因为它依赖于[[连续性|连续性]]。函数<math>f(r) = a^r</math>对于任何正的有理数<math>a</math>是连续的，但是对于负数''<math>a</math>''，函数<math>f</math>在有些有理数<math>r</math>上甚至不是连续的。 

例如：当<math>a=-1</math>，它的奇数次根等于-1。所以如果''<math>n</math>''是正奇数整数，<math>-1^{\frac m n}=-1</math>当<math>m</math>是奇数，<math>-1^{\frac m n}=1</math>当''<math>m</math>''是偶数。虽然有理数<math>q</math>使<math>-1^q=1</math>的[[集合_(数学)|集合]]是[[稠密集|稠密集]]，但是有理数<math>q</math>使<math>-1^q=-1</math>的[[集合_(数学)|集合]]也是。所以函数<math>-1^q</math>在有理数域不是连续的。

因此，如果要求负实数的任意实数幂，必须将底数和指数看成[[複數_(數學)|複數]]，按复数的正实数幂或复数的复数幂方法计算。

== 正实数的复数幂 ==
=== e的虚数次幂 ===
{{主条目|指数函数}}

[[File:ExpIPi.gif|300px]]''e''<sup>''z''</sup>可以通过{{nowrap|(1 + ''z''/''N'')<sup>''N''</sup>}}当''N''趋于无穷大时的[[極限_(數列)|极限]]来定义，那么''e''<sup>''iπ''</sup>就是{{nowrap|(1 + ''iπ''/''N'')<sup>''N''</sup>}}的极限。在这个动画中''n''从1取到100。{{nowrap|(1 + ''iπ''/''N'')<sup>''N''</sup>}}的值通过''N''重复增加在复数平面上展示，最终结果就是{{nowrap|(1 + ''iπ''/''N'')<sup>''N''</sup>}}的准确值。可以看出，随着''N''的增大，{{nowrap|(1 + ''iπ''/''N'')<sup>''N''</sup>}}逐渐逼近极限-1。这就是[[欧拉公式|欧拉公式]]。]]

[[複數_(數學)|複數]]运算的几何意义和[[#e的幂|''e''的幂]]可以帮助我们理解<math>e^{ix}</math>（''<math>x</math>''是实数），即[[純虛數指數函數|純虛數指數函數]]。想象一个[[直角三角形|直角三角形]]<math>(0,1,1+\frac{ix}{n})</math>（括号内是复数平面内三角形的三个[[頂點_(幾何)|顶点]]），对于足够大的<math>n</math>，这个三角形可以看作一个[[扇形|扇形]]，这个扇形的中心角就等于<math>\frac{x}{n}</math>[[弧度|弧度]]。对于所有<math>k</math>，三角形<math>(0,(1+\frac{ix}{n})^k, (1+\frac{ix}{n})^{k+1})</math>互为[[相似三角形|相似三角形]]。所以当''<math>n</math>''足够大时<math>(1+\frac{ix}{n})^n</math>的极限是复数平面上的[[单位圆|单位圆]]上<math>x</math>弧度的点。这个点的[[极坐标|极坐标]]是<math>(r,\theta)=(1,x)</math>，[[直角坐标|直角坐标]]是<math>(\cos x,\sin x)</math>。所以<math>e^{ix} = \cos x + i \sin x</math>，而這個函數可以稱為[[純虛數指數函數|純虛數指數函數]]。这就是[[欧拉公式|欧拉公式]]，它通过[[複數_(數學)|複數]]的意义将[[代数学|代数学]]和[[三角学|三角学]]联系起来了。

等式<math>e^z = 1</math>的解是一个整数乘以<math>2i\pi</math><ref>This definition of a principal root of unity can be found in:
*{{cite book | title = Introduction to Algorithms | edition = second | author = Thomas H. Cormen, Charles E. Leiserson, Ronald L. Rivest, and Clifford Stein | publisher = MIT Press | year = 2001 | isbn = 0-262-03293-7}} [http://highered.mcgraw-hill.com/sites/0070131511/student_view0/chapter30/glossary.html Online resource] {{Wayback|url=http://highered.mcgraw-hill.com/sites/0070131511/student_view0/chapter30/glossary.html |date=20070930201902 }}
*{{cite book | title = Difference Equations: From Rabbits to Chaos | edition = Undergraduate Texts in Mathematics | author = Paul Cull, Mary Flahive, and Robby Robson | year = 2005 | publisher = Springer | isbn = 0-387-23234-6 }} Defined on page 351, available on Google books.
* "[http://mathworld.wolfram.com/PrincipalRootofUnity.html Principal root of unity] {{Wayback|url=http://mathworld.wolfram.com/PrincipalRootofUnity.html |date=20200805205628 }}", MathWorld.</ref>：
:<math>\{ z : e^z = 1 \} = \{ 2k\pi i : k \in \mathbb{Z} \}.</math>

更一般地，如果<math>e^b = a</math>，那么<math>e^z = a</math>的每一个解都可以通过将<math>2i\pi</math>的整数倍加上<math>b</math>得到：

:<math>\{ z : e^z = a \} = \{ b + 2k\pi i : k \in \mathbb{Z} \}. </math>

这个复指数函数是一个有周期<math>2i\pi</math>的[[周期函数|周期函数]]。

更简单的：<math>e^{i\pi} = -1;\ e^{x + iy}= e^x(\cos y + i \sin y )</math>。

=== 三角函数 ===
{{主条目|欧拉公式}}
根据[[欧拉公式|欧拉公式]]，[[三角函数|三角函数]]余弦和正弦是： 
:<math>\cos z = \frac{ e^{i\cdot z} + e^{-i\cdot z}} {2} \qquad \sin z = \frac{e^{i\cdot z} - e^{-i\cdot z}}{2\cdot i}</math>

历史上，在复数发明之前，余弦和正弦是用几何的方法定义的。上面的公式将复杂的三角函数的求和公式转换成了简单的指数方程 
:<math>e^{i\cdot (x+y)}=e^{i\cdot x}\cdot e^{i\cdot y}.\,</math>
使用了复数指数幂之后，很多三角学问题都能够使用代数方法解决。

=== e的复数指数幂 ===
<math>e^{x+iy}</math>可以分解成<math>e^x\cdot e^{iy}</math>。其中<math>e^x</math>是<math>e^{x+iy}</math>的[[模|模]]，<math>e^{iy}</math>决定了<math>e^{x+iy}</math>的方向

=== 正实数的复数幂 ===
如果<math>a</math>是一个正实数，<math>z</math>是任何复数，<math>a^z</math>定义成<math>e^{z\cdot \ln(a)}</math>，其中<math>x=\ln (a)</math>是方程<math>e^x = a</math>的唯一解。所以处理实数的方法同样可以用来处理复数。

例如：
:<math>2^i = e^{i\cdot \ln(2)} = \cos{\ln 2}+i\cdot \sin{\ln 2 } = 0.7692+0.63896i</math>
:{{計算結果|e^i|7}}
:{{計算結果|10^i|7}}
:<math>(e^{2\pi})^i = 535.49^i = 1</math>

== 复数的复数幂 ==
=== 複數的虚数幂 ===
让我们从一个简单的例子开始：计算<math> \left( 1+i \right)^i </math>。

<math>\begin{align}
\left( 1+i \right)^i & = \left[\sqrt{2}\left(\frac{\sqrt{2}}{2}+\frac{\sqrt{2}}{2} i\right)\right]^i \\
& = \left(\sqrt{2}e^{\tfrac{\pi}{4}i}\right)^i \\
& = e^{-\tfrac{\pi}{4}}\sqrt{2}^i \\
& = e^{-\tfrac{\pi}{4}}\cos\frac{\ln 2}{2} + ie^{-\tfrac{\pi}{4}}\sin\frac{\ln 2}{2} \\
\end{align}</math>

其中<math> \sqrt{2}^i </math>的得法参见上文[[冪#正实数的复数幂_2|正实数的复数幂]]

=== 复数的复数幂 ===
类似地，在计算复数的复数幂时，我们可以将指数的实部与虚部分开以进行幂计算。例如计算<math> \left( 1+i \right)^{2+i} </math>：

<math>\begin{align}
\left( 1+i \right)^{2+i} & = \left( 1+i \right)^2 \left( 1+i \right)^i \\
& = 2ie^{-\tfrac{\pi}{4}}\left(\cos\frac{\ln 2}{2} + i\sin\frac{\ln 2}{2}\right) \\
& = -2e^{-\tfrac{\pi}{4}}\sin\frac{\ln 2}{2} + 2ie^{-\tfrac{\pi}{4}}\cos\frac{\ln 2}{2} \\
\end{align}</math>

=== '''一般情况''' ===
复数的复数幂必须首先化为底数为<math>e</math>的形式：

<math>w^z = e^{z \ln w}</math>

又，由复数的极坐标表示法：

<math>w = r e^{i\theta}</math>

故

<math>w^z = e^{z \ln(w)} = e^{z(\ln(r) + i\theta)}</math>。

然后，使用[[欧拉公式|欧拉公式]]处理即可。

由于复数的极坐标表示法中，[[辐角|辐角]]<math>\theta</math>的取值是具有周期性的，因此复数的复数幂在大多数情况下是[[多值函数|多值函数]]。不过实际应用中，为了简便起见，辐角都只取主值，从而使幂值唯一。

== 在[[函數|函數]]中 ==
當函數名後有上標的數（即函數的指數），一般指要重複它的運算。例如<math>f^3 (x )</math>即<math>f ( f ( f ( x ) ) )</math>。特別地，<math>f^{-1} (x )</math>指<math>f (x )</math>的[[反函數|反函數]]。

但[[三角函数|三角函数]]的情況有所不同，一個正指數應用於函數的名字時，指答案要進行乘方運算，而指數為-1時则表示其反函數。例如：<math>(\sin x)^{-1}</math>表示<math>\csc x</math>。因此在三角函數時，使用<math>\sin^{-1} x</math>來表示<math>\sin x</math>的反函數<math>\arcsin x</math>。

== 在[[抽象代數|抽象代數]]中 ==

== 计算自然数（正整数）''<math>n</math>''的<math>a^n</math>的算法 ==

最快的方式计算<math>a^n</math>，当<math>n</math>是正整数的时候。它利用了测试一个数是奇数在计算机上是非常容易的，和通过简单的移所有位向右来[[除以2|除以2]]的事实。

[[偽代碼|偽代碼]]：
<syntaxhighlight lang="text">
   1. 1 → y, n → k, a → f
   2.若k不為0,執行3至6
     3.若k為奇數, y * f → y
     4. k [[位操作#移位|右移]]1位（即k / 2 → k ,小數點無條件捨去）
     5. f * f → f
     6.回到2
   7.傳回y
</syntaxhighlight>
在[[C語言|C]]/[[C++语言|C++语言]]中，你可以写如下算法：

<syntaxhighlight lang="c" line="1">
double power(double a, unsigned int n)
{
    double y = 1;
    double f = a;
    while (n > 0) {
       if (n % 2 == 1) y *= f;
       n >>= 1;
       f *= f;
    }
    return y;
}
</syntaxhighlight>

此算法的[[時間複雜度|時間複雜度]]為<math>\Omicron(\log n)\!</math>，比普通算法快（a自乘100次，[[時間複雜度|時間複雜度]]為<math>\Omicron(n)\!</math>），在<math>n</math>較大的時候更為顯著。

例如計算<math>a^{100}</math>，普通算法需要算100次，上述算法則只需要算7次。若要計算<math>a^{n} (n < 0)</math>可先以上述算法計算<math>a^{|n|}</math>，再作倒數。

== 註釋 ==
{{Reflist}}

== 另見 ==
* [[迭代冪次|迭代冪次]]

== 外部連結 ==
* [https://web.archive.org/web/20041028085525/http://www.edp.ust.hk/math/history/5/5_3/5_3_18.htm 指數的歷史]

[[Category:初等数学|M]]
[[Category:二元運算|M]]
[[Category:指数|Category:指数]]