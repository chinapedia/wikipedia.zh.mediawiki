{{求值策略}}
'''及早求值'''（{{lang-en|Eager evaluation}}）又譯'''熱切求值'''，也被稱為'''貪婪求值'''（{{lang|en|Greedy evaluation}}），是多数传统[[编程语言|编程语言]]的[[求值策略|求值策略]]。

在及早求值中，[[表达式|表达式]]在它被约束到[[变量|变量]]的时候就立即求值。这在简单编程语言中作为低层策略是更有效率的，因为不需要建造和管理表示未求值的表达式的中介[[数据结构|数据结构]]。 

及早求值的优点在于节省内存和提高执行速度，比如下面的 Basic 代码：

 x = 5 + 3 * (1 + 5 ^ 2)
 print x
 print x + 2

因为第一行代码  x = 5 + 3 * (1 + 5 ^ 2)  执行完成后 x 被赋值并存储为 83，表达式所占用的空间可以立即释放掉，所以节省了内存空间。接下来的两行代码执行时都需要使用 x 的值，此时 x 是可以直接用于运算的数值 83 而不是需要计算的表达式  5 + 3 * (1 + 5 ^ 2)，所以减少了一次计算过程，提高了执行效率。对于惰性求值的编程语言，由于[[记忆化|记忆化]]（memoization）特性，求值过程与之不同。

==参见==
*[[图归约|图归约]]
*[[惰性求值|惰性求值]]
*[[求值策略|求值策略]]

{{compu-stub}}

[[Category:编程典范|Category:编程典范]]