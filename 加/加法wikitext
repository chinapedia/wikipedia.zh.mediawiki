{{Unreferenced|time=2021-11-19T19:46:17+00:00}}
{{NoteTA|G1=Math}}
{{redirect|加}}
[[File:Addition01.svg|thumb]]
'''加法'''（addition，通常用[[加号与减号|加号]]“{{Math|+}}”表示）是基本的[[算术|算术]][[运算|运算]]之一，与[[减法|减法]]、[[乘法|乘法]]、[[除法|除法]]合称「[[四则运算|四则运算]]」。两个[[自然数|自然数]]相加是将他们组合起来的总量。例如，在右图中，三个苹果和两个苹果被组合在一起，共有五个苹果，用[[数学表达式|数学表达式]]表示成<math>3+2=5</math>，即“3加2等於5”。

除了自然数，其他类型的数也可以定义加法，例如[[整数|整数]]、[[实数|实数]]、[[复数_(数学)|复数]]等，这些类型的加法是[[算术|算术]]的一部分。在[[代数|代数]]中，许多抽象的概念也可以相加，例如[[向量|向量]]、[[矩阵|矩阵]]等。

加法有几个重要的性质：
*[[加法#交换律|交换律]]：左右两个加数的顺序可以随意调换；
*[[加法#结合律|结合律]]：多个数相加，顺序也可以随意调换；

将多个[[一|一]]相加的动作被称为[[计数|计数]]；一个数加[[0|零]]仍等于自身。当与相关的运算（像是[[减法|减法]]、[[乘法|乘法]]等）同时出现时，加法也遵循一些法则。

加法是最简单的数学任务之一。蹒跚学步的小孩就能将较小的数正确相加；最基本的<math>1+1=2</math>连五个月大的婴儿都会，甚至其他种类的动物也会算。在[[初等教育|初等教育]]中，学生使用[[十进制|十进制]]或[[二进制|二进制]]进行加法运算，从个位数的加法开始，逐渐变难。辅助加法的机械从古代的[[算盘|算盘]]，到现今的[[电子计算机|电子计算机]]，种类繁多。至今，人们还在研究在电子计算机上实现加法的高效[[算法|算法]]。

{{算术运算}}

== 符号表示与术语 ==
加法用项之间的[[加号与减号|加号]]“+”表示，是[[中缀表示法|中缀表示法]]的一种。结果用[[等号|等号]]“=”表示。例如：
[[File:PlusCM128.svg|链接=https://en.wikipedia.org/wiki/File:PlusCM128.svg]]]]
:{{計算結果|1+1}}（{{Math|1}} 加 {{Math|1}} 等于 {{Math|2}}）
:{{計算結果|2+2}}（{{Math|2}} 加 {{Math|2}} 等于 {{Math|4}}）
:{{計算結果|1+2}}（{{Math|1}} 加 {{Math|2}} 等于 {{Math|3}}）
:{{計算結果|5+4+2}}（见[[加法#结合律|结合律]]）
:{{計算結果|3+3+3+3}}（见[[加法#相关运算|乘法]]）

一个[[分數|分數]]紧接着一个整数表示加法，这种形式称为[[带分数|带分数]]。例如：
:<math>3 {1 \over 2} = 3 + {1 \over 2} = 3.5</math>

在大部分情况下，省略符号表示的是乘法而不是加法，因此这种表示法可能引起混淆。

[[级数|级数]]的和可以用[[求和符号|求和符号]]表示，属于[[迭代|迭代]]的一种。例如：
:<math>\sum_{k = 1}^{5} k^2 = 1^2 + 2^2 + 3^2 + 4^2 + 5^2 = 55</math>

在加法中，要加的数称为'''项'''（term）或'''加数'''（addend 或 summand），结果称为'''和'''（sum），这些术语对多个数相加也适用。（因数（factor）是一个不同的术语，它表示要[[乘|乘]]的数。）有些人把第一个加数叫做'''被加数'''（augend）。事实上，在[[文艺复兴|文艺复兴]]时期，许多人根本不认为第一个加数是“加数”。如今，因为加法的[[交換律|交換律]]，“被加数”很少被人使用了，通常两项都统称为“加数”。

以上术语全部源于[[拉丁语|拉丁语]]。[[英语|英语]]单词 addition 和 add 源自拉丁语[[动词|动词]] ''addere''，它是由 ''ad'' 和 ''dare'' 组成的合成词，源于[[原始印欧语词根|原始印欧语词根]] ''*deh₃-''（给）。因此 ''add'' 就是“给”。加上表动词作形容词的后缀 ''-nd'' 得到 addend（“给的东西”）。类似地，由 ''augere''（增加）得到 augend（“要增加的东西”）。
[[File:AdditionNombryng.svg|链接=https://en.wikipedia.org/wiki/File:AdditionNombryng.svg]]
sum 和 summand 源自拉丁语[[名词|名词]] ''summa''（最高，顶端）和相关联的动词 ''summare''。这不仅仅是因为两个正数的和比两个加数都要大，还是因为[[古希腊|古希腊]]和[[古罗马|古罗马]]人在做加法时，通常将结果写在加数的上面，因此和字面上就比加数要“高”。现代通常将结果写在加数的下面。最早使用 ''addere'' 和 ''summare'' 的古罗马作家包括[[维特鲁威|维特鲁威]]和[[弗朗提努斯|弗朗提努斯]]。[[波爱修斯|波爱修斯]]运用了其他几个与加法运算有关的术语。后来的[[中古英语|中古英语]]术语 adden 和 adding 是由[[杰弗里·乔叟|杰弗里·乔叟]]普及化的。

[[加号与减号|加号]]“+”（[[Unicode|Unicode]]：U+002B；[[ASCII|ASCII]]：<code>&#43;</code>）是拉丁词语“et”（和）的缩写，它在数学中的使用至少可以追溯到1489年。

== 解释 ==
加法可以用来模拟许多操作。即使是最简单的[[自然数|自然数]]加法，也有许多种不同的解释及视觉化表达形式。

=== 合并集合 ===
[[File:AdditionShapes.svg|链接=https://en.wikipedia.org/wiki/File:AdditionShapes.svg]]展示的集合合并]]
或许，加法最基本的解释就是合并[[集合_(数学)|集合]]：将两个或以上的[[不交集|不交集]]组合成一个集合时，组合起来的集合的元素个数即是原来的集合中的元素数量之和。这个解释很容易视觉化，也不容易产生歧义。在[[高等数学|高等数学]]中，这个定义也很有用；它还为以下的严密定义奠定了基础。然而，这个定义并没有什么显而易见的方法拓展到[[分數|分數]]及[[负数|负数]]。一种方法是考虑可以分成等分的物体，例如有刻度的绳子。绳子可以首尾相接，体现出另一种加法的概念：将绳子的长度相加，而不是直接将绳子本身相加。

=== 延长长度 ===
[[File:AdditionLineAlgebraic.svg|链接=https://en.wikipedia.org/wiki/File:AdditionLineAlgebraic.svg]]
加法的另外一种解释涉及到将原始长度以给定长度延长：当原始长度以给定长度延长时，最终的长度是原始长度与给定长度之和。加法算式 {{Math|''a'' + ''b''}} 可以从[[代数|代数]]的角度解释为一个将 {{Math|''a''}} 与 {{Math|''b''}} 组合起来的[[二元运算|二元运算]]，也可以解释为向 {{Math|''a''}} 增加 {{Math|''b''}} 个单位。在后一种解释之下，{{Math|''a''}}、{{Math|''b''}} 两个[[操作数|操作数]]是[[非对称|非对称]]的，加法算式 {{Math|''a'' + ''b''}} 被理解为向 {{Math|''a''}} 应用[[一元運算|一元運算]] {{Math|+''b''}}。这种情况下，{{Math|''a''}} 是被动的，因此将 {{Math|''a''}} 称为“被加数”而不是笼统地称为“加数”可能更好。这种一元运算的视角在讨论[[減法|減法]]时也很有用，因为一元加法是一元减法的[[逆运算|逆运算]]，反之亦然。
[[File:AdditionLineUnary.svg|链接=https://en.wikipedia.org/wiki/File:AdditionLineUnary.svg]]

== 性质 ==

=== 交换律 ===
加法满足[[交換律|交換律]]：左右两个加数的顺序可以调换，结果不变。用符号语言来说，设 {{Math|''a''}} 与 {{Math|''b''}} 为任意两个数，则 {{Math|1=''a'' + ''b'' = ''b'' + ''a''}}。这一事实被称为“加法交换律”。有一些其他的[[二元运算|二元运算]]也满足交换律，例如[[乘法|乘法]]，但不是所有二元运算都满足交换律，例如[[减法|减法]]和[[除法|除法]]就不满足交换律。
[[File:AdditionComm01.svg|链接=https://en.wikipedia.org/wiki/File:AdditionComm01.svg]]

=== 结合律 ===
加法满足[[结合律|结合律]]：多个数相加，运算顺序可以调换，结果不变。例如，{{Math|''a'' + ''b'' + ''c''}} 是指 {{Math|(''a'' + ''b'') + ''c''}} 还是 {{Math|''a'' + (''b'' + ''c'')}}？加法结合律说明这两种解释的结果是相等的：设 {{Math|''a''}}、{{Math|''b''}}、{{Math|''c''}} 为任意三个数，则 {{Math|1=(''a'' + ''b'') + ''c'' = ''a'' + (''b'' + ''c'')}}。例如，当 {{Math|1=''a'' = 1}}，{{Math|1=''b'' = 2}}，{{Math|1=''c'' = 3}} 时：
[[File:AdditionAsc.svg|链接=https://en.wikipedia.org/wiki/File:AdditionAsc.svg]]
<math>(1 + 2) + 3 = 3 + 3 = 6 = 1 + 5 = 1 + (2 + 3)</math>

然而，当加法与其他操作一起使用时，[[運算次序|運算次序]]变得很重要。在标准運算次序中，加法比[[乘方|乘方]]、[[方根|方根]]、[[乘法|乘法]]和[[除法|除法]]的优先级要低，但与[[减法|减法]]优先级相同。

=== 单位元 ===
任何数加[[零|零]]等于自身；零是加法[[單位元|单位元]]。设 {{Math|''a''}} 为任意数，则 {{Math|1=''a'' + 0 = 0 + ''a'' = ''a''}}。这个性质最早在[[婆羅摩笈多|婆罗摩笈多]]的《[[婆羅摩歷算書|婆罗摩历算书]]》（公元628年）被提及，尽管他根据 {{Math|''a''}} 是正数、负数还是零分成了三种情况，并且使用文字说明，而不是代数符号。之后的印度数学家们将这三种情况精简成了一种情况。大约 830 年，印度数学家 Mahavira<!-- 人名待翻译 --> 写道：“零加上一个数就会变成那个数”<!-- https://en.wikipedia.org/wiki/Addition#Identity_element 原文为“zero becomes the same as what is added to it” -->，对应一元陈述 {{Math|1=0 + ''a'' = ''a''}}。12 世纪时，印度数学家[[婆什迦羅第二|婆什迦罗]]写道：“任何一个量（正负均可），加零或减零后保持不变”，对应一元陈述 {{Math|1=''a'' + 0 = ''a''}}。
[[File:AdditionZero.svg|链接=https://en.wikipedia.org/wiki/File:AdditionZero.svg]]<!-- https://en.wikipedia.org/wiki/Addition#Identity_element 原文：“In the addition of cipher, or subtraction of it, the quantity, positive or negative, remains the same” -->

=== 后继 ===
在整数中，加数为 [[1|1]] 的加法有特殊意义：对于任何整数 {{Math|''a''}}，整数 {{Math|(''a'' + 1)}} 是大于 {{Math|''a''}} 的最小整数，称为 {{Math|''a''}} 的[[後繼函數|后继]]。例如，3 是 2 的后继，7 是 6 的后继。这样，{{Math|''a'' + ''b''}} 可以视为 {{Math|''a''}} 的第 {{Math|''b''}} 个后继，加法成为后继函数的[[迭代函数|迭代函数]]。例如，8 是 7 的后继，7 是6 的后继，所以 8 是 6 的第 2 个后继，因此 {{Math|1=6 + 2 = 8}}。

=== 单位 ===
将有[[计量单位|单位]]的[[物理量|物理量]]相加时，只有相同單位的量可以相加。例如，50 [[毫米|毫米]]加 150 毫米等于 200 毫米。然而，5 [[英尺|英尺]]加 2 [[英寸|英寸]]等于 62 英寸，因为 1 英尺等于 12 英寸。通常情况下，3 [[米_(单位)|米]]加 4 [[平方米|平方米]]是没有意义的，因为米和平方米没有可比性。这是[[因次分析|因次分析]]的一个基本例子。

== 计算加法 ==

=== 天生的能力 ===

=== 学习 ===
通常情况下，小孩首先学习[[计数|计数]]。遇到将两个物体和三个物体合并在一起的问题时，年幼的小孩使用实际物体（手指或画）进行模拟，然后数出总数。当他们逐渐积累经验后，他们使用“连续数数”的方法：为求出{{Math|2 + 3}}，他们从3开始连续数2个数，即“三，四，五”（通常掰着手指），得到结果5。这个方法几乎是通用的，小孩很容易通过老师或同龄人学到这个方法，许多小孩甚至独立发现了这个方法。积累足够经验后，小孩运用加法交换律，从大的数开始数起，在这个例子中，从3开始，数“四，五”。最终，通过经验或记忆，他们能记住一些简单的加法算式。这个时候，小孩开始尝试由已知的知识推导未知的知识。例如，一个小孩知道{{Math|1=6 + 6 = 12}}，发现{{Math|6 + 7}}比{{Math|6 + 6}}大1，因而得出{{Math|1=6 + 7 = 13}}。这个过程很快，多数小学生最终通过结合记忆与推导熟练地进行加法。

不同的国家在不同的年龄教授整数和算术。许多国家在学前就教授加法。然而，世界上几乎所有国家都在小学一年级结束前教授加法。

==== 加法表 ====
通常，小孩需要记忆1到10的加法表，这样就可以做任何的加法。

{{加法表}}

=== 十进制系统 ===
为了在[[十进制|十进制]]中进行加法，首先要熟练掌握 100 个基本的一位数加法[[算式|算式]]。死记硬背没问题，但是有规律的记忆方式对于大多数人来说更有效：

* 利用加法交换律（{{Math|1=''a'' + ''b'' = ''b'' + ''a''}}）这一事实，需要掌握的[[算式|算式]]数量从 100 个降低到 55 个。
* 加 1 或加 2 是一项基本工作，通过数数甚至[[直覺_(知識論)|直觉]]就能完成。
* 因为[[0|零]]是加法单位元，所以加零是很[[简单|简单]]的工作。然而，在算术的[[教授|教授]]过程当中，一些[[学生|学生]]认为加法是让加数增加的一个[[过程|过程]]。实际问题可能能够帮助他们[[意识|意识]]到零是一个[[“个例”|“个例”]]。
* 一个数加自身与两个两个的数数有关，与[[乘法|乘法]]有关，是许多其他理论的基础，通常更容易被学生掌握。
* 类似 {{Math|1=6 + 7 = 13}} 的加法算式可以由“一个数加自身”的加法算式推导而来：{{Math|1=6 + 6 = 12}} 再加 1，或 {{Math|1=7 + 7 = 14}} 再减 1，都可以得到 13。
* 形为 {{Math|5 + ''x''}} 或 {{Math|10 + ''x''}} 的加法算式通常较早被记忆，因此可以用来推导其他加法算式。例如，{{Math|1=6 + 7 = 13}} 可以由 {{Math|1=5 + 7 = 12}} 再加 1 推导而来。
* 一种较高级的方法是以 10 作为涉及 8 或 9 的加法的中间值。例如：{{Math|1=8 + 6 = 8 + 2 + 4 = 10 + 4 = 14}}。

在学生渐渐成长的过程中，他们逐渐学习更多知识，并且学会更快更熟练地推导其他知识。许多学生从不死记硬背，但仍能快速地计算。

==== 进位 ====
{{Main|进位}}多位数加法的标准计算方式是'''竖式'''计算：将加数竖着对齐，从个位开始，一位一位地加。如果某一位的结果超过 9，额外的数位被“[[进位|进]]”到前一位。例如，计算 {{Math|27 + 59}} 时，如图，{{Math|1=7 + 9 = 16}}，1 是进位。另一种方法是从最高位开始加。如果采用这种方法，进位便会变得有些棘手，但可以快速得到结果的一个近似值。除此之外，还有很多种其他的方法。
[[File:Addition_Demonstration.svg|缩略图]]

==== 小数的加法 ====
[[小数|小数]]的加法和上面的过程很像：将两个小数按小数点对齐（如果需要的话，还可以向较短的小数的开头或末尾添加零，使它和另一个小数一样长），按上面的过程将数位相加，然后在同样的地方加上小数点。例如，{{Math|45.1 + 4.34}} 的计算过程如图所示。

[[File:Decimal_Fraction_Addition_Demonstration.svg|thumb]]

==== 科学记数法 ====
{{Main|科学记数法#基本计算}}在[[科学记数法|科学记数法]]中，一个数以 <math>x = a \times 10^n</math>的形式表示，其中 {{Math|''n''}} 是整数且 {{Math|1 ≤ ''a'' < 10}}。为了将两个以科学记数法表示的数相加，它们的指数部分必须相同。例如：

<math>2.34 \times 10^{-5} + 5.67 \times 10^{-6} = 2.34 \times 10^{-5} + 0.567 \times 10^{-5} = 2.907 \times 10^{-5}</math>

=== 其他进位制 ===
{{Main|二进制加法}}其他进位制下的加法和十进制加法很像。以二进制下的加法为例。两个二进制个位数相加相对来说比较简单，涉及到一种进位：

{{Math|0 + 0 → 0}}

{{Math|0 + 1 → 1}}

{{Math|1 + 0 → 1}}

{{Math|1 + 1 → 0}}，进位为 1（因为 {{Math|1=1 + 1 = 2 = 0 + (1 × 2<sup>1</sup>)}}）

两个“1”位相加得到“0”位并向前进位“1”。这和十进制下的加法很像：如果某一位的结果达到或超过基数 10，前一位需要加 1：

{{Math|5 + 5 → 0}}，进位为 1（因为 {{Math|1=5 + 5 = 10 = 0 + (1 × 10<sup>1</sup>)}}）

{{Math|7 + 9 → 6}}，进位为 1（因为 {{Math|1=7 + 9 = 16 = 6 + (1 × 10<sup>1</sup>)}}）

二进制的加法是一样的道理：二进制下的 {{Math|1=1101 + 10111 = 100100}}（即十进制下的 {{Math|1=13 + 23 = 36}}）如图所示。
[[File:Binary_Addition_Demonstration.svg|缩略图]]

=== 计算机  ===
[[模拟计算机|模拟计算机]]直接操作物理量，所以它们的加法机制取决于加数的形式。一些机械加法计算器以滑动的方块的位置表示加数，它们使用[[平均值|平均值]][[杠杆|杠杆]]计算加法。如果加数表示为两个[[轴|轴]]的旋转速度，那么它们可以用[[差速器|差速器]]相加。[[水力学|水力学]]加法计算器可以根据[[牛顿第二定律|牛顿第二定律]]让[[活塞|活塞]]的力平衡以将两个房间的[[压力|压力]]相加。通用模拟计算机的最常见的情况就是将两个[[电压|电压]]（以[[接地|接地]]为参照）相加，[[电阻|电阻]][[电路|电路]]可以大致完成这个工作，但是更好的设计需要用到[[运算放大器|运算放大器]]。<!-- 待翻译 -->

== 加法的定义 ==<!-- 这段翻译完成后，理想情况下将会取代下面一段“定义” -->

为了证明加法的常见性质，首先必须给出加法的准确[[定义|定义]]。加法首先在[[自然数|自然数]]范围内定义。在[[集合论|集合论]]中，加法接着被拓展到逐渐广阔的集合上：[[整数|整数]]，[[有理数|有理数]]，[[实数|实数]]……（在[[数学教育|数学教育]]中，正分数的加法通常在负数之前教授；这也是历史发展的路线。）

=== 自然数的加法 ===
{{Further|自然数}}
目前有两种流行的方法用于定义两个自然数 {{Math|''a''}} 和 {{Math|''b''}} 的和。如果自然数被定义为[[有限集合|有限集合]]的元素个数，那么 {{Math|''a'' + ''b''}} 可以这样定义：设 {{Math|N(''S'')}} 为集合 {{Math|''S''}} 中的元素个数。设 {{Math|''A''}} 与 {{Math|''B''}} 为[[不交集|不相交]]的集合且 {{Math|1=N(''A'') = ''a''}} 且 {{Math|1=N(''B'') = ''b''}}。那么 {{Math|''a'' + ''b''}} 定义为 {{Math|N(''A'' ∪ ''B'')}}（{{Math|''A'' ∪ ''B''}} 表示 {{Math|''A''}} 和 {{Math|''B''}} 的[[交集|交集]]）。另一种方法是允许 {{Math|''A''}} 与 {{Math|''B''}} 相交并取它们的[[不交并|不交并集]]（一种允许公共的元素被分开计算两次的运算）。

另一种流行的方法是递归：设 {{Math|''n''<sup>+</sup>}} 为 {{Math|''n''}} 的[[後繼函數|后继]]，即继 {{Math|''n''}} 后的下一个自然数，因此 {{Math|1=0<sup>+</sup> = 1}}，{{Math|1=1<sup>+</sup> = 2}}，依此类推。定义 {{Math|1=''a'' + 0 = ''a''}}，并通过 {{Math|1=''a'' + (''b''<sup>+</sup>) = (''a'' + ''b'')<sup>+</sup>}} 递归地定义一般的加法。因此 {{Math|1=1 + 1 = 1 + 0<sup>+</sup> = (1 + 0)<sup>+</sup> = 1<sup>+</sup> = 2}}。同样，这种定义也有很多变种。上述定义实际上是[[递归|递归定理]]在[[部分有序集|部分有序集]] {{Math|'''N'''<sup>2</sup>}} 上的一个应用。然而，一些文献倾向于使用只在[[自然数|自然数]][[集合_(数学)|集合]]上有定义的狭义递归定理：先将 {{Math|''a''}} 临时想象为固定的，在 {{Math|''b''}} 上应用递归以定义一元函数“ {{Math|1=''f''(''b'') = ''a'' + ''b''}} ”，然后将这些一元函数组合在一起形成完整的二元运算。早在 1854 年，德国数学家[[理查德·戴德金|理查德·戴德金]]就发展了这种递归定义，并在接下来的几十年中扩展了这个定义。他利用[[数学归纳法|数学归纳法]]证明了交换律、结合律等性质。
=== 整数的加法 ===
{{Further|整数}}
整数最简单的理解就是由[[绝对值|绝对值]]（一个自然数）和[[性質符號|符号]]（一般情况下，[[正数|正]]或[[负数|负]]）组成。整数[[0|零]]是一个特殊情况：它既不是正数也不是负数。对于任何整数 {{Math|''n''}}，定义 {{Math|{{!}}''n''{{!}}}} 为 {{Math|''n''}} 的绝对值。设 {{Math|''a''}} 与 {{Math|''b''}} 为整数，则它们的和 {{Math|''a'' + ''b''}} 的定义需要分类讨论：

* 如果 {{Math|1=''a'' = 0}}，那么 {{Math|1=''a'' + ''b'' = ''b''}}；如果 {{Math|1=''b'' = 0}}，那么 {{Math|1=''a'' + ''b'' = ''a''}}。例如：{{Math|1=(−2) + 0 = −2}}。特别地，{{Math|1=0 + 0 = 0}}。
* 如果 {{Math|''a''}} 和 {{Math|''b''}} 都是正数，那么  {{Math|1=''a'' + ''b'' = {{!}}''a''{{!}} + {{!}}''b''{{!}}}}。例如：{{Math|1=4 + 1 = 5}}。
* 如果 {{Math|''a''}} 和 {{Math|''b''}} 都是负数，那么  {{Math|1=''a'' + ''b'' = −({{!}}''a''{{!}} + {{!}}''b''{{!}})}}。例如：{{Math|1=(−4) + (−1) = −({{!}}−4{{!}} + {{!}}−1{{!}}) = −(4 + 1) = −5}}。
* 如果 {{Math|''a''}} 和 {{Math|''b''}} 一正一负，那么  {{Math|''a'' + ''b''}} 的绝对值等于 {{Math|''a''}} 的绝对值和 {{Math|''b''}} 的绝对值之差（即 {{Math|{{!}}{{!}}''a''{{!}} − {{!}}''b''{{!}}{{!}}}}），符号与 {{Math|''a''}} 和 {{Math|''b''}} 中绝对值较大的一项符号一致。例如：{{Math|1=(−6) + 4 = −2}}，因为 {{Math|−6}} 和 {{Math|4}} 一正一负，所以 {{Math|(−6) + 4}} 的绝对值等于它们的绝对值之差 {{Math|{{!}}−6{{!}} − {{!}}4{{!}} &equals; 2}}，又因为负数项 {{Math|−6}} 的绝对值大于正数项 {{Math|4}} 的绝对值，结果为负，因此结果为 {{Math|−2}}。

尽管对于实际的问题来说，这个定义足够了，但对于优雅的一般性的数学证明来说，它实在是太复杂了，情况太多了。

一个数学上更方便的整数的理解方式是使用[[格罗滕迪克群|格罗滕迪克群]]构造。给定自然数及其加法运算（{{Math|+}}）和单位元 {{Math|0}} 的定义，每个整数都可以（不唯一地）表达为两个自然数 {{Math|''a''}} 和 {{Math|''b''}} 的（未正式定义的）[[差|差]]，因此可以将整数''定义''为两个自然数组成的数对{{Math|(''a'', ''b'')}}。将等价的数对（差相同）考虑为同一个整数是个小问题。两个这样的新的整数 {{Math|(''a'', ''b'')}} 与 {{Math|(''c'', ''d'')}}（其中 {{Math|''a''}}、{{Math|''b''}}、{{Math|''c''}}、{{Math|''d''}} 为整数）的和（用 {{Math|⊕}} 符号表示）通过自然数的加法（{{Math|+}}）定义为：
[[File:Addition_of_integers_using_Grothendieck_construction.svg|链接=https://en.wikipedia.org/wiki/File:Addition_of_integers_using_Grothendieck_construction.svg]]
<math>(a,b) \oplus (c,d) = (a+c,b+d)</math>

规定整数的[[单位元|加法单位元]]由数对 {{Math|(''a'', ''a'')}} 生成，且 {{Math|(''a'', ''b'')}} 的[[加法逆元|加法逆元]]由 {{Math|(''b'', ''a'')}} 生成（即 {{Math|1=−(''a'', ''b'') = (''b'', ''a'')}}），这样整数的[[加法群|加法群]]的说明就完整了。利用加法逆元定义[[负数|负数]]，将[[减法|减法]]定义为“加加法逆元”，都比单独构造一个减法运算（在基础数学中被认为是[[逆运算|逆运算]]）要方便许多。<!-- 翻译 -->

=== 有理数（分数）的加法 ===
{{Main|有理数的加法}}
[[有理数|有理数]]（[[分数|分数]]）的加法可以用[[最小公分母|最小公分母]]计算，但从概念上来说只要用加法和乘法就可以了：

<math>\frac ab + \frac cd = {ad + bc \over bd}</math>

例如，<math>{\textstyle \frac34 + \frac18 = {3 \times 8 + 4 \times 1 \over 4 \times 8} = {24 + 4 \over 32} = \frac{28}{32} = \frac78}</math>。

当[[分母|分母]]相同时，分数的加法就更简单了，只要将分子相加，分母不变就行了：

<math>\frac ac + \frac bc = \frac{a+b}c</math>

例如，<math>{\textstyle \frac14 + \frac24 = \frac{1+2}4 = \frac34}</math>。

有理数加法的交换律和结合律可以由整数算术的性质很容易地推导而来，见[[分式環|分式环]]。

=== 实数的加法 ===
{{Further|实数的构造}}

=== 复数的加法 ===
要将两个复数相加，只需将实数部分和虚数部分分别相加即可，即：

<math>(a + bi) + (c + di) = (a + c) + (b + d)i</math>

利用复数在[[复平面|复平面]]上的视觉化表示，复数的加法可以几何解释为：两个复数 {{Math|''A''}} 和 {{Math|''B''}}（解释为复平面上的点）的和，是由以 {{Math|''A''}}、{{Math|''B''}} 与原点 {{Math|''O''}} 为[[頂點_(幾何)|顶点]]的[[平行四边形|平行四边形]]得到的[[頂點_(幾何)|顶点]] {{Math|''X''}}（如图所示）。等价地说，{{Math|''X''}} 是使三角形 {{Math|''OAB''}} 与三角形 {{Math|''XBA''}} [[全等三角形|全等]]的点。
[[File:Complex_Number_Addition_Visualization.svg|缩略图]] {{Math|''A''}}（红色）与 {{Math|''B''}}（蓝色）表示复数加数，{{Math|''X''}} 是结果 {{Math|''A'' + ''B''}} 所在的点。]]

== 加法的扩展 ==
有许多二元操作可以被视为实数加法的扩展。[[抽象代数|抽象代数]]主要关心这类扩展，[[集合论|集合论]]与[[范畴论|范畴论]]中也有它们的影子。

=== 抽象代数中的加法 ===

==== 向量加法 ====
{{Further|向量}}
在[[线性代数|线性代数]]中，[[向量空间|向量空间]]是一个允许[[向量|向量]]相加及缩放的代数结构。所有实数的[[有序对|有序对]]组成的集合就是一个常见的向量空间：有序对 {{Math|(''a'', ''b'')}} 被解释为[[欧几里得平面|欧几里得平面]]上从原点到由 {{Math|(''a'', ''b'')}} 表示的点的向量。两个向量的和是通过将对应的坐标相加完成的：{{Math|1=(''a'', ''b'') + (''c'', ''d'') = (''a'' + ''c'', ''b'' + ''d'')}}。

在[[经典力学|经典力学]]中，向量解释为[[力|力]]，因此这个加法运算是经典力学的基础。

==== 矩阵加法 ====
{{Further|矩阵}}
大小相同的两个矩阵可以相加。两个 {{Math|''m'' × ''n''}} 矩阵 {{Math|'''A'''}} 和 {{Math|'''B'''}} 的和也是一个 {{Math|''m'' × ''n''}} 矩阵，用 {{Math|'''A''' + '''B'''}} 表示，由对应元素相加得到：


<math>\begin{align}
\mathbf{A} + \mathbf{B}
& = \begin{bmatrix}
 a_{11} & a_{12} & \cdots & a_{1n} \\
 a_{21} & a_{22} & \cdots & a_{2n} \\
 \vdots & \vdots & \ddots & \vdots \\
 a_{m1} & a_{m2} & \cdots & a_{mn} \\
\end{bmatrix} +
\begin{bmatrix}
 b_{11} & b_{12} & \cdots & b_{1n} \\
 b_{21} & b_{22} & \cdots & b_{2n} \\
 \vdots & \vdots & \ddots & \vdots \\
 b_{m1} & b_{m2} & \cdots & b_{mn} \\
\end{bmatrix} \\
& = \begin{bmatrix}
 a_{11} + b_{11} & a_{12} + b_{12} & \cdots & a_{1n} + b_{1n} \\
 a_{21} + b_{21} & a_{22} + b_{22} & \cdots & a_{2n} + b_{2n} \\
 \vdots & \vdots & \ddots & \vdots \\
 a_{m1} + b_{m1} & a_{m2} + b_{m2} & \cdots & a_{mn} + b_{mn} \\
\end{bmatrix}
\end{align}</math>

例如：

<math>
  \begin{bmatrix}
    1 & 3 \\
    1 & 0 \\
    1 & 2
  \end{bmatrix}
+
  \begin{bmatrix}
    0 & 0 \\
    7 & 5 \\
    2 & 1
  \end{bmatrix}
=
  \begin{bmatrix}
    1+0 & 3+0 \\
    1+7 & 0+5 \\
    1+2 & 2+1
  \end{bmatrix}
=
  \begin{bmatrix}
    1 & 3 \\
    8 & 5 \\
    3 & 3
  \end{bmatrix}
</math>

==== 模算数中的加法 ====
{{Further|模算数}}

==== 一般的加法 ====

=== 集合论与范畴论中的加法 ===
自然数加法的一个影响深远的扩展即是集合论中的[[序数|序数]]和[[基数_(数学)|基数]]的加法，它们是将自然数加法扩展到[[超限数|超限数]]的两种不同方式。不同于多数加法运算的是，序数的加法不满足交换律。不过，基数的加法满足交换律，且与[[不交并|不交并]]操作有着紧密的联系。

在[[范畴论|范畴论]]当中，不交并操作是[[余积|余积]]<!-- coproduct -->操作的一个特例。一般性的余积<!-- coproduct -->操作很可能是加法的所有扩展当中最抽象的一种。一些余积<!-- coproduct -->操作的命名突出了它们与加法运算的联系，例如[[直和|直和]]和[[楔和|楔和]]。

===发散级数的加法===
在通常意义下，[[发散级数|发散级数]]因其发散，是没有传统意义上的“和”的，但可以通过某些定义来求出该定义下发散级数的“和”，如[[切萨罗求和|切萨罗求和]]、[[阿贝尔求和|阿贝尔求和]]、[[欧拉求和|欧拉求和]]等。这种扩展意义上的“和”不应与传统意义上的“和”混淆。

== 相关运算 ==
加、[[减法|减]]、[[乘法|乘]]、[[除法|除]]是基础算术中的基本运算。

=== 算术 ===
[[减法|减法]]可以视为一种特殊的加法——减一个数等于加它的[[加法逆元|加法逆元]]。减法本身就是加法的一种逆运算，因为加 {{Math|''x''}} 和减 {{Math|''x''}} 互为[[反函數|反函数]]。给定一个定义有加法运算的[[集合_(数学)|集合]]，不总能够定义一个对应的减法运算，自然数的集合就是一个很简单的例子。然而，反过来说，一个减法运算唯一地确定一个加法运算、一个加法逆元运算、一个[[加法单位元|加法单位元]]。因此，一个[[加法群|加法群]]可以描述为一个在减法运算下[[封闭性|封闭]]的集合。

[[乘法|乘法]]可以想成是重复的加法。如果一个单项 {{Math|''x''}} 在加法运算中出现 {{Math|''n''}} 次，那么这个加法运算的结果就是 {{Math|''x''}} 和 {{Math|''n''}} 的[[积|积]]。即使 {{Math|''n''}} 不是[[自然数|自然数]]，这个积仍然可能是有意义的，例如当 {{Math|1=''n'' = [[-1|−1]]}} 时，这个积就是 {{Math|''x''}} 的[[加法逆元|加法逆元]]。

在实数和复数域中，加法和乘法可以通过[[指数函数|指数函数]]互相交换：

<math>\mathrm{e}^{a + b} = \mathrm{e}^a \cdot \mathrm{e}^b</math>

这个[[恒等式|恒等式]]允许借助[[对数表|对数表]]并手动计算加法完成乘法，也使得[[计算尺|计算尺]]上可以进行乘法。在将[[無窮小量|无穷小量]]与[[李代数|李代数]]上的[[向量|向量]]加法相互联系起来的[[李群|李群]]的广义语境下，这个公式仍然能给出一个较好的第一近似。
[[File:Csl.JPG|链接=https://en.wikipedia.org/wiki/File:Csl.JPG]]]]
乘法的扩展甚至比加法更多。一般情况下，乘法对加法满足[[分配律|分配律]]，[[环_(代数)|环]]的定义明确说明了这一要求。在有些语境下，例如整数，乘法对加法的分配律和[[乘法单位元|乘法单位元]]的存在足以唯一确定乘法运算。分配律还给出了加法的一些信息，例如：将乘法算式 {{Math|(1 + 1)(''a'' + ''b'')}} 用两种方法展开可以得到加法的[[交换律|交换律]]。因此，一般地，环的加法满足交换律。

[[除法|除法]]和加法的联系相对来说没有那么紧密。因为 <math>\textstyle \frac ab = a \cdot b^{-1}</math>，所以除法对加法满足右分配律，即 <math>\textstyle {a + b \over c} = \frac ac + \frac bc</math>（{{Math|''c'' ≠ 0}}），但不总是满足左分配律，例如 <math>\textstyle {1 \over 2 + 2} = \frac14 \neq 1 = \frac12 + \frac12</math>。

=== 最大值操作 ===
<!-- 檔案不存在 [[File:XPlusOne.svg|链接=https://en.wikipedia.org/wiki/File:XPlusOne.svg]]中的图像]] ，可從英文維基百科取得 -->
[[最大值|最大值操作]] {{Math|max(''a'', ''b'')}} 作为一个[[二元运算|二元运算]]，与加法很相似。事实上，如果两个非负整数 {{Math|''a''}} 和 {{Math|''b''}} 不是一个[[数量级|数量级]]的，那么它们的和与它们的最大值将会很接近。这个近似在数学应用中极其有用，例如在截断[[泰勒级数|泰勒级数]]的时候。然而，在[[数值分析|数值分析]]中它是一个经常出现的令人头疼的问题，其根本原因是最大值操作是不[[可逆|可逆]]的。如果 {{Math|''b''}} 远大于 {{Math|''a''}}，那么 {{Math|(''a'' + ''b'') − ''b''}} 直觉化的计算会导致不可接受的[[捨入誤差|舍入误差]]，甚至得到结果 {{Math|0}}。（参见[[精度丢失|精度丢失]]）

在[[无穷|无穷]][[极限_(数学)|极限]]中，这个近似变得精确：如果 {{Math|''a''}} 和 {{Math|''b''}} 中有一个是无穷[[基数_(数学)|基数]]，那么它们的基数和等于它们之中较大者。相应地，无穷基数不可相[[減法|减]]。

和加法一样，最大值操作满足交换律和结合律。更进一步，由于加法保持了[[实数|实数]]的[[序|序]]，加法对最大值操作满足分配律，就像乘法对加法满足分配律那样：

<math>a + \max(b, c) = \max(a + b, a +c)</math>

因此，在[[熱帶幾何|热带几何]]中，乘法由加法代替，加法由最大值操作代替。在这个语境下，加法称作“热带乘法”，最大值操作称作“热带加法”，“热带[[加法单位元|加法单位元]]”是 {{Math|−∞}}。不过，有些作者倾向于使用[[最小值|最小值操作]]来代替加法，这样“[[加法单位元|加法单位元]]”就是 {{Math|+∞}}。

将这些结论放在一起，可以得到：热带加法通过[[对数|对数]]近似于一般的加法：

<math>\log_k (a + b) \approx \max(\log_k a, \log_k b)</math>

当底数 {{Math|''k''}} 增加，这个近似变得越来越精确。提出一个常数 {{Math|''h''}}（与[[量子力学|量子力学]]中的[[普朗克常数|普朗克常数]]类似命名）并取 {{Math|''h''}} 趋向 {{Math|0}} 时的[[经典极限|经典极限]]，这个近似就可以变得精确：

<math>\max(a, b) = \lim_{h \to 0} h \log( \mathrm{e}^{a/h} + \mathrm{e}^{b/h})</math>

在这种意义下，最大值操作实质上是加法的“解量化”版本。

=== 其他方式的加法 ===
自增操作，又叫[[後繼函數|后继]]，是加 {{Math|[[1|1]]}} 的操作。

[[求和符号|求和符号]]（<math>\textstyle\sum</math>）表述了任意多个数（通常不止两个）的加法。它涵盖了一个数的和（即其自身）和[[空和|空和]]（即 {{Math|[[0|0]]}}）。[[无穷|无穷]]加和即[[级数|级数]]，是一个十分脆弱且易错的过程。

[[有限集合|有限集合]]的[[计数|计数]]等价于在这个集合上将 {{Math|[[1|1]]}} 相加。

[[积分|积分]]是在[[连续统|连续统]]上的“加法”；更精确且更具一般性地说，是在一个[[可导|可导]][[流形|流形]]上的“加和”。零维流形上的积分即是加和。

[[线性组合|线性组合]]是每项都有一个系数（通常是[[实数|实数]]或[[复数_(数学)|复数]]）的加和，它结合了乘法和加法。线性组合在直觉化的加法将会违反一些规范化规则的场合下尤其有用，例如[[游戏理论|游戏理论]]中的[[混合策略|混合策略]]及[[量子力学|量子力学]]中的[[量子態|量子态]]的[[态叠加原理|态叠加]]。

[[卷积|卷积]]是由[[概率分布函数|概率分布函数]]定义的[[随机变量|随机变量]]的加法。它的通常的定义涉及到[[积分|积分]]、[[减法|减法]]和[[乘法|乘法]]。一般地，卷积作为一种[[定义域|定义域]]加法发挥作用，而[[向量|向量]]加法则是一种[[值域|值域]]加法。

{{Authority control}}
[[Category:加法|Category:加法]]
[[Category:二元運算|J]]