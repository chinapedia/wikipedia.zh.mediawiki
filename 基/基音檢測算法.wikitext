{{copyedit|time=2015-07-03T16:25:26+00:00}}{{translating|[[:en:Pitch_detection_algorithm|:en:Pitch detection algorithm]]|||time=2018-08-28UTC07:52:38}}{{NoteTA|G1=Signals and Systems}}
'''基音檢測演算法'''（英語：'''pitch detection algorithm'''，縮寫：'''PDA'''）是估計[[週期性|周期性]]或{{Link-en|準周期性|Quasiperiodicity}}[[訊號|訊號]]的[[音高|音高]]或[[基本頻率|基本頻率]]的算法。該算法主要用於[[語音處理|語音]]或樂音的信號處理中。基音檢測算法既可以單獨從[[時域|時域]]或[[頻域|頻域]]的角度實現，也可以同時利用時域和頻域。

基音檢測算法的用途廣泛，在[[語音學|語音學]]、{{le|音樂分析|Music information retrieval}}、[[語音編碼|語音編碼]]和[[電子音樂|電子音樂]]表演中均有重要位置。這些不同的需求使得通用算法的產生更為困難，故目前尚不存在完美的基音檢測算法，實際使用中有一系列算法共存。多數基音檢測算法大致可歸類為下述分類中的一種<ref>D. Gerhard. [http://www.cs.uregina.ca/Research/Techreports/2003-06.pdf Pitch Extraction and Fundamental Frequency: History and Current Techniques] {{Wayback|url=http://www.cs.uregina.ca/Research/Techreports/2003-06.pdf |date=20210224141801 }}, technical report, Dept. of Computer Science, University of Regina, 2003.</ref>。

通常情況下，基音檢測算法會估計準周期性信號的周期。周期的倒數即為頻率。

<div>
== 常見的算法==
最簡單的方法之一是算出信號[[零點|零點]]間的間隔（[[過零率|過零率]]）。這種方法的缺點在於它無法應對諸如多個周期不同的正弦波或[[噪音|噪音]]這樣的覆雜[[波形|波形]]。不過這並不意味著這種方法一無是處，在只有單一聲源的情景中過零率是個不錯的基音檢測指標。這種算法相當易於實現。

更複雜的方法會將原訊號平移一些時間，去跟原本訊號內積比對相似度，若平移若幹時間後的訊號與原訊號很相似，則平移時間非常可能是該訊號之週期，透過嘗試不同的平移時間，可把平移時間對相似度作圖，找出相似度最大的週期， 像是AMDF演算法 ([[平均幅度差函數|平均幅度差函數]]), ASMDF演算法 ([[平均方均差函數|平均方均差函數]])和其他類似的[[自相關函數|自相關函數]]法，可以精確的找出基音。但是自相關函數法有時會因為[[雜訊|雜訊]]太多、[[複音|複音]]、[[泛音|泛音]]等因素（通常是“八度音程錯誤”），導致判斷錯誤。他們可以很好地應對噪聲信號（取決於實際狀況），但不能很好地處理[[複音音樂|複音音樂]]（涉及多個音符)。{{Cn|date=October 2018}} 

目前最精確的基音檢測算法會先結合各種找相似度的方法（內積、差值），並透過人類的經驗法則去修正去設門檻值，像是若訊號為音訊，可確定頻率範圍在20赫茲到20000赫茲間，可先鎖定平移時間在0.00005秒到0.05秒的範圍間，最後透過[[機率模型|機率模型]]或[[機器學習|機器學習]]的方法來判斷音高。像是廣泛被採用的[[YIN演算法|YIN演算法]]<ref>A. de Cheveigné and H. Kawahara. [http://www.ircam.fr/pcm/cheveign/pss/2002_JASA_YIN.pdf YIN, a fundamental frequency estimator for speech and music.]{{dead link|date=2017年12月|bot=InternetArchiveBot|fix-attempted=yes}} The Journal of the Acoustical Society of America, 111:1917, 2002. {{doi|10.1121/1.1458024}}</ref>與[[MPM演算法|MPM演算法]]<ref>P. McLeod and G. Wyvill. [http://www.cs.otago.ac.nz/tartini/papers/A_Smarter_Way_to_Find_Pitch.pdf A smarter way to find pitch.] {{Wayback|url=http://www.cs.otago.ac.nz/tartini/papers/A_Smarter_Way_to_Find_Pitch.pdf |date=20210224183408 }} In Proceedings of the International Computer Music Conference (ICMC’05), 2005.</ref>，皆為自相關函數法的進階版，但仍侷限在單音的音頻偵測，若訊號為[[複音|複音]]，同時有兩個音源，往往會採用頻域的方法。

== 基于頻域的算法 ==
若訊號為[[複音|複音]]，要同時偵測兩個以上的音源之頻率，在頻域中是可行的，首先會先將訊號轉為[[頻譜|頻譜]]<ref>{{cite book |title=Statistical Digital Signal Processing and Modeling |url=https://archive.org/details/statisticaldigit00haye |last=Hayes |first=Monson |year=1996 |publisher=John Wiley & Sons, Inc. |isbn=0-471-59431-8 |page=[https://archive.org/details/statisticaldigit00haye/page/n406 393]}}</ref> ，常見的方法是透過[[快速傅立葉變換|快速傅立葉變換]]，可在有限運算資源下，得到非常有效的準確度。

常見的頻域方法包含[[泛音內積頻譜法|泛音內積頻譜法]]<ref name="cnxpda">[http://cnx.org/content/m11714/latest/ Pitch Detection Algorithms] {{Wayback|url=http://cnx.org/content/m11714/latest/ |date=20140720053748 }}, online resource from [[Connexions|Connexions]]</ref><ref>A. Michael Noll, “Pitch Determination of Human Speech by the Harmonic Product Spectrum, the Harmonic Sum Spectrum and a Maximum Likelihood Estimate,” Proceedings of the Symposium on Computer Processing in Communications, Vol. XIX, Polytechnic Press: Brooklyn, New York,  (1970), pp. 779-797.</ref>、[[倒頻譜分析|倒頻譜分析]]<ref>A. Michael Noll, “Cepstrum Pitch Determination,” Journal of the Acoustical Society of America, Vol. 41, No. 2, (February 1967), pp. 293-309.</ref>，[[最大似然估計法|最大似然估計法]]，他們都是由預設的頻率對照表，試圖從訊號頻譜特徵中，找到對應之頻率<ref>Mitre, Adriano; Queiroz, Marcelo; Faria, Régis. [http://www.ime.usp.br/~mqz/Mitre_AESBR2006.pdf Accurate and Efficient Fundamental Frequency Determination from Precise Partial Estimates.] {{Wayback|url=http://www.ime.usp.br/~mqz/Mitre_AESBR2006.pdf |date=20210225063213 }} Proceedings of the 4th AES Brazil Conference. 113-118, 2006.</ref>。

為了改進從離散傅立葉頻譜得到的基音估計，可以使用[[頻譜重新分佈法|重新分佈法]] (基於相位) or [[格蘭徳克插值|格蘭徳克插值]] (基於幅度) 的技術超出離散傅立葉頻段提供的精度。 布朗和普克特提供了另一種基於階段的方法 <ref>Brown JC and Puckette MS (1993).  A high resolution fundamental frequency determination based on phase changes of the Fourier transform.  J. Acoust. Soc. Am. Volume 94, Issue 2, pp. 662-667 [https://archive.is/20130414073448/http://asadl.org/jasa/resource/1/jasman/v94/i2/p662_s1?isAuthorized=no ]</ref>

== 基于频域和时域的算法 ==
頻譜/動態的基音檢測法，像是YAAPT<ref>Stephen A. Zahorian and Hongbing Hu. [http://bingweb.binghamton.edu/~hhu1/paper/Zahorian2008spectral.pdf A Spectral/temporal method for Robust Fundamental Frequency Tracking.] {{Wayback|url=http://bingweb.binghamton.edu/~hhu1/paper/Zahorian2008spectral.pdf |date=20150705015545 }} The Journal of the Acoustical Society of America, 123 (6), 2008. {{doi|10.1121/1.2916590}}</ref><ref>Stephen A. Zahorian and Hongbing Hu. [http://ws2.binghamton.edu/zahorian/yaapt.htm YAAPT Pitch Tracking MATLAB Function] {{Wayback|url=http://ws2.binghamton.edu/zahorian/yaapt.htm |date=20190914222642 }}</ref>，結合了時域和頻域，時域方面，透過[[自相關函數|自相關函數]]法，頻域則是透過頻譜資訊來辨識出音高，並從較為可能的音高種類中，利用[[動態規劃|動態規劃]]找出最佳的音高選擇，這種結合時域和頻域的演算法，可以結合更多資訊，降低時域或頻域所獨立造成的誤差。

== 語音訊號的基本頻率 ==
語音訊號的基本頻率範圍大約為40赫茲到600赫茲。<ref name=huang>{{cite book |last=Huang |first=Xuedong |author2=Alex Acero |author3=Hsiao-Wuen Hon |title=Spoken Language Processing |url=https://archive.org/details/spokenlanguagegu00xued |year=2001 |publisher=Prentice Hall PTR |isbn=0-13-022616-5 |page=[https://archive.org/details/spokenlanguagegu00xued/page/n337 325] }}</ref>


自相關函數法需要至少兩個周期才能偵測頻率，假如音訊的基本頻率為40赫茲，至少需要0.05秒的語音訊號才能分析。然而在0.05秒內，具有較高基頻的語音不一定在整個窗口中具有相同的基頻。<ref name=huang>{{cite book |last=Huang |first=Xuedong |author2=Alex Acero |author3=Hsiao-Wuen Hon |title=Spoken Language Processing |url=https://archive.org/details/spokenlanguagegu00xued |year=2001 |publisher=Prentice Hall PTR |isbn=0-13-022616-5 |page=[https://archive.org/details/spokenlanguagegu00xued/page/n337 325] }}</ref>

== 參考資料 ==
{{Reflist}}

[[Category:数字信号处理|Category:数字信号处理]]

== 另请参阅 ==
* {{Link-en|节拍检测|Beat detection}}
* {{Link-en|谱密度估计|Spectral density estimation}}
* [[线性预测编码|线性预测编码]]
* [[MUSIC演算法|MUSIC演算法]]