在[[抽象代数|抽象代数]]中，'''剩余格'''是既为[[格_(数学)|格]]又为[[幺半群|幺半群]]的[[代数结构|代数结构]]，使得幺半群乘法的每个自变量都是关于这个格次序的[[伽罗瓦连接|伽罗瓦连接]]的一极。它的一般概念是Ward和Dilworth在1939年介入的。某些例子先于一般概念而存在，包括[[布尔代数|布尔代数]]、[[Heyting代数|Heyting代数]]、[[剩余布尔代数|剩余布尔代数]]、[[关系代数_(抽象代数)|关系代数]]和[[MV-代数|MV-代数]]。剩余半格省略了交运算∧，比如[[克莱尼代数|克莱尼代数]]和[[作用代数|作用代数]]。

==定义==

在[[数学|数学]]中，'''剩余格'''是[[代数结构|代数结构]]'''L''' = (''L'', ∧, ∨, ·, '''I''', /, \)使得
:  (i) (''L'', ∧, ∨)是[[格_(数学)|格]]，
: (ii) (''L'', ·, '''I''')是[[幺半群|幺半群]]，
:(iii)对于所有''L''　中的''x'', ''y'', ''z''，有''y'' ≤ ''x''\''z'' ⇔ ''x''·''y'' ≤ ''z'' ⇔ ''x'' ≤ ''z''/''y''（剩余公理）。

条件(iii)的效果是，对每个''L''中的''x''和''z''，''x''\''z''成为最大的''y''使得''x''·''y'' ≤ ''z''，对偶的对于每个''L''中的''y''和''z''，''z''/''y''成为最大''x''使得''x''·''y'' ≤ ''z''。

运算''x''\''y''和''y''/''x''分别叫做''y''对''x''的“右剩余”和“左剩余”。如符号所暗示的那样它们是某种形式的商。更加精确地说，对于一个给定的''L''中的''x''，一元运算''x''·和''x''\是在'''L'''和它的[[序对偶|序对偶]]之间的[[伽罗瓦连接|伽罗瓦连接]]的两极，并且对偶于两个函数·''y''和 /''y''。通过同样适用于伽罗瓦连接的推理，我们有了另一个剩余的定义，就是：
:''x''·(''x''\''y'') ≤ ''y'' ≤ ''x''\(''x''·''y'')，
:(''y''/''x'')·''x'' ≤ ''y'' ≤ (''y''·''x'')/''x''，

并且要求这些函数必须在'''L'''上是单调的（或反单调的，在被看作从'''L'''到它的序对偶的函数的时候，这是在格理论中表示伽罗瓦连接的更标准的方式）。其意义在于使函数''x''·和''x''\相互之间是伪逆（pseudoinverse）或伴随，·''x''和 /''x''也类似。

最后这个定义纯粹依据不等式，注意单调性可以公理化为''x''·''y'' ≤ (''x''∨''z'')·''y''，其他运算和它们的自变量也类似。而且任何不等式''x'' ≤ ''y''可以等价的表示为等式，要么''x''∧''y'' = ''x''要么''x''∨''y'' = ''y''。这与格和幺半群的等式公理化一起生成剩余格的纯等式定义，而它们形成了一个等式类或[[簇_(泛代数)|簇]]。注意分配律''x''·(''y''∨''z'') = (''x''·''y'') ∨ (''x''·''z'')是这些公理的结论所以不需要是定义的一部分。在幺半群乘法是∧的时候，剩余格变成为Heyting代数，这种格是分配性的，但是一般的说格不需要是分配性的，而它的·分配在∨之上。

''x''\''y''的可供替代的符号是''x'' → ''y''，''y''/''x''的可供替代的符号是''y'' ← ''x''，这是在剩余和逻辑蕴涵之间的类似性所暗示的，而幺半群的乘法可以被理解为不需要是交换性的某种形式的合取。当幺半群是交换性的时候这两种剩余是一致的。

''x''·''y''的可供替代的符号包括''x''◦''y'', ''x'';''y''（[[关系代数_(抽象代数)|关系代数]]），和''x''⊗''y''（[[线性逻辑|线性逻辑]]）。'''I'''的可供替代的符号包括''e''和1'。

== 例子 ==
[[布尔代数|布尔代数]]和[[Heyting代数|Heyting代数]]是交换剩余格，在其中''x''·''y'' = ''x''∧''y''（而单位元'''I'''是代数的顶元素1）而两个剩余''x''\''y''和''y''/''x''是同一个运算，就是蕴涵''x'' → ''y''。第二个例子非常一般性，因为Heyting代数包换所有有限[[分配格|分配格]]，和形成[[完全格|完全格]]的所有链或[[全序|全序]]，例如实数轴上的单位区间[0,1]，或者整数和±<math>\infty</math>。

结构('''Z''', ''min'', ''max'', +, 0, −, −)（整数带有两个剩余都是减法）是交换剩余格，使得幺半群的单位元不是最大元素(实际上这里没有最小或最大元素)，而幺半群的乘法不是这个格的交运算。在这个例子中，不等式就是等式，因为−（减法）不只是+的伴随或伪逆运算而真就是它的逆运算。任何在加法下的全序群比如有理数或实数都可替代这个例子中的整数。任何这些例子的非负部分都假定了''min''和''max''被互换并且−被替代为“monus”（定义为在''x'' ≤ ''y''时''x''-''y'' = 0其他时候为正常减法）的例子。

更一般性的一类例子是在给定集合''X''的所有[[二元关系|二元关系]]也就是''X''<sup>2</sup>幂集的[[布尔代数|布尔代数]]，通过选取幺半群乘法·为关系复合，选取幺半群单位元为由在所有''X''中''x''的有序对(''x'',''x'')构成的恒等关系'''I'''而成为剩余格。给定在''X''上的两个关系''R''和''S''，''S''对''R''的右剩余''R''\''S''是二元关系使得''x''(''R''\''S'')''y''只在对于所有''X''中的''z''，''zRx''蕴涵''zSy''的时候成立（注意与蕴涵的联系）。左剩余是它的镜像：''y''(''S''/''R'')''x''在对于所有''X''中的''z''，''xRz''蕴涵''ySz''的时候成立。

可用在{0,1}上的二元关系<和>来展示，在其中0 < 1和1 > 0是唯一成立的关联。那么''x''(>\<)''y''只在''x'' = 1的时候成立，而''x''(</>)''y''只在''y'' = 0的时候成立，显示出<对>的剩余是不同的，依赖于我们剩余在右侧还是在左侧。这种不同是在<;>和>;<和之间的不同的推论，这里唯一成立的关联是0(<;>)0（因为0<1>0）和1(>;<)1 (since 1>0<1)。如果我们转而选择≤和≥，≥\≤和≤/≥是同样的，因为≤;≥ = ≥;≤，二者在所有''x''和''y''之间总是成立（因为''x''≤1≥''y''并且''x''≥0≤''y''）。

字母表（集合）Σ上的所有[[形式语言|形式语言]]的布尔代数2<sup>Σ*</sup>形成了剩余格，它的幺半群乘法是语言串接''LM''而它的幺半群单位元'''I'''是由空字符串ε足成的语言{ε}。右剩余''M''\''L''构成自所有在Σ上的字''w''是的''Mw'' ⊆ ''L''。左剩余''L''/''M''用''wM''替代了左剩余中的''Mw''。

只在''X''为有限的时候''X''上的所有二元关系的剩余格是有限的，并且只在''X''有最多一个元素的时候是交换的。当''X''为空的时候代数是退化的布尔代数其中0 = 1 = '''I'''。只在Σ有最多一个字母的时候Σ上的所有语言的剩余格是交换的。只在Σ为空的时候它是有限的，这时它由两个语言0（空语言{}）和幺半群单位元'''I''' = {ε} = 1构成。

形成有特殊性质的布尔代数的例子请参见[[剩余布尔代数|剩余布尔代数]]。

==剩余半格==

'''剩余半格'''除了省略了交运算∧之外同一于剩余格。它是[[代数结构|代数结构]]L = (L, ∨, ·, 1, /, \)满足上面规定的所有剩余格等式，除了包含符号∧的之外。定义''x'' ≤ ''y''为''x''∧''y'' = ''x''的选项就不可用了，只留下了另一个选项''x''∨''y'' = ''y''（或任何等价者）。

通过简单的省略∧用任何剩余格制作出剩余半格。剩余半格起因于与[[作用代数|作用代数]]的联系，它是也是[[克莱尼代数|克莱尼代数]]的剩余半格，它通常不需要∧。

== 引用 ==
* Ward, Morgan, and [[Robert_P._Dilworth|Robert P. Dilworth]] (1939) "Residuated lattices," ''Trans. Amer. Math. Soc. 45'': 335-54. Reprinted in Bogart, K, Freese, R., and Kung, J., eds. (1990) ''The Dilworth Theorems: Selected Papers of R.P. Dilworth'' Basel: Birkhäuser.


[[Category:格理论|S]]
[[Category:代数逻辑|S]]
[[Category:半群论|S]]