{{NoteTA
|G1 = IT
}}{{Expert needed|subject=计算机科学|time=2021-9-26}}
'''一次且仅一次'''（{{lang-en|Once and only once}}，简称{{lang|en|OAOO}}），又稱為{{lang|en|'''Don't repeat yourself'''}}（不要重复你自己，简称{{lang|en|DRY}}），或'''一个规则，实现一次'''（{{lang|en|One rule}}, {{lang|en|one place}}）是[[面向对象编程|面向对象编程]]中的基本原则，程序员的行事准则。旨在软件开发中，减少重复的信息。

{{lang|en|DRY}}的原则是“系统中的每一部分，都必须有一个单一的、明确的、权威的代表”，指的是（由人编写而非机器生成的）代码和测试所构成的系统，必须能够表达所应表达的内容，但是不能含有任何重复代码。当{{lang|en|DRY}}原则被成功應用時，一个系统中任何单个元素的修改都不需要與其逻辑无关的其他元素發生改變。此外，與之逻辑上相关的其他元素的變化均爲可预见的、均匀的，並如此保持同步。

== 起源 ==
其起源已经不可考，一般认为这个原则最初由{{lang|en|Andy Hunt}}和{{lang|en|Dave Thomas}}在他们的书{{tsl|en|The Pragmatic Programmer}}<ref>{{Cite book|chapter=|url=https://book.douban.com/subject/1417047/|publisher=Addison-Wesley Professional|date=1999-10-30|isbn=978-0-201-61622-4|first=Andrew|last=Hunt|first2=David|last2=Thomas|title=The Pragmatic Programmer|access-date=2021-09-26|archive-date=2021-09-26|archive-url=https://web.archive.org/web/20210926175319/https://book.douban.com/subject/1417047/}}</ref>中提出。因为[[极限编程|极限编程]]方法的创始者之一[[肯特·贝克|肯特·贝克]]总结和宣传而使其广为人知。

== {{lang|en|DRY}}與{{lang|en|WET}} ==
违反{{lang|en|'''DRY'''}}原則的解決方案通常被称为{{lang|en|'''WET'''}}，其有多种全称，包括“{{lang|en|Write everything twice}}”（把每個東西寫兩次）、“{{lang|en|We enjoy typing}}”（我们就是喜欢打字）或“{{lang|en|Waste everyone's time}}”（浪费大家的时间）。

{{lang|en|'''WET'''}}大致能分成4種：<ref>{{Cite web|title=Four Types of Duplication in Source Code|url=https://www.sharmaprakash.com.np/four-types-of-duplication-in-source-code/|access-date=2021-09-26|date=2015-10-01|last=Poudel|first=Prakash|work=Prakash|language=en|archive-date=2021-09-26|archive-url=https://web.archive.org/web/20210926103230/https://www.sharmaprakash.com.np/four-types-of-duplication-in-source-code/}}</ref><ref name=":0">{{Cite web|title=程式設計心法 避免重複原則（DRY principle）|url=https://shawnlin0201.github.io/Methodology/Methodology-001-DRY-principle/index.html|access-date=2021-09-26|date=2020-04-06|last=林奇璇|first=ShawnL|work=璇之又璇的網路世界|language=zh-tw|archive-date=2021-09-26|archive-url=https://web.archive.org/web/20210926103239/https://shawnlin0201.github.io/Methodology/Methodology-001-DRY-principle/index.html}}</ref>

# '''Imposed duplication'''：開發者認為不得不的重複
# '''Inadvertent duplication'''：開發者沒有意識到的重複
# '''Impatient duplication'''：開發者複製自己或他人的程式碼造成的重複
# '''Interdeveloper duplication'''：不同開發者間共同開發或交接造成的重複
有時，為了可讀性，或避免[[耦合性_(計算機科學)|耦合]]，或過早[[代码重构|重構]]，應放棄DRY原則。<ref name=":0" />

== 参考文献 ==
{{reflist}}
* {{lang|en|Kent Beck}}的{{lang|en|Extreme Programming Explained}}一书。
* 《设计模式精解》第二版第10章。
* [http://c2.com/cgi/wiki?OnceAndOnlyOnce WikiWikiWeb关于本原则的解释] {{Wayback|url=http://c2.com/cgi/wiki?OnceAndOnlyOnce |date=20140329213639 }}


[[Category:編程典範|Category:編程典範]]
[[Category:计算机编程|Category:计算机编程]]
[[Category:需要计算机科学专家关注的页面|Category:需要计算机科学专家关注的页面]]