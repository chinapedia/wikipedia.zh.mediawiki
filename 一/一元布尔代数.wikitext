{{NoteTA
|G1 = IT
|G2 = Math
}}
在[[抽象代数|抽象代数]]中，'''一元布尔代数'''是带有如下[[标识_(模型论)|标识]]（signature）的[[代数结构|代数结构]] 

:<''A'', ·, +, ', 0, 1, ∃> 有[[型|型]] <2,2,1,0,0,1>，

这里的 <''A'', ·, +, ', 0, 1> 是[[布尔代数|布尔代数]]。

[[前缀|前缀]][[一元算子|一元算子]] ∃ 指示[[存在量词|存在量词]]，它满足恒等式：
# ∃0 = 0
# ∃''x'' ≥ ''x''
# ∃(''x'' + ''y'') = ∃''x'' + ∃''y''
# ∃''x''∃''y'' = ∃(''x''∃''y''). 
∃''x'' 是 ''x'' 的“存在闭包”。[[对偶性_(序理论)|对偶]]于 ∃ 的是[[一元算子|一元算子]] ∀，它是[[全称量词|全称量词]]，定义为 ∀''x'' := (∃''x' '')'。 

一元布尔代数有[[对偶性_(序理论)|对偶]]公式，取 ∀ 为原始，把 ∃ 定义为 ∃''x'' := (∀''x'' ' )' 。所以对偶的代数有标识 <''A'', ·, +, ', 0, 1, ∀>，带有 <''A'', ·, +, ', 0, 1> 是布尔代数。此外，∀ 满足上面恒等式的对偶版本：
# ∀1 = 1
# ∀''x'' ≤ ''x''
# ∀(''xy'') = ∀''x''∀''y''
# ∀''x'' + ∀''y'' = ∀(''x'' + ∀''y'').
∀''x'' 是 ''x'' 的“全称闭包”。

== 讨论 ==

一元布尔代数与[[拓扑学|拓扑学]]有重要联系。如果 ∀ 被解释为拓扑学的[[内部算子|内部算子]]，上面的（1）-（3）公理加上公理 ∀(∀''x'') = ∀''x'' 建成了[[内部代数|内部代数]]的公理。但是 ∀(∀''x'') = ∀''x'' 不能从 (1)-(4) 来证明。此外，一元布尔代数的另一个可供选择的公理化组成自（重解释的）[[内部代数|内部代数]]的公理加上 ∀(∀''x'')' = (∀''x'')' (Halmos 1962: 22)。所以一元布尔代数是[[半单纯|半单纯]]的内部／[[闭包代数|闭包代数]]使得：
*全称（对偶的存在）量词解释[[内部算子|内部算子]]（[[闭包算子|闭包算子]]）;
*所有开放（或闭合）元素也是[[闭开集|闭开]]的。
一元布尔代数的更简洁的公理化是上述 (1) 和 (2) 加上 ∀(''x''∨∀''y'') = ∀''x''∨∀''y'' (Halmos 1962: 21)。这个公理化模糊了与拓扑学的联系。

一元布尔代数形成了一个[[簇_(泛代数)|簇]]。它们对应[[一元谓词逻辑|一元谓词逻辑]]，而[[Lindenbaum–Tarski代数|布尔代数]]对应于[[命题逻辑|命题逻辑]]，而'''多元代数'''对应于[[一阶逻辑|一阶逻辑]]。[[Paul_Halmos|Paul Halmos]] 在研究多元代数的时候发现了一元布尔代数；Halmos (1962) 再版了相关的论文。

一元布尔代数还与[[模态逻辑|模态逻辑]]有重要联系。模态逻辑 [[S5_(模态逻辑)|S5]]，被看作 ''S4'' 中一个理论，是一元布尔代数的模型，如同模态逻辑 [[模态逻辑|S4]] 是内部代数的模型。类似的，一元布尔代数为 ''S5'' 提供了代数语义。所以 '''S5-代数'''是一元布尔代数的同义词。

== 参见 ==
*[[一元逻辑|一元逻辑]]
*[[模态逻辑|模态逻辑]]
*[[内部代数|内部代数]]
*[[闭集|闭集]]

== 引用 ==
* [[Paul_Halmos|Paul Halmos]]，1962. ''Algebraic Logic''. New York: Chelsea.
*——and Steven Givant, 1998. ''Logic as Algebra''. Mathematical Association of America.

[[Category:布尔代数|I]]
[[Category:代数逻辑|I]]
[[Category:闭包算子|I]]