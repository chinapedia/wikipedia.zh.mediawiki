{{noteTA
|G1=IT
}}
'''关系键'''是[[關聯式資料庫|关系数据库]]的重要组成部分。关系键是一个表中的一个或几个属性，用来标识该表的每一行或与另一个表产生联系。

==主键==
[[File:PrimaryKey_zht.svg|280px|thumb|資料庫理論中, 超鍵、候選鍵與主鍵之間的關係:<br />
• 候選鍵是超鍵的一種：不含有多餘屬性的超鍵<br />
• 某個候選鍵被選為主鍵]]
'''主键'''，又称'''主码'''（{{lang-en|primary key或unique key}}）。[[数据库表|数据库表]]中对储存数据对象予以唯一和完整标识的[[数据列|数据列]]或属性的鍵。一个数据表只能有一个主键，且主键的取值不能缺失，即不能为[[空值|空值]]（Null）。

从技术的角度来看，primary key和unique key有很多相似之处。但还是有以下区别：
#作为primary key的域／域组不能为Null。而unique key可以。
#一个表只能有一个primary key，但可有多个unique key。
#更大的区别在逻辑设计。primary key一般在逻辑设计中用作记录标识，这也是设置primary key的本意；而unique key只是为了保证域／域组的唯一性。

==超键==
超键（{{lang-en|superkey}}），有的文献称“超码”，是在数据库[[关系模式|关系模式]]设计中能够唯一标示[[多元組|多元組]]（即“行”）的属性集。

包含'''所有'''屬性的集叫做'''[[明顯_(數學)|明顯（平凡）]]超鍵'''。

==候选键==
在[[关系模型|关系模型]]中，'''候选键'''或'''候选码'''（{{lang-en|candidate key}}）是某个[[关系变量|关系变量]]的一组属性所组成的[[集合|集合]]，它需要同时满足下列两个条件：
# 这个属性集合始终能够确保在关系中能唯一标识[[多元组|元组]]
# 在这个属性集合中找不出[[真子集|真子集]]能够满足条件(1)

满足第一个条件的属性集合称为'''[[超键|超键]]'''，因此我们也可以把候选键定义为“最小超键”，也就是不含有多余属性的超键。

候选键的重要性是它们能够在关系中唯一标识出不同的元组，因此超键也是在设计[[数据库模式|数据库模式]]时需要指定的最重要的约束之一。由于在关系模型中，每个关系都是一个集合（没有重复的元素），所以每个关系都至少有一个候选键（因为所有属性组合必然是个超键）。但是在某些[[关系型数据库|关系型数据库]]中[[数据库表|表]]也能代表[[多重集|多重集]]，所以在每个关系中都显式地定义至少一个候选键是一条很重要的设计原则。[[数据库管理系统|数据库管理系统]]通常都需要将每个关系中的某个候选键定义为[[主键|主键]]，亦即这个候选键是区分不同元组时首选的识别方式，例如[[外键|外键]]通常就是引用[[主键|主键]]而非其他候选键。

==外键==
{{地區名稱|as=译|cn=外键|tw=外來鍵|start={{lang-en|foreign key}}|end=又称'''外部鍵'''}}。其实在關聯式資料庫中，每個資料表都是由關聯來連繫彼此的關係，父資料表（{{lang|en|Parent Entity}}）的[[主鍵|主鍵]]（{{lang|en|primary key}}）會放在另一個資料表，當做屬性以建立彼此的關聯，而這個屬性就是外來鍵。

比如，學生跟老師之間是教學的關聯，學生資料表會有個屬性叫指導老師（FK），而這個值就是對應到老師資料表的老師代號（PK），學生的指導老師就是外來鍵。

==代理鍵==
在[[关系型数据库|关系型数据库]]设计中，'''代理鍵'''（英語：surrogate key）是在當資料表中的候選鍵都不適合當主鍵時，例如資料太長，或是意義層面太多，就會请一個无意义的但唯一的字段來代为作主鍵。

代理键是：
; Surrogate (1) – Hall, Owlett and Codd (1976): 一个代理键值确定了外部世界的一个实体。代理键值是数据库生成的，从来不显示给用户或应用程序看。
; Surrogate (2) – Wieringa and De Jonge (1991): 一个代理键值确定了数据库中的一个对象。代理键值是数据库生成的，用户或应用程序看不到它。

在实践中，代理键值通常是个自动递增的数字。在Sybase或SQL Server，用identity column标识代理键，PostgreSQL用serial，Oracle用SEQUENCE，在MySQL用标记有AUTO_INCREMENT的字段。

=== 何时使用代理键 ===
以中華人民共和國的十八位[[中华人民共和国居民身份证|身份证号]]为例，从左往右为六位数字地址码，八位数字出生日期码，三位数字顺序码和一位数字校验码。

一家公司想要将它的客户记入数据库，以客户的身份证号作为主键当然是可以的；但是这18位身份证号是用于标识大陆13多亿人口的，一家公司的客户显然没有这么多，所以用18位的数字作为主键有点浪费空间。

另外，身份证号中包含了地区、生日信息，若以身份证号为主键，要不要另开字段记录客户的地区、生日也是个问题。如果不另开字段，从主键（身份证号）中提取地区、生日有点麻烦；如果开字段，主键和地区、生日字段的数据存在冗余。

所以，一般的做法是，根本不记录客户的身份证号（除非有其他需求），用一个代理键作为主键，另开字段记录客户的地区、生日等信息。

== 自然键 ==
自然键（英語：natural key）与代理键相反，是在自然（真實）生活中唯一确定一个事物的标识。身份证号（理论上，假设没有因技术原因造成的重复）就是一个自然键，用于确定一个人。

== 参考文献 ==
{{Reflist}}

== 外部链接 ==
*[https://web.archive.org/web/20101023001310/http://structedtext.appspot.com/db/fk.html 一個詳細介紹外鍵的網站]
*[http://structedtext.appspot.com/db/index.html 資料庫系統理論]{{dead link|date=2017年11月 |bot=InternetArchiveBot |fix-attempted=yes }}

{{-}}
{{Database}}

[[Category:数据建模|Category:数据建模]]
[[Category:数据库管理系统|Category:数据库管理系统]]