{{noteTA|G1=IT}}
'''在线证书状态协议'''（{{lang-en|'''O'''nline '''C'''ertificate '''S'''tatus '''P'''rotocol}}，缩写：'''OCSP'''）是一个用于获取[[X.509|X.509]][[数字证书|数字证书]]撤销状态的[[网际协议|网际协议]]，<ref name="Digital-Ocean-Tutorial-OCSP-Stapling">{{Cite web|url=https://www.digitalocean.com/community/tutorials/how-to-configure-ocsp-stapling-on-apache-and-nginx|title=How To Configure OCSP Stapling on Apache and Nginx|accessdate=2015-03-02|author=A., Jesin|date=2014-06-12|work=Community Tutorials|publisher=Digital Ocean, Inc.|archive-date=2016-08-10|archive-url=https://web.archive.org/web/20160810191031/https://www.digitalocean.com/community/tutorials/how-to-configure-ocsp-stapling-on-apache-and-nginx}}</ref>在-{}-RFC 6960-{}-中定义，作为[[证书吊销列表|证书吊销列表]]（CRL）的替代品解决了在[[公開金鑰認證|公开密钥基础建设]]（PKI）中使用证书吊销列表而带来的多个问题。<ref name="GlobalSign-OCSP-Stapling">{{Cite web|url=https://support.globalsign.com/customer/portal/articles/1618853-ocsp-stapling|title=OCSP Stapling|accessdate=2015-03-02|date=2014-08-01|work=GlobalSign Support|publisher=GMO GlobalSign Inc.|archive-date=2019-06-08|archive-url=https://web.archive.org/web/20190608193109/https://support.globalsign.com/customer/portal/articles/1618853-ocsp-stapling}}</ref>协议数据传输过程中使用[[ASN.1|ASN.1]]编码，并通常建立在[[超文本传输协议|HTTP]]协议上，此消息类型分为“请求消息”和“响应消息”，因此致OCSP[[服务器|服务器]]被称为“OCSP响应端”。

== 与证书吊销列表（CRL）的比较 ==
* 由于OCSP响应包含的信息少于典型的[[证书吊销列表|证书吊销列表]]（CRL），因此减轻了网络和客户端资源的负担；<ref name="Gibson-OCSP-Must-Staple">{{cite web | url=https://www.grc.com/revocation/ocsp-must-staple.htm | title=Security Certificate Revocation Awareness: The case for "OCSP Must-Staple" | publisher=Gibson Research Corporation | accessdate=2015-03-02 | author=Gibson, Steve | archive-date=2016-04-15 | archive-url=https://web.archive.org/web/20160415103229/https://www.grc.com/revocation/ocsp-must-staple.htm | dead-url=no }}</ref>
* 由于OCSP响应端需要解析的信息更少，客户端提供的用于解析消息的库函数更简单；<ref name="Mozilla-OCSP-Stapling-Firefox">{{cite web | url=https://blog.mozilla.org/security/2013/07/29/ocsp-stapling-in-firefox/ | title=OCSP Stapling in Firefox | publisher=Mozilla Foundation | work=Mozilla Security Blog | date=2013-07-29 | accessdate=2015-03-02 | author=Keeler, David | archive-date=2016-09-11 | archive-url=https://web.archive.org/web/20160911071029/https://blog.mozilla.org/security/2013/07/29/ocsp-stapling-in-firefox/ | dead-url=no }}</ref>
* OCSP中，服务器可以记录主机在何时验证过特定的证书，由于请求不强制加密，相关信息可能被第三方获取。<ref name="Digital-Ocean-Tutorial-OCSP-Stapling" />

== 基本PKI应用场景 ==
# [[愛麗絲與鮑伯|Alice与Bob]]使用Carol颁发的数字证书。该场景中Carol是[[证书颁发机构|证书颁发机构]]（CA）；
# Alice向Bob发送其由Carol颁发的数字证书，并发出请求建立连接的申请；
# Bob担心Alice的私钥已经泄露，因此向Carol发送“OCSP请求”消息并包含Alice的数字证书序列号；
# Carol的OCSP响应端从Bob发送的消息中获取数字证书的序列号，并在CA数据库中查找该数字证书的状态；
# Carol向Bob发送由其私钥签名的消息“OCSP响应”，并包含证书状态正常的信息；
# 由于Bob事先已经安装了Carol的数字证书，因此Bob使用Carol的公钥验证消息签名并获取到Alice的数字证书状态信息；
# Bob决定与Alice进行通信。

== 协议信息 ==
由数字证书认证机构运行的OCSP服务器会对请求返回经过其签名的证书状态信息，分别为：正常（Good）、已廢除（Revoked）、未知（Unknown）。如果有无法处理的请求，则会返回一个错误码。

OCSP支持附加扩展以便对PKI解决方案进行定制，如在响应中包含SCT信息来验证相关证书是否通过了公开审计。<ref>{{Cite web |url = https://www.certificate-transparency.org/how-ct-works#TOC-OCSP-Stapling |title = How Certificate Transparency Works |author = Certificate Transparency |publisher = Certificate Transparency |language = en |accessdate = 2016-06-09 |archive-date = 2016-06-10 |archive-url = https://web.archive.org/web/20160610212902/http://www.certificate-transparency.org/how-ct-works#TOC-OCSP-Stapling |dead-url = no }}</ref>

OCSP在极端情况下可能遭受[[重放攻击|重放攻击]]。中间人可以捕获一个已签名的“正常”响应，并在之后的一段时间重放这个响应来通过客户端的验证，即使在这段时间里证书可能已经被撤销。<ref>RFC 6960, section 5, Security Considerations</ref>为避免这个问题，OCSP允许客户端在请求中加入一个[[Nonce|随机数]]并要求服务器在响应中包含这个随机数。但是由于大多数客户端和服务器还没有支持这个扩展，OCSP响应的较长有效期可能给重放攻击留下机会并借此威胁整个验证系统。

OCSP可以支持多于一级的CA结构。请求被转发到对应的服务器节点并查询状态，从而无须使用根CA的OCSP请求。
<!--
An OCSP responder may be queried for revocation information by delegated path validation (DPV) servers. OCSP does not, by itself, perform any DPV of supplied certificates.-->

用于签名响应的私钥不需要和签发证书的私钥相同。证书的签发者可能委托其他机构响应OCSP请求。在这种情况下，服务器的证书必须由签发者进行验证，并在扩展内容中包括相关信息标识该证书可用于OCSP响应的签名。

== 隐私问题 ==
OCSP对于部分用户来讲会造成隐私问题，因为OCSP必须和一个第三方建立连接（即使这个第三方是被软件提供商信任的）以验证证书状态。对此，[[OCSP装订|OCSP装订]]是一个无须和CA发生连接的替选方案。

== 批评 ==
OCSP不是缓解HTTPS服务器私钥泄露的可靠方法，因为攻击者窃取私钥后，再滥用私钥进行[[中间人攻击|中间人攻击]]（MITM）时，往往也会干扰客户的OCSP查询，因为如果查询超时，大多数客户端将忽略OCSP，导致OCSP机制失效无法及时查询到证书吊销信息。<ref>{{cite web|url=https://www.imperialviolet.org/2014/04/19/revchecking.html|title=No, Don't Enable Revocation Checking|date=2014-04-19|accessdate=2014-04-24|archive-date=2016-08-12|archive-url=https://web.archive.org/web/20160812034518/https://www.imperialviolet.org/2014/04/19/revchecking.html|dead-url=no}}</ref>

== 浏览器支持情况 ==
对于OCSP在主流浏览器中的支持：
* [[Internet_Explorer|Internet Explorer]]：[[Windows_Vista|Windows Vista]]的[[Internet_Explorer_7|IE7]]上正式加入OCSP支持，由系统的[[Cryptographic_API|CryptoAPI]]实现。<ref>{{Cite web|url=https://technet.microsoft.com/en-us/library/ee619736(v=ws.10).aspx/|title=What’s New in Certificate Revocation in Windows Vista and Windows Server 2008|accessdate=2016-05-09|publisher=[[Microsoft|Microsoft]]|archive-date=2017-12-19|archive-url=https://web.archive.org/web/20171219162309/https://technet.microsoft.com/en-us/library/ee619736(v=ws.10).aspx/}}</ref>
* [[Firefox|Firefox]]：从[[Mozilla_Firefox_3|Firefox 3]]开始默认开启。<ref>{{Cite web|url=https://bugzilla.mozilla.org/show_bug.cgi?id=110161|title=Mozilla Bug 110161 - Enable OCSP by Default|accessdate=2010-07-18|date=2007-10-01|publisher=[[Mozilla|Mozilla]]|archive-date=2016-03-15|archive-url=https://web.archive.org/web/20160315002823/https://bugzilla.mozilla.org/show_bug.cgi?id=110161}}</ref>
* [[Safari|Safari]]：从Mac OS X 10.7开始默认开启，在此之前则必须手动配置。<ref name="Sophos">{{Cite web|url=http://nakedsecurity.sophos.com/2011/03/26/apple-users-left-to-defend-themselves-against-certificate-attacks/|title=Apple users left to defend themselves against certificate attacks|accessdate=2011-03-26|date=2011-03-26|last=Wisniewski|first=Chester|publisher={{tsl|en|Sophos||Sophos}}|archive-date=2020-10-31|archive-url=https://web.archive.org/web/20201031013832/https://nakedsecurity.sophos.com/2011/03/26/apple-users-left-to-defend-themselves-against-certificate-attacks/}}</ref>
* [[Opera浏览器|Opera]]：从8.0<ref>{{Cite web|url=http://labs.opera.com/news/2006/11/09/|title=Introducing Extended Validation Certificates|accessdate=2010-01-08|date=2006-11-09|last=Pettersen|first=Yngve Nysæter|publisher=[[Opera_Software|Opera Software]]|archive-date=2010-02-10|archive-url=https://web.archive.org/web/20100210031759/http://labs.opera.com/news/2006/11/09/}}</ref><ref>{{Cite web|url=http://my.opera.com/rootstore/blog/2008/07/03/rootstore-newsletter|title=Rootstore newsletter|accessdate=2010-01-08|date=2008-07-03|last=Pettersen|first=Yngve Nysæter|publisher=[[Opera_Software|Opera Software]]|archive-date=2008-11-18|archive-url=https://web.archive.org/web/20081118143946/http://my.opera.com/rootstore/blog/2008/07/03/rootstore-newsletter}}</ref>开始默认开启。
需要注意的是，[[Google_Chrome|Google Chrome]]在2012年由于延迟和隐私问题禁用了OCSP的默认启用，<ref>{{Cite web|url=https://www.imperialviolet.org/2012/02/05/crlsets.html|title=Revocation checking and Chrome's CRL|accessdate=2015-01-30|author=Langley, Adam|date=2012-02-05|archiveurl=https://web.archive.org/web/20120212014932/http://www.imperialviolet.org/|archivedate=2012-02-12|dead-url=no}}</ref>改用自己的更新机制来同步证书撤销情况。<ref>[http://www.zdnet.com/article/chrome-does-certificate-revocation-better/ "Chrome does certificate revocation better"] {{Wayback|url=http://www.zdnet.com/article/chrome-does-certificate-revocation-better/ |date=20160730054012 }}, April 21, 2014, Larry Seltzer, ZDNet</ref>

== 开源实现 ==
目前的开源实现有：
* XiPKI，基于OSGi，使用Java语言编写。<ref>{{Cite web|url=https://github.com/xipki/xipki|title=xipki/xipki · GitHub|accessdate=2016-01-24|date=|publisher=Github.com|archive-date=2017-08-31|archive-url=https://web.archive.org/web/20170831004530/https://github.com/xipki/xipki}}</ref>

== 参见 ==
* [[证书吊销列表|证书吊销列表]]
* [[数字证书认证机构|数字证书认证机构]]
* [[OCSP装订|OCSP装订]]
* [[证书透明度|证书透明度]]

== 参考链接 ==
{{Reflist|45em}}

== 外部链接 ==
* {{Dmoz|Computers/Security/Public_Key_Infrastructure/PKIX/Operational_Protocols/|Public Key Infrastructure: Operational Protocols}}
* [rfc:2560 RFC 2560, X.509 Internet Public Key Infrastructure Online Certificate Status Protocol - OCSP]
* [rfc:4806 RFC 4806, Online Certificate Status Protocol (OCSP) Extensions to IKEv2]
* [rfc:6960 RFC 6960, X.509 Internet Public Key Infrastructure Online Certificate Status Protocol - OCSP]
* [https://web.archive.org/web/20131203092421/http://www.processor.com/editorial/article.asp?article=articles%2Fp3113%2F48p13%2F48p13.asp Processor.com April, 2009 article about Online Certificate Status Protocol]
* [https://www.ascertia.com/products/adss-ocsp-server/ Online Certificate Status Checking]{{Wayback|url=https://www.ascertia.com/products/adss-ocsp-server/ |date=20190214174539 }}
* [http://certificate.revocationcheck.com/ CertificateRevocationCheck, Check the OCSP status for a certificate]{{Wayback|url=http://certificate.revocationcheck.com/ |date=20150623221656 }}

{{TLS和SSL}}

[[Category:加密协议|Category:加密协议]]
[[Category:互联网标准|Category:互联网标准]]
[[Category:网际协议|Category:网际协议]]
[[Category:傳輸層安全協議|Category:傳輸層安全協議]]