{{no footnotes|time=2013-03-10T09:10:50+00:00}}
{{Science}}
'''数理逻辑'''（{{lang-en|Mathematical logic}}）是[[数学|数学]]的一个分支，其研究对象是对[[数学证明|证明]]和[[计算|计算]]这两个直观概念进行符号化以后的[[形式系统|形式系统]]。数理逻辑是[[数学基础|数学基础]]的一个不可缺少的组成部分。

数理逻辑的研究范围是[[逻辑|逻辑]]中可被数学模式化的部分。以前称为符号逻辑（相对于[[哲学逻辑|哲学逻辑]]），又称[[元数学|元数学]]，后者的使用现已局限于[[证明论|证明论]]的某些方面。

== 历史 ==
“数理逻辑”的名称由[[皮亚诺|皮亚诺]]首先给出，他又称其为'''符号逻辑'''或'''形式逻辑'''。数理逻辑在本质上依然是[[亚里士多德|亚里士多德]]的逻辑学，但从记号学的观点来讲，它是用[[抽象代数|抽象代数]]来记述的。

某些哲学倾向浓厚的数学家对用符号或代数方法来处理形式逻辑作过一些尝试，比如说[[莱布尼兹|莱布尼兹]]和[[朗伯|朗伯]]（Johann Heinrich Lambert）；但他们的工作鲜为人知，后继无人。直到19世纪中叶，[[乔治·布尔|乔治·布尔]]和其后的[[奥古斯都·德·摩根|奥古斯都·德·摩根]]才提出了一种处理逻辑问题的系统性的数学方法（当然不是[[定量性|定量性]]的）。

亚里士多德以来的传统逻辑得到改革和完成，由此也得到了研究[[数学基础|数学基本概念]]的合适工具。虽然这并不意味着1900年至1925年间的有关数学基础的争论已有了定论，但这“新”逻辑在很大程度上澄清了[[有关数学的哲学问题|有关数学的哲学问题]]。

传统的逻辑研究（参见[[逻辑论题列表|逻辑论题列表]]）较偏重于“论证的形式”，而当代数理逻辑的态度也许可以被总结为对于内容的组合研究。它同时包括“语法”（例如，从一[[形式语言|形式语言]]把一个文字串传送给一[[编译器|编译器]]程序，从而转写为机器指令）和“语义”（在[[模型论|模型论]]中构造特定模型或全部模型的集合）。

数理逻辑的重要著作有[[戈特洛布·弗雷格|戈特洛布·弗雷格]]（Gottlob Frege）的《[[概念文字|概念文字]]》（Begriffsschrift）、[[伯特兰·罗素|伯特兰·罗素]]的《[[数学原理|数学原理]]》（Principia Mathematica）等。

== 数理逻辑论的体系 ==

数理逻辑的主要分支包括：[[模型论|模型论]]、[[证明论|证明论]]、[[递归论|递归论]]和[[公理化集合论|公理化集合论]]。数理逻辑和[[计算机科学|计算机科学]]有许多重合之处，这是因为许多计算机科学的先驱者既是数学家、又是逻辑学家，如[[艾倫·圖靈|艾倫·圖靈]]、[[邱奇|邱奇]]等。

[[程式語言理論|程序语言学]]、[[语义学|语义学]]的研究从[[模型论|模型论]]衍生而来，而[[程序验证|程序验证]]中的[[模型检测|模型检测]]则从模型论衍生而来。

[[Curry-Howard同构|柯里－霍华德同构]]给出了“证明”和“程序”的等价性，这一结果与[[证明论|证明论]]有关，[[直觉主义逻辑|直觉主义逻辑]]和[[线性逻辑|线性逻辑]]在此起了很大作用。[[λ演算|λ演算]]和[[组合子逻辑|组合子逻辑]]这样的演算现在属于理想[[程序语言|程序语言]]。

计算机科学在自动验证和自动寻找证明等技巧方面的成果对逻辑研究做出了贡献，比如说[[自动定理证明|自动定理证明]]和[[逻辑编程|逻辑编程]]。

== 一些基本结果 ==

一些重要结果是：

* [[一阶逻辑|一阶]]公式的普遍有效性的推定证明可用算法来检查有效性。用技术语言来说，证明集合是原始递归的。实质上，这就是[[哥德尔完全性定理|哥德尔完全性定理]]，虽然那个定理的通常陈述使它与[[算法|算法]]之间的关系不明显。
* 有效的[[一阶逻辑|一阶]]公式的集合是[[不可判定問題|不可计算]]的，也就是说，不存在算法用作检测一條公式是否普遍成立。不過，儘管一階邏輯不可判定，仍是“半可判定”的，即存在某個算法，滿足：对此算法输入一个一阶公式，如果这个一阶公式是普遍有效的，那么算法将在某一时刻停机；如果不是普遍有效的，那么算法将会永远不停地计算下去。然而，即使算法已经运行了亿万年，仍無法分辨公式是否有效。换句话说，有效公式的集合是“[[递归可枚举集合|递归可枚举集合]]”。
* 普遍有效的[[二阶逻辑|二阶]]公式的集合甚至不是递归可枚举的。这是[[哥德尔不完全性定理|哥德尔不完全性定理]]的一个结果。
* [[勒文海姆-斯科伦定理|勒文海姆-斯科伦定理]]。
* [[相继式演算|相继式演算]]中的[[切消定理|切消定理]]。
* [[保罗·约瑟夫·科恩|保罗·约瑟夫·科恩]]（Paul Cohen）在1963年证明的[[连续统假设|连续统假设]]的[[逻辑独立性|独立性]]。

== 參考資料 ==
{{Reflist}}

{{Reflist|1}}
* {{tsl|en|A. S. Troelstra|}} & {{tsl|en|Helmut Schwichtenberg||H. Schwichtenberg}} (2000). ''Basic Proof Theory'' (Cambridge Tracts in Theoretical Computer Science) (2nd ed.). Cambridge University Press. ISBN 0-521-77911-1.
* {{tsl|en|George Boolos|}} & {{tsl|en|Richard Jeffrey|}} (1989). ''Computability and Logic'' (3rd ed.). Cambridge University Press. ISBN 0-521-00758-5.
* Elliott Mendelson (1997). ''Introduction to Mathematical Logic'' (4th ed.) Chapman & Hall.
* A. G. Hamilton (1988). ''Logic for Mathematicians'' Cambridge University Press.

== 外部链接 ==

* [https://web.archive.org/web/20050105093147/http://www.uni-bonn.de/logic/world.html Mathematical Logic around the world]
* [http://home.swipnet.se/~w-33552/logic/home/index.htm Polyvalued logic] {{Wayback|url=http://home.swipnet.se/~w-33552/logic/home/index.htm |date=20090605030110 }}
* [https://web.archive.org/web/20110411024825/http://www.cis.upenn.edu/~giorgi/cl.html Computability logic] 数理逻辑的新方向 - 从真理的理论到可计算性的理论。

== 参见 ==
{{mathportal}}
* [[逻辑|逻辑]]
* [[邏輯的語義|邏輯的語義]]
* [[模型論|模型論]]
* [[證明論|證明論]]
* [[遞歸論|遞歸論]]
* [[一階逻辑|一階逻辑]]
* [[相继式演算|相继式演算]]
* [[直觉主义逻辑|直觉主义逻辑]]
* [[完備性|完備性]]

{{-}}
{{逻辑}}
{{数学主要领域}}
{{Computer Science}}
{{Authority control}}

[[Category:邏輯|Category:邏輯]]
[[Category:數理邏輯|]]
[[Category:规则|科学]]