{{NoteTA|G1=Math|G2=Physics}}

在[[数值分析|数值分析]]中，'''数值稳定性'''是一种希望得到的数值[[算法|算法]]特性。根据算法的不同，稳定性的精确定义也有所不同，但是都与算法的精确性与正确性相关。

理论上有些计算下可以用多种[[代数|代数]]上等价的理想[[实数|实数]]或者[[複數_(數學)|复数]]算法来实现，但是实际上由于不同的数值稳定性可能会得到不同的结果。数值稳定性的一项任务就是选择強健（robust，即有良好数值稳定性）的算法。

== 前向、后向与混合稳定性 ==
在[[数值线性代数|数值线性代数]]中经常使用前向、后向以及混合稳定性的概念。

[[File:Forward_and_backward_error.svg|frame]]

假设要用数值算法解决的问题是用[[函数|函数]]<math>f</math>将数据<math>x</math>映射到解<math>y</math>，通常算法的结果<math>y^*</math>会与“真”解<math>y</math>有一定的偏差。误差的来源主要有[[舍入误差|舍入误差]]、{{le|截断误差|Truncation error}}以及数据误差。算法的「前向误差」是结果与真解之间的差别，即<math>\Delta y=y^*-y</math>。「后向误差」是满足<math>f(x + \Delta x)=y^*</math>的最小<math>\Delta x</math>，也就是说后向误差说明算法的所解决的问题。前向误差和后向误差通过[[条件数|条件数]]发生关系：前向误差的幅度最多是条件数乘以后向误差的幅度。

在许多情况下，需要考虑相对误差
:<math> \frac{|\Delta x|}{|x|} ,</math>
而不是绝对误差<math>\Delta x</math>。

如果对于任意的输入<math>x</math>来说后向误差都很小，那么算法就是「后向稳定」的。当然，“小”是一个相对的概念，需要根据所用的场合进行定义。通常要求误差要与{{le|機器精度|Machine epsilon|单位舍入误差}}处于同一[[数量级|数量级]]，或是略大一些。
[[File:Mixed_stability_diagram.svg|thumb]]

通常数值稳定性的定义是使用一个包括了前向误差与后向误差的更加宽泛的概念，称为「混合稳定性」。按照这个概念，如果一个算法是稳定的，那么存在<math>\Delta x</math>使得<math>\Delta x</math>与<math>f(x+\Delta x)-y^*</math>都很小。因此，后向稳定算法永远是稳定的。

如果算法的前向误差除以条件数得到的结果很小，那么这个算法就是「前向稳定」的。这就意味着如果一个算法的前向误差与后向稳定算法的误差幅度类似那么就是前向稳定的。

== 数值微分方程的稳定性 ==

上面的定义在截断误差不重要的情况下是很确切的。在[[微分方程|微分方程]]等另外一些场合中，则需要另外的数值稳定性定义。

在{{le|数值常微分方程|Numerical methods for ordinary differential equations}}中，有不同的数值稳定性概念，如[[A稳定性|A稳定性]]等。它们通常与[[动力系统|动力系统]]中的[[李雅普诺夫稳定性|李雅普诺夫稳定性]]等稳定性概念相关。在解[[刚性方程|刚性方程]]的时候稳定方法的使用很重要。

在[[数值偏微分方程|数值偏微分方程]]中另外一种数值稳定性的定义。如果随着步长逐渐趋近于零，[[偏微分方程|偏微分方程]]的数值解仍然保持有界，那么这个算法就是稳定的。{{le|拉克斯等价定理|Lax equivalence theorem}}表明如果算法是一致稳定的，那么这个算法就会收敛。有时候将{{le|数值扩散|Numerical diffusion}}考虑在内来实现稳定性。数值扩散是一个数学术语，它保证舍入误差以及其它误差在计算的过程中逐渐散去，而不会累积起来越变越大。

== 参考文献 ==

* Nicholas J. Higham, ''Accuracy and Stability of Numerical Algorithms'', Society of Industrial and Applied Mathematics, Philadelphia, 1996. ISBN 0-89871-355-2.
==相關條目==
*{{le|計算變異的演算法|Algorithms for calculating variance}}
*[[穩定性理論|穩定性理論]]
*[[混沌理论|混沌理论]]
[[Category:数值分析|Category:数值分析]]