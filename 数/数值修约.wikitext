{{NoteTA
|1 = zh-cn:修约; zh-tw:簡化;
|2 = zh-cn:留双; zh-tw:成雙;
}}
'''数值修约'''，是指在进行具体的数字运算前，按照一定的规则确定一致的位数，然后捨去某些数字后面多余的尾数的过程。

数值修约的历史非常古老，甚至可能比[[除法|除法]]还要古老。一些[[美索不达米亚|美索不达米亚]]的泥板上有[[倒数|倒数]]的修约值<ref>{{Cite web |url=http://it.stlawu.edu/%7Edmelvill/mesomath/tablets/YBC7289.html |title="YBC 7289 clay tablet" |author=Duncan J. Melville |year=2006 |accessdate=2014-02-18 |archive-date=2012-08-13 |archive-url=https://web.archive.org/web/20120813054036/http://it.stlawu.edu/%7Edmelvill/mesomath/tablets/YBC7289.html |dead-url=yes }}</ref>。[[圆周率|圆周率]]、年月长度的[[近似值|近似值]]也很古老。现在被广泛使用的数值修约规则，主要有'''四捨五入'''、'''五捨六入'''和'''四捨六入五留双'''规则。此外还有'''无条件舍去'''和'''无条件进位'''等方法。

== 捨去與進位 ==
捨去：將所取位數右方的所有數字以0代換。

進位：將所取位數右方的所有數字以0代換後，再將所取位數增加1。

== 無條件簡化 ==

無條件簡化分為下取整、上取整、截尾取整（無條件捨去）、無條件進位，分述如下：

====下取整（floor(x)，接近于负无穷）====

{{see also|取整函数}}
* '''下取整'''（又称'''floor(x)'''函数，向负无穷方向取整）：设原数为{{var|x}}，取整后的{{var|y}}是小于等于{{var|x}}的整数。其定义为：

*: <math>y = \mathrm{floor}(x) = \left\lfloor x \right\rfloor = -\left\lceil -x \right\rceil</math>

若所取位數之右有非0的數字，当原数为正数时舍去，当原数为负数时进位。例如：23.7向下取整为23，−23.2向下取整为−24。取整后的数总是小于等于原数，因此“下取整”也称“向负无穷方向取整”。

====上取整（ceil(x)，接近于正无穷）====

{{see also|取整函数}}

*'''上取整'''（又称'''ceil(x)'''函数，向正无穷方向取整）：设原数为{{var|x}}，取整后的{{var|y}}是大于等于{{var|x}}的整数。其定义为：

*: <math>y = \operatorname{ceil}(x) = \left\lceil x \right\rceil = -\left\lfloor -x \right\rfloor</math>
若所取位數之右有非0的數字，当原数为正数时进位，当原数为负数时舍去。例如：23.2向上取整为24，−23.7向上取整为−23。取整后的数总是大于等于原数，因此“上取整”也称“向正无穷方向取整”。

====截尾取整（truncate(x)，無條件捨去，接近於原點）====

{{see also|截尾函数}}

*'''截尾取整'''（又称'''truncate(x)'''函数，向原点方向取整）：设原数为{{var|x}}，取整后的{{var|y}}是0与x之间（含x）最接近x的整数。若原数值为正数，则下取整；若原数值为负数，则上取整（也相当于对原数绝对值下取整，然后再加上负号）。其定义为：

*: <math>y = \operatorname{truncate}(x) = \sgn(x) \left\lfloor \left| x \right| \right\rfloor = -\sgn(x) \left\lceil -\left| x \right| \right\rceil</math>

若所取位數之右有非0的數字，则一律无条件舍去。例如：23.7截尾后为23，−23.7截尾后为−23。正数取整后总是小于等于原数，负数取整后的数总是大于等于原数，因此“截尾取整”也称“向原点方向取整”。

====無條件進位（遠離於原點，接近于正或负无穷）====

* '''无条件进位'''（远离于原点，正、负数各自向正、负无穷方向取整）：设原数为{{var|x}}，取整后的{{var|y}}是0与{{var|y}}（含y）之间最接近{{var|x}}的整数（也可定义为0与{{var|y}}（含y）之间最接近0的整数，两者等价）。若原数值为正数，则上取整；若原数值为负数，则下取整（也相当于对原数绝对值上取整，最后再加上负号）。其定义为：

*: <math>y = \sgn(x) \left\lceil \left| x \right| \right\rceil = -\sgn(x) \left\lfloor -\left| x \right| \right\rfloor</math>

若所取位数之右有非0的数字，则一律无条件进位。例如：23.2取整后为24，−23.2取整后为−24。正数取整后总是大于等于原数，负数取整后总是小于等于原数，因此“无条件进位”也称“远离原点方向取整”或“正、负数各自向正、负无穷方向取整”。

== 有條件簡化 ==
有條件簡化通常以所取位數的次後一位數字的大小決定該捨去或是進位，當其小於一數字時則捨去；反之，若大於等於該數字時則進位。常用的有條件簡化如四捨五入、五捨六入與四捨六入五成雙等，分述如下：

=== 五捨六入 ===
若所取位數的位次後一位小於等於5，則捨去；反之，若大於等於6，則進位。若原數值為負數，則先以絕對值求得結果後再加負號。

五捨六入常用於商店的折扣後的價格的簡化。

=== 四捨六入 ===
四捨六入五成雙规则，也稱為銀行進位法或銀行家捨入或奇進偶捨。奇進偶捨，是一種數值簡化規則。從統計學的角度，「奇進偶捨」比「四捨五入」更為精確。

視所取位數之次後一位數字為下列情況決定捨去或進位：
其具體要求舉例如下（以保留兩位小數為例）：

# 要求保留位數的後一位如果是4，則捨去。例如5.214保留兩位小數為5.21。
# 要求保留位數的後一位如果是6，則進位。例如5.216保留兩位小數為5.22。
# 要求保留位數的後一位如果是5，而且5後面不再有數，要根據應看尾數「5」的前一位決定是捨去還是進入: 如果是[[奇數和偶數|奇數]]則進入，如果是[[奇數和偶數|偶數]]則捨去。例如5.215保留兩位小數為5.22； 5.225保留兩位小數為5.22。
# 要求保留位數的後一位如果是5，而且5後面仍有數。例如5.2254保留兩位小數為5.23，也就是說如果5後面還有數據，則無論奇偶都要進入。

按照四捨六入五成雙規則進行數字簡化時，也應像四捨五入規則那樣，一次性簡化到指定的位數，不可以進行數次簡化，否則得到的結果也有可能是錯誤的。

== 使用方法 ==
=== 多步计算 ===
一般情况下，在计算时，不对中间的每一步骤的计算结果进行修约，仅对最后的结果进行修约。这样可以使最终结果尽可能符合所确定的位数要求。

例如：计算4.5862×1.85969212+3×4.10536并将结果保留3位有效数字。

{| border=0
|-
| valign=top |
:4.5862×1.85969212+3×4.10536
:=8.528920000744+12.31608
:=20.845000000744  （此步修约）
:=20.8
:（正确结果）

| valign=top |
:4.5862×1.85969212+3×4.10536
:=8.53+12.32（此步第一次修约）
:=20.85  （此步第二次修约）
:=20.9
:（错误结果，擴大誤差）
|}

=== 单步加、乘法 ===
对于一步[[加法|加法]]或[[乘法|乘法]]，也有一定的修约规则。

加法：在运算前，将所有的加数都修约到各加数中最高的尾数位。然后相加，运算后不修约。

例如：计算3.14159+97.182+0.316228。

{| border=0
|-
| valign=top |
:3.14159+97.182+0.316228
:=3.142+97.182+0.316  （此步修约）
:=100.640　（尾数的0不可省略）
|}

乘法：在运算前，将所有的乘数都修约到各乘数中最少的有效数字位数。然后相乘，运算后将乘积修约到相同的有效数字位数。但如果有乘数为准确数或1位有效数字，可不参与修约。

例如：计算100.57234×3×6.190×0.31945。

{| border=0
|-
| valign=top |
:100.57234×3×6.190×0.31945
:=100.6×3×6.190×0.3194　（3不参与修约；0.31945 的修约用“五留双”规则）
:=596.6845548  （此步修约）
:=596.7
|}

== 应用 ==
* [[数学|数学]]
* [[分析化学|分析化学]]（[[定量分析|定量分析]]）

== 參見 ==
* [[高斯符號|高斯符號]]
* [[取整函數|取整函數]]
* [[有效數字|有效數字]]

== 参考文献 ==
{{Reflist}}

[[Category:算术|S]]
[[Category:规则|科学]]