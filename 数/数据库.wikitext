{{noteTA
|G1 = IT
}}
{{各地中文名
|cn = 數據庫
|tw = 資料庫
|hk = 數據庫
}}
{{distinguish|資料倉儲}}
[[File:Emp_Tables_(Database).PNG|right]]

'''資料庫'''，又称为数据管理系统，簡而言之可視為[[電子化|電子化]]的[[檔案櫃|檔案櫃]]——儲存电子[[檔案|檔案]]的處所，使用者可以對[[檔案|檔案]]中的資料執行新增、擷取、更新、刪除等操作<ref>陳春旭、余明興、李建全 譯：《資料庫系統概論》第四版，儒林圖書有限公司，1986年7月，第3頁</ref>。

所謂「資料庫」是以'''一定方式'''储存在一起、能予多个用户[[共享|共享]]、具有尽可能小的[[数据冗余|冗余度]]、与应用程序彼此独立的数据[[集合_(计算机科学)|集合]]。一个数据库由多个表空间（[[Tablespace|Tablespace]]）构成。

== 技术初衷 ==
在[[操作系统|操作系统]]出现之后，随着[[电子计算机|计算机]]应用范围的扩大、需要处理的[[数据|数据]]迅速膨胀。最初，数据与[[计算机程序|程序]]一样，以简单的文件作为主要存储形式。以这种方式组织的数据在逻辑上更简单，但[[可扩展性|可扩展性]]差，访问这种数据的程序需要了解数据的具体组织格式。当系统数据量大或者用户访问量大时，应用程序还需要解决数据的完整性、一致性以及安全性等一系列的问题。因此，必须开发出一种[[系统软件|系统软件]]，它应该能够像操作系统屏蔽了硬件访问复杂性那样，屏蔽数据访问的复杂性。由此产生了数据管理系统，即数据库。<ref name=":0">{{Cite book|title=《计算机软件技术及教学模式研究》|last=任群|first=著|publisher=天津科学技术出版社|year=2017年|isbn=9787557628413|location=|pages=第19页}}</ref>

== 数据库管理系统 ==
{{main|数据库管理系统}}

[[資料庫管理系统|資料庫管理系统]]（{{lang-en|Database Management System}}，簡稱[[DBMS|DBMS]]）是为管理[[資料庫|資料庫]]而設計的电腦[[軟體|軟體]]系統，一般具有儲存、擷取、安全保障、備份等基礎功能。資料庫管理系統可以依據它所支援的[[資料庫模型|資料庫模型]]來作分類，例如[[關聯模型|關聯式]]、[[XML|XML]]；或依據所支援的電腦類型來作分類，例如伺服器群集、行動電話；或依據所用查詢語言來作分類，例如[[SQL|SQL]]、[[XQuery|XQuery]]；或依據性能衝量重點來作分類，例如最大規模、最高執行速度；亦或其他的分類方式。不論使用哪種分類方式，一些DBMS能够跨類別，例如，同時支援多種查詢語言。

== 数据库的分类 ==
随着数据库技术与其他分支学科技术的结合，出现了多种新型数据库，例如：与分布处理技术结合产生的[[分布式数据库|分布式数据库]]、与并行处理技术结合产生的[[并行数据库|并行数据库]]、与人工智能结合产生的[[演绎数据库|演绎数据库]]、与多媒体技术结合产生的[[多媒体数据库|多媒体数据库]]。另外，数据库技术应用于特定的领域，出现了[[工程数据库|工程数据库]]、 [[地理数据库|地理数据库]]、[[统计数据库|统计数据库]]、[[空间数据库|空间数据库]]等特定领域数据库。<ref name=":0" />

=== 关系数据库 ===
* [[MySQL|MySQL]]
** [[MariaDB|MariaDB]]（MySQL的代替品<ref>{{cite web | url = https://mariadb.org/ | title = mariadb | accessdate = 2013-01-07 | archive-date = 2013-01-03 | archive-url = https://web.archive.org/web/20130103035016/https://mariadb.org/ | dead-url = no }}</ref>，维基媒体基金会项目已从MySQL转向MariaDB<ref>{{cite web | url = http://www.zdnet.com/wikipedia-moving-from-mysql-to-mariadb-7000008912/ | title = Wikipedia moving from MySQL to MariaDB | accessdate = 2013-01-07 | archive-date = 2014-11-24 | archive-url = https://web.archive.org/web/20141124000832/http://www.zdnet.com/wikipedia-moving-from-mysql-to-mariadb-7000008912/ | dead-url = no }}</ref>）
** [[Percona_Server|Percona Server]]（MySQL的代替品<ref>{{Cite web |url=https://drupal.org/node/2062399 |title=存档副本 |accessdate=2014-04-26 |archive-date=2014-04-26 |archive-url=https://web.archive.org/web/20140426234205/https://drupal.org/node/2062399 |dead-url=no }}</ref><ref>{{cite web |url=https://blog.mozilla.org/it/2013/03/08/different-mysql-forks-for-different-folks/ |title=存档副本 |accessdate=2013-08-13 |deadurl=yes |archiveurl=https://web.archive.org/web/20130824172542/https://blog.mozilla.org/it/2013/03/08/different-mysql-forks-for-different-folks/ |archivedate=2013-08-24 }}</ref>）
* [[PostgreSQL|PostgreSQL]]
* [[Microsoft_Access|Microsoft Access]]
* [[Microsoft_SQL_Server|Microsoft SQL Server]]
* {{le|Google Fusion Tables|Google Fusion Tables}}
* [[FileMaker|FileMaker]]
* [[Oracle資料庫|Oracle資料庫]]
* [[Sybase|Sybase]]
* [[dBASE|dBASE]]
* [[Clipper|Clipper]]
* [[FoxPro|FoxPro]]
* [[foshub|foshub]]

幾乎所有的資料庫管理系統都配備了一個[[開放式資料庫連接|開放式資料庫連接]]（ODBC）驅動程式，令各個資料庫之間得以互相整合。

=== 非关系型数据库（[[NoSQL|NoSQL]]）===
{{Main|NoSQL}}

* [[BigTable|BigTable]]（Google）
* [[Cassandra|Cassandra]]
* [[MongoDB|MongoDB]]
* [[CouchDB|CouchDB]]
* [[Redis|Redis]]

==== [[键值数据库|键值数据库]] ====
* [[Apache_Cassandra|Apache Cassandra]]（为Facebook所使用<ref>{{cite web |url=http://wiki.apache.org/cassandra/%E9%A6%96%E9%A1%B5 |title=存档副本 |accessdate=2013-01-07 |deadurl=yes |archiveurl=https://web.archive.org/web/20130125213556/http://wiki.apache.org/cassandra/%E9%A6%96%E9%A1%B5 |archivedate=2013-01-25 }}</ref>）：高度可扩展<ref>{{Cite web |url=http://cassandra.apache.org/ |title=存档副本 |accessdate=2014-04-26 |archive-date=2011-02-21 |archive-url=https://web.archive.org/web/20110221232252/http://cassandra.apache.org/ |dead-url=yes }}</ref>
* [[Dynamo|Dynamo]]
* [[LevelDB|LevelDB]]（Google）

== 数据库技术的发展 ==
随着[[互联网|互联网]]的普及，数据库使用环境也随之发生变化，这种变化主要体现为[[XML|XML]]和[[Java|Java]]技术的大量使用、要求支持各种互联网环境下的[[应用服务器|应用服务器]]、极容易出现大量用户同时访问数据库、要求支持7x24小时不间断运行和高安全性等。<ref name=":0" />

为解决由于这些变化所带来的新问题，数据库管理系统也逐渐产生变化，包括：
# '''网络化的大型通用数据库管理系统的出现'''<p>由于[[互联网应用|互联网应用]]的用户数量无法预测，这就要求数据库相比以前拥有能处理更大量的数据以及为更多的用户提供服务的能力，即更好的可伸缩性及高可用性，因此，能够支持Internet的数据库应用已经成为数据库系统的重要方面，学术界及各主流[[数据库公司|数据库公司]]都将大型通用数据管理系统作为主要发展方向。例如[[Oracle|Oracle公司]]从 8 版起全面支持互联网应用，微软公司更是将 SQL Server 作为 其整个 .NET计划中的一个重要的成分。<ref name=":0" /></p>
# '''数据库安全系统及技术的提升'''<p>由于数据库系统在现代计算机系统中的地位越来越趋于核心的地位，数据库系统的安全问题自然受到越来越多的关注。在目前各国所引用或制定的 一系列[[安全标准|安全标准]]中，最重要的两个是由美国国防部制定的《[[可信计算机系统的评估标准|可信计算机系统的评估标准]]》(简称[[TCSEC|TCSEC]])和《[[可信计算机系统的评估标准关于可信数据库系统的解释|可信计算机系统的评估标准关于可信数据库系统的解释]]》(简称 [[TDI|TDI]])。目前，所有数据库的开发必须遵从相应的安全标准。<ref name=":0" /></p>
# '''XML及Web数据管理技术的普及'''<p>随着越来越多的[[Web应用|Web应用]]，如[[电子商务|电子商务]]、[[数字图书馆|数字图书馆]]、[[信息服务|信息服务]]等采用XML作为数据表现形式、越来越多网站采用XML作为信息发布的语言，以XML格式数据为主的[[半结构化数据|半结构化数据]]逐步成为网上[[数据交换|数据交换]]和[[数据表示|数据表示]]的标准。而XML具有如下的一些特征：面向显示、半结构化和无结构、不同形式的数据源，动态变化以及数据海量等。因此，支持这种结构松散、形式多样、动态变化的海量数据的存储、共享、管理、检索，成了数据库技术的大势所趋。<ref name=":0" /></p><p>[[Web数据管理|Web数据管理]]是一个很松散的概念，大体上它是指在Web环境下对各种复杂信息的有效组织与[[集成|集成]]，进行方便而准确的信息查询和发布。当前Web数据管理的研究开发方向主要包括：[[半结构化数据管理|半结构化数据管理]]、[[Web数据查询|Web数据查询]]、[[Web信息集成|Web信息集成]]、[[XML数据管理|XML数据管理]]等。到目前为止，XML 与 Web 数据管理的研究工作中主要集中在如下的一些方面。<ref name=":0" /></p>
#* 半结构化数据
#* Web数据查询
#* XML相关标准
#* XML数据管理
# '''嵌入式移动数据库技术'''<p>随着[[移动通信技术|移动通信技术]]的迅速发展和投入使用，加上移动智能电话、移动计算机的大量普及，国内外许多研究机构都展开了对[[移动数据库|移动数据库]]的研究，并取得了许多有价值的成果。移动数据库技术涉及数据库技术、分布式计算技术以及移动通信技术等多个学科领域，具有较高的学术起点。<ref name=":0" /></p>

== 数据库模型 ==
* [[物件模型|物件模型]]
* 层次模型（轻量级数据访问协议）
* 网状模型（大型数据储存）
* 关系模型
* 面向对象模型
* 半结构化模型
* [[平面模型|平面模型]]（表格模型，一般在形式上是一个二维[[数组|陣列]]。如表格模型数据[[Excel|Excel]])

=== 架構 (Schema) ===
{{main|綱要_(資料庫)}}
資料庫的架構可以大致區分為三個概括層次：內層、概念層和外層。
* 內層：最接近實際儲存體，亦即有關資料的實際儲存方式。
* 外層：最接近使用者，即有關個別使用者觀看資料的方式。
* 概念層：介於兩者之間的間接層。<ref>陳春旭、余明興、李建全譯，《資料庫系統概論》第四版，儒林，1986年7月，第29頁</ref>

=== 数据库索引 ===
{{Main|数据库索引}}

資料索引的觀念由來已久，像是一本書前面幾頁都有目錄，目錄也算是索引的一種，只是它的分類較廣，例如車牌、身份証字號、條碼等，都是一個索引的號碼，當我們看到號碼時，可以從號碼中看出其中的端倪，若是要找的人、車或物品，也只要提供相關的號碼，即可迅速查到正確的人事物。 

另外，索引跟欄位有著相應的關係，索引即是由欄位而來，其中欄位有所謂的關鍵欄位（Key Field），該欄位具有唯一性，即其值不可重複，且不可為"[[Null_(編程)|空值]]（null）"。例如：在合併資料時，索引便是扮演欲附加欄位資料之指向性用途的角色。故此索引為不可重複性且不可為空。

=== 数据库事务 ===
{{Main|数据库事务}}

事务（transaction）包含一组数据库操作的逻辑工作单元，在事务中包含的数据库操作是不可分割的整体，这些操作要么一起做，要么一起回滚（Roll Back）到执行前的状态。
事务的[[ACID|ACID]]特性：
* 原子性（atomicity）
* 一致性（consistency）
* 隔离性（isolation）
* 持续性（durability）

事务的并发性是指多个事务的并行操作轮流交叉运行，事务的并发可能会存取和存储不正确的数据，破坏交易的隔离性和数据库的一致性。

=== 网状数据模型的数据结构 ===
==== 网状模型 ====
满足下面两个条件的基本层次联系的集合为网状模型。
# 允许一个以上的结点无双亲；
# 一个结点可以有多于一个的双亲。

== 參考文獻 ==
{{Reflist|30em}}

== 参见 ==
{{Portal box|计算机科学|信息技术|软件}}
* [[資料庫理論|資料庫理論]]
* [[資訊科技稽核|資訊科技稽核]]
* [[LDAP|LDAP]]（轻量级数据访问协议）
* [[SQL|SQL]]（结构化查询语言）
* [[資料庫管理系統|資料庫管理系統]]

{{-}}
{{Databases}}
{{Database models}}
{{Computer Science}}

{{Authority control}}

[[Category:数据库|]]
[[Category:数据管理|Category:数据管理]]