{{noteTA|G1=IT}}

''数据库管理系统''（{{lang-en|'''database management system'''}}，[[缩写|缩写]]：'''{{lang|en|DBMS}}'''） 是一种针对[[对象数据库|对象数据库]]，为管理[[数据库|数据库]]而设计的大型电脑[[软件|软件]]管理系统。具有代表性的数据管理系统有：[[Oracle|Oracle]]、[[Microsoft_SQL_Server|Microsoft SQL Server]]、[[Access|Access]]、[[MySQL|MySQL]]及[[PostgreSQL|PostgreSQL]]等。通常資料庫管理師會使用資料庫管理系統來建立資料庫系統。

现代DBMS使用不同的数据库模型追踪实体、属性和关系。在个人电脑、大型计算机和主机上应用最广泛的数据库管理系统是关系型DBMS（relational DBMS）。在[[關係型數據庫|關係型數據庫]]中，用二维表格表示数据库中的数据。这些表格称为关系<ref>Kenneth C.Laudon and Jane P.Laudon,《Management Information Systems》, Pearson, 07 March 2011, Chapter6 Information systems Organizations and Strategy p.143</ref>。

== 描述 ==
資料庫管理系統是一套[[電腦程式|電腦程式]]，以控制資料庫的[[分類|分類]]及[[數據|數據]]的[[存取|存取]]。一套資料庫包括：
# [[模型語言|模型語言]]，用以因應該資料庫管理系統的[[數據模型|數據模型]]，來定義各資料庫的[[schema|schema]]。
#* 最常用的三大類分別為[[階層式|階層式]]、[[網路式|網路式]]及[[關聯式|關聯式]]的模型。一個資料庫管理系統可提供一種、兩種，甚至全部三種方式，也可能提供其他形式。最適合的模型要視乎個別應用程式、交易進行比率及查詢經常使用的程度等。現時最常使用的則是[[SQL|SQL]]所支援，相似於關聯式模型但又有些微違背的方式。很多資料庫管理系統也支援[[ODBC|ODBC]]，以支援[[程式編寫員|程式編寫員]]以標準方法存取該資料庫管理系統。
# 最佳化的數據結構（[[欄位|欄位]]、[[紀錄|紀錄]]及[[檔案|檔案]]），以支援在[[永久儲存裝置|永久儲存裝置]]（permanent data storage device，即比主記憶體（volatile main memory）慢得多）上儲存極大量的數據。
# 查詢語言及撰寫報表的程式，讓使用者可以互動方式查問資料庫，進行數據分析及依使用者的權限來更新數據。
#* 它必須控制數據的保安，以防止不獲授權的使用者觀看甚至更新資料庫的數據。使用者可以提供有效的密碼來存取整個資料庫或其中一部分。譬如員工資料庫包括所有員工資料的數據，但某組使用者可能只被批准檢視薪金相關的數據，其他的又可能只可以存取工作履歷及病歷數據。
#* 如果該資料庫管理系統向使用者提供可輸入更新資料庫甚至進行查詢的互動途徑，則此能力可以用來管理個人的資料庫。可是，它不一定提供審核或其他在多使用者環境中所需要的各種控制機制。這些機制可能要整套應用程式都為數據輸入或更新而修改才能提供。
# 交易機制（最好可以保證[[ACID|ACID]]特性），在多使用者同時存取之下仍維持數據完整性（data integrity），與及提供故障排除（fault tolerance）。
#* 資料庫管理系統依靠不容許超過一名使用者在同一時間更新同一項紀錄來維持資料庫的完整性。資料庫管理系統可以用唯一索引限制來避免重覆紀錄。譬如不能有兩位顧客有同一個顧客編號（[[主鍵|主鍵]]）在資料庫中存在。

== 結構 ==
[[File:Dbms_solution.jpeg|File:Dbms_solution.jpeg]]
# '''外部層（External Level）或稱觀點層（View Level）'''：包括數個外部綱要(External Schema)或使用者觀點(User Views)，每個外部綱要描述了特定族群有興趣的部分資料庫並對該族群隱藏剩下的部分，如同概念層，每個外部綱要一般使用表達性資料模型(Representational Data Model)實作。
# '''概念層（Conceptual Level）'''：包含了概念綱要(Conceptual Schema)，概念綱要描述了整個使用者社群的資料庫結構，其隱藏了實際儲存資料的結構並專注於描述實體(Entity)、資料型態(Data Type)、關係(Relationships)、使用者操作(User Operations)以及限制(Constraints)。通常資料庫系統被實作時，表達性資料模型也被用於描述概念綱要。
# '''內部層（Internal Level）'''：內有內部綱要(Internal Schema)，內部綱要描述的是實際儲存資料的結構，其使用實體資料模型(Physical Data Model)並詳細描述資料庫的資料儲存(Data Storage)及存取路徑(Access Path)。<ref>Elmasri, R., & Navathe, S. B. (2017). Fundamentals of database systems. Hoboken, NJ: Pearson.</ref>

== 優點 ==
一個好的DBMS應該具有的特點應包括:
*減少多餘的資料儲存(Controlling Redundancy)
*限制未授權的存取(Restricting Unauthorized Access)
*提供程式物件的持續保存(Providing Persistent Storage for Program Objects)
*為達有效查詢的目的提供儲存結構及搜尋技術(Providing Storage Structure and Search Techniques for Efficient Query Processing)
*提供備份及復原(Providing Backup and Recovery)
*提供多使用者介面(Providing Multiple User Interfaces)
*表達資料間的複雜關係(Representing Complex Relationships among Data)
*強化[[完整限制|完整限制]](Enforcing Integrity Constraint)
*使用"規則"及"觸發"以允許推斷及動作(Permitting Inferencing and Actions Using Rules and Triggers)<ref>Ramez Elmasri,Shamkant B. Navathe《Fundamentals of Database Systems》, Pearson, Chapter1 Databases and Database Users p.47</ref>
== 常见数据库管理系统 ==
=== 開放原始碼數據庫系統 ===
*[[Apache_Derby|Apache Derby]]－[[Apache軟件基金會|Apache軟件基金會]]的純[[Java|Java]]資料庫管理系統
*[[Berkeley_DB|Berkeley DB]]加州大学Berkeley分校研究成果
*[[eXist|eXist]]简单的XML开放源代码数据库
*[[Firebird_(数据库)|火鸟]]
*[[HSQL|HSQL]]
*[[Ingres|Ingres]]
*[[LevelDB|LevelDB]]－[[Google|Google]]所研發的鍵／值對數據庫編程庫
*[[mSQL|mSQL]]
*[[MySQL|MySQL]]網路上十分流行的数据库服务器，若结合Linux系統、PHP脚本技术和ApacheWeb服务器使用，則被称为[[LAMP|LAMP]]。
*[[PostgreSQL|PostgreSQL]]
*[[SQLite|SQLite]] C库，支持完全的SQL标准数据库，基于命令行[https://web.archive.org/web/20140722182116/http://www.sqlite.org/ SQLite下载]
*[[Xindice|Xindice]]简单的XML数据库，由Apache软件基金会开发

=== 商業數據庫系統 ===
*[[4th_Dimension|4th Dimension]]或者叫4D，是一套從[[Mac_OS|Mac OS]]發展出來的數據庫系統。現在亦有閞發視窗版。
*[[Adabas|Adabas]] Software AG（德国）开发的的数据库参看[https://web.archive.org/web/20081203132144/http://www.softwareag.com/adabas/default.htm 这里]
*[[askSam|askSam]],结合了数据库和文本编辑，具有很多革新特性
*[[Caché|Caché]]，适用于企业内部系统应用
*[[Conzept16|Conzept16]]
*[[c-tree_Plus|c-tree Plus]] FairCom公司的ISAM和关系数据库。参看http://www.faircom.com {{Wayback|url=http://www.faircom.com/ |date=20200804232848 }}. C语言编写。
*[[DB1|DB1]] IBM产品
*[[IBM_DB2|DB2]] IBM产品，当前版本10.5（截至2013年11月1日）。
*[[dBase|dBase]]在DOS时代十分重要的数据库，Windows版本是Visual dBase
*[[FileMaker|FileMaker]]由Claris演化而来，一个界面非常友好的关系型数据库，能够同时在Mac OS和Windows上使用，最新版本12.0
*[[FoxBase|FoxBase]]被微软收购，继续开发出[[Visual_FoxPro|微软FoxPro]]，2.6版之前有DOS和Windows版。
*{{le|Google Fusion Tables|Google Fusion Tables}}
*[[Gupta_SQLBase|Gupta SQLBase]]，当前版本9.0
*[[HyperFileSQL|HyperFileSQL]]
*[[IDMS|IDMS]]
*[[信息管理系统|IMS]]
*[[Informix|Informix]]，当前版本10.0（Cheetah）
*[[InterBase|InterBase]]
*[[MaxDB|MaxDB]]参看[[SAP_DB|SAP DB]]
*[[Microsoft_Access|Microsoft Access]]，微软公司Office组件之一，当前版本Access 2016（另外还有6.0、97、2000、XP/2002、2003、2007、2010、2013），从微软公司兼并的一家公司的产品发展而来。
*[[Visual_FoxPro|Microsoft Visual FoxPro]],当前版本9.0
*[[MS_SQL-Server|MS SQL-Server]]，当前版本2014 SP1
*[[Sybase|Sybase]]，早期版本被微软购买开发出SQL-Server。
*[[Oracle|Oracle]]，当前版本18c，最受欢迎的商业数据库
*[[Paradox_(数据库)|Paradox]] [[Borland|Borland]]开发后转手[[Corel|Corel]]（[[WordPerfect_Office|WordPerfect Office]]）继续开发
*[[PrimeBase|PrimeBase]]
*[[RRDtool|RRDtool]]，Round Robin Database
*[[SAP_DB|SAP DB]]由SAP开发，后由[[MySQL|MySQL]]继续开发和维护现属于[[MaxDB|MaxDB]]。
*[[Tamino|Tamino]] [[XML|XML]]数据库k，基于[[Adabas|Adabas]]的版本由Software AG开发，参看[https://web.archive.org/web/20080517153001/http://www.softwareag.com/tamino/]
*[[Tdbengine|Tdbengine]]
*[[Teradata|Teradata]]功能非常强大，适用于非常海量数据，通常用來從事[[資料倉儲|資料倉儲]]。
*[[Visual_dBase|Visual dBase]],最终版本5.0，已退出市场。

== 参考文献 ==
{{Reflist}}

== 外部链接 ==

== 参见 ==
* [[数据库|数据库]]
* [[关系数据库|关系数据库]]
* [[SQL|SQL]]（结构化查询语言）

{{-}}
{{Databases}}
{{Computer Science}}

[[Category:数据库管理系统|]]

[[de:Datenbank#Datenbankmanagementsystem|de:Datenbank#Datenbankmanagementsystem]]