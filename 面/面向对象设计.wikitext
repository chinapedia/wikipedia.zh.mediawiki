{{noteTA|G1=IT}}
'''面向对象设计'''（Object-Oriented Design，OOD）方法是[[面向对象程序设计|面向对象程序设计]]方法中一个环节。其主要作用是对分析模型进行整理，生成设计模型提供给OOP作为开发依据。OOD包括：架构设计、用例设计、子系统设计、类设计等。架构设计的侧重点在于系统的体系框架的合理性，保证系统架构在系统的各个非功能性需求中保持一种平衡；子系统设计一般是采用纵向切割，关注的是系统的功能划分；类设计是根据通过一组对象、序列图展示系统的逻辑实现。
面向对象设计是为了解决软件问题而设计一个交互对象系统的过程。是一种软件设计的方法。

== 其他條目 ==
* [[Class-Responsibility-Collaboration_card|Class-Responsibility-Collaboration card]]
* [[GRASP_(物件導向設計)|GRASP (物件導向設計)]]
* [[IDEF4|IDEF4]]
* [[面向对象程序设计|面向对象程序设计]]

== 參考資料 ==

== 外部連結 ==

{{Commonscat|Object-oriented design}}
*[http://www.parlezuml.com/e-books/umlformanagers/umlformanagers_ch3.pdf ''Object-Oriented Analysis & Design''] {{Wayback|url=http://www.parlezuml.com/e-books/umlformanagers/umlformanagers_ch3.pdf |date=20090915034105 }} - overview using UML
*[http://authors.phptr.com/larman/uml_ooad/index.html Larman, Craig. ''Applying UML and Patterns - Third Edition''] {{Wayback|url=http://authors.phptr.com/larman/uml_ooad/index.html |date=20030630201405 }}
*[http://www.informit.com/articles/article.aspx?p=360440&seqNum=8 ''Object-Oriented Analysis and Design''] {{Wayback|url=http://www.informit.com/articles/article.aspx?p=360440&seqNum=8 |date=20210427234635 }}
*[http://www.lepus.org.uk LePUS3 and Class-Z] {{Wayback|url=http://www.lepus.org.uk/ |date=20181001231514 }}: formal modelling languages for object-oriented design

{{DEFAULTSORT:Object-oriented design}}
[[Category:軟體設計|M]]
[[Category:面向对象的程序设计|M]]