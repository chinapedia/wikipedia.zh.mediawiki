{{NoteTA
|G1=IT
}}
{{编程范式}}
'''面向语言的程序设计'''（Language-Oriented Programming，LOP）<ref name="lop">{{cite journal |last1=Ward |first1=Martin |title=Language Oriented Programming |journal=Software - Concepts and Tools |date=1994 |volume=15 |issue=4 |pages=147–161 |doi=10.1007/978-1-4302-2390-0_12 |url=http://www.gkc.org.uk/martin/papers/middle-out-t.pdf |access-date=15 May 2019 |archive-date=2020-11-09 |archive-url=https://web.archive.org/web/20201109023823/http://www.gkc.org.uk/martin/papers/middle-out-t.pdf |dead-url=no }}</ref>，指一种[[程序设计范型|程序设计范型]]，将有相同状态的块建造成对象、模块和构件<ref name=Felleisen2018>{{cite journal |last1=Felleisen |first1=Matthias |last2=Findler |first2=Robert Bruce |last3=Flatt |first3=Matthew |last4=Krishnamurthi |first4=Shriram |last5=Barzilay |first5=Eli |last6=McCarthy |first6=Jay |last7=Tobin-Hochstadt |first7=Sam |title=A Programmable Programming Language |journal=Communications of the ACM |date=March 2018 |volume=61 |issue=3 |pages=62–71 |doi=10.1145/3127323 |url=https://cacm.acm.org/magazines/2018/3/225475-a-programmable-programming-language/fulltext |access-date=15 May 2019 |archive-date=2020-11-29 |archive-url=https://web.archive.org/web/20201129081615/https://cacm.acm.org/magazines/2018/3/225475-a-programmable-programming-language/fulltext |dead-url=no }}</ref>，不再用[[通用编程语言|通用编程语言]]解决问题，程序员首先为问题编写一种或多种[[领域特定语言|领域特定语言]]，然后再在这些语言中解决问题。这个概念具体描述于Martin Ward的1994年的题为《面向语言编程》的论文中。

==概念==
这个概念使用用户词汇来获得需求，然后创造一门与用户描述尽可能一致的实现语言，这样从需求到实现的映射会非常直接。判断“一致性”的方法是这门语言的“重复度”，即当需求有一次独立变动时需要做多少次修改操作。它并不假定什么是实现新语言的最好语言，相反，开发者可以通过对信息流的分析做不同选择。<ref>{{cite book
|author     = Dunlavey
|year       = 1994
|title      = Building Better Applications: a Theory of Efficient Software Development
|publisher  = [[International_Thomson_Publishing|International Thomson Publishing]]
|isbn       = 0-442-01740-5
}}</ref>

==开发==
[[Racket|Racket]]被设计用来支持面向语言编程<ref name=Felleisen2018 />。其他的{{en-link|语言工作台|language workbench}}工具比如{{en-link|JetBrains MPS|}}、{{en-link|Kermeta|}}和{{en-link|Xtext|}}，提供了设计及实现领域特定语言和面向语言编程的工具<ref name="killerapp">{{cite web |url=http://martinfowler.com/articles/languageWorkbench.html |title=Language Workbenches: The Killer-App for Domain Specific Languages? |last1=Fowler |first1=Martin |date=12 June 2005 |access-date=14 April 2015 |archive-date=2021-05-02 |archive-url=https://web.archive.org/web/20210502155445/https://martinfowler.com/articles/languageWorkbench.html |dead-url=no }}</ref>。

==相关内容==
* [[领域特定语言|领域特定语言]]
* [[元编程|元编程]]
* [[面向切面的程序设计|面向切面的程序设计]]
* [[意图编程|意图编程]]
* {{en-link|方言化|Dialecting}}
* {{en-link|面向文法编程|Grammar-oriented programming}}
* [[LISP|LISP]][[宏|宏]]
* [[模型驱动工程|模型驱动工程]]
* {{en-link|可扩展编程|Extensible programming}}
* [[同像性|同像性]]

==参考文献==
{{reflist|2}}

== 外部链接 ==
* [http://www.cse.dmu.ac.uk/~mward/martin/papers/middle-out-t.pdf Language Oriented Programming] {{Wayback|url=http://www.cse.dmu.ac.uk/~mward/martin/papers/middle-out-t.pdf |date=20160304020956 }} Martin Ward's original paper that coined the term.
* [http://www.onboard.jetbrains.com/articles/04/10/lop/ Language Oriented Programming: The Next Programming Paradigm] {{Wayback|url=http://www.onboard.jetbrains.com/articles/04/10/lop/ |date=20200129163414 }} Sergey Dmitriev's paper that further explored the topic.
* [http://www.martinfowler.com/articles/languageWorkbench.html Language Workbenches: The Killer-App for Domain Specific Languages?] {{Wayback|url=http://www.martinfowler.com/articles/languageWorkbench.html |date=20200604135759 }} Martin Fowler's article describing both the concept and tools that support it. 
* [http://www.cse.dmu.ac.uk/~mward/martin/papers/ Papers by Martin Ward] {{Wayback|url=http://www.cse.dmu.ac.uk/~mward/martin/papers/ |date=20170320172620 }}
* [http://www.sergeydmitriev.com/ Sergey Dmitriev's personal homepage] {{Wayback|url=http://www.sergeydmitriev.com/ |date=20210224234559 }}
* [http://www.jetbrains.com/mps The Meta-Programming System] {{WebCite|url=https://www.webcitation.org/66MSqTL3y?url=http://www.jetbrains.com/mps |date=20120322195913 |dateformat=iso }}
* [https://web.archive.org/web/20160115203115/http://www.intentsoft.com/ https://web.archive.org/web/20160115203115/http://www.intentsoft.com/]
* [http://www.ucalc.com/langbuilder.html uCalc Language Builder] {{Wayback|url=http://www.ucalc.com/langbuilder.html |date=20120720173936 }}
* [http://msdn.microsoft.com/architecture/overview/softwarefactories/ http://msdn.microsoft.com/architecture/overview/softwarefactories/] {{Wayback|url=http://msdn.microsoft.com/architecture/overview/softwarefactories/ |date=20080828161931 }}
* [https://web.archive.org/web/20060918132317/http://osl.iu.edu/~tveldhui/papers/dagstuhl1998/ https://web.archive.org/web/20060918132317/http://osl.iu.edu/~tveldhui/papers/dagstuhl1998/]
* [http://research.microsoft.com/research/pubs/view.aspx?tr_id=4 http://research.microsoft.com/research/pubs/view.aspx?tr_id=4] {{Wayback|url=http://research.microsoft.com/research/pubs/view.aspx?tr_id=4 |date=20070311121002 }}
* [http://oozy.blogspot.com/ http://oozy.blogspot.com/] {{Wayback|url=http://oozy.blogspot.com/ |date=20190717202110 }}
* [http://lambda-the-ultimate.org/node/377 http://lambda-the-ultimate.org/node/377] {{Wayback|url=http://lambda-the-ultimate.org/node/377 |date=20210513035349 }}
* [http://www.paulgraham.com/onlisp.html http://www.paulgraham.com/onlisp.html] {{Wayback|url=http://www.paulgraham.com/onlisp.html |date=20210501042043 }}
* [https://web.archive.org/web/20081102015805/http://fragmental.tw/research-on-dsls/language-oriented-programming-lop/ Language Oriented Programming (LOP)]
* [https://web.archive.org/web/20081204011209/http://layerd.net/ LayerD framework]
* Interviews with [https://web.archive.org/web/20071030094144/http://www.codegeneration.net/tiki-read_article.php?articleId=60 Sergey Dmitriev], [https://web.archive.org/web/20071030094149/http://www.codegeneration.net/tiki-read_article.php?articleId=61 Charles Simonyi], [https://web.archive.org/web/20071030094215/http://www.codegeneration.net/tiki-read_article.php?articleId=64 Krzystof Czarnecki] and [https://web.archive.org/web/20071030094235/http://www.codegeneration.net/tiki-read_article.php?articleId=68 Andy Evans]

[[Category:编程典范|Category:编程典范]]
[[Category:面向对象的程序设计|Category:面向对象的程序设计]]