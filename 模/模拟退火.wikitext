{{Multiple issues|
{{Expand language|1=en|time=2020-09-25T14:53:33+00:00}}
{{Unreferenced|time=2020-09-25T14:54:42+00:00}}
}}
{{NoteTA
|G1=Math
|1=zh-hans:迭代;zh-hant:疊代;
|2=zh-hans:最優;zh-hant:最佳;
|3=zh-hans:最优;zh-hant:最佳;
}}
[[File:Travelling_salesman_problem_solved_with_simulated_annealing.gif|thumb]]
[[File:3D_TSP_solved_with_simulated_annealing_2.5_MB.gif|thumb]]

'''模擬退火'''（{{lang-en|Simulated annealing}}，缩写作SA）是一種通用[[概率演算法|概率演算法]]，常用來在一定時間內尋找在一個很大[[搜尋空間|搜尋空間]]中的近似[[最優解|最優解]]。模擬退火在1983年为S. Kirkpatrick, C. D. Gelatt和M. P. Vecchi所發明，V. Černý也在1985年獨立發明此[[演算法|演算法]]。

==簡介==
模拟退火來自[[冶金學|冶金學]]的專有名詞[[退火|退火]]。退火是將材料加熱後再經特定速率冷卻，目的是增大[[晶體|晶粒]]的體積，並且減少晶格中的缺陷。材料中的原子原來會停留在使[[內能|內能]]有局部最小值的位置，加熱使能量變大，原子會離開原來位置，而隨機在其他位置中移動。退火冷卻時速度較慢，使得原子有較多可能可以找到內能比原先更低的位置。

模擬退火的原理也和金屬退火的原理近似：我們將熱力學的理論套用到統計學上，將搜尋空間內每一點想像成空氣內的分子；分子的能量，就是它本身的動能；而搜尋空間內的每一點，也像空氣分子一樣帶有“能量”，以表示該點對命題的合適程度。演算法先以搜尋空間內一個任意點作起始：每一步先選擇一個“鄰居”，然後再計算從現有位置到達“鄰居”的概率。

可以证明，模拟退火算法所得解[[依概率收敛|依概率收敛]]到全局最优解。

==演算步驟==

=== 初始化 ===
由一个产生函数从当前解产生一个位于解空间的新解，并定义一个足够大的数值作为初始温度。

=== 迭代过程 ===
迭代过程是模拟退火算法的核心步骤，分为新解的产生和接受新解两部分：

#由一个产生函数从当前解产生一个位于解空间的新解；为便于后续的计算和接受，减少算法耗时，通常选择由当前新解经过简单地变换即可产生新解的方法，如对构成新解的全部或部分元素进行置换、互换等，注意到产生新解的变换方法决定了当前新解的邻域结构，因而对冷却进度表的选取有一定的影响。
#计算与新解所对应的目标函数差。因为目标函数差仅由变换部分产生，所以目标函数差的计算最好按增量计算。事实表明，对大多数应用而言，这是计算目标函数差的最快方法。
#判断新解是否被接受，判断的依据是一个接受准则，最常用的接受准则是Metropolis准则：若Δt′<0则接受S′作为新的当前解S，否则以概率exp（-Δt′/T）接受S′作为新的当前解S。
#当新解被确定接受时，用新解代替当前解，这只需将当前解中对应于产生新解时的变换部分予以实现，同时修正目标函数值即可。此时，当前解实现了一次迭代。可在此基础上开始下一轮试验。而当新解被判定为舍弃时，则在原当前解的基础上继续下一轮试验。

模拟退火算法与初始值无关，算法求得的解与初始解状态S（是算法迭代的起点）无关；模拟退火算法具有渐近收敛性，已在理论上被证明是一种以概率1收敛于全局最优解的全局优化算法；模拟退火算法具有并行性。

=== 停止准则 ===
迭代过程的一般停止准则：温度T降低至某阈值时，或连续若干次迭代均未接受新解时，停止迭代，接受当前寻找的最优解为最终解。

=== 退火方案 ===
在某个温度状态T下，当一定数量的迭代操作完成后，降低温度T，在新的温度状态下执行下一个批次的迭代操作。

==虛擬碼（偽代碼）==
尋找能量 <math>E(s)</math> 最低的狀態 <math>s</math>

<syntaxhighlight lang="cpp">
s := s0; e := E(s)                           // 設定目前狀態為s0，其能量E (s0)
k := 0                                       // 評估次數k
while k < kmax and e > emin                 // 若還有時間（評估次數k還不到kmax）且結果還不夠好（能量e不夠低）則：
    sn := neighbour(s)                           // 隨機選取一鄰近狀態sn
    en := E(sn)                                  // sn的能量為E (sn)
    if random() < P(e, en, temp(k/kmax))         // 決定是否移至鄰近狀態sn
        s := sn; e := en                               // 移至鄰近狀態sn
    k := k + 1                                   // 評估完成，次數k加一
return s                                    // 回傳狀態s
</syntaxhighlight>

==延伸閲讀==
{{refbegin|2}}
*A. Das and B. K. Chakrabarti (Eds.), ''[ftp://nozdr.ru/biblio/kolxoz/M/MP/Das%20A.,%20Chakrabarti%20B.K.%20(eds.)%20Quantum%20Annealing%20and%20Related%20Optimization%20Methods%20(LNP0679,%20Springer,%202005)(384s)_MP_.pdf Quantum Annealing and Related Optimization Methods],'' Lecture Note in Physics, Vol. 679, Springer, Heidelberg (2005)
*{{cite journal |doi=10.1007/BF00202749 |title=Correlated and uncorrelated fitness landscapes and how to tell the difference |year=1990 |last1=Weinberger |first1=E. |journal=Biological Cybernetics |volume=63 |issue=5 |pages=325–336|s2cid=851736 }}
*{{Cite book | last1=Press | first1=WH | last2=Teukolsky | first2=SA | last3=Vetterling | first3=WT | last4=Flannery | first4=BP | year=2007 | title=Numerical Recipes: The Art of Scientific Computing | edition=3rd | publisher=Cambridge University Press | location=New York | isbn=978-0-521-88068-8 | chapter=Section 10.12. Simulated Annealing Methods | chapter-url=http://apps.nrbook.com/empanel/index.html#pg=549 | access-date=2021-09-02 | archive-date=2011-08-11 | archive-url=https://web.archive.org/web/20110811154417/http://apps.nrbook.com/empanel/index.html#pg=549 | dead-url=no }}
*{{cite journal |doi=10.1016/j.ympev.2016.05.001 |title=On simulated annealing phase transitions in phylogeny reconstruction |year=2016 |last1=Strobl |first1=M.A.R. |last2=Barker |first2=D. |journal=Molecular Phylogenetics and Evolution |volume=101 |pages=46–55 |pmid=27150349 |pmc=4912009}}
*V.Vassilev, A.Prahova: "The Use of Simulated Annealing in the Control of Flexible Manufacturing Systems", International Journal INFORMATION THEORIES & APPLICATIONS, [http://www.foibg.com/ijita/vol01-09/ijita-fv06.htm VOLUME 6/1999] {{Wayback|url=http://www.foibg.com/ijita/vol01-09/ijita-fv06.htm |date=20210902232623 }}
{{refend}}

==参閲==
*[[演算法|演算法]]
*[[旅行推銷員問題|旅行推銷員問題]]
*[[蚁群算法|蚁群算法]]
*[[遗传算法|遗传算法]]

==外部链接==
* [https://web.archive.org/web/20090319230318/http://biomath.ugent.be/~brecht/downloads.html 基于MATLAB实现的全局优化算法]：SIMPSA（SA和单纯的组合），洗牌复杂的演化（SCA）和粒子群优化（PSO）。
* [http://www.heatonresearch.com/aifh/vol1/tsp_anneal.html Simulated Annealing] {{Wayback|url=http://www.heatonresearch.com/aifh/vol1/tsp_anneal.html |date=20210626212745 }} A Javascript app that allows you to experiment with simulated annealing. Source code included.
* [http://www.mathworks.com/matlabcentral/fileexchange/loadFile.do?objectId=10548&objectType=file "General Simulated Annealing Algorithm"] {{Wayback|url=http://www.mathworks.com/matlabcentral/fileexchange/loadFile.do?objectId=10548&objectType=file |date=20080923163834 }} An open-source MATLAB program for general simulated annealing exercises.
* [[Wikiversity:Simulated_Annealing_Project|Self-Guided Lesson on Simulated Annealing]] A Wikiversity project.
* [https://arstechnica.com/science/news/2009/12/uncertainty-hovers-over-claim-googles-using-quantum-computer.ars Google in superposition of using, not using quantum computer] {{Wayback|url=https://arstechnica.com/science/news/2009/12/uncertainty-hovers-over-claim-googles-using-quantum-computer.ars |date=20120112021754 }} Ars Technica discusses the possibility that the D-Wave computer being used by Google may, in fact, be an efficient simulated annealing co-processor.
* [https://ieeexplore.ieee.org/document/4358775] {{Wayback|url=https://ieeexplore.ieee.org/document/4358775 |date=20210710224156 }} A Simulated Annealing-Based Multiobjective Optimization Algorithm: AMOSA. 
{{-}}
{{tsl|en|template:Major subfields of optimization|state=collapsed}}

[[Category:算法|Category:算法]]
[[category:最優化演算法|category:最優化演算法]]
[[category:蒙地卡羅方法|category:蒙地卡羅方法]]