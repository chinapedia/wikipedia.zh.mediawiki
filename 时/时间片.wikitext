{{nofootnotes|time=2009-08-26T19:42:22+00:00}}
{{NoteTA|G1=IT}}
[[File:CPU_Time.png|right]]
'''时间片'''（{{lang|en|timeslice}}）又称为“量子（{{lang|en|quantum}}）”或“处理器片（{{lang|en|processor slice}}）”是[[分时操作系统|分时操作系统]]分配给每个正在运行的[[进程|进程]]微观上的一段CPU时间（在抢占[[内核|内核]]中是：从进程开始运行直到被抢占的时间）。

现代操作系统（如：[[Windows|Windows]]、[[Linux|Linux]]、[[Mac_OS_X|Mac OS X]]等）允许同时运行多个进程。例如，在打开音乐播放器的同时用[[浏览器|浏览器]]浏览[[网页|网页]]并下载文件。由于一台[[计算机|计算机]]通常只有一个[[CPU|CPU]]，所以不可能真正地同时运行多个任务。这些进程“看起来像”同时运行，实则是轮番运行，由于时间片通常很短（在[[Linux|Linux]]上为5ms－800ms），用户不会感觉到。

时间片由[[操作系统|操作系统]]内核的[[调度程序|调度程序]]分配给每个进程。首先，内核会给每个[[进程|进程]]分配相等的初始时间片，然后每个进程轮番地执行相应的时间，当所有进程都处于时间片耗尽的状态时，内核会重新为每个进程计算并分配时间片，如此往复。

== 时间片的分配 ==
通常状况下，一个系统中所有的进程被分配到的时间片长短并不是相等的，尽管初始时间片基本相等（在[[Linux|Linux]]系统中，初始时间片也不相等，而是各自父进程的一半），系统通过测量进程处于“睡眠”和“正在运行”状态的时间长短来计算每个进程的交互性，交互性和每个进程预设的静态[[优先级|优先级]]（[[Nice值|Nice值]]）的叠加即是动态优先级，动态优先级按比例缩放就是要分配给那个进程时间片的长短。一般地，为了获得较快的响应速度，交互性强的进程（即趋向于[[IO消耗型|IO消耗型]]）被分配到的时间片要长于交互性弱的（趋向于[[处理器消耗型|处理器消耗型]]）进程。

== 参考图书 ==
#《Linux内核设计与实现》[[羅伯特·拉姆|羅伯特·拉姆]]（Robert Love〉 著
#《windows内核原理与实现》

== 參見 ==
* [[搶佔式多任務處理|搶佔式多任務處理]]

[[Category:操作系统|Category:操作系统]]