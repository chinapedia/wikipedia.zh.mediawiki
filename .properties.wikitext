{{NoteTA|G1=IT}}
{{Infobox file format
| name = Properties
| extension = <tt>.properties</tt>
| mime = 
| owner = 
| creatorcode = 
| genre = 任何文本格式，包括[[ASCII|ASCII]]和[[UTF|UTF]]
| containerfor = 
| containedby = 
| extendedfrom = 
| extendedto = 
}}

'''.properties'''是一种主要在[[Java|Java]]相关技术中用来存储[[应用程序|应用程序]]的可配置参数的[[電腦檔案|文件]]的[[文件扩展名|文件扩展名]]。它们也可以存储用于[[国际化和本地化|国际化和本地化]]的字符串，这种文件被称为属性资源包（Property Resource Bundles）。

每个参数被存储为一对[[字符串|字符串]]：一个存储名称参数（被称为“键”），另一个存储值。

== 格式 ==
每个.properties 文件中的行通常存储单个属性。对于每一行可能有这么几种格式，包括<code>键=值</code>，<code>键 = 值</code>，<code>键:值</code>，以及<code>键 值</code>。

.properties文件可以使用[[井号|井号]]（#）或[[叹号|叹号]]（!）作为一行中第一个非{{tsl|en|Whitespace character|空白字符}}来表示它后面的所有文本都是一个注释。反斜杠（\）用于转义字符。下面提供一个属性文件的示例。

<!-- 请不要翻译本段文字。理由参见本文关于文本编码的介绍。 -->
<syntaxhighlight lang="properties">
# You are reading the ".properties" entry.
! The exclamation mark can also mark text as website
site = http://en.wikipedia.org/
message = Welcome to Wikipedia!
</syntaxhighlight>
site</tt>是一个键，它对应的值是<tt><nowiki>http://en.wikipedia.org/</nowiki></tt>。而数字符号和感叹号作为注释标记文本，作为属性的一部分时没有什么影响。因此，<tt>message</tt>键具有值<tt>Welcome to Wikipedia!</tt>而不是<tt>Welcome to Wikipedia</tt>。另请注意，在<tt>Wikipedia!</tt>前面的所有空白被完全排除。

.properties文件的编码是[[ISO/IEC_8859-1|ISO-8859-1]]，又称为Latin-1。所有非Latin-1字符必须利用[[Unicode|Unicode]]转义字符录入，例如\uHHHH中，HHHH是某个字符的Unicode字符集的十六进制的索引。这样就可以使用.properties文件作为[[国际化和本地化|本地化]]的属性资源包。非Latin-1的文本文件，可以通过使用随[[JDK|JDK]]提供的native2ascii工具转换为正确的.properties文件；或使用如po2prop<ref>[[Translate_Toolkit|Translate Toolkit]]的[http://docs.translatehouse.org/projects/translate-toolkit/en/latest/commands/prop2po.html po2prop] {{Wayback|url=http://docs.translatehouse.org/projects/translate-toolkit/en/latest/commands/prop2po.html |date=20140716190708 }}可以将本地字符编码的[[Gettext|Gettext]] PO文件正确转换成转义过的ASCII，而无需 native2ascii。</ref>的第三方工具，管理双语本地化格式转义为.properties。

从Java 1.5开始，JDK支持XML格式属性文件，其默认是UTF-8编码的，可以用来替代Java的.properties文件。<ref>{{Cite web |url=http://java.sun.com/dtd/properties.dtd |title=Java XML Properties DTD |accessdate=2014-07-14 |archive-date=2012-07-17 |archive-url=https://web.archive.org/web/20120717031109/http://java.sun.com/dtd/properties.dtd |dead-url=no }}</ref>

== 在Java外的应用 ==
[[Adobe_Flex|Adobe Flex]]亦使用.properties文件，不过其是用UTF-8编码的。<ref>{{Cite web |url=http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/mx/resources/IResourceBundle.html |title=Flex IResourceBundle reference |accessdate=2014-07-14 |archive-date=2014-08-29 |archive-url=https://web.archive.org/web/20140829145642/http://help.adobe.com/en_US/FlashPlatform/reference/actionscript/3/mx/resources/IResourceBundle.html |dead-url=no }}</ref>

在{{link-en|mod_jk|mod_jk|Apache mod_jk}}的uriworkermap.properties文件中，感叹号（“!”）作为每行的第一个非空白[[字符|字符]]时，表示[[逻辑非|逻辑非]]操作符。<ref>{{Cite web |url=http://tomcat.apache.org/connectors-doc/reference/uriworkermap.html#Exclusion,%20Disabling%20and%20Priorities |title=Apache mod_jk uriworkermap.properties reference |accessdate=2014-11-12 |archive-date=2014-11-04 |archive-url=https://web.archive.org/web/20141104113136/http://tomcat.apache.org/connectors-doc/reference/uriworkermap.html#Exclusion,%20Disabling%20and%20Priorities |dead-url=no }}</ref>

== 参见 ==
* [[XML|XML]]和[[YAML|YAML]]被用作一些更为复杂的配置格式

== 参考文献 ==
<references/>

== 外部链接 ==
*{{Javadoc:SE|package=java.util|java/util|Properties|load(java.io.Reader)}}——给出了良好的Java属性文件的精确语义。
*{{Javadoc:SE|package=java.util|java/util|PropertyResourceBundle}}——介绍了属性资源包。
*{{Javadoc:SE|package=java.util|java/util|Properties}}——Java下用简单的XML格式加载和存储属性。
*[http://marketplace.eclipse.org/content/multiproperties MultiProperties]{{Wayback|url=http://marketplace.eclipse.org/content/multiproperties |date=20140728211649 }}——这是一个Eclipse插件，用来编辑多个内容相似的基于键-值文件。这种文件格式可以作为属性文件。
*[http://code.google.com/p/bracket-properties/ Bracket Properties]{{Wayback|url=http://code.google.com/p/bracket-properties/ |date=20140520014402 }}——它“重新定义”了“属性”的概念，并能使无所不在的.properties文件保持完备。
*[http://java-properties-editor.com Java Properties Editor (Application + Eclipse plugin)]{{Wayback|url=http://java-properties-editor.com/ |date=20181013100339 }}——在整个项目中查看和编辑属性文件的实用工具。
*[http://marketplace.eclipse.org/content/properties-editor-java-i18n-tool DOKSoft Properties Editor Eclipse plugin]{{Wayback|url=http://marketplace.eclipse.org/content/properties-editor-java-i18n-tool |date=20140728210638 }} - [[i18n|i18n]]工具，安装到Eclipse IDE中。
*[http://sourceforge.net/projects/meor Message Editor]{{Wayback|url=http://sourceforge.net/projects/meor |date=20140622122746 }}——它管理Java应用程序的[[i18n|i18n]]。
*[http://sourceforge.net/projects/jlokalize JLokalize]{{Wayback|url=http://sourceforge.net/projects/jlokalize |date=20140628191951 }}——开源的Java属性编辑器，具有翻译和拼写检查功能。

[[Category:文件格式|Properties]]
[[Category:配置文件|Category:配置文件]]
[[Category:Java平台|Category:Java平台]]
[[Category:Java|Category:Java]]
[[Category:扩展名|PROPERTIES]]