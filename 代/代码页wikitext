{{NoteTA
|G1 = IT
}}
'''-{zh-cn:[[代码|代码]]页; zh-tw:頁碼;}-'''是[[字符编码|字符编码]]的别名，也稱'''-{zh-cn:[[内码|内码]]表; zh-tw:[[代碼|代碼]]頁;}-'''，是特定语言的字符集的一张表。

==历史==
早期，代码页是[[IBM|IBM]]称呼计算机的[[BIOS|BIOS]]所支持的[[字符集|字符集]][[编码|编码]]。当时通用的操作系统都是[[命令行界面|命令行界面]]，这些操作系统直接使用BIOS提供的字符绘制功能来显示字符（或者是一组嵌入在显卡字符生成器中的字形）。这些BIOS代码页也被称为'''OEM代码页'''。[[图形界面|图形]]操作系统使用自己的字符呈现引擎（rendering engine），可以支持多个不同的字符集编码，这类代码页被称作'''ANSI代码页'''。

早期[[IBM|IBM]]和[[微软|微软]]内部使用数字来标记不同的编码字符集，不同的厂商对同一个字符集编码使用各自不同的名称。例如，[[UTF-8|UTF-8]]在IBM称作代码页1208，在微软称作代码页65001，在[[SAP|SAP]]称作代码页4110。

1987年4月，IBM发布了[[DOS|PC-DOS 3.3]]，正式开始使用16比特的无符号整数标识不同的代码页。这时的PC机使用[[CGA|CGA]]显示系统的字符界面，绘制不同语言的字符依靠BIOS硬件厂商（在当时就是指制定业界标准的IBM）提供的功能。如果想更换所支持的字符集，就必须换上支持该字符集的ROM芯片。微软作为DOS操作系统的软件厂商，并不拥有绘制这些字符集的知识产权。所以这些字符集的绘制实现，称作OEM代码页。最常见、最具代表性的OEM代码页是"IBM PC或MS-DOS [[代码页437|代码页437]]"。
[[File:Codepage-437.png|thumb]]

随着图形用户界面操作系统的广泛使用（最初被广为接受的是[[Windows_3.1|Windows 3.1]]），操作系统具有了字符绘制的功能。微软在Windows操作系统没有转向UTF-16作为内码实现之前（也就是在[[Windows_2000|Windows 2000]]之前），针对不同的使用地区与国家，定义了一系列的支持不同语言字符集的代码页，被称作"Windows（或ANSI）代码页"。代表性的是实现了ISO-8859-1的[[代码页1252|代码页1252]]。

== OEM（IBM PC）代碼頁 ==
* [[代码页437|437]]—最初的IBM PC代碼頁，实现了扩展ASCII字符集
* [[代码页737|737]]—[[希腊语|希腊语]]
* [[代码页850|850]]—「[[多語言|多語言]]（[[Latin-1|Latin-1]]）」（[[西歐|西歐]]语言）
* [[代码页852|852]]—「[[斯拉夫語族|斯拉夫]]（[[Latin-2|Latin-2]]）」（[[中歐|中歐]]及[[東歐|東歐]]語言）
* [[代码页855|855]]—[[西里尔字母|西里尔（Cyril）字母]]
* [[代码页857|857]]—[[土耳其语|土耳其语]]
* [[代码页858|858]]—带[[欧元|欧元]]符号的「多語言」
* [[代码页860|860]]—[[葡萄牙语|葡萄牙语]]
* [[代码页861|861]]—[[冰岛语|冰岛语]]
* [[代码页863|863]]—[[法语|法语]][[加拿大|加拿大]]英语
* [[代码页865|865]]—[[北欧|北欧]]
* [[代码页866|866]]—[[西里尔字母|西里尔（Cyril）字母]]
* [[代码页869|869]]—[[希腊语|希腊语]]

[[代码页819|代码页819]]实现了Latin-1（ISO/IEC 8859-1），用于IBM AS/400小型机。

===OEM代码页转换为ASCII代码页===
对于中日韩的多字节编码的代码页，OEM代码页与ASCII代码页相同，例如对于简体中文的OEM代码页与ASCII代码页就是GBK代码页。而对于单字节编码的代码页，如英语、俄语等，OEM代码页与ASCII代码页一般不同。这是因为在MS-DOS时代，计算机只能使用字符界面在屏幕上画出表格的框线，所以OEM代码页要在单字节字符集中包含[[方框绘制字符|方框绘制字符]]；此外，OEM代码页437提供的有限的[[变音符号|变音符号]]，只能覆盖法语、西班牙语、德语、意大利语、瑞典语的字母表。而在Windows的早期时代，仍然使用单字节字符集，这时就舍弃了这些不必要的[[方框绘制字符|方框绘制字符]]，取而代之的是丹麦语、挪威语、冰岛语、[[加拿大法语|加拿大法语]]的[[变音符号|变音符号]]。为此，一个用OEM代码页的字节流要在Windows上正确显示，就需要或者显式设定使用OEM代码页；或者要显式把OEM代码页的字节流转化为ASCII代码页的字符流，这需要使用Windows系统调用<code>OemToChar()</code>。

== Windows（ANSI）代碼頁 ==
Windows代码页最初是根据ANSI草案实现的，这个草案最终成为[[ISO_8859-1|ISO 8859-1]]。这是Windows代码页被称作ANSI的缘由。
* [[ISO/IEC_8859-11|874]]—泰文字母
* [[Windows-1250|1250]]—東歐拉丁字母
* [[Windows-1251|1251]]—[[Cyrillic_alphabet|古斯拉夫語]]
* [[Windows-1252|1252]]—西歐拉丁字母ISO-8859-1.
* [[Windows-1253|1253]]—[[Greek_alphabet|希臘語]]
* [[Windows-1254|1254]]—土耳其語
* [[Windows-1255|1255]]—[[Hebrew_alphabet|希伯來語]]
* [[Windows-1256|1256]]—[[Arabic_alphabet|阿拉伯語]]
* [[Windows-1257|1257]]—[[Baltic_state|巴爾]]
* [[Windows-1258|1258]]—[[Vietnamese_language|越南]]

Windows-1252与ISO-8859-1并不完全一致。ISO-8859-1在0x80-0x9F范围的控制字符，在Windows-1252中被可打印字符取代。由于在web网页中，ASCII控制字符不起作用，所以网页一般用Windows-1252代码页标记替代ISO-8859-1标记。

==中日韩语言代码页==
既是OEM代码页，也是Windows代码页。
* [[代码页936|936]]—简体中文（[[GBK|GBK]]）
* [[代码页950|950]]—繁體中文（[[大五碼|大五碼]]）
* [[代码页932|932]]—日文（[[Shift_JIS|Shift_JIS]]）
* [[代码页949|949]]—韓文（[[EUC-KR|EUC-KR]]）
* [[代码页20000|20000]]（CNS）以EUC编码的繁体中文CNS编码
* [[代码页20002|20002]]（Eten）以EUC编码的繁体中文倚天码
* [[代码页20936|20936]]（GB2312-80）以EUC编码的简体中文GB2312编码（老设备或嵌入式设备常见）
* [[代码页50227|50227]]（ISO-2022-GB）简体中文的Esc序列编码，纯ASCII
* [[代码页50229|50229]]（ISO-2022-CNS）繁体中文的Esc序列编码，纯ASCII
* [[代码页52936|52936]]（HZ-GB-2312）以~{和~}分隔的简体中文GB2312编码，纯ASCII
* [[代码页54936|54936]]—简体中文（[[GB18030|GB18030]]）

== 其他代碼頁 ==
* [[代码页10000|10000]]—Macintosh Roman encoding（followed by several other Mac character sets）
* [[代码页10007|10007]]—Macintosh Cyrillic encoding
* [[代码页10029|10029]]—Macintosh Central European encoding
* [[代码页1200|1200]]—UCS-2LE [[Unicode|Unicode]] [[字节序#小端序|小端序]]
* [[代码页1201|1201]]—UCS-2BE [[Unicode|Unicode]] [[字节序#大端序|大端序]]
* [[代码页65000|65000]]—[[UTF-7|UTF-7]] [[Unicode|Unicode]]
* [[代码页65001|65001]]—[[UTF-8|UTF-8]] [[Unicode|Unicode]]

==Windows操作系统中使用的代码页==
Windows平台上的GUI程序使用ANSI代码页，而在控制台程序使用OEM代码页（以便向后兼容）。这意味着，如果在记事本程序（notepad.exe）打开一个8位字符集编码的文本文件，将使用ANSI代码页；如果在命令行中用type命令显示这个文本文件的内容，将使用OEM代码页。这两个代码页在前128个字符的编码是一样的，但后128个字符的编码可能不一致。在Windows的命令行窗口通过标记、复制操作把一部分文本内容复制到记事本程序中，实际上是把Unicode格式的内容保存在[[剪贴板|剪贴板]]，使得这种文本复制保持了字符编码的透明转换。

对于Windows操作系统中的命令行窗口（Command Prompt），chcp命令在没有参数时，显示当前代码页；chcp命令带一个整数参数，则改变命令行窗口的当前代码页为参数所指定。

把UTF-8编码文本直接写到控制台，必须先使用函数SetConsoleOutputCP(65001)，然后使用puts一族的函数来输出文本。把UTF-8编码文本写入UTF-8文件时，可以直接使用窄字符输出函数。

在[[Windows_API|Windows API]]中，CP_ACP与CP_OEMCP分别表示当前系统的ANSI代码页与OEM代码页。对于CJK(多字节编码)的环境(泰文，日文，韩文，中文),CP_ACP与CP_OEMCP没有区别。对于非 CJK(单字节编码)的环境这两个代码页不同。 Windows的文件操作的API默认使用ASCII代码页(即CP_ACP)，设备的操作的函数使用OEM代码页(即CP_OEMCP)。读写console的函数是对console设备的操作，所以默认使用OEMCP。

==查询代码页的信息==
Windows系统调用<code>GetCPInfo()</code>给出指定的代码页的信息。如东亚多字节代码页的缺省字符、前导字节的范围：
<syntaxhighlight lang="c">
{
 CPINFO info;
 UINT iCP = 932; //GBK
 GetCPInfo(iCP, &info);
 printf("Code page %d's default char is [%c]\n", iCP, info.DefaultChar[0]);
 printf("Max size of a char: %d\n", info.MaxCharSize);
 int i;
 const int iMaxLeadBytePairNum = 5;
 for (i = 0; i < iMaxLeadBytePairNum; i++)
 {
    if (info.LeadByte[i * 2] == 0 && info.LeadByte[i * 2 + 1] == 0)
        break;
    printf("Lead byte pair %d: 0x%02X-0x%02X\n", i, info.LeadByte[i * 2], info.LeadByte[i * 2 + 1]);
 }
}
</syntaxhighlight>

== 外部連結 ==
* [http://www.ibm.com/servers/eserver/iseries/software/globalization/codepages.html IBM代碼頁]{{en}}
* [https://web.archive.org/web/20090210051329/http://icu-project.org/charts/charset/ IBM/ICU Charset Information]
* [http://msdn.microsoft.com/library/default.asp?url=/library/en-us/intl/unicode_81rn.asp Microsoft code page identifiers]（Microsoft's list contains only code pages actively used by normal apps on Windows see also [https://web.archive.org/web/20040225223721/http://www.sharmahd.com/tm/codepages.html Torsten Mohrin's list] for the full list of supported code pages）
* [https://web.archive.org/web/20080204203338/http://www.microsoft.com/globaldev/reference/WinCP.mspx Shorter Microsoft list containing only the ANSI and OEM code pages but with links to more detail on each]
* [http://www.i18nguy.com/unicode/codepages.html Character Sets And Code Pages At The Push Of A Button]{{Wayback|url=http://www.i18nguy.com/unicode/codepages.html |date=20201107224708 }}

{{字元編碼}}
{{Authority control}}

[[Category:字符编码|Category:字符编码]]