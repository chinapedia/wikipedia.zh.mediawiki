{{unreferenced|time=2018-11-05T21:06:50+00:00}}
{{NoteTA
|G1=IT
|1=zh-hans:复用; zh-hant:複用;}}
'''代码复用'''，也被称作'''软件复用'''。就是再利用已有的代码，或者相关的知识去编写新的代码来构造软件。

==概要==
可复用的[[代码|代码]]以及相关的知识与需求文档，设计，测试用例一样都是软件开发的组织内部所不可或缺的资产。事实上，最早为人所知的复用正是从代码复用开始的。所谓的代码复用，本质上就是对曾经编写过的代码的一部分甚至全部重新加以利用，从而构建新的[[程序|程序]]。使用这种方法就可以将[[程序员|程序员]]从费时费力的重复劳动中解放出来。

[[库_(计算机)|程序库]]是一种代码复用的很好的形式。程序员可以创建内部抽象以便程序的部分代码可被复用，或者直接创建一个自定义库给自己使用。用于衡量代码可复用程度的特性通常包括：[[模組_(程式設計)|模块化]]，[[低耦合|低耦合]],[[高内聚|高内聚]],[[数据封装|数据封装]]以及[[关注点分离|SOC]]。

如果编写代码时要利用已有的代码，则必须定义某种[[接口|接口]]或者通信的方法。这通常包含了对[[子程序|子程序]],[[对象|对象]],[[类|类]]或[[原型|原型]]的引用或调用。

对于以某个已有程序的旧版本作为出发点来进行新版本的开发的做法也可被视为一种代码复用。

还有一种做法也可被视为代码复用。即直接从已有程序中将一段代码拷贝出来并粘贴到另一个地方作为新程序的一部分。但是这种做法往往会使得程序员最终陷入重复代码过多的问题。

为了使代码复用更加方便，更加迅速并且更加体系化，相关的研究者也进行了大量的研究。[[面向对象程序设计|面向对象程序设计]]就是以此为目的而衍生出来的方法。更加新一点的方法就是[[代码自动生成|代码自动生成]]，它会基于用户设置的一系列参数来自动生成程序的代码。与此类似的概念被称之为[[元编程|元编程]]。

== 软件复用 ==
'''软件复用'''是一种计算机[[软件工程|软件工程]]方法和理论。60年代的“[[软件危机|软件危机]]”使程序设计人员明白难于维护的软件成本是极其高昂的，当软件的规模不断扩大时，这种软件的综合成本可以说是没有人能负担的，并且即使投入了高昂的资金也难以得到可靠的产品，而软件重用的思想是解决这一问题的根本方法。

软件复用的主要思想是，将软件看成是由不同功能部分的“组件”所组成的有机体，每一个组件在设计编写时可以被设计成完成同类工作的通用工具，这样，如果完成各种工作的组件被创建起来以后，编写一特定软件的工作就变成了将各种不同组件组织连接体来的简单问题，这对于软件产品的最终质量和维护工作都有本质性的改变。

==复用的类型==
* 机会性的代码复用
: 开发团队在项目开始时便已知可复用的代码或组件的存在，因而决定进行代码复用。

* 有计划的代码复用
: 开发团队从战略角度为了日后的开发能够复用代码而进行设计。

==复用的形式==
===程序库===
{{main|库 (计算机)}}
编写程序库是进行代码复用最常见的方法。很多共通的操作，比如[[文件|文件]]的读/写，[[操作系统|操作系统]]信息的获取的动作都会被封装在程序库中，然后由软件开发人员来调用。使用程序库的一大优点就是它所提供的操作都是经过充分测试的，但是缺点则是无法对程序库提供的操作的具体实现进行调整，同时程序库也要求软件开发人员花大量时间去学习它的用法。

===设计模式===
{{main|软件设计模式}}
设计模式对于同类的相似问题提供了通用的解决方法。它所提供的是概念上的解决方法，对于具体问题往往还需要具体实现一份代码。利用[[类_(计算机科学)|抽象类]]或[[接口|接口]]往往可以在特定的设计模式中达到代码的复用。

===应用框架===
{{main|軟體框架}}
软件开发人员往往可以通过第三方的应用程序或者框架来实现对一个程序的大范围复用，这可以有效地提高生产效率。但缺点在于第三方的应用程序或者框架往往只在某个特定的应用范围内才可以适用。

==参见==
* [[一次且仅一次|一次且仅一次]]
* [[继承_(计算机科学)|继承]]
* [[软件设计模式|设计模式]]
* [[程序设计方法学|程序设计方法学]]

==外部链接==
* [https://web.archive.org/web/20090107031817/http://www.esdswg.org/softwarereuse/ Software Reuse] NASA
* [https://web.archive.org/web/20090321012455/http://www.rise.com.br/research/ RiSE] - Reuse in Software Engineering
* [https://web.archive.org/web/20070212092916/http://frakes.cs.vt.edu/renews.html ReNews - SoftwareReuse and Domain Engineering]
* [https://web.archive.org/web/20120805031930/http://www.koders.com/ Koders Open Source Search Engine]
* [http://www.merobase.com merobase - a Search Engine for Software Components]{{Wayback|url=http://www.merobase.com/ |date=20201109041557 }}

[[Category:软件开发|Category:软件开发]]
[[Category:计算机编程|Category:计算机编程]]