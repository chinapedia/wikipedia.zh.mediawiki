在[[計算複雜度理論|計算複雜度理論]]內，'''有限錯誤量子多項式時間'''（{{lang-en|bounded error quantum polynomial time}}，{{lang|en|BQP}}）是一個決定性問題的複雜度類，並且其內的問題可以在多項式時間內以量子電腦解決，錯誤的機率小於1/3。BQP也可以視為是複雜度類[[BPP|BPP]]的量子電腦版。

換句話說，對BQP裡面的問題，存在一個使用量子電腦的[[演算法|演算法]]（[[量子演算法|量子演算法]]）花費多項式時間運作，並且有很高的機率回答正確的答案。對任何狀況，回答錯誤答案的機率小於三分之一。

與其他「有限錯誤」的機率演算法相同，這裡所提到的1/3是一個比較隨意的定義。如果原本演算法的錯誤機率比較大，我們可以運作多次該演算法，然後取多數回答正確的答案以取得比較高的準確率。詳細的分析顯示錯誤的下限可以高達1/2 − ''n''<sup>−''c''</sup>或者低達2<sup>−''n<sup>c</sup>''</sup>，所包含的題目範圍均不會有變化。這裡''c''是一個正數的常數，''n''是輸入的長度。

== 量子計算 ==
演算法所使用[[量子位元|量子位元]]的數目可以為輸入大小的任何[[多項式|多項式]]。舉例來說，因式分解''n''位元整數的演算法使用大約2'n'個量子位元（參考[[秀爾演算法|秀爾演算法]]）。

一般狀況之下，量子電腦的計算停止於[[量子測量|量子測量]]上面。測量行為會導致量子位元[[波函數塌縮|塌縮]]到其中一個[[量子態|量子態]]上。我們可以說量子位元在經過運算之後，最終的測量會讓他有極高的機會出現正確的答案。

量子電腦受到許多矚目，因為有許多問題已知在'''BQP'''內，但是一般認為在'''P'''之外（換句話說，使用量子電腦比起一般電腦，能大幅縮短計算這些問題的時間）。一些著名的例子有：

*[[整數分解|整數分解]]（參考[[秀爾演算法|秀爾演算法]]）<ref name="Shor">{{Cite web |url=http://www.arxiv.org/abs/quant-ph/9508027 |title=arXiv:quant-ph/9508027v2 ''Polynomial-Time Algorithms for Prime Factorization and Discrete Logarithms on a Quantum Computer'', Peter W. Shor |accessdate=2012-12-02 |archive-date=2014-12-04 |archive-url=https://web.archive.org/web/20141204093543/http://arxiv.org/abs/quant-ph/9508027 |dead-url=no }}</ref>
*[[離散對數|離散對數]]<ref name="Shor"/>
*模擬量子系統（參考{{link-en|universalquantum simulator|universal quantum simulator}}）
*在特定根之下計算{{link-en|Jones polynomial|Jones polynomial}}

==參考資料==
{{reflist}}

== 外部連接 ==
* [https://complexityzoo.uwaterloo.ca/Complexity_Zoo:B#bqp Complexity Zoo link to BQP]{{Wayback|url=https://complexityzoo.uwaterloo.ca/Complexity_Zoo:B#bqp |date=20130603134129 }}

{{量子計算}}

[[Category:機率複雜度類|Category:機率複雜度類]]
[[Category:量子複雜度理論|Category:量子複雜度理論]]
[[Category:计算机科学中未解决的问题|Category:计算机科学中未解决的问题]]