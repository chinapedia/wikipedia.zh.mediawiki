{{noteTA
|G1=IT
|T=zh-hans:页缺失;zh-hant:分頁錯誤;
|1=zh-hans:分页;zh-hant:分頁;
|2=zh-hans:页缺失;zh-hant:分頁錯誤;
}}
'''-{zh-cn:页缺失;zh-tw:分頁錯誤;}-'''（{{lang-en|Page fault}}，又名'''硬错误'''、'''硬中断'''、'''-{zh-cn:分页错误;zh-tw:頁缺失;}-'''、'''寻页缺失'''、'''缺页中断'''、'''页故障'''等）指的是当软件试图访问已映射在[[虚拟地址|虚拟]][[地址空间|地址空间]]中，但是目前并未被加载在[[物理内存|物理内存]]中的一个[[分页|分页]]时，由[[中央处理器|中央处理器]]的[[内存管理单元|内存管理单元]]所发出的[[中断|中断]]。

通常情况下，用于处理此中断的程序是[[操作系统|操作系统]]的一部分。如果操作系统判断此次访问是有效的，那么操作系统会尝试将相关的分页从硬盘上的[[虚拟内存|虚拟内存]]文件中调入内存。而如果访问是不被允许的，那么操作系统通常会结束相关的[[进程|进程]]。<ref name="RedHat">Red Hat Enterprise Linux 3: Introduction to System Administration, {{Cite web|url=http://access.redhat.com/knowledge/docs/en-US/Red_Hat_Enterprise_Linux/3/html/Introduction_to_System_Administration/s1-memory-virt-details.html|title=4.4. Virtual Memory: The Details|accessdate=2013-02-11|publisher=RedHat}}{{Dead link|date=2018年6月 |bot=InternetArchiveBot |fix-attempted=no }}</ref>

虽然其名为“页缺失”错误，但实际上这并不一定是一種错误。而且这一机制对于利用[[虚拟内存|虚拟内存]]来增加程序可用内存空间的操作系统（比如[[Microsoft_Windows|Microsoft Windows]]和各种[[类Unix系统|类Unix系统]]）中都是常见且有必要的。

微软在较新版Windows的[[资源监视器|资源监视器]]中使用“'''-{zh-cn:硬错误;zh-tw:硬體錯誤;}-'''”（[[Windows_Vista|Windows Vista]]及以上）、“'''-{zh-cn:硬中断;zh-tw:硬體中斷;}-'''”（[[Windows_8|Windows 8]]及以上）这一术语来指代“页缺失”。<ref>参见英文Windows资源监视器帮助</ref>

==分类==
===软性===
'''软性页缺失'''指页缺失发生时，相关的页已经被加载进内存，但是没有向MMU注册的情况。操作系统只需要在MMU中注册相关页对应的物理地址即可。<ref name="RedHat" />

发生这种情况的可能性之一，是一块物理内存被两个或多个程序[[共享内存|共享]]，操作系统已经为其中的一个装载并注册了相应的页，但是没有为另一个程序注册。

可能性之二，是该页已被从CPU的[[工作集|工作集]]中移除，但是尚未被交换到[[磁盘|磁盘]]上。比如[[OpenVMS|OpenVMS]]这样的使用次级页缓存的系统，就有可能会在工作集过大的情况下，将某页从工作集中去除，但是不写入硬盘也不擦除（比如说这一页被读出硬盘后没被修改过），只是放入空闲页表。除非有其他程序需要，导致这一页被分配出去了，不然这一页的内容不会被修改。当原程序再次需要该页内的数据时，如果这一页确实没有被分配出去，那么系统只需要重新为该页在MMU内注册映射即可。<ref>HP OpenVMS Systems Documentation, {{Cite web|url=http://h71000.www7.hp.com/doc/73final/6491/6491pro_006.html|title=Chapter 7 Evaluating the Memory Resource|accessdate=2013-02-11|publisher=HP|archive-url=https://web.archive.org/web/20130301075602/http://h71000.www7.hp.com/doc/73final/6491/6491pro_006.html|archive-date=2013-03-01|dead-url=yes}}</ref>

===硬性===
与软性页缺失相反，'''硬性页缺失'''是指相关的页在页缺失发生时未被加载进内存的情况。这时操作系统需要：<ref name="OSR">{{Cite web|url=http://www.osronline.com/article.cfm?article=222|title=So What Is A Page Fault?|accessdate=2013-02-11|publisher=OSR Online|date=2003-05-07|deadurl=yes|archiveurl=https://web.archive.org/web/20130116072455/http://osronline.com/article.cfm?article=222|archivedate=2013-01-16}}</ref>
#寻找到一个空闲的页。或者把另外一个使用中的页写到磁盘上（如果其在最后一次写入后发生了变化的话），并注销在MMU内的记录
#将数据读入被选定的页
#向MMU注册该页
硬性页缺失导致的性能损失是很大的。以一块7200[[每分鐘轉速|rpm]]的主流[[硬盘|机械硬盘]]为例，其平均寻道时间为8.5毫秒，读入内存需要0.05毫秒。相对的，[[DDR3_SDRAM|DDR3内存]]的访问延迟通常在数十到100纳秒之间，性能差距可能会达到8万到22万倍。

另外，有些操作系统会将程序的一部分延迟到需要使用的时候再加载入内存执行，以此来提升性能。这一特性也是通过捕获硬性页缺失达到的。<ref>Red Hat Enterprise Linux 3: Introduction to System Administration, {{Cite web|url=http://access.redhat.com/knowledge/docs/en-US/Red_Hat_Enterprise_Linux/3/html/Introduction_to_System_Administration/s1-memory-concepts-perf.html|title=4.5. Virtual Memory Performance Implications|accessdate=2013-02-11|publisher=RedHat}}{{Dead link|date=2018年6月 |bot=InternetArchiveBot |fix-attempted=no }} See note.</ref>

当硬性页缺失过于频繁的发生时，称发生[[分頁#系統顛簸|系統顛簸]]。

===无效===
当程序访问的虚拟地址是不存在于虚拟地址空间内的时候，则发生'''无效页缺失'''。一般来说这是个软件问题，但是也不排除硬件可能，比如因为内存故障而损坏了一个正确的[[指针_(信息学)|指针]]。

具体动作与所使用的操作系统有关，比如Windows会使用[[异常处理|异常]]机制向程序报告，而[[类Unix系统|类Unix系统]]则会使用[[信号_(计算机科学)|信号]]机制。如果程序未处理相关问题，那么操作系统会执行默认处理方式，通常是[[核心文件|转储内存]]、终止相关的程序，然后向用户报告。<ref name="OSR" /><ref name="UnhandledExceptionMSDN">{{Cite web|url=http://msdn.microsoft.com/en-us/library/ms681401.aspx|title=UnhandledExceptionFilter function|accessdate=2013-02-11|publisher=Microsoft MSDN}}</ref>

==参考与延伸阅读==
{{refbegin}}
{{reflist}}
*John L. Hennessy, David A. Patterson, ''Computer Architecture, A Quantitative Approach'' (ISBN 1-55860-724-2)
*Tanenbaum, Andrew S. ''Operating Systems: Design and Implementation (Second Edition)''. New Jersey: Prentice-Hall 1997.
*''Intel Architecture Software Developer's Manual''–Volume 3: System Programming
{{refend}}

[[Category:计算机错误|Category:计算机错误]]
[[Category:虚拟内存|Category:虚拟内存]]