{{Translating|||time=2021-01-15T14:14:58+00:00}}
[[计算机编程|计算机编程]]中的[[数据类型|数据类型]]可分为两族：'''值类型'''（value type）与'''引用类型'''（reference type）。值类型的值就是实际值。引用类型的值是到其他值的[[引用_(程序设计)|引用]]<ref>{{cite book |last=Brown |first=Erik E. |date=2006 |title=Windows Forms in Action |url=https://books.google.com/books?id=PrZQAAAAMAAJ&q=%22value+type%22+%22reference+type%22 |location=Shelter Island, New York |publisher=Manning |page=703 |isbn= 978-1-932-39465-8 }}</ref><ref>{{cite book |last=Stephens |first=Rod |date=2014 |title=C# 5.0 Programmer's Reference |url=https://books.google.com/books?id=DEM_AwAAQBAJ&q=%22value+type%22+%22reference+type%22&pg=PA57 |location=Indianapolis, Indiana |publisher=John Wiley & Sons |page=57 |isbn=978-1-118-84728-2 }}</ref>。

== 各种编程语言的分类 ==
{| class="wikitable"
|-
! 语言!! 值类型 !! 引用类型
|-
| [[C++|C++]]<ref>{{Cite web|url=https://en.cppreference.com/w/cpp/language/type|title=Type - cppreference.com|website=en.cppreference.com|access-date=2021-01-08|archive-date=2020-11-13|archive-url=https://web.archive.org/web/20201113195843/https://en.cppreference.com/w/cpp/language/type}}</ref> || booleans, characters, integer numbers, floating-point numbers, classes (including strings, lists, maps, sets, stacks, queues), enumerations || references, pointers
|-
| [[Java|Java]]<ref>{{Cite web|url=https://docs.oracle.com/javase/specs/jls/se14/html/jls-4.html|title=Chapter 4. Types, Values, and Variables|website=docs.oracle.com|access-date=2021-01-08|archive-date=2020-08-29|archive-url=https://web.archive.org/web/20200829073446/https://docs.oracle.com/javase/specs/jls/se14/html/jls-4.html}}</ref> || booleans, characters, integer numbers, floating-point numbers || arrays, classes (including immutable strings, lists, dictionaries, sets, stacks, queues, enumerations), interfaces, null pointer
|-
| [[C_Sharp_(programming_language)|C#]]<ref>{{Cite web|url=https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/|title=C# Keywords|website=docs.microsoft.com|access-date=2021-01-08|archive-date=2020-11-26|archive-url=https://web.archive.org/web/20201126154406/https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/}}</ref> || structures (including booleans, characters, integer numbers, floating-point numbers, fixed-point numbers, lists, dictionaries, sets, stacks, queues, optionals), enumerations || classes (including immutable strings, arrays, tuples, lists, dictionaries, sets, stacks, queues), interfaces, pointers
|-
| [[Swift|Swift]]<ref>{{Cite web|url=https://docs.swift.org/swift-book/LanguageGuide/ClassesAndStructures.html|title=Structures and Classes — The Swift Programming Language (Swift 5.2)|website=docs.swift.org|access-date=2021-01-08|archive-date=2020-12-11|archive-url=https://web.archive.org/web/20201211114527/https://docs.swift.org/swift-book/LanguageGuide/ClassesAndStructures.html}}</ref><ref>{{Cite web|url=https://docs.swift.org/swift-book/LanguageGuide/Closures.html|title=Closures — The Swift Programming Language (Swift 5.2)|website=docs.swift.org|access-date=2021-01-08|archive-date=2021-02-06|archive-url=https://web.archive.org/web/20210206235243/https://docs.swift.org/swift-book/LanguageGuide/Closures.html}}</ref> || structures (including booleans, characters, integer numbers, floating-point numbers, fixed-point numbers, mutable strings, tuples, mutable arrays, mutable dictionaries, mutable sets), enumerations (including optionals), and user-defined structures and enumerations composing other value types. || functions, closures, classes
|-
| [[Python|Python]]<ref>{{Cite web|url=https://docs.python.org/3/library/stdtypes.html|title=Built-in Types — Python 3.8.2rc1 documentation|website=docs.python.org|access-date=2021-01-08|archive-date=2020-06-14|archive-url=https://web.archive.org/web/20200614194325/https://docs.python.org/3/library/stdtypes.html}}</ref> ||  || classes (including immutable booleans, immutable integer numbers, immutable floating-point numbers, immutable complex numbers, immutable strings, byte strings, immutable byte strings, immutable tuples, immutable ranges, immutable memory views, lists, dictionaries, sets, immutable sets, null pointer)
|-
| [[JavaScript|JavaScript]]<ref>{{Cite web|url=https://www.ecma-international.org/ecma-262/#sec-ecmascript-language-types|title=ECMAScript® 2019 Language Specification|website=www.ecma-international.org|access-date=2021-01-08|archive-date=2021-01-13|archive-url=https://web.archive.org/web/20210113052831/http://www.ecma-international.org/ecma-262/#sec-ecmascript-language-types}}</ref> ||  || immutable booleans, immutable floating-point numbers, immutable symbols, immutable strings, undefined, prototypes (including lists, null pointer)
|-
| [[OCaml|OCaml]]<ref>{{Cite web|url=https://caml.inria.fr/pub/docs/manual-ocaml/core.html|title=Chapter 24 The core library|website=caml.inria.fr|access-date=2021-01-08|archive-date=2020-07-02|archive-url=https://web.archive.org/web/20200702110053/http://caml.inria.fr/pub/docs/manual-ocaml/core.html}}</ref><ref>{{Cite web|url=https://caml.inria.fr/pub/docs/oreilly-book/html/book-ora026.html|title=Modifiable Data Structures|website=caml.inria.fr|access-date=2021-01-08|archive-date=2020-07-22|archive-url=https://web.archive.org/web/20200722114143/http://caml.inria.fr/pub/docs/oreilly-book/html/book-ora026.html}}</ref> || immutable characters, immutable integer numbers, immutable floating-point numbers, immutable tuples, immutable enumerations (including immutable units, immutable booleans, immutable lists, immutable optionals), immutable exceptions, immutable formatting strings || arrays, immutable strings, byte strings, dictionaries (including pointers)
|}

== 装箱和拆箱(boxing and unboxing) ==
区分值类型与引用类型的语言，典型包括了装箱机制。即把一些甚至全部值类型包为引用类型。这使得值类型可用在需要引用类型的场合。逆过程称为拆箱。
== 参见 ==
* [[基本类型|基本类型]]
* [[複合型別|複合型別]]

== 参考文献==
{{Reflist}}

[[Category:数据类型|Category:数据类型]]