<noinclude>{{template doc page viewed directly}}</noinclude>
{{High-use|8700}}
插入一个visibility:hidden和color:transparent（即不可见）的零（0）字符。它用于填充表格列中的统计数据及其他数字，以便它们整齐地排成一列。

此不可见的零事实上可以被其他任何字符串取代（不管如何，它会被设为不可见），即通过指定该字符串作为第一个可选的参数达成。当用于在那样表格的数值列中，“''在视觉上填满''”等值长度行，这一点是很有用的。这可以通过插入额外的不可见零、千位分隔符，或者数值字段前缀与后缀的小数点，（被调整以填充到最大数字值的长度）如例一所示。
<!-- 
The invisible zero may in fact be replaced by any other string (which regardless, is made invisible), by specifying the string as the first optional parameter. This is useful to ''"visually pad out"'' equivalent length rows in numeric columns in such tables. This is accomplished by  inserting extra invisible zeroes, thousands separators, or decimal points prefixing and suffixing the numeric field, (adjusted to pad to the length of the largest numeric value) like in example one.
-->
<div style="background:#b7f7d7;">
'''例一：'''展示了对于不同长度的数据，用'''{&#123;[[Template:0]]&#125;}'''填充字段使小数点排成一线（在编辑模式下的效果，以及页面上的显示效果）。
<!-- 
'''Example-1:''' Shows '''{&#123;[[Template:0]]&#125;}''' padding fields align decimal points in edit mode as well as what will be displayed) of varying length column row data...
-->
<pre>
{{0|0,000,0}}12{{0|.00}} km<br />
{{0|0,000,0}}24.{{0|00}} km<br />
{{0|0,000,}}212.5{{0|0}} km<br />
{{0|0,00}}3,212.51 km<br />
以及……
{{0|00,0}}12{{0|.00}} km<br />
{{0|00,0}}24.{{0|00}} km<br />
{{0|00,}}212.5{{0|0}} km<br />
{{0|0}}3,212.51 km<br />
{{0|}}6,789.01 km<br />
</pre>
它会给出：

{{0|0,000,0}}12{{0|.00}} km<br />
{{0|0,000,0}}24.{{0|00}} km<br />
{{0|0,000,}}212.5{{0|0}} km<br />
{{0|0,00}}3,212.51 km<br />
;以及……
{{0|00,0}}12{{0|.00}} km<br />
{{0|00,0}}24.{{0|00}} km<br />
{{0|00,}}212.5{{0|0}} km<br />
{{0|0}}3,212.51 km<br />
{{0|}}6,789.01''' km ↔ 注意它的效果'''，在填充前缀中的零长度或空字符串的效果。（比较并对照下面示例二中“3,212.51 mi”所用方法。）<!-- ''' km ↔ note the effect'''... of 'zero length' or [[null]] string in padding prefix. (Compare and contrast with way "3,212.51 mi" is commanded and then expressed below in example-two.) --><br />

</div>

<div style="background:#d7e7f7;">
'''例二：'''左边用零填充以使数值排列整齐
;注意：
:从在前缀调用中的不同之处（比较上面与下面的示例调用）可以看出，仅有消耗空间的数量对结果的分隔有影响。（From the difference in the prefix calls (compare above and below example calls)... only the number of places consumed matters in the spacing that results.）
:简而言之，该模板不在乎你是否指定逗号、小数点或者零。
<!-- 
''' example-2; Numbers columnized with Zero left padding of largest:'''
;note:From the difference in the prefix calls (compare above and below example calls)... only the number of places consumed matters in the spacing that results. {{I}}In short, the template cares not whether you specify '''comma, decimal points, or zero's''':
-->
<pre>
{{0|0,0}}12{{0|.00}} mi<br />
{{0|0,0}}24.{{0|00}} mi<br />
{{0|0,}}212.5{{0|0}} mi<br />
3,212.51 mi<br />
{{0|}}6,789.01 mi<br/>
</pre>
<!-- which shows the usefulness of the null argument for aligning the column in edit mode -->
上面代码也展示了编辑模式下对于使数值列对齐，空参数的有用之处。

它会给出：

{{0|0,0}}12{{0|.00}} mi<br />
{{0|0,0}}24.{{0|00}} mi<br />
{{0|0,}}212.5{{0|0}} mi<br />
3,212.51 mi<br />
{{0|}}6,789.01 mi<br/>
</div>
<!-- 
These hidden characters are part of the string used for collation when sorting tables, even though they are not visible (but they still take space and numeric columns are correctly aligned as if they were present.
-->
当对表格排序时，这些隐藏的字符是用来作为排序规则的字符串的一部分，即便它们不是可见的（但是它们仍然占用空间，并且数字列被正确地对齐，好像它们出现了一样）。拷贝页面文字时它们同样会被包括进去。
<includeonly>
<!-- 本行下加入模板的分類 -->
[[Category:格式模板]]
</includeonly>