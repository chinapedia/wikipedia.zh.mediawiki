'''載入-儲存架構'''（load–store architecture）是[[計算機工程|計算機工程]]中一種[[指令集架構|指令集架構]]，將指令分為二類：一類是[[電腦記憶體|電腦記憶體]]存取（在記憶體及[[寄存器|寄存器]]中讀取或寫入資料），另一類是[[算術邏輯單元|算術邏輯單元]]處理，只處理寄存器中的資料，結果也存入寄存器<ref name=Flynn>
{{cite book
 | title=Computer architecture: pipelined and parallel processor design
 | url=https://archive.org/details/computerarchitec0000flyn
 | author=Michael J. Flynn
 | year=1995
 | isbn=0867202041
}}</ref>{{rp|9-12}}。

[[精简指令集计算机|精简指令集计算机]]（RISC）指令架構（例如[[PowerPC|PowerPC]]、[[SPARC|SPARC]]、[[RISC-V|RISC-V]]、[[ARM架構|ARM架構]]和[[MIPS架構|MIPS架構]]）都是載入-儲存架構<ref name=Flynn/>{{rp|9–12}}。

以加法指令（Add）為例，載入-儲存架構中的加法資料來源及目標都一定是寄存器，這和{{le|暫存器記憶體架構|Register memory architecture}}不同。例如[[X86|X86]]用的[[复杂指令集|复杂指令集]]，加法指令的二個來源中，有一個可以是記憶體，只有一個一定要是寄存器<ref name=Flynn/>{{rp|9–12}}。

最早期使用載入-儲存架構的處理器是[[CDC_6600|CDC 6600]]<ref name=Flynn/>{{rp|54–56}}。幾乎所有[[向量处理器|向量处理器]]（包括許多[[圖形處理器|圖形處理器]]<ref>{{cite web
 | title=AMD GCN reference
 | url=http://developer.amd.com/wordpress/media/2012/12/AMD_Southern_Islands_Instruction_Set_Architecture.pdf
 | access-date=2020-11-03
 | archive-date=2021-04-27
 | archive-url=https://web.archive.org/web/20210427040613/https://developer.amd.com/wordpress/media/2012/12/AMD_Southern_Islands_Instruction_Set_Architecture.pdf
 | dead-url=no
 }}</ref>{{Better source|reason=需要其他來源說明有多少GPU使用載入-儲存架構，只用特定架構資料的一份datasheet還不太足夠|date=2020-11-03}}）也是使用載入-儲存架構<ref>
{{cite book
 | title=Memory systems and pipelined processors
 | author=Harvey G. Cragon
 | year=1996
 | isbn=0867204745
 | pages=512–513
}}</ref>。

==相關條目==
* {{le|載入-儲存單元|Load–store unit}}
* {{le|暫存器記憶體架構|Register memory architecture}}

==參考資料==
{{Reflist}}

[[Category:電腦架構|Category:電腦架構]]