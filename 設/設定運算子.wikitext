{{NoteTA
|T = zh-cn:赋值运算符; zh-tw:指定運算子 (C++); zh-hk:設定運算子;
|G1 = IT
|1 = zh-cn:赋值运算符; zh-tw:指定運算子; zh-hk:設定運算子;
}}

在[[C++|C++]][[程式語言|程式語言]]裡，'''設定運算子'''（[[英文|英文]]：'''assignment operator'''）是用等號<code>''' = '''</code>符號。就像其他的C++運算子一樣，它可以作為[[運算子多載|多載]]。

'''複製設定運算子'''是一個特別的設定運算子，通常是用來把已存在的物件指定給其他相同類別的物件。它是一個特別的成員函式，如果程式設計師沒有定義這個成員函式，那麼[[編譯器|編譯器]]會自動地產生這個成員函式。編譯器產生的程式碼是以單一成員進行物件複製的動作。

複製設定運算子，這個成員函式與[[複製建構子|複製建構子]]的相異點在於，它一定會清除目標物件的資料成員（以及確實掌控自我設值的動作），而複製建構子不會初始化類別的資料成員。<ref>{{cite book
| last = 比雅尼
| first = 史特勞斯特魯普
| authorlink = 比雅尼·史特勞斯特魯普
| title = The C++ Programming Language
| edition = 3rd Edition
| publisher = Addison-Wesley
| date = 2000
| isbn = 978-0201700732
| ref = stroustrup
| page = 244 }}</ref>

以下是原始碼的範例：

{| border="0"
|-
|
<syntaxhighlight lang="cpp">
My_Array first;
</syntaxhighlight>
|// 由預設建構子做初始化動作
|-
|
<syntaxhighlight lang="cpp">
My_Array second(first);
</syntaxhighlight>
|// 由複製建構子做初始化動作
|-
|
<syntaxhighlight lang="cpp">
My_Array third = first;
</syntaxhighlight>
|// 這個也是由複製建構子做初始化動作
|-
|
<syntaxhighlight lang="cpp">
second = third;
</syntaxhighlight>
|// 由複製設定運算子做設定的動作
|}

==相關條目==

*[[運算子多載|運算子多載]]
*[[C和C++運算子|C和C++運算子]]
*[[三法則|三法則]]

==參考資料==
<div class="references-small">
<references />
</div>

[[Category:C++|Category:C++]]
[[Category:程序架構|Category:程序架構]]
[[Category:运算符_(编程)|Category:运算符_(编程)]]