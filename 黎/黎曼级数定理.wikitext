'''黎曼级数定理'''（亦称'''黎曼重排定理'''），是一个有关於[[级数|无穷级数]]性质的[[数学|数学]][[定理|定理]]，得名于19世纪[[德国|德国]]著名[[数学家|数学家]][[波恩哈德·黎曼|波恩哈德·黎曼]]。黎曼级数定理说明，如果一个[[实数|实数]]项[[无穷级数|无穷级数]]若是[[条件收敛|条件收敛]]的，它的项在重新排列後，重新排列後的级数[[极限_(数列)|收敛]]的值可以收斂到任何一个给定的值，甚至[[发散|发散]]。

许多有限项级数具有的性質，在一般的无穷级数不一定滿足，例如一般的有限项级数可以重新排列各項，其級數和不會改變，但在无穷级数中，只有[[绝对收敛|绝对收敛]]的无穷级数才可以重新排列各項而不改變收斂值。

==相关定义==
给定[[无穷级数|无穷级数]]<math>\sum_{n=1}^\infty a_n</math>，其部分和为：<math>S_n =\sum_{k=1}^n a_k</math>。如果部分和的[[数列|数列]] 

:<math>\left \{ S_1, \ S_2, \ S_3, \dots \right \}</math> 

收敛于某个数值：<math>\ell</math>，则级数[[收敛级数|收敛]]。也就是说，如果对于任何的<math>\epsilon > 0</math>，总存在一个整数''N''，使得如果<math>n \ge N</math>，则
:<math>\left | S_n - \ell \right \vert \le \ \epsilon</math>.

那么级数<math>\sum_{n=1}^\infty a_n</math>收敛。如果级数<math>\sum_{n=1}^\infty a_n</math>收敛，但级数<math>\sum_{n=1}^\infty \left | a_n \right \vert</math>发散，则称此级数是[[条件收敛|条件收敛]]的。{{r|jaf|page1=149}}

==定理的陈述==
假设<math>\sum_{n=1}^\infty a_n</math>是一个条件收敛的无穷级数。对任意的一个实数<math>C</math>，都存在一种从[[自然数|自然数]][[集合|集合]]到自然数集合的[[排列|排列]]<math>\sigma : \, \, n \mapsto \sigma (n)</math>，使得
:<math>\sum_{n=1}^\infty a_{\sigma (n)} = C.</math>
此外，也存在另一种排列<math>\sigma' : \, \, n \mapsto \sigma' (n)</math>，使得
:<math>\sum_{n=1}^\infty a_{\sigma' (n)} = \infty.</math>
类似地，也可以有办法使它的部分和趋于<math>-\infty</math>，或没有任何极限。{{r|spn|page1=192}}

反之，如果级数是[[绝对收敛|绝对收敛]]的，那么无论怎样重排，它仍然会收敛到同一个值，也就是级数的和。{{r|spn|page1=193}}

==例子==
[[交错调和级数|交错调和级数]]是条件收敛级数的一个经典的例子：
:<math>A_{h} = \sum_n \frac{(-1)^{n+1}}{n}</math>

收敛，而

:<math>S_h = \sum_n \bigg| \frac{(-1)^{n+1}}{n} \bigg| = \sum_n \frac{1}{n}</math>

是[[调和级数|调和级数]]，它是发散的。虽然在标准的表示法中，交错调和级数收敛于ln(2)，我们可以把它的项重新排列，使它收敛于任何一个数，甚至发散。例如，如果排列为以下的形式，

:<math>\left(1 - \frac{1}{2} \right) - \frac{1}{4} + \left(\frac{1}{3} - \frac{1}{6} \right)- \frac{1}{8} + \left(\frac{1}{5} - \frac{1}{10} \right) - \frac{1}{12} + \cdots </math>
:那么这时的和等于<math>\sum_{n=0}^\infty \left(\frac{1}{2n+1} - \frac{1}{4n+2} -\frac{1}{4n+4} \right) = \sum_{n=0}^\infty \left( \frac{1}{4n+2} -\frac{1}{4n+4} \right) = \frac{1}{2} \sum_{n=1}^\infty \frac{(-1)^{n+1}}{n}</math>

可以看出，它的和是原来的和的一半。{{r|jaf|dab|page1=153-154|page2=108-111}}

===趋近任一个实数===
[[File:Riemann_rearragement_theorem.png|thumb]]
用不同的排列方法，可以让交错调和级数趋向任意一个给定的实数。事实上，由于调和级数<math> \sum_n \frac{1}{n}</math>是发散的，它的部分和可以近似估计为：
:<math>S_N = 1 + \frac12 + \frac13 +\frac14 + \cdots = \sum_{n=1}^N \frac{1}{n} = \gamma + \ln N + o(1) ,</math>
其中<math>o(1)</math>表示一个当N趋于无穷大时的[[无穷小|无穷小]]，<math>\gamma</math>指[[欧拉常数|欧拉常数]]。如果将调和级数<math>A_{h}</math>中所有负项（也就是所有偶数项）相加，得到的级数会是：
:<math>A^{-}_h = - \frac12 - \frac14 -\frac16 - \frac18\cdots =-\frac12 \left( 1 + \frac12 + \frac13 +\frac14 + \cdots \right)</math>
它的部分和是：
:<math>A^{-}_N = - \sum_{n=1}^N \frac{1}{2n} = - \frac12 \gamma - \frac12 \ln N  + o(1) ,</math>
因此所有正项相加的级数<math>A^{+}_h = 1 + \frac13 + \frac15 +\frac17 + \cdots </math>的部分和是：
:<math>A^{+}_N = A_N - A^{-}_N =  \ln2 + \frac12 \left(\gamma + \ln N \right) + o(1) ,</math>
这也是一个发散级数，趋向正无穷。因此，对任意给定的正实数<math>C</math>，可以使用以下的[[算法|算法]]来构造出趋向<math>C</math>的重排级数<math>A^{\sigma}</math>的每一项：
#从第一项起，将<math>A_h</math>中的正项（奇数项）从前往后放入，一直放到超过<math>C</math>为止：必定存在一个自然数<math>N_1</math>，使得<math> A^{+}_{N_1-1} \leqslant C+ <A^{+}_{N_1}</math>（假设<math>A_0 = 0</math>）。将第1至第<math>N_1</math>项定义为：
#:<math>\forall k = 1, 2, \cdots , N_1, \, \, \sigma(k) =2k-1</math>
#从第<math>N_1+1</math>项开始，将<math>A_h</math>中的负项（偶数项）从前往后放入，一直放到小于<math>C</math>为止：必定存在一个自然数<math>N_2 >N_1</math>，使得<math>A^{+}_{N_1} + A^{-}_{N_2-N_1 - 1} \leqslant C+ < A^{+}_{N_1} + A^{-}_{N_2 - N_1}</math>。将第<math>N_1+1</math>至第<math>N_2</math>项定义为：
#:<math>\forall k = N_1 + 1, N_1 + 2, \cdots , N_2, \, \, \sigma(k) = 2k-2N_1</math>
交替重复这两步来重排级数，可以将重排级数的部分和<math>A_{N_k}^{\sigma}</math>保持在<math>C</math>上下，而因为<math>A_{N_k}^{\sigma}</math>是重复第k步时首次“跨过”<math>C</math>时候的值，因而它与<math>C</math>的差距必定不超过“跨越”时的“步长”，也就是<math>\frac{1}{N_k}</math>。随着<math>N_k</math>越来越大，<math>A_{N_k}^{\sigma}</math>与<math>C</math>的差距也会越来越趋近于0. 因此使用这个算法构造出来的重排级数<math>A^{\sigma}</math>最终会收敛于<math>C</math>。{{r|dab|page1=111-113}}

==证明==
对一般的条件收敛级数，也可以用以上的算法来证明黎曼级数定理。上文中有关交错调和级数的算法之所以成立，原因有二：首先，所有正项构成的级数发散到正无穷大，所有负项构成的级数发散到负无穷大，所以每次超出（低于）目标值<math>C</math>以后，只要不停地累加，必然能够再次低于（超出）目标值<math>C</math>；其次，调和级数是由<math>\frac{1}{n}</math>相加而成，而随着<math>n</math>趋向无穷，<math>\frac{1}{n}</math>趋向于0，也就是说“步长”趋向0，所以最终能够收敛。所以只需要证明，任何条件收敛级数都满足这两个性质：
#所有正项构成的级数和所有负项构成的级数都是发散的；
#级数的项随着项数趋于无穷而趋于0.
就能证明黎曼级数定理成立了。

<div style="margin-left:20px; margin-top:10px;padding-left:16px;padding-bottom:10px;padding-right:16px;padding-top:10px;background-color:#E8FFC4;width:90%;">
<div style="font-size:108%;">'''性质一'''：
</div>
<div style="margin-left:6px;margin-top:6px;font-size:90%;">
设有给定的条件收敛级数<math>A = \sum_n a_n</math>，级数和为<math>S</math>。为了简便起见，假设<math>A</math>中每一项都不等于0（否则可以随意将它们重排在任何地方）。<math>A</math>中的正项和负项必定都有无穷多个。将<math>A</math>中所有大于0的项按照它们原来在<math>A</math>中的顺序重新标号排列，可以得到由所有正项排列而成的级数<math>A^+ = \sum_n a^+_n</math>。同样可以建立由所有负项排列而成的级数<math>A^- = \sum_n a^-_n</math>。

<math>A^+</math>是一个正项级数，所以它要么收敛到某个定值，要么发散到正无穷大。假设<math>A^+</math>收敛到某个定值<math>S^+</math>，那么可以证明<math>A^-</math>也是收敛级数，级数和为<math>S - S^+</math>。因而可以证明，级数<math> \sum_{n=1}^\infty |a_n| = A^+ - A^-</math>也是收敛级数，这与<math>A</math>是条件收敛级数的设定矛盾。所以，<math>A^+</math>发散到正无穷大。同理可证，<math>A^-</math>发散到负无穷大。{{r|jaf|page1=154-155}}
</div>
</div>

<div style="margin-left:20px; margin-top:10px;padding-left:16px;padding-bottom:10px;padding-right:16px;padding-top:10px;background-color:#E8FFC4;width:90%;">
<div style="font-size:108%;">'''性质二'''：
</div>
<div style="margin-left:6px;margin-top:6px;font-size:90%;">
设<math>A = \sum_n a_n</math>是一个条件收敛的级数，级数和为<math>S</math>。这说明，级数<math>A</math>的部分和<math>S_N = \sum_{n=1}^N a_n</math>趋向极限<math>S</math>。所以对任意<math>\epsilon > 0</math>，存在自然数<math>M > 0</math>使得对任意<math>N > M</math>，都有：
:<math>| S_N - S | < \epsilon.</math>
所以对任意<math>N > M+1</math>，
:<math>|a_{N}| = | S_{N} - S_{N-1} | \leqslant | S_N - S | + | S_{N-1} - S |< 2\epsilon.</math>
这说明当<math>N</math>趋于无穷大时，<math>a_N</math>趋于0.
</div>
</div>

证明了性质一与性质二後，就可以用上文提到的算法构造趋向任何实数甚至发散的重排方式。对于任意实数<math>C</math>，不妨假设<math>C \geqslant 0</math>. 首先将<math>A^+</math>的项按顺序累加，直到部分和超过<math>C</math>为止，然后再将<math>A^-</math>的项按顺序累加在其後，直到部分和小于<math>C</math>为止，接着再将<math>A^+</math>剩余的项按顺序累加在其後，直到部分和超过<math>C</math>为止……这个算法可以一直进行下去，因为根据性质一，<math>A^+</math>和<math>A^-</math>都是发散的。而在执行算法的过程中，部分和与<math>C</math>会越来越接近。因为无论是在部分和低于<math>C</math>，逐项增加到超过<math>C</math>的过程中，还是在部分和超过了<math>C</math>，逐项减少到低于<math>C</math>的过程中，部分和与<math>C</math>的差距（绝对值）都不超过前一次“跨越”<math>C</math>值的那一刻，部分和与<math>C</math>的差距。而这个差距又小于等于部分和“跨越”<math>C</math>值时的“步长”。假设第<math>k</math>次“跨越”的是在累加第<math>N_k</math>项的时候发生的，那么直到第<math>k+1</math>次“跨越”时，部分和与<math>C</math>的差距都小于等于<math>a_{N_k}</math>。随着<math>k</math>趋于无穷大，<math>N_k</math>也趋于无穷大，因而根据性质二，<math>a_{N_k}</math>趋于0，也就是说部分和与<math>C</math>的差距趋于0。这等价于说重排後的级数<math>A^\sigma</math>收敛于<math>C</math>。

如果<math>C< 0</math>，只需要将算法中的正负项颠倒即可。如果将算法中第<math>k</math>次累加正项要超越的值从<math>C</math>改为<math>C+k</math>，然后累加负项直到低于<math>C+k</math>，再开始第<math>k+1</math>次累加正项直到超越<math>C+k+1</math>，如此以往，就能得到发散到正无穷大的重排级数。反之也能得到发散到负无穷大的重排级数。而如果将算法中每次累加正项要超过的值设为1，将每次累加负项要低于的值设为0，那么重排级数的值将在0和1左右上下反复摆动，从而不收敛于任何定值。这就是黎曼级数定理。{{r|spn|jaf|page1=193-197|page2=154-156}}

==推廣==
此定理可推廣至{{link-en|斯坦尼兹定理|Lévy–Steinitz theorem|斯坦尼兹定理}}。給定一個複數收斂級數{{nowrap|∑ ''a''<sub>''n''</sub>}}，則重排後的級數{{nowrap|∑ ''a''<sub>''σ'' (''n'')</sub>}}之和有以下幾種可能：

* 級數{{nowrap|∑ ''a''<sub>''n''</sub>}}為絕對收斂，所以任何重排後的級數和都收斂到同一個值。
* 級數{{nowrap|∑ ''a''<sub>''n''</sub>}}為條件收斂。令''S''為所有重排級數之和的集合，則''S''要不為整個複數平面'''C'''，要不為複數平面上'''C'''上的一條線''L''
::<math>L = \{a + t b : t \in \mathbf{R} \}, \quad a, b \in \mathbf{C}, \ b \ne 0</math>

更一般的說，給定一個有限維度實向量空間''E''，考慮其向量組成的收斂級數，則重排級數之和的集合為''E''的[[仿射空间|仿射子空間]]。

==参考来源==
{{reflist|
refs=
<ref name="spn">{{cite book|author=S. Ponnusamy|title=''Foundations of mathematical analysis''|year=2012|publisher=Springer|isbn=9780817682927}}</ref>
<ref name="jaf">{{cite book|author=J. A. Fridy|title=''Introductory analysis: the theory of calculus''|year=2000 |publisher= Gulf Professional Publishing|isbn=9780122676550}}</ref>
<ref name="dab">{{cite book|author=D. A. Brannan|title=''A First Course in Mathematical Analysis''|year=2006|publisher=Cambridge University Press|isbn=9781139458955}}</ref> 
}}
*Weisstein, Eric (2005). [http://mathworld.wolfram.com/RiemannSeriesTheorem.html Riemann Series Theorem]{{Wayback|url=http://mathworld.wolfram.com/RiemannSeriesTheorem.html |date=20120224213652 }}. 于2005年5月16日访问。

[[Category:级数|Category:级数]]
[[Category:数学定理|L]]
[[Category:置换|Category:置换]]