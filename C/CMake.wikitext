{{noteta
|G1=IT
|G2=FL
}}
{{Infobox_Software
| logo = Cmake.svg
| logo_size = 75px
| name = CMake
| developer = [[Andy_Cedilnik|Andy Cedilnik]], Bill Hoffman, Brad King, [[Ken_Martin|Ken Martin]], Alexander Neundorf
| latest_release_version = 3.23.2
| latest_release_date = {{Release date and age|2022|05|25}}
| latest_preview_version = 3.23.0-rc5
| latest_preview_date = {{Release date and age|2022|03|23}}
| operating_system = [[跨平台|跨平台]]
| genre = [[軟體開發工具|軟體開發工具]]
| license = 3句版[[BSD許可證|BSD許可證]]
| website = {{URL|https://cmake.org/}}
}}
'''CMake'''是個一個[[开源|开源]]的[[跨平台|跨平台]][[Build_automation|自動化建構]]系統，用來管理軟體建置的程序，並不依賴於某特定編譯器，並可支援多層目錄、多個應用程式與多個函式庫。
它用組態檔控制建構過程（build process）的方式和[[Unix|Unix]]的[[make|make]]相似，只是CMake的組態檔取名為CMakeLists.txt。CMake並不直接建構出最終的軟體，而是產生標準的建構檔（如Unix的Makefile或Windows [[Visual_C++|Visual C++]]的projects/workspaces），然後再依一般的建構方式使用。這使得熟悉某個[[整合開發環境|整合開發環境]]（IDE）的開發者可以用標準的方式建構他的軟體，這種可以使用各平台的原生建構系統的能力是CMake和[[SCons|SCons]]等其他類似系統的區別之處。
CMake設定檔（CMakeLists.txt）可設定原始碼或目標程式庫的路徑、產生[[適配器|適配器]]（wrapper）、還可以用任意的順序建構執行檔。CMake支援in-place建構（二進檔和原始碼在同一個目錄樹中）和out-of-place建構（二進檔在別的目錄裡），因此可以很容易從同一個原始碼目錄樹中建構出多個二進檔。CMake也支援靜態與動態程式庫的建構。

「CMake」這個名字是"Cross platform Make"的縮寫。雖然名字中含有"make"，但是CMake和Unix上常見的「make」系統是分開的，而且更為高階。
它可與原生建置環境結合使用，例如：make、ninja、[[蘋果公司|蘋果]]的Xcode與[[微软|微軟]]的Visual Studio。

== 歷史 ==
CMake是為了解決[[美國國家醫學圖書館|美國國家醫學圖書館]]出資的[[Visible_Human_Project|Visible Human Project]]專案下的[[Insight_Segmentation_and_Registration_Toolkit|Insight Segmentation and Registration Toolkit]]（ITK）軟體的跨平台建構的需求而創造出來的，其設計受到了Ken Martin開發的[[pcmaker|pcmaker]]所影響。pcmaker當初則是為了支援[[VTK|Visualization Toolkit]]（VTK）這個開放原始碼的三維圖形和視覺系統才出現的，今日VTK也採用了CMake。在設計CMake之時，Kitware公司的Bill Hoffman採用了pcmaker的一些重要想法，加上更多他自己的點子，想把[[GNU_build_system|GNU建構系統]]的一些功能整合進來。CMake最初的實作是在2000年中作的，在2001年初有了急速的進展，許多改良是來自其他把CMake整合到自己的系統中的開發者，比方說，採用CMake作為建構環境的[[VXL|VXL]]社群就貢獻了很多重要的功能，Brad King為了支援CABLE和GCC-XML這套自動包裝工具也加了幾項功能，通用電氣公司的研發部門則用在內部的測試系統DART，還有一些功能是為了讓VTK可以過渡到CMake和支援[[美國Los_Alamos國家實驗室|洛斯阿拉莫斯國家實驗室]]的Advanced Computing Lab的平行視覺系統ParaView而加的。

== 更多功能介紹 ==
* 組態檔是用一種建構軟體專用的特殊程式語言寫的CMake腳本。
* 內建[[C語言|C語言]]、[[C++|C++]]、[[Fortran|Fortran]]、[[Java|Java]]的自動相依性分析功能。
* 經由CMake腳本語言支援[[SWIG|SWIG]]、[[Qt|Qt]]、[[FLTK|FLTK]]。
* 內建對[[Microsoft_Visual_Studio|微軟Visual Studio .NET]]和過去的Visual Studio版本的支援，可以產生.dsp、.sln和.vcproj檔。
* 用傳統的時間標籤偵測檔案內容的改變。
* 支援分布式建構（在多台電腦上同時建構）
* 在許多作業系統上進行[[交叉編譯器|跨平台編譯]]，包括  [[Linux|Linux]]、與[[POSIX|POSIX]]相容的系統（[[AIX|AIX]]、[[BSD/OS|*BSD系統]]、[[HP-UX|HP-UX]]、[[IRIX|IRIX]]、[[MinGW|MinGW/MSYS]]、[[Solaris|Solaris]]）、[[Mac_OS_X|Mac OS X]]和微軟Windows 95/98/NT/2000/XP等。
* 產生可以給[[Graphviz|Graphviz]]用的全局相依圖。
* 已經和[[Dart|Dart]]、[[CTest|CTest]]和[[CPack|CPack]]等軟體測試和釋出的工具整合。

== 使用CMake的應用軟體 ==
{{div col|colwidth=22em}}
* [[Allegro_library|Allegro library]]
* [[Armadillo_(C++_library)|Armadillo]] - linear algebra library
* [[Avidemux|Avidemux]]
* [[Awesome_(window_manager)|Awesome]]
* [[Blender_(software)|Blender 3D]]
* [[Boost_C++_Libraries|Boost C++ Libraries]]
* [[Bullet|Bullet物理引擎]]
* [[Chicken_Scheme|Chicken]]
* [[Chipmunk_physics_engine|Chipmunk physics engine]]
* [[clang|clang]]
* [[Conky_(software)|Conky]]
* [[Doomsday_Engine|Doomsday Engine]]
* [[Drishti|Drishti]]
* [http://fennel.sourceforge.net/ Fennel]{{Wayback|url=http://fennel.sourceforge.net/ |date=20091005081548 }}
* [[Gammu_(software)|Gammu]]
* [[GDCM|GDCM]]
* [[Gmsh|Gmsh]]
* [[Hedgewars|Hedgewars]]
* [[Hypertable|Hypertable]]
* [[hugin_(software)|hugin]]
* [[IGSTK|IGSTK]]
* [[Insight_Segmentation_and_Registration_Toolkit|Insight Segmentation and Registration Toolkit]]
* [[KDE_Software_Compilation_4|KDE Software Compilation 4]]
* [[Kicad|Kicad]]
* [[LMMS|LMMS]]
* [[LLVM|LLVM]]
* [[MiKTeX|MiKTeX]]
* [[MuseScore|MuseScore]]
* [[MySQL|MySQL]]（on Windows only）
* [[OGRE|OGRE]]
* [[OpenSceneGraph|OpenSceneGraph]]
* [[OpenCV|OpenCV]]
* [https://web.archive.org/web/20100528184253/http://www.umr-lisah.fr/openfluid/ OpenFLUID]
* [[ParaView|ParaView]]
* [[Poppler_(software)|Poppler]]
* [[PvPGN|PvPGN]]
* [[Quantum_GIS|Quantum GIS]]
* [[Raw_Therapee|Raw Therapee]]
* [https://web.archive.org/web/20091108155601/http://remproject.org/ Rem]
* [[Scribus|Scribus]]
* [[SuperTux|SuperTux]]
* [[3DSlicer|Slicer]]
* [[Stellarium|Stellarium]]
* [[VTK|The Visualization Toolkit]]
* [[VXL|VXL]]
* [[UFFS|UFFS]]
{{div col end}}

== 參見 ==
{{Portal|自由軟體}}
* [[Automake|Automake]]
* [[qmake|qmake]]
* [[xmake|xmake]]
* [[SCons|SCons]]

== 外部連結 ==
* [http://www.cmake.org/ CMake home page]{{Wayback|url=http://www.cmake.org/ |date=20080509074616 }}
* [http://lwn.net/Articles/188693/ Why the KDE project switched to CMake—and how]{{Wayback|url=http://lwn.net/Articles/188693/ |date=20110507043418 }}
* [https://gavinliu6.github.io/CMake-Practice-zh-CN/#/foreword CMake实践——  一个快捷入门在线教程]
{{wikibooks|CMake入門}}
{{DEFAULTSORT:CMake}}
[[Category:自由软件|Category:自由软件]]
[[Category:編譯器軟件|Category:編譯器軟件]]
[[Category:程序設計工具|Category:程序設計工具]]
[[Category:自动化构建|Category:自动化构建]]