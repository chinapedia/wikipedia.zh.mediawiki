{{noteTA
|T=zh-hans:C标准函数库; zh-hant:C標準函式庫;
|G1=IT
|1=zh-hans:函数库; zh-hant:函式庫;
}}
{{C_Standard_library|nocat}} <!-- to edit this template go to [[template:C_Standard_library|template:C_Standard_library]] -->
'''C 標準函式庫'''（{{lang|en|C standard library}}，缩写：{{lang|en|libc}}）是在[[C語言|C語言]]程式設計中，所有符合標準的[[头文件|头文件]]（{{lang|en|head file}}）的集合，以及常用的[[函式庫|函式庫]]實作程序（如 [[I/O|I/O 輸入輸出]]和[[字串|字串]]控制）。不像 [[COBOL|COBOL]]、[[Fortran|Fortran]] 和 [[PL/I|PL/I]]等[[程式語言|程式語言]]，在 C 語言的工作任務裡不會包含嵌入的[[關鍵字|關鍵字]]，所以幾乎所有的 C 語言程式都是由標準函式庫的函式來建立的。

== 設計 ==
每一個函式的名稱與特性會被寫成一個電腦檔案，這個檔案就稱為[[头文件|標頭檔案]]，但是實際的函式實作是被分存到[[函式庫|函式庫檔案]]裡。標頭檔的命名和領域是很常見的，但是函式庫的組織架構也會因為不同的編譯器而有所不同。標準函式庫通常會隨附在[[編譯器|編譯器]]上。因為 C 編譯器常會提供一些額外的非 [[ANSI_C|ANSI C]] 函式功能，所以某個隨附在特定編譯器上的標準函式庫，對其他不同的編譯器來說，是不相容的。

=== 設計品質 ===
大多数 C 標準函式庫設計得很好。有些少部分會為了商業優勢和利益，把某些舊函式視同錯誤或提出警告。字串輸入函式 <code>gets()</code> 及 <code>scanf()</code> 讀取字串輸入的使用是很多[[緩衝區溢位|緩衝區溢位]]的原因，大多数的程式設計指南會建議避免使用。另一個較為奇特的函式是 <code>strtok()</code>，它原本是作為早期的[[词法分析|词法分析]]用途，但是它非常容易出錯（{{lang|en|fragile}}），而且很難使用。

== 历史沿革 ==
[[ANSI_C|ANSI C]]共包括15個標頭檔。1995年，''Normative Addendum 1'' （{{lang|en|NA1}}）批准了3个头文件（<code>iso646.h</code>、<code>wchar.h</code>和<code>wctype.h</code>）增加到C标准函数库中。[[C99|C99]]标准增加了6个头文件（<code>complex.h</code>、<code>fenv.h</code>、<code>inttypes.h</code>、<code>stdbool.h</code>、<code>stdint.h</code>和<code>tgmath.h</code>）。[[C11|C11]]标准中又新增了5个头文件（<code>stdalign.h</code>、<code>stdatomic.h</code>、<code>stdnoreturn.h</code>、<code>threads.h</code>和<code>uchar.h</code>）。至此，C标准函数库共有29个头文件：

{| class="wikitable sortable"
|-
! 名字 !! 源自 !! 描述
|-
| <code>[[assert.h|<assert.h>]]</code> || || 包含[[斷言_(程式)|断言]]，被用来在程序的调试版本中帮助检测逻辑错误以及其他类型的bug。
|-
| <code>[[complex.h|<complex.h>]]</code> || C99 || 一组操作[[复数_(数学)|复数]]的函数。
|-
| <code>[[ctype.h|<ctype.h>]]</code> || || 定义了一组函数，用来根据类型来给字符分类，或者进行大小写转换，而不关心所使用的字符集（通常是[[ASCII|ASCII]]或其扩展[[字符集|字符集]]，也有[[EBCDIC|EBCDIC]]）。
|-
| <code>[[errno.h|<errno.h>]]</code> || || 用来测试由库函数报的错误代码。
|-
| <code>[[fenv.h|<fenv.h>]]</code> || C99 || 定义了一组用来控制[[浮点数|浮点数]]环境的函数。
|-
| <code>[[float.h|<float.h>]]</code> || || 定义了用于[[浮点数|浮点数]]库特定实现的宏常量。
|-
| <code>[[inttypes.h|<inttypes.h>]]</code> || C99 || 定义精确的宽度整数类型。
|-
| <code>[[iso646.h|<iso646.h>]]</code> || NA1 || 定义几个等效于C中某些运算符的宏。用于使用[[ISO_646|ISO 646]]变体字符集进行编程。
|-
| <code>[[limits.h|<limits.h>]]</code> || || 定义了用于[[整数|整数]]库特定实现属性的宏常量。
|-
| <code>[[locale.h|<locale.h>]]</code> || || 定义C语言本地化函数。
|-
| <code>[[math.h|<math.h>]]</code> || || 定义C语言数学函数。
|-
| <code>[[setjmp.h|<setjmp.h>]]</code> || || 定义了[[巨集|巨集]]<code>setjmp</code>和<code>longjmp</code>，在非局部跳转的时候使用。
|-
| <code>[[signal.h|<signal.h>]]</code> || || 定义C语言信号处理函数。
|-
| <code>[[stdalign.h|<stdalign.h>]]</code> || C11 || 用于查询和指定对象的数据结构对齐方式。
|-
| <code>[[stdarg.h|<stdarg.h>]]</code> || || 用于查询和指定对象的数据结构对齐方式。
|-
| <code>[[stdatomic.h|<stdatomic.h>]]</code> || C11 || 用于查询和指定对象的数据结构对齐方式。
|-
| <code>[[stdbool.h|<stdbool.h>]]</code> || C99 || 定义布尔数据类型。
|-
| <code>[[stddef.h|<stddef.h>]]</code> || || 定义了几个常见的类型与[[巨集|巨集]]。
|-
| <code>[[stdint.h|<stdint.h>]]</code> || C99 || 定义精确的宽度整数类型。
|-
| <code>[[stdio.h|<stdio.h>]]</code> || || 定义输入输出函数。
|-
| <code>[[stdlib.h|<stdlib.h>]]</code> || || 定义数值转换函数，伪随机数生成函数，动态内存分配函数，过程控制函数。
|-
| <code>[[stdnoreturn.h|<stdnoreturn.h>]]</code> || C11 || For specifying non-returning functions.
|-
| <code>[[string.h|<string.h>]]</code> || || 定义C语言字符串处理函数。
|-
| <code>[[tgmath.h|<tgmath.h>]]</code> || C99 || Defines type-generic mathematical functions.
|-
| <code>[[threads.h|<threads.h>]]</code> || C11 || Defines functions for managing multiple threads as well as  mutexes and condition variables.
|-
| <code>[[time.h|<nowiki><time.h></nowiki>]]</code> || || Defines date and time handling functions
|-
| <code>[[uchar.h|<uchar.h>]]</code> || C11 || Types and functions for manipulating [[Unicode|Unicode]] characters.
|-
| <code>[[wchar.h|<wchar.h>]]</code> || NA1 || Defines wide string handling functions.
|-
| <code>[[wctype.h|<wctype.h>]]</code> || NA1 || Defines set of functions used to classify wide characters by their types or to convert between upper and lower case
|}

== 参考文献 ==
{{Reflist}}

== 外部連結 ==
* [https://web.archive.org/web/20050302041944/http://www.infosys.utas.edu.au/info/documentation/C/CStdLib.html The C Standard Library]：A detailed description of the header files
* [https://web.archive.org/web/20150118141700/http://www.acm.uiuc.edu/webmonkeys/book/c_guide/index.html The C Library Reference Guide]
* Microsoft [http://msdn.microsoft.com/library/default.asp?url=/library/en-us/vclib/html/_crt_c_run.2d.time_libraries.asp C Run-Time Libraries]{{Wayback|url=http://msdn.microsoft.com/library/default.asp?url=%2Flibrary%2Fen-us%2Fvclib%2Fhtml%2F_crt_c_run.2d.time_libraries.asp |date=20190924215644 }} on MSDN
* [https://code-reference.com/ Coding Programmer Page]{{Wayback|url=https://code-reference.com/|date=20120501071544 }} [Coding Programmer Page / Library Reference and Examples<nowiki>]</nowiki> (english) ]

== 参见 ==
{{Portal|软件|计算机程序设计}}
* [[GNU_C_函式庫|GNU C 函式庫]]
* [[C++標準程式庫|C++標準程式庫]]
* [[C_POSIX_library|C POSIX library]]

{{-}}
{{CProLang}}
{{Linux内核}}

[[Category:C標準函式庫|]]
[[Category:C語言|Category:C語言]]