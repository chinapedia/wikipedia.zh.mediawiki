{{Orphan|time=2020-06-29T06:44:39+00:00}}
{{NotChineseTitle|time=2020-06-29T09:23:34+00:00}}
'''Clean Code'''是[[软件工程|软件工程]]的詞語，源自{{le|Robert Cecil Martin|Robert Cecil Martin}}所著的同名書籍。[[软件设计师|软件设计师]]認為的Clean Code是指[[原始碼|原始碼]]本身很清楚，而且相關的資訊、概念、規則及程序是直覺上容易理解的，也就是在合理的時間，不用花非常多的心力即可以理解的程度。Clean code的好處是其本身是穩定、有效率的程式，在後續機能強化以及錯誤修正時，可以花比較少的時間。軟體生命週期中，有80%都是維護期，因此這方面的影響很大。

開發clean code的困難包括有：
# 剛開始時的需求常常不清楚，甚至互相矛盾
# 缺乏開發Clean Code的經驗
# 缺乏軟體開發上的紀律
# 會花許多心力在[[源代码|源代码]]的調整（稱為[[代码重构|代码重构]]）

不符合clean code的程式，仍然可以依計劃的功能執行，因此許多管理者沒有意識到這些程式有必要要改為clean code。不太可能直接將程式寫成符合clean code的要求，不過持續的注意相關的要求，並且著手進行，可以提供程式的水準，使其較接近clean code。

和clean code有關的，是一些在軟體開發時讓程式碼變「clean code」的一些對策，程式不符合clean code的原因很多，因此也有許多相關的對策。以下是一些對策：

* {{le|程式碼慣例|Code conventions}}
* [[设计模式_(计算机)|设计模式]]
* [[约定优于配置|约定优于配置]]
* 在Robert Cecil Martin的《Clean Code》書中提到的建議

近年來已開始出現許多clean code軟體開發者的活動，目的是希望用吸引人的方式將一致及全面的規則帶進軟體開發者的工作中。{{le|Kata|Kata_(programming)}}是一種進行這方面實務的方式。

== 相關條目 ==
<!--* [[Software_Craftsmanship|Software Craftsmanship]]
* [[Principle_of_Least_Surprise|Principle of Least Surprise]]-->
* [[一次且仅一次|一次且仅一次]]
* [[YAGNI|YAGNI]] (''You Ain’t Gonna Need It'')
* [[KISS原则|KISS原则]]
* [[单一功能原则|单一功能原则]]
* [[约定优于配置|约定优于配置]]
* [[得墨忒耳定律|得墨忒耳定律]]

== 參考資料 ==
* {{cite book
   |author={{le|Robert Cecil Martin|Robert C. Martin}}
   |title=Clean Code: Refactoring, Patterns, Testen und Techniken für sauberen Code
   |publisher=mitp-Verlag
   |date=
   |ISBN=978-0-13-235088-4}}
* {{cite web
   |author=Andreas Wintersteiger
   |title=Clean Code
<!--|Sammelwerk=Der Entwickler=-->
   |date=2012-06-12
   |url=https://entwickler.de/online/agile/clean-code-134128.html
   |accessdate=2018-03-16
   |archive-date=2018-03-16
   |archive-url=https://web.archive.org/web/20180316215621/https://entwickler.de/online/agile/clean-code-134128.html
   |dead-url=no
   }}
* {{cite web
   |author=Hendrik Lösch
   |title=Clean Code vs. Abhängigkeiten
<!--|Sammelwerk=Informatik Aktuell-->
   |date=2017-06-20
   |url=https://www.informatik-aktuell.de/entwicklung/methoden/clean-code-vs-abhaengigkeiten.html
   |accessdate=2018-03-16
   |archive-date=2018-03-16
   |archive-url=https://web.archive.org/web/20180316214809/https://www.informatik-aktuell.de/entwicklung/methoden/clean-code-vs-abhaengigkeiten.html
   |dead-url=no
   }}
* {{cite web
   |author=Juliane Conte
   |title=Clean Code Developer aus Unternehmenssicht
<!--|Sammelwerk=Heise Developer-->
   |date=2011-12-05
   |url=https://www.heise.de/developer/artikel/Clean-Code-Developer-aus-Unternehmenssicht-ein-Anwenderbericht-1389796.html?seite=all
   |accessdate=2018-03-16
   |archive-date=2018-03-16
   |archive-url=https://web.archive.org/web/20180316214403/https://www.heise.de/developer/artikel/Clean-Code-Developer-aus-Unternehmenssicht-ein-Anwenderbericht-1389796.html?seite=all
   |dead-url=no
   }}

== 外部網頁 ==
* [http://www.clean-code-developer.de/ Homepage der Clean-Code-Developer-Initiative]{{Wayback|url=http://www.clean-code-developer.de/ |date=20200630161904 }}
* [http://groups.google.com/group/clean-code-developer Google Group: Clean Code Developer]{{Wayback|url=http://groups.google.com/group/clean-code-developer |date=20101203183141 }}
* {{cite web
   |url=http://www.planetgeek.ch/wp-content/uploads/2014/11/Clean-Code-V2.4.pdf
   |title=Clean Code Cheat Sheet
   |date=2016-12-21
   |format=PDF
   |author=Urs Enzler
   |accessdate=2020-06-29
   |archive-date=2019-10-03
   |archive-url=https://web.archive.org/web/20191003192905/https://www.planetgeek.ch/wp-content/uploads/2014/11/Clean-Code-V2.4.pdf
   |dead-url=no
   }}
* {{cite web
   |url=http://www.matthewjmiller.net/files/cc2e_checklists.pdf
   |title=Code Complete Checklists
   |date=2013-04-17
   |format=PDF
   |author=Steven C. McConnell
   |accessdate=2020-06-29
   |archive-date=2020-07-02
   |archive-url=https://web.archive.org/web/20200702045813/https://www.matthewjmiller.net/files/cc2e_checklists.pdf
   |dead-url=no
   }}

[[Category:计算机编程|Category:计算机编程]]