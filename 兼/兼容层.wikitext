{{NoteTA|G1=IT}}
{{校对翻译}}
在[[软件工程|软件工程]]领域，'''兼容层'''是一个允许面向旧或异质系统的[[二进制文件|二进制文件]]运行在特定主机系统上的接口。这意味着将面向异质系统的[[系统调用|系统调用]]转换为面向主机系统。有些[[函式庫|函式庫]]会面向异质系统，这通常是为主机系统提供运行异质二进制文件的能力。而硬件兼容层工具允许{{tsl|en|Hardware_emulation|硬件仿真}}。

== 软件 ==
一些例子：
* [[Wine|Wine]]，允许在[[类Unix系统|类Unix系统]]上使用一个程序加载器和是现在DLL中的[[Windows_API|Windows API]]运行部分[[微软Windows|微软Windows]]二进制文件。
* [[Microsoft_Windows|Windows]]的应用程序兼容层（Application Compatibility Toolkit）能尝试运行编写拙劣或者为早期平台编写的应用程序。<ref>{{Cite web|url=http://www.microsoft.com/windowsxp/using/helpandsupport/learnmore/russel_02february18.mspx|title=Application Compatibility in Windows XP|author=Charlie Russel, Microsoft MVP for Windows Server and Tablet PC|date=2002-02-18|deadurl=yes|archiveurl=https://web.archive.org/web/20061206200728/http://www.microsoft.com/windowsxp/using/helpandsupport/learnmore/russel_02february18.mspx|archivedate=2006-12-06|accessdate=2016-06-14}}</ref>
* {{tsl|en|LINA_(software)|Lina}}，在Windows、[[OS_X|Mac OS X]]和类Unix系统上以原生外观和体验运行某些Linux二进制文件。
* {{tsl|en|KernelEx|KernelEx}}，在Windows 98/Me运行Windows 2000/XP程序。
* {{tsl|en|Executor_(software)|Executor}}，在Windows、Mac OS X和Linux中运行基于68k的“经典”Mac OS程序。
* {{tsl|en|Columbia_Cycada|Columbia Cycada}}，在[[Android|Android]]系统上运行[[IOS|Apple iOS]]程序。
* {{tsl|en|Hybris_(software)|Hybris}}，转换Bionic到glibc调用的函数库。
* [[Darling_(软件)|Darling]]，在Linux上尝试运行Mac OS X和Darwin二进制文件的转换层。
* [[内核|内核]]中的兼容层
** [[FreeBSD|FreeBSD的Linux兼容层]]，允许专为[[Linux|Linux]]构建的二进制文件在[[FreeBSD|FreeBSD]]以与原生FreeBSD API层相同的方法运行<ref>{{Cite web|url=http://www.freebsd.org/doc/en/articles/linux-emulation/index.html|title=Linux emulation in FreeBSD|accessdate=2016-06-14|archive-date=2020-08-01|archive-url=https://web.archive.org/web/20200801015121/https://www.freebsd.org/doc/en/articles/linux-emulation/index.html|dead-url=no}}</ref><ref>{{Cite web|url=http://www.freebsd.org/doc/en/articles/linux-emulation/freebsd-emulation.html|title=Emulation|accessdate=2014-03-16|publisher=freebsd.org|archive-date=2020-08-01|archive-url=https://web.archive.org/web/20200801073250/https://www.freebsd.org/doc/en/articles/linux-emulation/freebsd-emulation.html|dead-url=no}}</ref>FreeBSD还有一些类Unix系统的仿真，包括NDIS、NetBSD、PECoff、SVR4和FreeBSD对不同CPU的版本。<ref>{{Cite web|url=http://www.freebsd.org/doc/en/articles/linux-emulation/inside.html|title=A look inside...|accessdate=2014-03-16|publisher=freebsd.org|archive-date=2020-08-01|archive-url=https://web.archive.org/web/20200801010844/https://www.freebsd.org/doc/en/articles/linux-emulation/inside.html|dead-url=no}}</ref>
** [[NetBSD|NetBSD]]有一些类Unix系统仿真。<ref>{{Cite web|url=http://www.netbsd.org/docs/compat.html|title=NetBSD Binary Emulation|accessdate=2014-03-16|publisher=netbsd.org|archive-date=2020-10-29|archive-url=https://web.archive.org/web/20201029112140/http://www.netbsd.org/docs/compat.html|dead-url=no}}</ref>
** [http://hcpnet.free.fr/applebsd.html Mach和Darwin二进制文件兼容，为NetBSD/powerpc和NetBSD/i386] {{Wayback|url=http://hcpnet.free.fr/applebsd.html |date=20191106143621 }}。
** [[Windows_Subsystem_for_Linux|Windows Subsystem for Linux]]提供一个[[Linux|Linux]]兼容的内核接口，微软开发它并且不包含Linux代码，[[Ubuntu|Ubuntu]]用户模式[[可執行與可鏈接格式|二进制文件]]运行在它上面。<ref>{{Cite web |url=https://msdn.microsoft.com/en-us/commandline/wsl/about |title=BASH Running in Ubuntu on Windows - MSDN |accessdate=2016-06-14 |archive-date=2017-11-30 |archive-url=https://web.archive.org/web/20171130090401/https://msdn.microsoft.com/en-us/commandline/wsl/about |dead-url=no }}</ref>
** [https://web.archive.org/web/20081015065906/http://chiharu.haun.org/peace/ PEACE项目]（也称COMPAT_PECOFF）为NetBSD提供Win32兼容层。此项目目前不活跃。

一个兼容层可以避免完全硬件[[仿真器|仿真]]的复杂性和速度损失，某些程序更可能比原来运行更快。例如，某些Linux应用程序运行在FreeBSD的Linux兼容层上时，有时有可能会原运行在红帽Linux上更快；运行在Wine上的性能基准偶尔也可以比拟它在Windows操作系统的运行效率。<ref>[http://wiki.winehq.org/BenchMark-0.9.5 BenchMark-0.9.5] {{Wayback|url=http://wiki.winehq.org/BenchMark-0.9.5 |date=20101209221003 }} - The Official Wine Wiki</ref>

即使在类似的系统上，实现一个兼容层的细节也可能是相当复杂和麻烦；一个好例子是在[[NetBSD|NetBSD]] [[MIPS架構|MIPS架構]]版本中的[[IRIX|IRIX]]二进制兼容层。<ref>{{Cite web|url=http://www.onlamp.com/pub/a/bsd/2002/08/08/irix.html|title=IRIX Binary Compatibility, Part 1|accessdate=2014-03-16|author=Emmanuel Dreyfus|date=August 8, 2002|publisher=onlamp.com|7=|archive-date=2017-10-21|archive-url=https://web.archive.org/web/20171021211722/http://www.onlamp.com/pub/a/bsd/2002/08/08/irix.html|dead-url=no}}</ref>

兼容层需要主机系统的[[中央处理器|CPU]]能（向上）兼容异质系统。举例来说，微软Windows的兼容层不可能在[[PowerPC|PowerPC]]硬件上运行，因为Windows需要[[x86|x86]]的CPU；对于这种情况，只能进行完全仿真。

== 硬件 ==
硬件兼容层工具涉及到[[硬件模拟|硬件模拟]]。部分兼容层涉及到{{tsl|en|Breakout_box|接线}}，因为接线可以对特定计算机[[总线|总线]]提供一些兼容性。

== 参见 ==
* [[Hypervisor|Hypervisor]]
* {{tsl|en|Paravirtualization|半虚拟化}}
* [[仿真器|仿真器]]
* {{tsl|en|Cross-platform_virtualization|跨平台虚拟化}}
* [[系统平台|系统平台]]
* {{tsl|en|Shim_(computing)|Shim}}

== 参考资料 ==
{{Reflist}}

== 外部链接 ==
* [https://web.archive.org/web/20070427190310/http://www.microsoft.com/technet/prodtechnol/winxppro/Plan/AppCmpXP.mspx Windows XP应用程序兼容技术]{{en}}（微软公司Dave Morehouse和Todd Phillips，2001年6月1日）

[[Category:兼容层|]]