在[[軟體工程|軟體工程]]中， '''行為型模式'''為[[設計模式_(計算機)|設計模式]]的一種類型，用來識別對象之間的常用交流模式并加以實現。如此，可在進行這些交流活動時增強彈性。

==舉例==

* [[責任鏈模式|責任鏈模式]]：處理命令物件或將之傳到下一個可以處理的物件。
* [[命令模式|命令模式]]：命令物件將動作及參數封裝起來。
* "具現化堆疊"：使用堆疊將遞迴函式轉成重覆執行。<ref>{{Cite web |url=http://c2.com/cgi/wiki?ExternalizeTheStack |title=存档副本 |access-date=2010-04-28 |archive-date=2016-07-09 |archive-url=https://web.archive.org/web/20160709150416/http://c2.com/cgi/wiki?ExternalizeTheStack |dead-url=no }}</ref>
* [[解釋器模式|解釋器模式]]：實作特製化的程式語言以解決一系列特殊的問題。
* [[迭代器模式|迭代器模式]]：迭代器用於存取包含器中元素而不用透露底層實作的方式。
* [[調停者模式|調停者模式]]：對子系統中的介面集面提供一個統一的介面。
* [[備忘錄模式|備忘錄模式]]：使一個物件還原到前一個狀態的能力（rollback）。
* [[空物件模式|空物件模式]]：扮演預設物件的角色。
* [[觀察者模式|觀察者模式]]：亦即發行／訂閱或事件聆聽者。物件註冊去聆聽由另一個物作所引發的事件。
** 弱參照模式：將觀察者與可觀察間的藕合程度。<ref>{{Cite web |url=http://c2.com/cgi/wiki?WeakReferencePattern |title=存档副本 |access-date=2010-04-28 |archive-date=2016-07-09 |archive-url=https://web.archive.org/web/20160709143854/http://c2.com/cgi/wiki?WeakReferencePattern |dead-url=no }}</ref>
* [[協議棧|協議棧]]：通訊是由許多封裝成階層式的層所處理。<ref>{{Cite web |url=http://c2.com/cgi/wiki?ProtocolStack |title=存档副本 |access-date=2010-04-28 |archive-date=2016-07-09 |archive-url=https://web.archive.org/web/20160709233149/http://c2.com/cgi/wiki?ProtocolStack |dead-url=no }}</ref>
* [[狀態模式|狀態模式]]：在執行可以部分改變物件的一種方法。
* [[策略模式|策略模式]]：在執行時依需求而選擇演算法。
* [[規格模式|規格模式]]：以布林值的方式來重組事務邏輯。
* [[模板方法模式|模板方法模式]]：描述一個程式的[[虛設代碼|骨架]]。
* [[訪問者模式|訪問者模式]]: 一種從物件中取出演算法的方式。
* 單服務訪問者模式：最佳化訪問者。使用一次後即行刪除。
* 階層式訪問者模式：提供一種方式可以拜訪階層式[[資料結構|資料結構]]如樹中的每一個節點。
* 排程任務模式：在特定區時或時間點執行排程任務(用於[[即時計算|即時計算]])。

==另見==

* [[結構型模式|結構型模式]]
* [[創建型模式|創建型模式]]
* [[併發型模式|併發型模式]]

==參考==
<references />


{{软件设计模式}}
[[Category:軟體設計模式|Category:軟體設計模式]]