{{Unreferenced|time=2017-04-15T23:14:29+00:00}}
{{NoteTA|G1=IT}}
'''安全实时传输协议'''（Secure Real-time Transport Protocol或'''SRTP'''）是在[[实时传输协议|实时传输协议]]（Real-time Transport Protocol或'''RTP'''）基础上所定义的一个协议，旨在为[[单播|单播]]和[[多播|多播]]应用程序中的[[实时传输协议|实时传输协议]]的数据提供[[加密|加密]]、消息[[认证|认证]]、[[数据完整性|完整性]]保证和重放保护。它是由{{lang|en|David Oran}}（[[思科系统公司|思科]]）和{{lang|en|Rolf Blom}}（[[爱立信|爱立信]]）开发的，并最早由{{lang|en|[[IETF|IETF]]}}于2004年3月作为{{lang|en|RFC 3711}}发布。

由于实时传输协议和[[实时传输控制协议|实时传输控制协议]]（{{lang|en|Real-time Transport Control Protocol}}或{{lang|en|RTCP}}）有着紧密的联系，安全实时传输协议同样也有一个伴生协议，它被称为'''安全实时传输控制协议'''（{{lang|en|Secure RTCP}}或{{lang|en|SRTCP}}）；安全实时传输控制协议为实时传输控制协议提供类似的与安全有关的特性，就像安全实时传输协议为实时传输协议提供的那些一样。

对于 RTP 和 RTCP 应用程序来说, SRTP 和 SRTCP 是可选项, 而且即使使用了 SRTP 和 SRTCP 协议, 它们提供的各种功能(例如加密和认证) 也都是可以独立选择使用或者不使用的. 唯一的例外就是当使用 SRTCP 的时候消息认证(message authentication)是必选的.

==数据流加密==

为了提供对数据流的保密，需要对数据流进行加密和解密。关于这一点，安全实时传输协议（结合安全实时传输控制协议）只为一种[[加密算法|加密算法]]，即{{lang|en|[[高级加密标准|AES]]}}制定了使用标准。这种加密算法有两种加密模式，它们能将原始的{{lang|en|AES}}块密文转换成流密文：
* 分段整型计数器模式——一种典型的[[计数器模式|计数器模式]]，它允许对任意块的随机访问——这一点对于实时传输协议的数据流在可能丢包的不可靠网络上进行传输是非常必要的。一般情况下，几乎所有的函數都能被作为计数器使用，只要它在一次循环中重复的次数不要太多就可以。但是，用于实时传输协议数据加密的仅仅是一个普通的整型递增计数器。运行在这一模式下的{{lang|en|AES}}是其默认的加密算法，它使用的是默认128位长度的[[加密密钥|加密密钥]]和默认112位长度的会话[[盐密钥|盐密钥]]。
* f8模式——[[输出反馈模式|输出反馈模式]]的一个变种，它增加了定位功能并改变了初始化功能。其加密密钥和盐密钥的默认值和计数器模式下的AES是一样的。运行在这种模式下的{{lang|en|AES}}被用于{{lang|en|[[通用移动电信系统|UMTS]] [[3G|3G]]}}[[移动网络|移动网络]]。

除了AES加密算法，安全实时传输协议还允许彻底禁用加密，此时使用的是所谓的“零加密算法”。它可以被认为是安全实时传输协议支持的第二种加密算法，或者说是它所支持的第三种加密模式。事实上，零加密算法并不进行任何加密，也就是说，加密算法把密钥流想像成只包含“0”的流，并原封不动地将输入流复制到输出流。这种模式是所有与安全实时传输协议兼容的系统都必须实现的，因为它可以被用在不需要安全实时传输协议提供保密性保证而只要求它提供其它特性（如认证和消息完整性）的场合。

尽管从技术上来说安全实时传输协议能轻松地纳入新的加密算法，但安全实时传输协议标准指出除上述加密算法以外的新的加密算法不一定能被简单地添加到一些安全实时传输协议的具体实现中去。添加一种新的加密算法并确保它与安全实时传输协议标准相兼容的唯一有效方式是发布一个明确定义该算法的新的伴生的[[标准跟踪|标准跟踪]]{{lang|en|[[RFC|RFC]]}}。

==认证、完整性和重放保护==

以上列举的加密算法本身并不能保护消息的完整性，攻击者仍然可以伪造数据——至少可以重放过去传输过的数据。因此，安全实时传输协议标准同时还提供了保护数据完整性以及防止重放的方法。

为了进行消息认证并保护消息的完整性，安全实时传输协议使用了{{lang|en|[[HMAC-SHA1|HMAC-SHA1]]}}算法（在{{lang|en|RFC 2104}}中定义）。这种算法使用的是默认160位长度的{{lang|en|HMAC-SHA1}}认证密钥。但是它不能抵御重放攻击；重放保护方法建议接收方维护好先前接收到的消息的索引，将它们与每个新接收到的消息进行比对，并只接收那些过去没有被播放过的新消息。这种方法十分依赖于完整性保护的使用（以杜绝针对消息索引的欺骗技术）。

== 参见 ==
* {{tsl|en|ZRTP}}

==外部链接==

* {{lang|en|RFC 3711, Proposed Standard, The Secure Real-time Transport Protocol (SRTP)}}
* {{lang|en|RFC 3551, Standard 65, RTP Profile for Audio and Video Conferences with Minimal Control}}
* {{lang|en|RFC 3550, Standard 64, RTP: A Transport Protocol for Real-Time Applications}}
* {{lang|en|RFC 2104, Informational, HMAC: Keyed-Hashing for Message Authentication}}

[[category:网络协议|category:网络协议]]
[[category:网络安全|category:网络安全]]