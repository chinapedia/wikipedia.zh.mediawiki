{{NoteTA
|G1=IT
}}
{{校对翻译}}

'''安全复制'''（{{lang-en|'''secure copy'''}}，缩写作 '''SCP'''）是指在本地[[主机|主机]]与远程主机或者两台远程主机之间基于[[Secure_Shell|Secure Shell]]（SSH）协议安全地传输[[電腦檔案|電腦檔案]]<ref>{{cite web |url = http://www.computerhope.com/unix/scp.htm |title = Linux and Unix scp command |access-date = 4 August 2015 |archive-date=2018-02-21 |archive-url = https://web.archive.org/web/20180221035435/https://www.computerhope.com/unix/scp.htm |dead-url=no }}</ref>。“SCP”通常指安全复制协议或者程序本身<ref name="Pechanec">{{cite web |url = https://blogs.oracle.com/janp/entry/how_the_scp_protocol_works |title= How the SCP protocol works |access-date=4 August 2015 |last=Pechanec |first=Jan |author-link=Jan Pechanec |website = Jan Pechanec's weblog |publisher=Oracle |dead-url=yes |archive-url = https://web.archive.org/web/20151011151316/https://blogs.oracle.com/janp/entry/how_the_scp_protocol_works |archive-date=2015-10-11 }}</ref>。

== 安全复制协议 ==
'''SCP'''是一种基于[[BSD|BSD]] {{tsl|en|Rcp (Unix)||RCP}}协议的[[网络传输协议|网络传输协议]]，<ref>{{Cite web|url=http://nixdoc.net/man-pages/FreeBSD/scp.1.html#HISTORY|title=scp - FreeBSD (history section)|accessdate=25 June 2012|archive-date=2021-02-25|archive-url=https://web.archive.org/web/20210225130353/https://nixdoc.net/man-pages/FreeBSD/scp.1.html#HISTORY|dead-url=no}}</ref> 支持同一个网络上主机之间{{tsl|en|File transfer|传输文件}}。SCP使用[[Secure_Shell|Secure Shell]]（SSH）完成数据传输，并使用同时用它进行身份认证，从而确保{{tsl|en|Data in transit|数据传输时}}的[[信息安全|真实性]]和[[保密|保密性]]。客户端可以向服务器发送（上传）文件，可选包含其基本属性（权限、时间戳）。客户端也可以请求（下载）一个服务器的文件或目录。SCP默认通过[[通訊埠|TCP端口]]22运行。如同RCP，没有[[RFC|RFC]]定义该协议的细节。

=== 功能 ===
正常来说，一个客户端发起到远程主机的SSH连接，并请求在远程服务器上启动一个SCP[[进程|进程]]。远程SCP进程可以以两种模式之一操作：
* 源模式，读取文件（通常从[[磁盘|磁盘]]）并将其发送回客户端。
* 槽（sink）模式，接收客户端发送的文件，并将它们写入到远程主机（通常到磁盘）。
对大多数SCP客户端来说，源模式通常使用-f标识（意为from）触发，而槽模式用-t（意为to）触发。这些标志是在内部使用，没有在SCP源代码之外留有文档。

=== 远程到远程模式 ===
在过去，远程到远程的安全复制中，SCP客户端打开一个到源主机的SSH连接，并请求它打开到目的地的SCP连接。（远程到远程模式不支持打开两个SCP连接，并使用始发客户端作为一个中介）。应格外注意的是，当在密码或键盘交互认证模式下操作时，SCP不能用于远程的从源复制到目的地，因为这将向源显示目的地服务器的认证凭证。但是，使用基于密钥或{{tsl|en|GSSAPI}}的方法可以规避此点，因为不需要用户输入。

最近以来，远程到远程模式支持通过发起转移的客户端路由流量，即使它是转移的第三方。这种方法下，授权凭据必须仅驻留在发起客户端上，即第三方。{{what}}

=== 有关shell配置文件的问题 ===
SCP不希望与ssh登录的shell用文本通信。这是由于文本传输的ssh配置文件（例如.bashrc文件中的echo "Welcome"）会被解释为一条错误消息，并且一个空行（echo ""）将导致scp死锁为等待错误消息完成。

== 安全复制（远程文件复制程序） ==
'''SCP程序'''是将SCP协议实现为服务守护程序或客户端的软件工具。它是执行安全复制的程序。SCP服务器程序通常与SCP客户端是相同的程序。SCP服务器软件可以普通机器或[[防火墙|防火墙]]配置为仅接受22端口上的SCP流量的极高安全标准的机器上运行。<ref>{{Cite web|url=http://www.pcwdld.com/scp-server-free-windows-download|title=SCP Server Installation and Configuration|accessdate=17 June 2016|archive-date=2016-11-27|archive-url=https://web.archive.org/web/20161127193222/http://www.pcwdld.com/scp-server-free-windows-download|dead-url=no}}</ref>

使用最广泛的SCP程序可能是[[命令行界面|命令行界面]]的<tt>scp</tt>程序，这在大多数SSH实现中提供。<tt>scp</tt>程序是<tt>rcp</tt>命令的安全模拟。<tt>scp</tt>程序是所有想提供SCP服务的SSH服务器的必备，<tt>scp</tt>功能也作为SCP服务器。

部分SSH实现提供<tt>scp2</tt>程序，这使用[[SSH文件传输协议|SFTP]]协议而非SCP，但提供与相同的[[命令行界面|命令行界面]]<tt>scp</tt>。<tt>scp</tt>此时通常[[符号链接|符号链接]]至<tt>scp2</tt>。

通常来说，<tt>scp</tt>程序的语法<ref>"scp(1) - Linux man page" http://linux.die.net/man/1/scp {{Wayback|url=http://linux.die.net/man/1/scp |date=20210224040033 }}</ref>类似[[Cp_(Unix)|<tt>cp</tt> (copy)]]的语法：

复制文件到主机：
 <tt>scp ''SourceFile'' ''user''@''host'':''directory''/''TargetFile''</tt>
从主机复制文件：
 <tt>scp ''user''@''host'':''directory''/''SourceFile'' ''TargetFile''</tt>
 <tt>scp -r ''user''@''host'':''directory''/''SourceFolder'' ''TargetFolder''</tt>
注意，如果远程主机使用非默认端口22，可以在命令中指定。例如，从主机复制一个文件。
 <tt>scp -P 2222 ''user''@''host'':''directory''/''SourceFile'' ''TargetFile''</tt>
由于'''安全复制协议'''仅实现文件传输，[[图形用户界面|GUI]]的SCP客户端很少，因为实现它需要额外的功能（至少要有[[目录_(文件系统)|目录]]列出）。例如，[[WinSCP|WinSCP]]默认为SFTP协议。即使在SCP模式下操作，WinSCP等客户端通常也不是纯粹的SCP客户端，因为他们必须用其他手段实现额外的功能（例如<tt>ls</tt>命令）。这反过来带来了平台依赖性问题。

[[SSH文件传输协议|SFTP]]客户端是更全面的通过SSH管理文件的工具。

== 参考文献 ==
{{Reflist}}

== 参见 ==
* {{tsl|en|List of file transfer protocols|文件传输协议列表}}
* [[文件传输协议|FTP]]
* [[FTPS|FTPS]]
* [[SSH文件传输协议|SSH文件传输协议]]（SFTP）
* [[FISH|FISH]]
* [[Secure_Shell|SSH]]
* [[远程外壳|远程外壳]]（RSH）
* [[rsync|rsync]]
* [[Telnet|Telnet]]
* [[WinSCP|WinSCP]]

[[Category:加密协议|Category:加密协议]]
[[Category:加密软件|Category:加密软件]]
[[Category:网络文件传输协议|Category:网络文件传输协议]]
[[Category:Secure_Shell|Category:Secure Shell]]