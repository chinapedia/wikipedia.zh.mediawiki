{{Multiple issues|
{{Expand language|1=en|time=2021-11-09T06:54:03+00:00}}
{{Refimprove|time=2021-11-09T06:54:03+00:00}}
}}
{{noteTA
|G1 = IT
|1 = zh-cn:软件工程; zh-hk:軟件工程; zh-tw:軟體工程;
|2 = zh-hans:工程; zh-hant:工程;
}}
{{Infobox Book 
|name = 人月神話：軟體專案管理之道
|chinese_name =
|image = [[File:Mythical_man-month_(book_cover).jpg|200px]]
|image_caption = <!-- 圖片說明 -->
|author = [[佛瑞德·布魯克斯|佛瑞德·布魯克斯]]
|title_orig = The Mythical Man-Month: Essays on Software Engineering
|translator = 錢一一{{NoteTag|錢一一，1968年生，中正理工學院電子工程碩士，目前任職於中山科學研究院，從事大型系統的軟體架構設計工作。《人月神話》是他的第一本譯作。}}
|illustrator = <!-- 插图 -->
|cover_artist = <!-- 封面设计 -->
|country = <!-- 國家 -->
|language = [[繁體中文|繁體中文]]
|series = <!-- 系列 -->
|subject = [[軟體工程|軟體工程]]、[[專案管理|專案管理]]
|genre = <!-- 类型 -->
|publisher = 經濟新潮社
|release_date = 1975, 1995
|chinese_release_date = 2004年4月4日
|media_type = <!-- 媒介 -->
|pages = 424頁
|format = <!-- 开本 -->
|isbn = 9867889185
|oclc = 1201368
|dewey = 001.6/425
|congress = QA76.6 .B75
|preceded_by = [[沒有銀彈|沒有銀彈]]
|followed_by = <!-- 續作 -->
}}

《'''人月神话：软件项目管理之道'''》（{{lang-en|''The Mythical Man-Month: Essays on Software Engineering''}}）是由IBM [[System/360|System/360]]系統之父[[佛瑞德·布魯克斯|佛瑞德·布魯克斯]]所著文集，全書講解[[軟體工程|軟體工程]]、[[项目管理|项目管理]]相关课题，被譽為軟體領域的[[聖經|聖經]]，內容源於作者布魯克斯在[[IBM|IBM]]公司System/360家族和[[OS/360|OS/360]]中的專案管理經驗<ref name="人月神話：軟體專案管理之道">{{cite book | author = Frederick P. Brooks, Jr. | translator = 錢一一 | title = 人月神話：軟體專案管理之道 | location =  | publisher = 經濟新潮社 "year = 2004年 | ISBN = 9867889185 | accessdate = 2011-04-12 | url = http://www.cite.com.tw/product_info.php?products_id=7900 | language = zh-TW | archive-url = https://web.archive.org/web/20131108125438/http://www.cite.com.tw/product_info.php?products_id=7900 | archive-date = 2013-11-08 | dead-url = yes }}</ref>。該书于1975年首次发行（ISBN 978-0-201-00650-6），並於1995年重新发行纪念版（ISBN 978-0-201-83595-3）{{NoteTag|繁體中文版係根據1995年的紀念版。}}，其中新增了对-{zh-hans:《;zh-hant:〈}-[[没有银弹|没有银弹]]-{zh-hans:》;zh-hant:〉}-一文的评论和回应，與4個額外的新章節。

==內容簡介==
===焦油坑===
跟只為私人使用而單獨寫出來的組件程式相比，做出軟體系統產品（programming systems product）所要付出的代價將是九倍以上。估計產品化（productizing）的代價是三倍，若要對組件從事設計、整合、測試，進而凝聚成為一個系統，則代價也是三倍，而且這方面的成本計算基本是獨立的。<ref name="人月神話：軟體專案管理之道" />

{{Cquote|史前時期最駭人的景象，莫過於一群巨獸在焦油坑裏做垂死前的掙扎。不妨閉上眼睛想像一下，你看到了一群恐龍、長毛象、劍齒虎正在奮力掙脫焦油的束縛，但越掙扎，焦油就纏得越緊，就算他再強壯、再厲害，最後，都難逃滅頂的命運。過去十年間，大型系統的軟體開發工作就像是掉進了焦油坑裏……|[[佛瑞德·布魯克斯|佛瑞德·布魯克斯]]<ref>該書〔導讀軟體人生之何似〕本書作者Frederick Brooks對於他自己的軟體專案經歷，所做的描述</ref>}}

[[軟體開發|軟體開發]]的另一個難題，是從單一[[程式|程式]]到軟體系統過程中，所造成複雜度的快速上升，期間並需要包含不同的活動與技能，使得軟體開發必須面對多樣性的挑戰。布魯克斯最早認識到設計程式、開發[[軟體|軟體]]的差別，他以程式與[[系統|系統]]、[[產品|產品]]的差異，解釋兩者之間的不同，並以3×3的複雜度加以說明。<ref>{{Cite book | author = 鄭炳強 | coauthors=  | title = 軟體工程：從實務出發（Software Engineering: A Perspective from Practices） | location =  | publisher = 智勝文化事業有限公司 | date = 2008年 | pages =  |ISBN =978-957-729-659-7| accessdate = 2011-04-15 | url =  | language= zh-tw| quote =  }}</ref>

===人月神話===
'''人月神話'''（{{lang-en|'''The mythical man-month'''}}）：這部分講述人力和時間並不呈現線性關係。指出以大量人員和較短的時間，並不能縮短軟體的開發進度。一窩蜂的作業方式無助於軟體生產，且會製造麻煩，產生出更差的軟體。向進度落後的專案追加人力，只會使進度更加落後。因為新進的人員需要時間了解整個專案，而增加額外的溝通消耗。當有N個人必須在這群人之中進行溝通時（無階級關係），當N增加，其輸出M將抵消其效益，甚至倒退（最後幾天所完成的進度，遠不如剛開始幾天所完成的進度。像是發現了許多錯誤）。
:* 團隊交流公式：<math> n(n - 1)/2 </math>
:* 範例：50個開發人員，就要<math> 50(50 - 1)/2 = 1225 </math>個溝通管道
用「人月」來衡量工作規模的大小是危險的，也是一個容易遭到誤解的[[迷思|迷思]]，使用人月的前提必須是在人力和工時可以互換的情況之下：當一份工作因具有連續性的限制而不可切分時，就算投入再多的人力，也不會對時程有所影響，生小孩就是需要九個月，你叫多少個媽一起生都一樣，軟體工程就是像這樣的工作，因為它必須[[除錯|除錯]]，而除錯本身就具有連續性的本質。<ref name="人月神話：軟體專案管理之道" />

====人月====
'''人月'''（{{lang-en|'''man-month'''}}）指的是「一個人要花幾個月」才能完成軟體開發的單位，通常用來評估一件軟體專案的大小。<ref>該書〔推薦序二〕科技再怎麼變，人還是人</ref>以成本會計（cost accounting）為基礎的時程預估技術，使我們誤把工作量和專案進度混為一談，'''人月是個危險並很容易就遭到誤解的迷思（myth），因為它假設人力和工時可以互換'''。<ref name="人月神話：軟體專案管理之道" />

====Brooks法則====
在一個時程已經落後的軟體專案中增加人手，只會讓它更加落後{{NoteTag|Brooks原文：「Adding manpower to a late software project makes it later.」}}。根據Brooks法則，增加人員到一個已經延誤的專案裡，等於是火上加油。除非你可以把工作區分，讓新進人員可在不影響他人工作的狀況下有所貢獻。

把工作切分給更多人做將造成額外的溝通（communication）代價——訓練和相互的交流（intercommunication）。欲增加軟體專案的人手，總共必須付出的代價可分為三方面：工作重新切分本身所造成的混亂與額外工作量、新進人員的訓練、新增加的相互交流。<ref name="人月神話：軟體專案管理之道" />

===外科手術團隊===
在接受相同的訓練、同樣都是兩年資歷的情況下，優秀專業程式設計師的生產力要比差勁的程式設計師好上十倍。短小精悍團隊是最棒的——盡可能用最少的人。兩人團隊，其中一人當領導者，這通常是最佳的用人方式。以短小精悍團隊開發真正大的系統就太慢了。絕大多數大型軟體系統的經驗顯示，使用一堆人蠻幹的方式最耗成本、最慢、最沒有效率，做出來的系統在概念上也最不完整。

以一位首席程式設計師為主、類似於[[外科手術|外科手術]]團隊的[[组织_(社会学)|組織]]提供了一個良方，既可因少數人的決策而兼顧到產品的整體性，又可因多數人的合作與大幅溝通減少而得到全部人的[[生產力|生產力]]。<ref name="人月神話：軟體專案管理之道" />

===專制、民主與系統設計===
*在系統設計時，保有概念整體性（conceptual integrity）是最重要的原則。<ref name="人月神話：軟體專案管理之道" />
*功能概念複雜度比（這個比值是為了量測使用便利性，對簡單和困難的運用都很有效）才是系統設計的最終測試標準。功能多，不見得是好事。
*要達成概念整體性，設計必須出自於一個人的想法，或是極少數人的一致決定。
*對大型軟體專案（小專案也一樣）來說，將架構設計獨立於實作之外是取得概念整體性強而有利的方法。
*如果系統必須保有概念上的整體性，那麼就必須有人來控制這些概念，這就是需要[[專制|專制]]的原因，無庸置疑。
*許多[[軟體架構|軟體架構]]、實作、實現的工作都是可以同時進行的。（不論硬體或軟體設計，都可以同時進行）

===第二系統效應===
{{main|第二系統效應}}
第二系統效應（{{lang-en|The second-system effect}}）就一個人所做過的設計而言，第二個系統是最危險的系統，一般來說，都傾向於過度設計。<ref name="人月神話：軟體專案管理之道" />

當他做第三或之後的系統時，之前的經驗會互相印證，以確認出這類系統的一般性特色，而系統彼此之間的不同處，也會幫助他辨別出屬於特殊和非通用的部份。除了做些功能上的修飾之外，第二系統效應還有另外一項特徵，那就是傾向於將之前已熟悉的技術發揮到淋漓盡致，但卻沒有留意到，這項技術早就跟目前專案的基本系統假設有衝突而不再適用，OS/360有好多這樣的例子。（[[Windows_NT|Windows NT]]則似乎是1990年代的範例）

對大部份[[IBM_System/360|OS/360]]的設計人員來說，它也是個第二系統，設計成員分別來自1410-7010[[磁碟|磁碟]]作業系統、Stretch[[作業系統|作業系統]]、Project Mercury即時系統、給7090用的IBSYS作業系統等等，幾乎沒有人擁有兩個上述系統的發展經驗，所以OS/360可稱得上是一個最佳的第二系統效應範例。

===意念的傳達===

===[[巴別塔|巴別塔]]為什麼失敗?===
====溝通====

====專案工作手冊====
手冊或書面規格是不可或缺的工具，雖然光靠它是不夠的。手冊載明的是產品的[[外部|外部]]（external）規格，用來描述並制定出使用者從外觀上將或看到的所有細節，撰寫手冊便是架構設計師的主要工作。當使用者和實作人員的反應不斷地顯示出設計上難以使用或實現之處，手冊就會墮入重新準備、修改的輪迴之中。為了造福實作人員，將修改的程度予以量化（quantize）是很重要的——在時程上應該要有載明日期的版本資訊。<ref name="人月神話：軟體專案管理之道" />

====組織====

=== 軟體需求 ===
失敗的軟體專案經常發生在開發者與用戶間對需求認知的誤解。開發者抱怨用戶說不清楚需求，而用戶抱怨開發者誤解他們的意思。布魯克斯認為「[[軟體開發|軟體開發]]最困難的單一項目，是精確地決定要建造什麼。」{{NoteTag|Brooks原文：「The hardest single part of building a software system is deciding precisely what to build.」}}

==書目==
* 初版<ref>{{cite book
  | title = The Mythical Man-Month
  | last = Brooks
  | first = Fred P.
  | authorlink = Fred Brooks
  | authormask = 1
  | publisher = Addison-Wesley
  | year = 1975
  | isbn = 0-201-00650-2
  | ref = Brooks, Mythical Man-Month
}}{{en}}</ref>
* 20週年紀念版<ref>{{cite book
  | work = The Mythical Man Month
  | edition = Anniversary Edition with four new chapters
  | chapter = Chap. 17
  | title = 'No Silver Bullet' Refired
  | last = Brooks
  | first = Fred P.
  | authorlink = Fred Brooks
  | authormask = 1
  | publisher = Addison-Wesley
  | year = 1995
  | isbn = 0-201-83595-9
  | ref = Brooks, Mythical Man-Month, Silver Bullet Refired
}}{{en}}</ref>

===二十週年紀念版===
增修內容：<ref name="人月神話：軟體專案管理之道" />
#將[[初版|初版]]中所主張的所有論斷整理出一個簡潔的摘要，包括了原書的主要理念：就人力配置的比例而言，大型軟體專案所面臨的是跟小型專案完全不同的管理問題，這引申出產品的概念整體性是其中的關鍵，而達成概念整體性雖然困難，但卻是可能辦到的。
#作者[[佛瑞德·布魯克斯|佛瑞德·布魯克斯]]對他當初所提出的這些論斷，在經過一個世代之後所做的觀察。
#轉載布魯克斯1986年發表於IEEE《Computer》的論文-{zh-hans:《;zh-hant:〈}-[[沒有銀彈|沒有銀彈]]-{zh-hans:》;zh-hant:〉}-。
#布魯克斯對於他1986年的論斷「十年內不會有任何銀彈」所做的回應。

== 参见 ==
{{Portal|计算机程序设计|软件|工程|书籍}}
*[[反面模式|反面模式]]
*[[代码重构|代码重构]]
*-{zh-hans:《;zh-hant:〈}-[[沒有銀彈|沒有銀彈]]-{zh-hans:》;zh-hant:〉}-
*[[Peopleware:_Productive_Projects_and_Teams|Peopleware: Productive Projects and Teams]]

== 注释 ==
{{NoteFoot}}

== 參考文獻 ==
=== 引用 ===
{{Reflist}}

=== 來源 ===
{{ReflistH}}
; 书籍
* {{cite book |author = Frederick P. Brooks, Jr. |translator = 錢一一 |title = 人月神話：軟體專案管理之道 |location =  |publisher = 經濟新潮社 |year = 2004年 |ISBN = 9867889185 |access-date = 2011-04-12 |url = http://www.cite.com.tw/product_info.php?products_id=7900 |language = zh-TW |archive-url = https://web.archive.org/web/20131108125438/http://www.cite.com.tw/product_info.php?products_id=7900 |archive-date = 2013-11-08 |dead-url = yes }}
{{ReflistF}}

== 外部链接 ==
{{Wikiquote}}
*{{zh-tw}} [https://web.archive.org/web/20110407062914/http://www.books.com.tw/exep/prod/booksfile.php?item=0010254508 人月神話：軟體專案管理之道（20週年紀念版）]
*{{zh-cn}} [http://findbook.tw/book/9787302155676/basic 人月神話（32周年中文紀念版）] {{Wayback|url=http://findbook.tw/book/9787302155676/basic |date=20200221125910 }}
*{{en}} [http://www.amazon.com/Mythical-Man-Month-Software-Engineering-Anniversary/dp/0201835959 The Mythical Man-Month: Essays on Software Engineering, Anniversary Edition (2nd Edition)] {{Wayback|url=http://www.amazon.com/Mythical-Man-Month-Software-Engineering-Anniversary/dp/0201835959 |date=20210122163146 }}
*{{en}} [http://www.cs.unc.edu/~brooks/ Frederick P. Brooks, Jr.個人主頁] {{Wayback|url=http://www.cs.unc.edu/~brooks/ |date=20061224050731 }}
*{{en}} [http://safari.informit.com/0201835959/pref03#X2ludGVybmFsX1RvYz94bWxpZD0wMjAxODM1OTU5L3ByZWYwMg== Preface to 20th Anniversary Edition, as found on Safari.Informit.com] {{Wayback|url=http://safari.informit.com/0201835959/pref03#X2ludGVybmFsX1RvYz94bWxpZD0wMjAxODM1OTU5L3ByZWYwMg== |date=20081208190922 }}
*{{en}} [https://web.archive.org/web/20080702042450/http://www.dfpug.de/loseblattsammlung/online/workshop/design_patterns/sonstiges.htm Organization and Team Patterns]

[[Category:軟體開發|Category:軟體開發]]
[[Category:软件工程|Category:软件工程]]
[[Category:项目管理|Category:项目管理]]
[[Category:電腦書籍|Category:電腦書籍]]
[[Category:1975年书籍|Category:1975年书籍]]