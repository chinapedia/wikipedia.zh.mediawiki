{{NoteTA
|G1=IT
}}
{{校对翻译}}
在[[電腦運算|计算机]]领域，'''文件快捷方式'''是一种[[用户界面|用户界面]]中的[[句柄|句柄]]，它允许用户找到或使用位于另一个目录或文件夹的一个文件或[[資源_(計算機科學)|资源]]。

快捷方式通常被实现为一个包含目标[[统一资源标志符|URI]]或[[全局唯一标识符|GUID]]的小文件，以此指向一个对象或快捷方式所代表的目标程序文件。快捷方式还可能额外指定[[命令行界面|命令行参数]]，从而在运行它时将所定参数传递到目标程序。每个快捷方式都有其自身的图标。快捷方式最常见的地方就是[[桌面环境|桌面]]，以及[[实用程序|应用启动面板]]（例如[[Microsoft_Windows|Microsoft Windows]][[开始选单|开始菜单]]）或[[桌面环境|桌面环境]]的主菜单。在麦金塔（Macintosh）操作系统中等效的功能被称为“别名”，在类[[UNIX|UNIX]]系统中则有[[符号链接|符号链接]]可用。

== 实现 ==

=== Microsoft Windows ===
文件快捷方式是在[[Windows_95|Windows 95]]中被引入。<ref name="WinLNK">{{Citation|title=Windows Confidential: Tracking Shortcuts|date=October 2009|url=http://technet.microsoft.com/en-us/magazine/2009.10.windowsconfidential.aspx|author=Raymond Chen|magazine=TechNet Magazine|accessdate=2017-03-20|archive-date=2016-03-09|archive-url=https://web.archive.org/web/20160309061516/https://technet.microsoft.com/en-us/magazine/2009.10.windowsconfidential.aspx|dead-url=no}}</ref>[[Microsoft_Windows|Microsoft Windows]]使用<tt>.lnk</tt>作为本地文件快捷方式的[[文件扩展名|文件扩展名]]，使用<tt>.</tt><tt>URL</tt>作为远程文件（例如远端网页）快捷方式的文件扩展名。默认情况下，一个箭头会覆盖图标以标识性质，并且快捷方式不显示[[文件扩展名|文件扩展名]]（扩展名在[[Windows资源管理器|Windows资源管理器]]中会始终隐藏，即便在“文件类型”选项中取消选中“隐藏已知文件类型的扩展名”也不会显示。它由<tt>NeverShowExt</tt>选项控制，位于注册表的 <tt>HKEY_CLASSES_ROOT\lnkfile</tt>。<tt>IsShortcut</tt>选项则控制显示箭头）。快捷方式文件可以以最小化或最大化的窗口状态启动程序，只要那个程序支持该窗口状态。

Microsoft Windows的<tt>.lnk</tt>文件是作为[[檔案總管|Windows Explorer]]的扩展，而不是文件系统的扩展。作为外壳扩展，<tt>.lnk</tt>文件不能用在Windows Explorer以外的地方指向文件，并且在Windows Explorer中使用时有其他用途来指向一个本地文件（或GUID）{{what}}。

虽然快捷方式被创建时指向了特定文件或文件夹，但如果目标被移动到其他位置，快捷方式会因此损坏。当打开一个目标不存在的快捷方式时，Explorer将尝试修复该快捷方式。[[Windows_9x|Windows 9x]]的Windows用一个简单的搜索算法来修复损坏的快捷方式。<ref name="WinLNK">{{Citation|title=Windows Confidential: Tracking Shortcuts|date=October 2009|url=http://technet.microsoft.com/en-us/magazine/2009.10.windowsconfidential.aspx|author=Raymond Chen|magazine=TechNet Magazine}}</ref>在以[[Windows_NT|Windows NT]]为基础的操作系统且[[NTFS|NTFS]]的文件系统中，目标对象的唯一标识符会存储在快捷方式中，并且Windows可以使用“Distributed Link Tracking”服务跟踪快捷方式的目标，因此在快捷方式的目标被移动到另一个驱动器时，快捷方式的目标可以被静默更新。<ref>{{Cite web |url=http://support.microsoft.com/kb/312403 |title=Distributed Link Tracking on Windows-based domain controllers |accessdate=2017-03-20 |archive-date=2015-02-25 |archive-url=https://web.archive.org/web/20150225220835/http://support.microsoft.com/KB/312403 |dead-url=no }}</ref>[[Windows_2000|Windows 2000]]中引入的[[Windows_Installer|Windows Installer]]带来了另一种特殊类型的快捷方式，被称为Advertised shortcuts。

Windows中的文件快捷方式可以存储一个不同于目标路径的[[工作目錄|工作目錄]]，其中可以使用环境变量。在快捷方式的属性中还可定义一个[[快捷键|快捷键]]，但生效前提是快捷方式位于[[开始选单|开始选单]]文件夹、任务栏固定的图标，或者放在桌面。从Windows 2000起，文件快捷方式可以存储备注，备注将在鼠标悬停在该快捷方式上时显示。

一般来说，双击快捷方式的效果与双击所指向的应用程序或文档的效果相同，但Windows的快捷方式包含独立的目标和“起始”目录。如果使用未输入“起始目录”的快捷方式，某些应用程序可能会产生“缺少DLL”错误。<ref>{{Cite web |url=http://www.gearhack.com/Forums/DisplayComments.php?file=Computer%2FGames%2FDawn_of_War_-_Dark_Crusade._Error_Loading_Module |title=存档副本 |access-date=2021-12-20 |archive-date=2020-11-12 |archive-url=https://web.archive.org/web/20201112011908/http://www.gearhack.com/Forums/DisplayComments.php?file=Computer%2FGames%2FDawn_of_War_-_Dark_Crusade._Error_Loading_Module |dead-url=no }}</ref>

在[[Windows_Vista|Windows Vista]]及更高的系统中可创建文件系统链接，这提供类似[[符号链接|符号链接]]的功能，但它是[[文件系统|文件系统]]的一个特性。Windows的快捷方式是独立于文件系统的文件，通过Explorer生效。<ref>{{Citation|title=Windows Confidential: Why are Shortcuts Files?|date=September 2006|url=http://technet.microsoft.com/en-us/magazine/2006.09.windowsconfidential.aspx|author=Raymond Chen|magazine=TechNet Magazine|accessdate=2017-03-20|archive-date=2016-03-07|archive-url=https://web.archive.org/web/20160307143502/https://technet.microsoft.com/en-us/magazine/2006.09.windowsconfidential.aspx|dead-url=no}}</ref>

从[[Windows_7|Windows 7]]开始，一些快捷方式还存储“应用程序用户模型ID”（AppUserModelID）。<ref>{{cite web|url=https://msdn.microsoft.com/en-us/library/windows/desktop/dd378459(v=vs.85).aspx |title=Application User Model IDs (AppUserModelIDs) |work=MSDN |publisher=Microsoft |archive-url=https://web.archive.org/web/20150113050254/http://msdn.microsoft.com/en-us/library/windows/desktop/dd378459%28v%3Dvs.85%29.aspx |archive-date=2015-01-13 |dead-url=no }}</ref>不同于目标命令行，AppUserModelIDs可以用来直接启动应用程序。AppUserModelID被某些桌面程序和所有[[Windows_Runtime|WinRT]]模型的应用程序用于启动。

尽管Windows未提供方便的工具来创建，但Explorer支持“文件夹链接”和“外壳链接文件夹”：一个设为“系统”属性的文件夹，包含隐藏的“desktop.ini”（文件夹定制）文件，告知Explorer查找同目录下的“target.lnk”文件，它指向另一个文件夹。当在Explorer中查看时，外壳链接文件夹会呈现目标文件夹的内容——也就是说，定制后的文件夹变成了一个快捷方式。<ref>{{Cite web |url=http://www.techrepublic.com/article/manually-creating-junction-points-in-windows-xp/5388706 |title=Manually creating junction points in Windows XP |access-date=2017-03-20 |archive-date=2017-05-20 |archive-url=https://web.archive.org/web/20170520183244/http://www.techrepublic.com/article/manually-creating-junction-points-in-windows-xp/5388706/ |dead-url=no }}</ref>此技术被微软Windows用于如WebDAV文件夹的项目。不过，Windows Vista及更高版本中提供的“文件系统链接”使“外壳链接文件夹”不再那么实用。

=== Unix ===
某些面向[[类Unix|类Unix]]操作系统的桌面环境（如[[GNOME|GNOME]]、[[KDE|KDE]]）提供[[freedesktop.org|freedesktop.org]] <tt>.desktop</tt><ref>{{cite web|url=http://standards.freedesktop.org/desktop-entry-spec/latest/|title=Desktop Entry Specification|accessdate=2015-07-28|publisher=freedesktop.org|website=freedesktop.org|archive-date=2019-09-22|archive-url=https://web.archive.org/web/20190922081549/https://standards.freedesktop.org/desktop-entry-spec/latest/|dead-url=no}}</ref>文件。这可以用来指向本地或远程文件、文件夹和应用程序。在Unix系统上也可以创建[[符号链接|符号链接]]，能做到类似的功能。

==== 支持桌面快捷方式的X窗口管理器的列表 ====
下面是部分支持在[[桌面环境|桌面]]上使用快捷方式图标的窗口管理器：
* [[4Dwm|4Dwm]]
* {{tsl|en|aewm++}}
* {{tsl|en|Cwm (window manager)||cwm}}
* [[dwm|dwm]]
* {{tsl|en|Ecomorph (window manager)||ecomorph}} 
* {{tsl|en|epiwm}}
* {{tsl|en|fpcbol}}
* {{tsl|en|ion2}}
* [[KWin|KWin]]
* [[Metacity|Metacity]]
* [[Window_Maker|Window Maker]]

=== Mac ===
虽然在Unix子系统中可以创建符号链接，麦金塔（Macintosh）没有对快捷方式的扩展。扩展名.webloc被用于[[Safari|Safari]]浏览器中的互联网URL。Macintosh [[系統7|System 7]]至[[Mac_OS_8|Mac OS 9]]中的“{{tsl|en|Alias (Mac OS)|别名 (Mac OS)|别名}}”采用使用斜体文件名标识以区分。在Mac OS 8及之后的版本中则添加了一个称为“别名箭头”的标识，它是一个在白色小正方形上的黑色箭头，类似Microsoft Windows中的快捷方式。在[[OS_X|Mac OS X]]中，别名的文件名不会被斜体，但仍有箭头标识。此外，别名会保留到对象的动态引用，并且即使在远程服务器上调用文件时也不需要指定别名{{what}}。

== 历史 ==
要在早期的[[图形用户界面|图形用户界面]]中执行一个[[应用软件|应用程序]]或[[渲染|呈现]]一个[[電腦檔案|電腦檔案]]，用户必须点击点击文件的实际所在位置，例如应用程序的可执行文件。将执行一个与可执行文件相关联的指令的图标与该文件本身分离的概念使得图标可以按照功能或任务而不是文件存放的物理结构来分组。这种概念最早在1991年[[金士頓大學|金士頓大學]]出版的研究论文“窗口化图形用户界面的面向任务前端”中描述，并在同年根据学术/商业技术共享协议下提供给[[微软|微软]]和[[帕羅奧多研究中心|Xerox EuroPARC]]。这项研究的简化形式在1991年被并入[[系統7|System 7]]，在四年后被并入[[Windows_95|Windows 95]]。

== 参见 ==
* [[NTFS符号链接|NTFS符号链接]]
* [[硬链接|硬链接]]
* {{tsl|en|Program information file|程序信息文件}}

== 参考资料 ==
{{reflist|30em}}

==外部链接==
* [http://msdn.microsoft.com/en-us/library/dd871305(v=prot.13).aspx "Shell Link (.LNK) Binary File Format"] {{Wayback|url=http://msdn.microsoft.com/en-us/library/dd871305(v=prot.13).aspx |date=20120624073332 }} from Microsoft（[http://msdn.microsoft.com/en-us/library/dd871305(PROT.10).aspx 旧版本] {{Wayback|url=http://msdn.microsoft.com/en-us/library/dd871305(PROT.10).aspx |date=20120129045241 }}）
* [https://web.archive.org/web/20080105124153/http://msdn2.microsoft.com/en-us/library/bb774950.aspx IShellLink interface] for accessing .lnk files in the Windows API
* [http://sourceforge.net/projects/shellify/ "Shellify"] {{Wayback|url=http://sourceforge.net/projects/shellify/ |date=20100730092151 }} Shellify is a 100% managed .NET implementation of the Microsoft Shell Link (.LNK) Binary File Format for accessing .lnk files without the Windows API
* [https://metacpan.org/module/Win32::Shortcut Perl library]

[[Category:可执行文件格式|Category:可执行文件格式]]
[[Category:Microsoft_Windows|Category:Microsoft Windows]]