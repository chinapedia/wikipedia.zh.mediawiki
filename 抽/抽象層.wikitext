{{Unreferenced|time=2009-07-17T16:17:26+00:00 }}
{{Expand|time=2018-12-05T09:12:50+00:00}}
{{NoteTA|G1=IT}}
'''抽象層'''（{{lang-en|abstraction layer}}， abstraction level，或 a layer of abstraction）是一種隱藏獨特功能執行細節的方法。使用抽象層的[[軟體|軟體]]模型包含[[OSI模型|OSI]]網路協定七層模型、[[OpenGL|OpenGL]]繪圖函式庫及以Unix為原本的輸入輸出（I/O）模型，並適用於大部分新一代的作業系統。

在Unix作業系統中，大部分的輸入輸出形式被視為從裝置讀寫的串流值。而串流值模型為了提供獨立裝置被檔案及終端機I/O所使用。為了在應用層讀寫裝置，程式呼叫[[函數|函數]]開啟像是[[終端機|終端機]]的實體裝置或是[[電腦網路|網路]]、[[檔案|檔案]]系統的[[虛擬|虛擬]]裝置。裝置的[[實體|實體]]特徵是被允許程式設計師讀寫資料的作業系統所調用。接著[[作業系統|作業系統]]操作正確的讀寫轉換。

大部分的[[图形库|图形库]]，像是OpenGL，提供抽象圖形裝置模型。這種函式庫的主要功能在於轉換[[程式設計師|程式設計師]]的指令到[[圖形元件|圖形元件]]。這個特殊的繪圖指令與對傳統陰極射線管銀幕的指令不同，而是隱藏了抽象介面的細節。

在[[資訊科學|資訊科學]]，抽象層是[[概念模型_(資訊科學)|模型]]或[[演算法|演算法]]的推廣。

== 參考 ==
{{reflist}}
==相關條目==
*[[应用程序接口|应用程序接口]]（API）
*[[应用二进制接口|应用二进制接口]]（ABI）
*[[編譯器|編譯器]]，程式碼和機械碼之間的抽象化工具
*[[硬體抽象層|硬體抽象層]]
*[[資訊隱藏|資訊隱藏]]
*[[層_(物件導向設計)|層 (物件導向設計)]]
*[[分级保护域|分级保护域]]
*[[操作系统|操作系统]]，程式和電腦硬體之間的抽象層
*[[软件工程|软件工程]]


[[Category:電腦架構|Category:電腦架構]]