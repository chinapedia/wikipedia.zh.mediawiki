在[[數學分析|數學分析]]及應用中，「多維度變換」是用來分析訊號的二維或是多維的頻率成分。
 
== 多維度傅立葉變換 ==

其中一個常用的多維度變換就是[[傅立葉變換|傅立葉變換]]，是將一個訊號的表示式從時域/空域轉換到頻域。<ref name="Smith">Smith,W. Handbook of Real-Time Fast Fourier Transforms:Algorithms to Product Testing, Wiley_IEEE Press, edition 1, pages 73–80, 1995</ref>離散域的多維度傅立葉變換可表示成下列式子：

:<math> F(w_1,w_2,\dots,w_m) = \sum_{n_1=-\infty}^\infty \sum_{n_2=-\infty}^\infty \cdots \sum_{n_m=-\infty}^\infty f(n_1,n_2,\dots,n_m) e^{-j w_1 n_1 -j w_2 n_2 \cdots -j w_m n_m}</math>
                        
其中''F''代表多維度傅立葉變換，''m''代表維度。將''f''定義成多維度的離散域訊號，則逆多維度傅立葉變換為：

:<math> f(n_1,n_2,\dots,n_m) = \left(\frac{1}{2 \pi}\right)^m \int_{- \pi}^{\pi} \cdots \int_{-\pi}^{\pi} F(w_1,w_2,\ldots,w_m) e^{j w_1 n_1 +j w_2 n_2 + \cdots+j w_m n_m} \, dw_1 \cdots \,dw_m </math>

連續域的多維度傅立葉變換可表示成下列式子：<ref name="Smith"/>
:<math>F(\Omega_1,\Omega_2,\ldots,\Omega_m) = \int_{-\infty}^{\infty} \cdots \int_{-\infty}^{\infty} 
f(t_1,t_2,\ldots,t_m) e^{-j \Omega_1 t_1-j \Omega_2 t_2 \cdots -j \Omega_m t_m} \, dt_1 \cdots \,dt_m  </math>

[[快速傅立葉變換|快速傅立葉變換]](FFT)是一種用來計算離散傅立葉變換(DFT)和其逆變換的快速演算法，快速傅立葉變換所得到的結果跟按照定義去算離散傅立葉變換的結果是一樣的，但唯一的差別是快速傅立葉變換的速度快很多。（在捨入誤差的存在下，很多快速傅立葉變換還比直接照定義算還更精準。）有很多種快速傅立葉變換，他們包含很廣泛的數學運算，從簡單的複數運算到數論和群論，詳情可以看[[快速傅立葉變換|快速傅立葉變換]]。

多維度的[[離散傅立葉變換|離散傅立葉變換]]是離散域傅立葉變換的簡單版本，其方法是在均勻間隔下的樣本頻率去估計其值。<ref>Dudgeon and Mersereau, Multidimensional Digital Signal Processing,2nd edition,1995</ref> {{nowrap|''N''<sub>1</sub> × ''N''<sub>2</sub> × ... ''N''<sub>''M''</sub>}}離散傅立葉變換如下式：

:<math>  Fx(K_1,K_2,\ldots,K_n)= \sum_{n_1=0}^{N_1-1} \cdots \sum_{n_m}^{N_m-1} fx(n_1,n_2,\ldots,n_N) e^{-j \frac{2 \pi}{N_1} n_1 K_1  -j \frac{2 \pi}{N_2} n_2 K_2 \cdots -j \frac{2 \pi}{N_m} n_m K_m}   </math>
                                                    
其中{{nowrap|0 ≤ ''K<sub>i</sub>'' ≤ ''N<sub>i</sub>'' − 1}}, {{nowrap|''i'' {{=}} 1, 2, ..., ''m''}}。

The inverse multidimensional DFT equation is

:<math> fx(n_1,n_2,\ldots,n_m)= \frac{1}{N_1 \cdots N_m} \sum_{K_1=0}^{N_1-1} \cdots \sum_{K_m}^{N_m-1} Fx(K_1,K_2, \ldots ,K_m) e^{j \frac{2 \pi}{N_1} n_1 K_1 +j \frac{2 \pi}{N_2}  n_2 K_2\cdots+j \frac{2 \pi}{N_m} n_m K_m}    </math>
                                      
其中{{nowrap|0 ≤ ''n''<sub>1</sub>, ''n''<sub>2</sub>, ... , ''n''<sub>''m''</sub> ≤ ''N''<sub>(1, 2, ... , ''m'')</sub> – 1}}。

== 多維度離散餘弦變換 ==

離散餘弦變換被廣泛的應用，像是[[資料壓縮|資料壓縮]]、特徵萃取、影像重建等等。多維度離散餘弦變換為：

:<math> Fx(K_1,K_2,\ldots,K_r ) = \sum_{n_1=0}^{N_1-1} \sum_{n_2=0}^{N_2-1} \cdots \sum_{n_r=0}^{N_r-1} fx(n_1,n_2,\ldots,n_r) \cos { \frac{ \pi (2n_1+1) K_1}{2N_1}} \cdots \cos { \frac{ \pi (2n_r+1) K_r}{2N_r}}</math>

其中r {{nowrap|''k<sub>i</sub>'' {{=}} 0, 1, ..., ''N<sub>i</sub>'' − 1}}, ''i'' = 1, 2, ..., ''r''.


== 應用 ==

離散傅立葉變換和離散餘弦變換常常被使用在訊號處理<ref>Tan Xiao, Shao-hai Hu, Yang Xiao. 2-D DFT-DWT Application to Multidimensional Signal Processing. ICSP2006 Proceedings, 2006 IEEE</ref>和影像處理，也常被用來當作解偏微分方程式時更有效率的方法。離散傅立葉變換也可用在運算摺積或是乘上很大的整數。下列只列出一些例子。

=== 影像處理 ===

[[Image:Dctjpeg.png|thumb]]中的二維度離散餘弦變換頻率]]

離散餘弦變換被用在 [[JPEG|JPEG]] 影像壓縮、[[MJPEG|MJPEG]]、[[MPEG|MPEG]]、[[DV|DV]]和 [[Theora|Theora]]影片壓縮上。壓縮時使用''N''x''N'格的二維的離散餘弦變換(DCT-II)然後再被[[量化|量化]]且用[[熵編碼法|熵編碼法]]編碼，通常''N''為8，而DCT-II的運算就用在該格的每一行和每一排，結果會生成8x8的變換係數矩陣，其中(0,0)(左上角)的值是直流分量(頻率為0)，隨著水平或垂直的編號增加，代表水平或垂直的空間頻率增加，如右圖所示。

在影像處理方面，利用二維的離散餘弦變換可以分析並且描述非常規的圖形加密方法，像是在二維圖像平面中插入非可見的二進位制水印。<ref>Peter KULLAI, Pavol SABAKAI, JozefHUSKAI. Simple Possibilities of 2D DCT Application in Digital
Monochrome Image Cryptography. Radioelektronika, 17th International Conference, IEEE, 2007, pp. 1–6</ref>利用不同的方向，DCT-DWT混雜的轉換也可以用來去除超音波影像的雜訊。<ref>Xin-ling Wen, Yang Xiao. The 2-D Directional DCT-DWT Hybrid Transform and Its Application in Denoising Ultrasound Image. Signal Processing. ICSP 2008. 9th International Conference, Page(s): 946–949</ref>三維的離散餘弦變換可以被用來轉換在使用水印影像遷入的影片資料或是三維影像資料。<ref>Jinwei Wang, Shiguo Lian, Zhongxuan Liu, Zhen Ren, Yuewei Dai, Haila Wang. Image Watermarking Scheme Based on 3-D DCT.Industrial Electronics and Applications, 2006 1ST IEEE Conference, pp. 1–6</ref><ref>Jin Li, Moncef Gabbouj, Jarmo Takala, Hexin Chen. Direct 3-D DCT-to-DCT Resizing Algorithm for Video Coding. Image and Signal Processing and Analysis, 2009. ISPA 2009. Proceedings of 6th International Symposium
pp. 105–110</ref>


=== 頻譜分析 ===

當使用離散傅立葉變換來做[[頻譜|頻譜分析]]時，{''x<sub>n</sub>''}的數列通常代表著從訊號 ''x''(''t'')中在均勻的時間點做取樣所得到的有限集合，這樣將連續時間點經取樣離散化後，也將原本的[[傅立葉變換|傅立葉變換]]轉變成[[離散時間傅立葉變換|離散時間傅立葉變換]](DTFT)，通常也因此產生了[[混疊|混疊]]的失真。為了要最小化這種失真，選擇適當的取樣頻率是重點(詳情請看[[取樣定理|取樣定理]])。同樣的，將一個非常長(或無限)的數列轉變成一個容易處理的大小，會因此造成失真(Spectral leakage)，選取一個適當的子數列長度是最小化這個問題的關鍵點。當資料量大於達到理想頻率解析度所需的適量時，標準的作法是使用多個DFT，例如產生[[頻譜圖|頻譜圖]]的時候。如果所期望的結果是功率頻譜而且有雜訊或隨機訊號出現在資料內的話，多個DFT的振幅平均值可以用來減少頻譜的變異性，[[Welch_method|Welch method]]和[[Bartlett_method|Bartlett method]]就是這種技術。一般處理這種用來估計有雜訊的訊號的功率頻譜的方法就稱為頻譜估計。

其實會造成失真的主要源頭就是DFT本身，因為DFT是將DTFT這種連續性的頻域做離散取樣的結果，可以利用提高DFT的頻率解析度來減緩這問題。
*這種方法有時候也被認為是零填充，這是一種被用在[[快速傅立葉變換|快速傅立葉變換]]的一種特別應用。這種因為值為零的取樣點而產生的乘法與加法比原本的FFT產生偏移還要沒有效率。
*如上面所言，失真(leakage)的問題對DTFT的頻率解析度造成了限制，因此會對透過提高頻率解析度的效益造成限制。


=== 偏微分方程式 ===

離散傅立葉變換時常被用來解[[偏微分方程式|偏微分方程式]]，其中DFT是被用來近似[[傅立葉級數|傅立葉級數]]，其優點在於將訊號延伸為複數指數函數''e''<sup>''inx''</sup>，而這微分方程式的特徵函數為：''d''/''dx'' ''e''<sup>''inx''</sup> = ''in'' ''e''<sup>''inx''</sup>，因此，微分在傅立葉變換後的表示式下變得很簡單，只要乘上''i n'' (但是因為[[混疊|混疊]]的影響，''n''的選擇不一定是唯一的，為了讓這樣的方法達到收斂，需要使用三角插值去選擇這個值)。一個[[線性微分方程式|線性微分方程式]]且其係數為常數經由離散傅立葉變換後會變換成很容易解的代數等式，將解完等式的結果用逆離散傅立葉變換就能回到原來的時/空域表示式。

=== 用快速傅立葉變換處理影像藝術面的分析 ===

我們必須使用沒有損害的方法去得到一些關於藝術稀有的資訊(從HVS的觀點是著重於色度法以及空間資訊)。我們可以透過觀察色彩變化或是測量表面一制性的變化來了解藝術，因為整個影像是非常大的，所以我們會使用一個雙生的餘弦窗去擷取影像：<ref name="Angelini et al">Angelini, E., Grassin, S. ; Piantanida, M. ; Corbellini, S. ; Ferraris, F. ; Neri, A. ; Parvis, M. FFT-based imaging processing for cultural heritage monitoring  Instrumentation and Measurement Technology Conference (I2MTC), 2010 IEEE</ref>

:<math> w(x,y)=\frac{1}{4} \left(1 + \cos {\frac{x \pi}{N}}\right)\left(1 + \cos {\frac{y \pi}{N}}\right) </math>

	其中''N''是影像的維度， ''x'', ''y''是從影像中心(0,0)所擴展的座標(從0到''N''/2)，可將空間頻率表示成下式：<ref name="Angelini et al"/>

:<math> A_m {(f)}^2= \left[\sum_{i=-f}^f \operatorname{FFT}(-f,i)^2+ \sum_{i=-f}^f \operatorname{FFT}(f,i)^2+ \sum_{i=-f+1}^{f-1} \operatorname{FFT}(i,-f)^2+ \sum_{i=-f+1}^{f-1} \operatorname{FFT}(i,f)^2 \right] </math>

	“FFT”為快速傅立葉變換， ''f''是空間頻率。這種基於FFT的成像方法是一種診斷技術，用以確保文化藝術的長壽及穩定。這是一種簡單、成本低且可用於博物館又不影響日常是用的方法，但這種方法沒辦法定量的量測腐蝕速率。


== 參見 ==
* [[離散餘弦變換|離散餘弦變換]]

== 參考資料 ==
<!--- See http://en.wikipedia.org/wiki/Wikipedia:Footnotes on how to create references using <ref></ref> tags which will then appear here automatically -->

{{Reflist}}

[[Category:傅里葉分析|Category:傅里葉分析]]
[[Category:積分變換|Category:積分變換]]