{{Refimprove|time=2018-07-15T09:48:58+00:00}}
{{NoteTA
|G1 = IT
|1 = 编程=>zh-tw:程式設計; 编程=>zh-hk:程式設計; 编程=>zh-mo:程式設計;
}}
{{各地中文名
|cn = 计算机程序
|sg = 电脑程序
|tw = 電腦程式
}}
{| class="infobox" style="width:30em"
|-
|<syntaxhighlight lang="c">#include <stdio.h>
int main(void) {
    printf("Hello world!\n");
    return 0;
}</syntaxhighlight>
|-
| [[C语言|C]]的[[Hello_World|Hello World]]程式樣例
|}

{| class="infobox" style="width:30em"
|-
|<syntaxhighlight lang="java">
public class HelloWorld {
    public static void main(String[] args){
        System.out.println("Hello World!");
    }
}
</syntaxhighlight>
|-
| [[Java|Java]]的Hello World程式樣例
|}
{| class="infobox" style="width:30em"
|-
|<syntaxhighlight lang="csharp">using System;

    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("Hello World!");
        }
    }

</syntaxhighlight>
|-
| [[C♯|C♯]]的Hello World程式樣例
|}

{| class="infobox" style="width:30em"
|-
|<syntaxhighlight lang="python3">
print("Hello World!")
</syntaxhighlight>[[Python|Python]] 3的Hello World程式样例
|}

{| class="infobox" style="width:30em"
|-
|<syntaxhighlight lang="c"++>#include <iostream>
int main()
{
    std::cout<<"Hello World!"<<endl;
    return 0;
}
</syntaxhighlight>
|-
| [[C++|C++]]的[[Hello_World|Hello World]]程式樣例
|}
'''计算机程序'''（{{lang-en|'''Computer Program'''}}）是指一组指示[[电子计算机|电子计算机]]或其他具有[[訊息|訊息]]处理能力的[[電子|電子]]装置每一步动作的指令，通常用某种[[程序设计语言|程序设计语言]]编写，运行于某种目标体-{系}-结构上。打个比方，一个程序的源代码就像一个用汉语（程序设计语言）写下的红烧肉菜谱（程序源代码），用于指导懂汉语（編譯器）同時也會烹饪手法（体系结构）的人来做这道''菜''（程序）。 通常，以英文文本為基礎的计算机程序要经过[[編譯|編譯]]和[[链接器|連結]]而成为一种人们不易看清而计算机可解讀的一連串數字的格式，然后放入运行。这种程序也叫作[[编译语言|编译语言]]。未经编译就[[可运行|可运行]]的程序，通常称之为[[腳本語言|脚本程序]]（script）或[[解释型语言|解释型语言]]。

== 程序的运行 ==
为了一个程序运行，计算机加载程序代码，可能还要加载数据，从而[[初始化|初始化]]成一个开始状态，然后调用某种启动机制。在最低层上，这些是由一个[[載入器|載入器]]开始的。

在大多数计算机中，[[操作系统|操作系统]]例如[[Windows|Windows]]等，加载并且执行很多程序。在这种情况下，一个计算机程序是指一个单独的[[可执行|可执行]]的映射，而不是当前在这个计算机上运行的全部程序。

== 冯诺依曼体系结构 ==
{{Main|冯·诺伊曼结构{{!}}冯诺依曼体系结构}}
在一台基于最常见的冯诺依曼体系结构（又称普林斯顿结构）的计算机上，程序从某种外部设备，通常是[[硬盘|硬盘]]，被加载到计算机之內。 如果计算机选择冯诺依曼体系结构，那么程序就被加载入-{zh-hans:内存; zh-hant:記憶體;}-。 指令序列顺序执行，直到一条跳转或转移指令被执行，或者一个[[中断|中断]]出现。所有这些指令都会改变[[指令寄存器|指令寄存器]]的内容。

基于这种体系的计算机，如果没有程序的支持，将无法工作。一个计算机程序是一系列指令的集合。

程序裡的指令都是基于[[机器语言|机器语言]]；程序通常首先用一种计算机[[程序设计语言|程序设计语言]]编写，然后用[[編譯器|編譯器]]或者[[直譯器|直譯器]]翻译成机器语言。 有时，也可以用-{zh-hans:[[汇编语言|汇编语言]]; zh-hant:[[組合語言|組合語言]];}-编程，-{zh-hans:汇编; zh-hant:組合;}-语言实质就是表示机器语言的一组记号－在这种情况下，用于翻译的程序叫做-{zh-hans:[[汇编程序|汇编程序]]; zh-hant:組譯程式;}-。

== 程序和数据 ==
数据可以被定义为被程序处理的信息。当我们考虑到整个计算机系统时，有时程序和数据的区别就不是那么明显了。[[中央处理器|中央处理器]]有时有一组微指令控制硬件，数据可以是一个有待执行的程序（参见[[脚本语言|脚本编程语言]]），程序可以编写成去编写其它的程序；所有这些例子都使程序和数据的比较成为一种视角的选择。有人甚至断言程序和数据没有区别。

编写一个程序去生成另外一个程序的过程被称之为[[元编程|元编程]]（{{lang|en|Metaprogramming}}）。它可以被应用于让程序根据给定数据生成代码。单单一个程序可能不足以表示给定数据的所有方面。让一个程序去分析这个数据并生成新的程序去处理数据所有的方面可能会容易一些。[[Lisp|Lisp]]就是一例支持这种编程模式的程序语言。

在[[人工神经网络|神经网络]]裡储存的权重是一种数据。正是这些权重数据，跟[[网路|网路]]的[[拓扑结构|拓扑结构]]一起，定义了网络的行为。人们通常很难界定这些数据到底表示什么或者它们是否可以由程序来代替。这个例子以及跟[[人工智能|人工智能]]相关的其它一些问题进一步考验程序和数据的区别。

== 算法 ==
{{main|算法}}

算法指解决某个问题的严格方法，通常还需辅以某种程度上的运行[[性能分析|性能分析]]。算法可以是纯理论的，也可以由一个计算机程序实现。理论算法通常根据[[复杂性|复杂性]]分为不同类别；实现的算法通常经过[[性能分析|剖析]]（{{lang|en|Profiling}}）以测试其性能。请注意虽然一个算法在理论上有效可行，但是一个糟糕的算法仍会浪费宝贵的计算机[[资源|资源]]。（更详细信息，参见[[算法信息论|算法信息论]]（{{lang|en|Algorithmic Information Theory}}））

== 开发 ==
编写程序是以下步骤的一个往复过程：编写新的[[源代码|源代码]]，测试、分析和提高新编写的代码以找出[[语法|语法]]和[[语义|语义]]错误。从事这种工作的人叫做[[程序员|程序员]]。由于计算机的飞速发展，编程的要求和种类也日趋多样，由此产生了不同种类的程序设计员，每一种都有更细致的分工和任务。[[软件工程师|软件工程师]]和[[系统分析员|系统分析员]]就是两个例子。现在，编程的长时间过程被称之为“软件开发”或者[[软件工程|软件工程]]。后者也由于这一学科的日益成熟而逐渐流行。

因此，如今程序设计员可以指某一领域的编程专家，也可以泛指{{le|软件公司|Software company}}裡编写一个复杂软件系统里某一块的一般程序员。一组为某一软件公司工作的程序员有时会被指定一个[[程序组长|程序组长]]或者[[项目经理|项目经理]]，用以监督项目进度和完成日期。大型软件通常经历由系统设计师掌握的一个长时间的设计阶段，然后才交付给开发人员。牛仔式的编程（未经详细设计）是不为人所齿的。

两种当今常见的程序开发方式之一是[[项目组开发|项目组开发]]方式。使用这种方式项目组里每一个成员都能对项目的进行发表意见，而由其中的某一个人协调不同意见。这样的项目组通常有15个左右的成员，这样做是为了便于管理。第二种开发方式是[[结对开发|结对开发]]。

== 参见 ==
* [[程序员|程序员]]
* {{le|卸载程序|Uninstaller}}
* [[源代码|源代码]]
* [[電子計算機|電子計算機]]
* [[计算机软件|计算机软件]]
* [[程序设计语言|程序设计语言]]
* [[編程典範|編程典範]]
* [[固件|固件]]
* [[操作系统|操作系统]]
* [[图灵机|图灵机]]
* [[系统需求|系统需求]]
* [[巨集|巨集]]

== 参考文献 ==
# Eric Baum ''What is Thought'' MIT Press 2004年 ISBN 0-262-02548-5
# - Chapter Two: The Mind is a Computer Program

== 外部链接 ==
* [http://www.webopedia.com/TERM/P/program.html 计算机程序的定义@ Webopedia]{{Wayback|url=http://www.webopedia.com/TERM/P/program.html |date=20041105012507 }}

{{Authority control}}

[[Category:计算机编程|Jisuanjichengxu]]
[[Category:软件工程|Jisuanjichengxu]]