[[软件工程|软件工程]]中的'''單體式應用程式'''（{{lang-en|Monolithic application}}）是指單層的[[应用程序|应用程序]]，其[[用户界面|用户界面]]和資料存取程式整合在單一[[系统平台|系统平台]]上的一個程式裡。

單體式應用程式可以獨立運作，不會受到其他應用程式的影響。其設計理念是此應用程式不只負責單一特定任務，所負責的是要完成特定功能所需要進行的所有步驟<ref>Information Technology Services [http://www.its.state.nc.us/Information/Glossary/glossm.asp Monolithic Application] {{webarchive|url=https://web.archive.org/web/20070902151937/http://www.its.state.nc.us/Information/Glossary/Glossm.asp |date=2007-09-02 }} Retrieved on 28 November 2019</ref>。像目前有些個人財務管理軟體就屬於單體式應用程式，可以讓使用者進行單一任務，以端到端的方式進行，類似[[信息煙囪|信息煙囪]]，不是大型應用程式中的一部份。有些[[文字处理器|文字处理器]]也屬於單體式應用程式<ref>Microsoft [http://msdn2.microsoft.com/en-us/library/aa480455.aspx Three-tier Application] Retrieved on 3 August 2007</ref>。有時這些應用程式是用在[[大型计算机|大型计算机]]上。

在软件工程中，單體式應用程式是指在設計時沒有考慮[[模組化設計|模組化]]的程式{{cn|date=September 2020}}。一般而言會希望軟體有模組化的特性，因為可以[[複用|複用]]應用邏輯中的一部份，在維護時也可以只更換應用程式中的一部份，不需更改整個應用程式。

若要達到模組化的特性，有許多不同的做法。以程式碼為基礎的模組化是讓開發者復用應用程式中的一部份，也可能進行修改，不過需要有開發工具實現這些機能，而應用程式也需要重新[[編譯|編譯]]。以物件為基礎的模組化會將應用程式變成許多的執行檔，各執行檔可以獨立維護，也可以更換，不需要重新佈置整個應用程式（例如[[动态链接库|动态链接库]]，Sun/UNIX中的「共用物件」檔）{{cn|date=September 2020}}。有些系統可以在物件之間傳送資訊，因此物件為基礎的應用程式可以分散在不同的電腦上（例如微軟的COM+）。[[服務導向架構|服務導向架構]]是用特殊的通訊標準或通訊協定，在各模組之間進行通訊。

「單體式應用程式」原來的意思是指沒有模組化的大型電腦應用程式{{cn|date=September 2020}}。此一特點，再加上運算能力的快速提昇，以及軟體可解決問題的難度越來越高，最後會產生無法維護的系統以及[[软件危机|软件危机]]

== 參考資料==
{{reflist}}
== 相關條目 ==
* [[微服務|微服務]]
* [[软件架构|软件架构]]
* [[架构描述语言|架构描述语言]]
* [[多层架构|多层架构]]
{{软件设计模式}}
[[Category:軟體史|Category:軟體史]]
[[Category:软件架构|Category:软件架构]]