{{noteTA
|T=zh-hans:低级语言; zh-hant:低階語言;
|G1=IT
}}
'''低级语言'''（{{lang-en|'''Low-level programming language'''}}），是[[计算机科学|计算机科学]]相关的术语，指的是一类電腦[[程式語言|程式語言]]。該類程式語言之所以被稱為低階，是因为它很少提供或不提供计算机的指令集体系结构——也就是语言映射中与处理器指令紧密相关的命令或函数。<ref>{{Cite book|url=https://books.google.co.jp/books?isbn=7302118493|last=袁景凌|date=2005|publisher=清华大学出版社有限公司|isbn=9787302118497|language=zh|title=软件工程}}</ref>“低级”一词是指其和机器语言之间很少或根本不存在一定程度的抽象<ref>{{Cite book|url=https://books.google.co.jp/books?isbn=7302122717|date=2006|publisher=清华大学出版社有限公司|isbn=9787302122715|language=zh|title=计算机系统结构精髓}}</ref>，因此低级语言有时被描述为“接近硬件”。用低级语言编写的程序往往是相对不可移植的。

低级语言一般指机器代码或汇编语言。<ref>{{Cite web|url=https://dywang.csie.cyut.edu.tw/dywang/clanguage/node6.html|title=高階與低階|accessdate=2018-03-29|work=dywang.csie.cyut.edu.tw|archive-date=2016-10-28|archive-url=https://web.archive.org/web/20161028100818/http://dywang.csie.cyut.edu.tw/dywang/clanguage/node6.html|dead-url=no}}</ref>但是低階與高階其實只是相對的概念，比如[[Java|Java]]對比[[C語言|C語言]]可以被認為是一種相對高階的程式語言。

低级语言可以在没有编译器或解释器的情况下转换为机器码——第二代编程语言使用称为汇编器的简单处理器——并且生成的代码直接在处理器上运行。使用低级语言编写的程序可以运行速度非常快，而占用的内存较少。相应的，高级语言中的等效程序可能效率较低并使用更多内存。低级语言尽管在代码层面上很简单，但由于程序员必须记住许多技术细节，因而难以使用。相比之下，高级编程语言将[[计算机体系结构|计算机体系结构]]的执行语义与程序规范隔离开来，这简化了开发。

低级编程语言有时可分为两类：第一代和第二代。{{cn|date=March 2017}}

== 参考文献 ==
<references />

{{X86汇编话题}}
{{程式語言小作品}}

[[Category:程序设计语言|D]]