'''IEC 61131-3'''是由[[國際電工委員會|國際電工委員會]]（IEC）於1993年12月所制定[[IEC_61131|IEC 61131]]標準的第3部分，用於規範[[可程式邏輯控制器|可程式邏輯控制器]]（PLC），[[DCS|DCS]]，[[IPC|IPC]]，[[CNC|CNC]]和[[SCADA|SCADA]]的編程系統的標準，應用IEC 61131-3標準已經成為工業控制領域的趨勢。
在PLC方面，編輯軟體只需符合IEC 61131-3國際標準規範，便可藉由符合各項標準的語言架構，進而能建立任何人皆可瞭解的程式。
== 概述 ==
[[自動控制|自動化控制]]是由許多[[電子|電子]]與控制器等元件所組成，在90年代之前其控制器不僅佔用空間大，且迴路流程不易修改與維護，[[可程式控制器|可程式控制器]]的出現使得這些問題得以決解，它也逐漸取代傳統的[[繼電器|繼電器]]元件控制方式，諸多廠商投入可程式控制器的開發，使的可程式控制器的語法也越來越多，造成使用者在不同廠牌間程式轉換不便的困擾。因此，國際電工委員會便開始收集整理各家控制語法，在1993年制定了IEC 61131-3標準以統一可程式控制器的語法。

IEC 61131-3規範的語法提出一套可跨不同目標平台的可程式控制器實現機制。規範中透過模組化的規劃與設計，將控制動作分為邏輯運算與硬體動作兩個部份，邏輯部分以共同的描述格式來統一IEC 61131-3所定義的各語法並加以實現，硬體動作則針對各硬體設計專屬之韌體函式庫，使得控制邏輯可以在各目標平台上使用硬體資源，這樣的設計使不同的控制晶片皆可執行以IEC 61131-3語法所設計的控制動作，而設計人員只需學會IEC 61131-3語法，便可使用所支援的控制晶片進行可程式控制器設計。此外，由於所設計的程式碼可以在不同的目標平台間重複使用，因此，透過自行建立的函式庫及利用重複使用的特性，更可縮短自動化流程的開發時程。

== 程式語言種類 ==
以下詳見於[[可程式邏輯控制器|可程式邏輯控制器]]（PLC）
*[[指令表|指令表]]（Instruction List Diagram，ILD）
*[[階梯圖|階梯圖]]（Ladder Diagram，LD）
*[[功能區塊圖|功能區塊圖]]（Function Block Diagram，FBD）
*[[結構化文字|結構化文字]]（Structured Text Language，STL）
*[[順序功能流程圖|順序功能流程圖]]（Sequential Function Chart，SFC）

== 功用 ==
軟體開發效率之提升

在程序组织单元（Program Organization Units, 簡稱POU)或工作表（worksheets）中的程式設計可使用[[結構化設計|結構化]]的設計方法，透過功能及流程的區分建立程式。此方法能讓多位設計師區分出其中的程式設計，而達到大量減少程式建立的時間。

==參考文獻==
<div class="references-small">
<references></references>
</div>

== 外部連結 ==
*[https://web.archive.org/web/20100730111148/http://www.fujielectric.co.jp/fcs/eng/product/plc/lineup/sph/function.html 富士電機機器制御株式會社官方網站]
* [http://www.plcs.net/contents.shtml Beginners PLC Primer]{{Wayback|url=http://www.plcs.net/contents.shtml |date=20110725175312 }}
'''Forums on LinkedIn'''<br />
* [http://www.linkedin.com/groups?mostPopular=&gid=2140043 IEC 1131 Forum Group]{{Wayback|url=http://www.linkedin.com/groups?mostPopular=&gid=2140043 |date=20110611192015 }}
* [http://www.linkedin.com/groups?mostPopular=&gid=1860933 TwinCAT Forum Group]

[[Category:IEC標準|#61131-3]]
[[Category:自動控制|Category:自動控制]]