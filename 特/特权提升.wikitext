{{NoteTA
|G1=IT
}}
{{Refimprove|time=2017-03-29T18:25:57+00:00}}
[[File:Privilege_Escalation_Diagram_zh-CN.svg|缩略图]]访问内核的路径。小门表示正常的特权提升，用户必须证实为管理员才能穿越它。]]
'''特权提升'''（{{lang-en|'''Privilege escalation'''}}）是指利用[[操作系统|操作系统]]或[[应用软件|应用软件]]中的[[程序错误|程序错误]]、设计缺陷或配置疏忽来取得对应用程序或[[用户|用户]]来说受保护[[資源_(計算機科學)|资源]]的高级访问权限。其结果是，应用程序可以取得比[[程序员|应用程序开发者]]或[[系统管理员|系统管理员]]预期的更高的{{tsl|en|Privilege (computing)|特权 (计算机)|特权}}，从而可以执行[[授權_(資安)|授權]]的动作。

== 背景 ==
大多数计算机系统的设计是面向着多个用户。{{tsl|en|Privilege (computing)|特权 (计算机)|特权}}表示用户被允许执行的操作。常见的特权包括查看、编辑或修改系统文件。

特权提升表示用户设法得到本不应该有的权限。这些权限可能用于删除文件、查看私人信息或者安装非法程序（如[[计算机病毒|计算机病毒]]或[[恶意软件|恶意软件]]）等，也可能用来解除制造商或管理员的某些特殊限制。它的发生通常是因为系统存在一个允许绕过安全措施的[[程序错误|程序错误]]，或者利用了设计上的缺陷。特权提升有两种形式：
* '''垂直特权提升'''，是通常所指的特权提升（privilege elevation），其中较低特权的用户或应用程序将能访问为较高特权用户或应用程序保留的功能或内容（例如，[[网上银行|网上银行]]用户访问到网站管理功能，或者绕过密码认证措施）
* '''水平特权提升'''，指普通用户访问到本应不能访问的为其他普通用户保留的功能或内容（例如网上银行用户A访问了用户B的网上银行账户）

== 垂直特权提升 ==
[[File:Priv_rings.svg|缩略图]]在[[保護模式|保護模式]]下的特权环]]
当用户或[[进程|进程]]取得比管理员或系统开发者预期的更高访问级别时，这种特权提升则已发生，这可能以执行[[分级保护域|内核级]]操作表现。

=== 例子 ===
在某些范例中，高特权应用程序假定它只是提供与接口规范匹配的输入，并且不会验证输入。然后，攻击者可以利用这一假设，使未经授权的代码以应用程序的特权运行：
* 有些[[Windows服务|Windows服务]]是配置为在Local System用户帐户下运行。诸如[[缓冲区溢出|缓冲区溢出]]等隐患可能被用来执行特权提升，从而在本地系统级别执行任意代码。除此之外，如果模拟用户时的错误处理不正确（例如，用户引入一个恶意的[[异常处理|错误处理程序]]），采用较低用户特权的系统服务也可能被提升用户特权。
* 在部分旧版[[Microsoft_Windows|Microsoft Windows]]操作系统中，All Users的[[螢幕保護裝置|屏幕保护程序]]在Local System帐户下运行——任何帐户都可以替换[[文件系统|文件系统]]中或[[注册表|注册表]]中的当前屏幕保护程序的[[執行檔|執行檔]]，从而提升特权。
* 在特定版本的[[Linux内核|Linux内核]]中，可以编写一个将当前目录设置为<code>/etc/cron.d</code>的程序，然后设法使当前应用被另一个进程[[Kill_(命令)|kill]]并产生一个[[核心转储|核心转储]]。核心转储文件被放置到程序的当前目录，即<code>/etc/cron.d</code>，然后<code>[[cron|cron]]</code>将会视它为一个文本文件并按它的指示运行程序。因为该文件的内容可能受到攻击者的控制，因而攻击者将能以[[超级用户|root]]特权执行任意程序。
* {{tsl|en|Cross Zone Scripting|跨区域脚本}}是一种特权提升攻击，其中网站击破了[[网页浏览器|网页浏览器]]的安全模型，从而可以在[[客户端|客户端]]的计算机上运行恶意代码。
* 还有一种情况是，应用程序可能使用其他高特权服务，并对客户端操控这些服务的用法有着不正确的假设。如果应用程序使用未经检查的输入作为执行的一部分，则它可能出现[[代碼注入|代碼注入]]问题，从而执行用户提供的[[命令行界面|命令行]]或[[Unix_shell|shell]]命令。攻击者因而可以使用应用程序的权限运行系统命令。 
* [[德州仪器|德州仪器]]计算器（特别是[[TI-85|TI-85]]和[[TI-82|TI-82]]）最初被设计为仅解释以[[TI-BASIC|TI-BASIC]]的方言编写的程序。但是，在用户发现可利用漏洞允许在计算器硬件上执行[[Zilog_Z80|Z-80]]代码后，TI发布了编程数据以支持第三方开发。（此做法并未延伸到基于[[ARM架構|ARM架構]]的{{tsl|en|TI-Nspire}}，在使用{{tsl|en|TI-Nspire series#Ndless||Ndless}}的越狱方法被发现后，此做法仍被德州仪器积极打击。）
* 部分[[iPhone|iPhone]]版本允许未授权的用户在已锁定时访问手机。<ref>{{Cite web|url=http://www.redmondpie.com/ios-4.2-to-fix-ios-4.1-lockscreen-security-flaw/|title=Apple Acknowledges iOS 4.1 Security Flaw. Will Fix it in November with iOS 4.2|date=October 27, 2010|last=Taimur Asad|publisher=RedmondPie|accessdate=2017-03-29|archive-date=2013-04-17|archive-url=https://www.webcitation.org/6FwR8LAzO?url=http://www.redmondpie.com/ios-4.2-to-fix-ios-4.1-lockscreen-security-flaw/|dead-url=no}}</ref>

==== 越狱 ====
'''越狱'''（'''jailbreak'''）是用于在[[类Unix系统|类UNIX]]操作系统中击破[[chroot|chroot]]或[[FreeBSD_jail|jail]]<ref>{{Cite book|url=https://books.google.com/books?id=LILroPpCP0cC&pg=PT324&dq=chroot+jailbreak&hl=en&sa=X&ei=nnrzU6jtFMe5igLBnIDwAg&ved=0CCkQ6AEwAA#v=onepage&q=chroot%20jailbreak&f=false|title=Security Warrior|last=Peikar|first=Cyrus|date=2004-01-12|publisher=[[O'Reilly_Media|O'Reilly Media]]|accessdate=2014-08-19|isbn=9780596552398|page=304|archive-date=2016-12-02|archive-url=https://web.archive.org/web/20161202191854/https://books.google.com/books?id=LILroPpCP0cC&pg=PT324&dq=chroot+jailbreak&hl=en&sa=X&ei=nnrzU6jtFMe5igLBnIDwAg&ved=0CCkQ6AEwAA#v=onepage&q=chroot%20jailbreak&f=false|dead-url=no}}</ref>的限制或绕过[[数字版权管理|数字版权管理]]（DRM）的行为或工具。在前一种情况下，它允许用户查看管理员计划给应用程序或用户使用的[[文件系统|文件系统]]部分之外的文件。在DRM情况下，这将允许用户在具有DRM的设备上运行任意代码，以及突破类似chroot的限制。该术语起源于[[iPhone|iPhone]]/[[iOS|iOS]]越狱社区，并也被用于[[PlayStation_Portable|PlayStation Portable]]破解的术语。这些设备已一再遭到越狱从而为执行任意代码，供应商的更新则在封堵这些越狱途径。

[[iOS|iOS]]系统（包括[[iPhone|iPhone]]、[[iPad|iPad]]和[[iPod_touch|iPod touch]]）自发布以来都受到过[[越獄_(iOS)|越獄]]的尝试，并在随着每个固件更新而修正与跟进。<ref>{{Citation|title=Apple's Disagreement With Orange, IPhone Hackers|date=2007-09-27|url=http://paidcontent.org/article/419-apples-disagreement-with-orange-iphone-hackers/|author=James Quintana Pearce|publisher=paidContent.org|access-date=2011-11-25|deadurl=yes|archiveurl=https://archive.is/20120729201507/http://paidcontent.org/article/419-apples-disagreement-with-orange-iphone-hackers/|archivedate=2012年7月29日|df=}}</ref><ref>[http://www.computerworld.com/action/article.do?command=viewArticleBasic&taxonomyId=11&articleId=9054719&intsrc=hm_topic Reports: Next iPhone update will break third-party apps, bust unlocks] {{Wayback|url=http://www.computerworld.com/action/article.do?command=viewArticleBasic&taxonomyId=11&articleId=9054719&intsrc=hm_topic |date=20080104084911 }} ''[//en.wikipedia.org/wiki/ComputerWorld ComputerWorld]'' on v1.1.3</ref>iOS越狱工具包含选项来安装[[Cydia|Cydia]]——一个第三方的[[App_Store_(iOS)|App Store]]，作为查找和安装系统修改器和二进制文件的一种方式。为防止iOS越狱，苹果公司已对设备的[[啟動程式|啟動程式]]采用{{tsl|en|SHSH blob}}执行检查，从而禁止上传自定义内核，并防止将软件降级到较早的可越狱固件。在未受限制的越狱中，iBoot环境被更改为执行一个boot ROM漏洞，并允许提交对底层bootloader的补丁，或者hack内核以在SHSH检查后转交给越狱内核。

一种类似的越狱方法也存在于[[Series_60|S60平台]]的智能手机，它涉及到在内存<ref>{{Cite web|url=http://dailymobile.se/forum/index.php?topic=1165.0|title=Announcement: Forum down for maintaining|accessdate=August 30, 2016|date=Feb 16, 2010|last=Phat^Trance|quote=Just wanted to let you guys know that the forum is down for maintaining. It will be back online in a day or so (i kinda messed up the config files and need to restore one day old backup, so i thought why not update the entire server platform)|deadurl=yes|archiveurl=https://web.archive.org/web/20090303164625/http://dailymobile.se/forum/index.php?topic=1165.0|archivedate=2009年3月3日}}</ref><ref>{{Cite web |url=http://symbianism.blogspot.com/2009/02/helloox-103-one-step-hack-for-symbian.html |title=HelloOX 1.03: one step hack for Symbian S60 3rd ed. phones, and for Nokia 5800 XpressMusic too |access-date=2017-03-29 |archive-date=2020-08-07 |archive-url=https://web.archive.org/web/20200807174842/http://symbianism.blogspot.com/2009/02/helloox-103-one-step-hack-for-symbian.html |dead-url=no }}</ref>或已编辑固件（类似于[[PlayStation_Portable|PlayStation Portable]]的M33破解固件）中给已加载的特定ROM文件安装{{tsl|en|softmod}}式补丁<ref>{{Cite web |url=http://thinkabdul.com/2007/10/29/tutorial-bypass-symbian-signed-install-unsigned-sisxj2me-midlets-on-nokia-s60-v3-with-full-system-permissions/ |title=Bypass Symbian Signed & Install UnSigned SISX/J2ME Midlets on Nokia S60 v3 with Full System Permissions |access-date=2017-03-29 |archive-url=https://web.archive.org/web/20160911140221/http://thinkabdul.com/2007/10/29/tutorial-bypass-symbian-signed-install-unsigned-sisxj2me-midlets-on-nokia-s60-v3-with-full-system-permissions/ |archive-date=2016-09-11 |dead-url=yes }}</ref>来规避对[[代码签名|未签名代码]]的限制。[[诺基亚|诺基亚]]发布了更新以遏制未经授权的越狱，方式与苹果公司类似。

在游戏主机上，越狱经常用于执行{{tsl|en|Homebrew (video games)|自制游戏}}。在2011年，[[索尼|索尼]]在{{tsl|en|Kilpatrick Stockton}}[[律师事务所|律师事务所]]的协助下起诉了21岁的[[乔治·霍兹|乔治·霍兹]]以及为[[PlayStation_3|PlayStation 3]]越狱的fail0verflow小组的成员（见{{tsl|en|Sony Computer Entertainment America v. George Hotz|Sony Computer Entertainment America v.}}、[[George_Hotz|George Hotz]]和{{tsl|en|PlayStation Jailbreak|PlayStation越狱}}）。

=== 缓解措施 ===
操作系统和用户可以使用以下策略降低特权提升的风险：
* [[数据执行保护|数据执行保护]]
* [[位址空間配置隨機載入|位址空間配置隨機載入]]（使[[缓冲区溢出|缓冲区溢出]]更难在内存中找到已知地址来执行特权指令）
* 运行的应用程序采用[[最小权限原则|最小权限原则]]（例如不使用管理员[[安全标识符|SID]]运行[[Internet_Explorer|Internet Explorer]]）从而减少缓冲区溢出[[Exploit|exploits]]滥用高级用户特权的可能性。
* 要求核心模式的「程式碼簽章」(Code signing) [通過微軟驗證的驅動程式可以由使用者自行選擇是否允許安裝]。
* 使用最新的[[杀毒软件|杀毒软件]]
* [[修補程式|打补丁]]
* 使用防止缓冲区溢出的[[編譯器|編譯器]]<ref>{{Cite web|url=http://download.microsoft.com/documents/customerevidence/12374_Microsoft_GS_Switch_CS_final.doc|title=Microsoft Minimizes Threat of Buffer Overruns, Builds Trustworthy Applications|accessdate=2008-08-04|date=September 2005|publisher=[[Microsoft|Microsoft]]}}</ref>
* 软件和[[固件|固件]]的加密。
* 使用具备[[强制访问控制|强制访问控制]]的操作系统，例如[[SE_Linux|SE Linux]]<ref>{{Cite web|url=http://www.internetsociety.org/sites/default/files/Presentation_Smalley.pdf|title=Laying a Secure Foundation for Mobile Devices|accessdate=7 March 2014|last=Smalley|first=Stephen|archive-date=2017-08-28|archive-url=https://web.archive.org/web/20170828232658/http://www.internetsociety.org/sites/default/files/Presentation_Smalley.pdf|dead-url=no}}</ref>

== 水平特权提升 ==
当应用程序允许攻击者访问通常受到应用程序或用户保护的资源时，则发生了水平特权提升。其结果是，应用程序执行的操作与之相同，但使用或得到了与[[程序员|应用程序开发者]]或[[系统管理员|系统管理员]]预期不同的安全上下文；这是一种有限程度的特权提升（具体来说，未经授权地模仿了其他用户）。

=== 例子 ===
这个问题经常发生在[[网络应用程序|网络应用程序]]中。考虑下列例子：
* 用户A可以在网上银行应用中访问自己的银行账户。
* 用户B可以在同一个网上银行应用中访问自己的银行账户。
* 当用户A通过某种恶意行为能访问用户B的银行账户时，则发生了此问题。
由于常见的Web应用程序弱点或漏洞，这种恶意活动经常出现。

可能导致此问题的潜在Web应用程序漏洞或情况包括：
* 用户的[[Cookie|HTTP Cookie]]中可预测的{{tsl|en|Session ID|会话ID}}
* {{tsl|en|Session fixation|会话固定}}
* [[跨網站指令碼|跨網站指令碼]]
* 容易猜到的[[密碼_(認證)|密碼]]
* 盗取或劫持[[Cookie|会话Cookie]]
* [[键盘监听|键盘监听]]

== 参见 ==
* [[防御性编程|防御性编程]]
* {{tsl|en|Hacking of consumer electronics|消费电子产品的Hack}}
* {{tsl|en|Illegal number|非法数值}}
* [[最小权限原则|最小权限原则]]
* {{tsl|en|Privilege revocation (computing)|特权撤销 (计算机)}}
* {{tsl|en|Privilege separation|特权分离}}
* [[Root_(Android)|Root (Android)]]
* {{tsl|en|Row hammer}}

== 参考资料 ==
{{Reflist}}

[[Category:保全漏洞|Category:保全漏洞]]
[[Category:操作系统安全|Category:操作系统安全]]