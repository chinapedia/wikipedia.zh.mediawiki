'''Signal协议'''（{{lang-en|Signal Protocal}}，以前称为 '''TextSecure 协议'''）是一种非[[互聯|互联]]的[[安全协议|加密协议]]，可被用于为语音呼叫、視訊呼叫<ref name="signal-video-calls-beta">{{Cite web|title=Video calls for Signal now in public beta|url=https://whispersystems.org/blog/signal-video-calls-beta/|accessdate=7 April 2017|author=Marlinspike|date=14 February 2017|first=Moxie|work=Signal Blog|publisher=[[Open_Whisper_Systems|Open Whisper Systems]]|archive-date=2017-03-15|archive-url=https://web.archive.org/web/20170315184106/https://whispersystems.org/blog/signal-video-calls-beta//|dead-url=no}}</ref>和[[即時通訊|即时消息]]会话提供[[端到端加密|端到端加密]] 。该协议由[[Open_Whisper_Systems|Open Whisper Systems]]于2013年开发，并首先在[[开源软件|开源]]的[[TextSecure|TextSecure]]应用中被引入，后来其更新为[[Signal_(軟件)|Signal]]。几个[[专有软件|闭源]]应用也声称实现了该协议，例如[[WhatsApp|WhatsApp]]声称其用此协议加密了「全球十亿多人」的对话。<ref>{{Cite web|title=Moxie Marlinspike - 40 under 40|url=http://fortune.com/40-under-40/moxie-marlinspike-31/|accessdate=22 September 2016|year=2016|work=Fortune|publisher=Time Inc.|archive-date=2017-02-03|archive-url=https://web.archive.org/web/20170203011735/http://fortune.com/40-under-40/moxie-marlinspike-31/|dead-url=no}}</ref>[[Facebook_Messenger|Facebook Messenger]]声称提供其提供Signal协议作为可选的加密通讯方式，[[Skype|Skype]]亦声称将此用于私人对话。 

该协议结合了[[双棘轮算法|双棘轮算法]]、前置密钥和三次[[橢圓曲線迪菲-赫爾曼金鑰交換|橢圓曲線迪菲-赫爾曼金鑰交換]]（3-DH）握手<ref>{{Harvnb|Unger|Dechand|Bonneau|Fahl|2015|p=241}}</ref>，并使用[[Curve25519|Curve25519]]、[[高级加密标准|AES-256]]和[[金鑰雜湊訊息鑑別碼|HMAC-SHA256]]算法作为{{link-en|密码原语|Cryptographic primitive|密码学原语}}。<ref name="Frosch 2016">{{Harvnb|Frosch|Mainka|Bader|Bergsma|2016}}</ref>

== 历史 ==

Signal协议的开发由Trevor Perrin和[[馬克西·馬林史派克|馬克西·馬林史派克]]于2013年开始。该协议的第一个版本TextSecure v1基于[[不留记录即时通讯|不留记录即时通讯]]（OTR）系统。<ref name="Cohn-Gordon-2016-p2">{{Harvnb|Cohn-Gordon|Cremers|Dowling|Garratt|2016}}</ref> <ref>{{Cite web|title=Protocol|url=https://github.com/WhisperSystems/TextSecure/wiki/Protocol|accessdate=28 October 2016|date=2 March 2014|publisher=Open Whisper Systems|archiveurl=https://web.archive.org/web/20150107094950/https://github.com/WhisperSystems/TextSecure/wiki/Protocol|archivedate=7 January 2015}}</ref> 

2014年2月24日，Open Whisper Systems推出了TextSecure v2<ref name="Donohue-2014">{{Cite web|title=TextSecure Sheds SMS in Latest Version|url=https://threatpost.com/textsecure-sheds-sms-in-latest-version/104456|accessdate=14 July 2016|author=Donohue|date=24 February 2014|first=Brian|work=Threatpost|archive-date=2017-02-15|archive-url=https://web.archive.org/web/20170215020451/https://threatpost.com/textsecure-sheds-sms-in-latest-version/104456/|dead-url=yes}}</ref> ，其之后被迁移到 Axolotl Ratchet 算法中。<ref>{{Cite web|title=ProtocolV2|url=https://github.com/WhisperSystems/TextSecure/wiki/ProtocolV2|accessdate=28 October 2016|date=2 March 2014|publisher=Open Whisper Systems|archiveurl=https://web.archive.org/web/20141015215356/https://github.com/WhisperSystems/TextSecure/wiki/ProtocolV2|archivedate=15 October 2014}}</ref> Axolotl Ratchet 的设计基于 OTR 引入的临时密钥交换。 <ref name="advanced-ratcheting">{{Cite web|title=Advanced cryptographic ratcheting|url=https://whispersystems.org/blog/advanced-ratcheting/|accessdate=23 September 2016|author=Marlinspike|date=26 November 2013|first=Moxie|work=Signal Blog|publisher=[[Open_Whisper_Systems|Open Whisper Systems]]|archive-date=2017-03-24|archive-url=https://web.archive.org/web/20170324070200/https://whispersystems.org/blog/advanced-ratcheting/|dead-url=no}}</ref> 这带来了对[[异步通信|异步通信]]（离线消息）的支持。除了离线消息，其还具有更好的弹性，并且更容易支持与多个参与者的对话。<ref>{{Harvnb|Unger|Dechand|Bonneau|Fahl|2015}}</ref>Axolotl Ratchet 是以极度濒危的水生动物[[墨西哥钝口螈|墨西哥钝口螈]]命名 ，它具有非凡的自我修复能力。开发者以此寓意暗示该算法会在破坏[[對話鍵|会话密钥]]后自动使攻击者无法访问后续消息的[[明文|明文]]。  

该协议的第三个版本TextSecure v3对加密原语和有线协议进行了一些更改。2014年10月，[[波鴻魯爾大學|波鸿鲁尔大学]]的研究人员发表了对TextSecure v3的分析。<ref name="Frosch 2016">{{Harvnb|Frosch|Mainka|Bader|Bergsma|2016}}</ref>在众多发现中，他们提出了对该协议的[[未知的密钥共享攻击|未知密钥共享攻击]]，但总体来说，他们发现它是安全的。<ref name="Pauli-2014-11-03">{{Cite web|title=Auditors find encrypted chat client TextSecure is secure|url=https://www.theregister.co.uk/2014/11/03/how_secure_is_textsecure_pretty_well_secure/|accessdate=4 November 2014|author=Pauli|date=3 November 2014|first=Darren|work=[[The_Register|The Register]]}}</ref> 

在2016年3月，开发人员将协议重命名为Signal协议。他们还将Axolotl Ratchet重命名为[[双棘轮算法|双棘轮算法]]，以更好地区分棘轮协议和完整的通讯协议。<ref name="Cohn-Gordon-2016-p1">{{Harvnb|Cohn-Gordon|Cremers|Dowling|Garratt|2016}}</ref> <ref name="signal-inside-and-out">{{Cite web|title=Signal on the outside, Signal on the inside|url=https://whispersystems.org/blog/signal-inside-and-out/|accessdate=9 April 2016|author=Marlinspike|date=30 March 2016|first=Moxie|work=Signal Blog|publisher=[[Open_Whisper_Systems|Open Whisper Systems]]|archive-date=2016-12-28|archive-url=https://web.archive.org/web/20161228221122/https://whispersystems.org/blog/signal-inside-and-out/|dead-url=yes}}</ref> 

截至2016年10月，Signal协议仍是基于TextSecure v3，但做出了一些额外的密码学改进。2016年10月，来自英国[[牛津大学|牛津大学]]、澳大利亚[[昆士兰科技大学|昆士兰科技大学]]和加拿大[[麥馬士達大學|麦马士达大学]]的研究者发布了一份针对此协议的分析，认为该协议是密码学可靠的。<ref name="Brook-2016-11-10">{{Cite web|title=Signal Audit Reveals Protocol Cryptographically Sound|url=https://threatpost.com/signal-audit-reveals-protocol-cryptographically-sound/121892/|accessdate=11 November 2016|author=Brook|date=10 November 2016|first=Chris|work=Threatpost|publisher=Kaspersky Lab|archive-date=2017-02-14|archive-url=https://web.archive.org/web/20170214222434/https://threatpost.com/signal-audit-reveals-protocol-cryptographically-sound/121892/|dead-url=yes}}</ref><ref name="Cohn-Gordon-2016">{{Harvnb|Cohn-Gordon|Cremers|Dowling|Garratt|2016}}</ref>

== 属性 ==
该协议提供机密性、完整性、[[认证加密|认证加密]]、参与者一致性、目标验证、[[前向保密|前向保密性]] 、未来保密性、因果关系保留、消息不可链接性、消息否认、参与否认和异步通讯的特性。但它不提供匿名性保留，并且需要服务器来中继消息和存储公钥。 <ref name="Unger-2015-p239">{{Harvnb|Unger|Dechand|Bonneau|Fahl|2015|p=239}}</ref> 

Signal协议还支持端到端加密的群聊。 群聊协议是通过成对双棘轮和[[组播加密|多播加密]]来实现的。<ref name="Unger-2015-p239">{{Harvnb|Unger|Dechand|Bonneau|Fahl|2015|p=239}}</ref> 除了一对一协议提供的属性外，群聊协议还提供说话者一致性、乱序弹性、丢弃消息弹性、计算性平等，信任平等、子组消息传递以及可收缩和可扩展的成员资格支持。  

=== 认证 ===
为了进行身份验证，用户可以通过外部信道手动比较[[公开密钥指纹|公钥指纹]] 。 <ref name="Rottermanner-2015-p5">{{Harvnb|Rottermanner|Kieseberg|Huber|Schmiedecker|2015|p=5}}</ref> 这使用户可以验证彼此的身份并避免[[中间人攻击|中间人攻击]]。 一个实现还可以选择采用对首次使用的信任，以便在用户的密钥更改时通知用户。 

=== 元数据 ===
Signal协议不会阻止公司保留有关用户何时以及与谁通信的资讯。<ref name="Rottermanner-2015-p4">{{Harvnb|Rottermanner|Kieseberg|Huber|Schmiedecker|2015}}</ref> 因此，消息传递服务提供商选择如何处理此信息可能会存在差异。Signal的隐私权政策规定，Signal服务器仅保留接收者的标识符，以便传输消息。<ref name="privacy-policy">{{Cite web|title=Privacy Policy|url=https://whispersystems.org/signal/privacy/|accessdate=8 October 2016|date=n.d.|publisher=Open Whisper Systems|archive-url=https://web.archive.org/web/20170429003356/https://whispersystems.org/signal/privacy/|archive-date=2017-04-29|dead-url=yes}}</ref> 2016年6月，[[馬克西·馬林史派克|馬克西·馬林史派克]]告诉 ''The Intercept'' ：「Signal服务器存储的与元数据最接近的信息是每个用户最后一次连接到服务器的时间，并且此信息的精度是天，而不是基于小时 ，分钟或者秒的。」<ref name="Lee-2016-06-22">{{Cite web|title=Battle of the Secure Messaging Apps: How Signal Beats WhatsApp|url=https://theintercept.com/2016/06/22/battle-of-the-secure-messaging-apps-how-signal-beats-whatsapp/|accessdate=8 October 2016|author=Lee|date=22 June 2016|first=Micah|work=[[The_Intercept|The Intercept]]|archive-date=2017-02-19|archive-url=https://web.archive.org/web/20170219051224/https://theintercept.com/2016/06/22/battle-of-the-secure-messaging-apps-how-signal-beats-whatsapp/|dead-url=no}}</ref> 

2018年10月，Signal Messenger宣布已在Signal中实现 「密封发件人」功能，该功能通过隐藏发件人的标识符来进一步减少Signal服务器可访问的元数据量。<ref name="ars2018">{{Cite web|title=New Signal privacy feature removes sender ID from metadata|url=https://arstechnica.com/information-technology/2018/10/new-signal-privacy-feature-removes-sender-id-from-metadata/|accessdate=2019-03-28|author=Dan Goodin|date=Oct 30, 2018|work=Ars Technica}}</ref> <ref name="sealed-sender">{{Cite web|title=Technology preview: Sealed sender for Signal|url=https://signal.org/blog/sealed-sender/|accessdate=16 April 2019|author=Lund|date=29 October 2018|first=Joshua|work=signal.org|publisher=Signal Messenger}}</ref>发件人的身份会在每封邮件中传达给收件人，并使用服务器没有的密钥进行加密。如果发件人在收件人的联系人中或有权访问其配置文件，则将自动完成此操作。用户还可以启用一个选项，以接收来自非接触者和无权访问其信号配置文件的人的「密封发件人」消息。  

== 使用情况 ==
Open Whisper Systems首先在其[[TextSecure|TextSecure]]应用程序中引入了该协议。随后，他们将名为RedPhone的加密语音呼叫应用程序合并到TextSecure应用程序中，并将其重命名为 [[Signal_(軟件)|Signal]]。RedPhone使用ZRTP对其呼叫进行加密。 在2017年3月，Signal转换为基于[[WebRTC|WebRTC]]的新呼叫系统，该系统还引入了视频呼叫的功能。<ref name="signal-video-calls">{{Cite web|title=Video calls for Signal out of beta|url=https://whispersystems.org/blog/signal-video-calls/|accessdate=7 April 2017|author=Marlinspike|date=13 March 2017|first=Moxie|work=Signal Blog|publisher=[[Open_Whisper_Systems|Open Whisper Systems]]|archive-date=2017-03-15|archive-url=https://web.archive.org/web/20170315175109/https://whispersystems.org/blog/signal-video-calls/|dead-url=yes}}</ref>Signal的新呼叫系统同样使用Signal Protocol进行端到端加密。 <ref name="signal-video-calls-beta"/>

2014年11月，Open Whisper Systems宣布与[[WhatsApp|WhatsApp]]建立合作关系，通过将Signal协议整合到每个 WhatsApp 客户端平台中来提供端到端加密。<ref name="techcrunch1">{{Cite web|title=WhatsApp Partners With Open Whisper Systems To End-To-End Encrypt Billions Of Messages A Day|url=https://techcrunch.com/2014/11/18/end-to-end-for-everyone/|accessdate=14 March 2016|author=Evans|date=18 November 2014|first=Jon|work=[[TechCrunch|TechCrunch]]|archive-date=2014-11-18|archive-url=https://web.archive.org/web/20141118220338/http://techcrunch.com/2014/11/18/end-to-end-for-everyone/|dead-url=no}}</ref>Open Whisper Systems表示，他们已经将该协议整合到最新的 [[Android|Android]] WhatsApp客户端中，不久之后将支持其他客户端，以及组消息和密钥验证特性的支持。<ref name="whatsapp">{{Cite web|title=Open Whisper Systems partners with WhatsApp to provide end-to-end encryption|url=https://whispersystems.org/blog/whatsapp/|accessdate=14 March 2016|author=Marlinspike|date=18 November 2014|first=Moxie|authorlink=Moxie Marlinspike|publisher=Open Whisper Systems|archive-date=2014-11-18|archive-url=https://web.archive.org/web/20141118161936/https://www.whispersystems.org/blog/whatsapp/|dead-url=no}}</ref> 2016年4月5日，WhatsApp和Open Whisper Systems宣布已完成为 WhatsApp 上的任何形式的通信添加端到端加密的功能，并且用户现在可以验证彼此的密钥。<ref name="Metz-2016-04-05">{{Cite journal|title=Forget Apple vs. the FBI: WhatsApp Just Switched on Encryption for a Billion People|url=https://www.wired.com/2016/04/forget-apple-vs-fbi-whatsapp-just-switched-encryption-billion-people/|last=Metz|first=Cade|date=5 April 2016|journal=[[Wired_(magazine)|Wired]]|accessdate=5 April 2016|archive-date=2016-04-05|archive-url=https://web.archive.org/web/20160405164942/http://www.wired.com/2016/04/forget-apple-vs-fbi-whatsapp-just-switched-encryption-billion-people/|dead-url=no}}</ref> <ref>{{Cite web|title=WhatsApp completes end-to-end encryption rollout|url=https://techcrunch.com/2016/04/05/whatsapp-completes-end-to-end-encryption-rollout/|accessdate=5 April 2016|author=Lomas|date=5 April 2016|first=Natasha|work=[[TechCrunch|TechCrunch]]|archive-date=2016-04-06|archive-url=https://web.archive.org/web/20160406010346/http://techcrunch.com/2016/04/05/whatsapp-completes-end-to-end-encryption-rollout/|dead-url=no}}</ref> 2017年2月，WhatsApp宣布了一项新功能WhatsApp Status，该功能同样使用Signal协议来保护其内容。<ref>{{Cite web|title=WhatsApp Status|url=https://blog.whatsapp.com/10000630/WhatsApp-Status|date=20 February 2017|work=WhatsApp|publisher=Facebook}}</ref> 

2015年9月，[[歌德塔|歌德塔]]推出了一个新的消息传递应用程序，称为「安全聊天」，它使用了Signal协议。<ref name="G Data">{{Cite web|title=G DATA Adds Encryption for Secure Mobile Chat|url=https://www.infosecurity-magazine.com/news/g-data-adds-encryption-for-secure/|accessdate=14 July 2016|author=Seals|date=17 September 2015|first=Tara|work=Infosecurity Magazine}}</ref> <ref>{{Cite web|title=SecureChat|url=https://github.com/GDATASoftwareAG/SecureChat|accessdate=14 July 2016|publisher=G Data|archive-date=2017-05-07|archive-url=https://web.archive.org/web/20170507135213/https://github.com/GDATASoftwareAG/SecureChat|dead-url=no}}</ref> 但 G Data 于 2018 年 5 月停止服务。 <ref>{{Cite web|title=G DATA Secure Chat wird eingestellt|url=https://www.gdata.de/support/faq/consumer/g-data-secure-chat-wird-eingestellt|accessdate=26 April 2019|date=18 May 2018|publisher=G DATA Software AG.|language=de}}</ref> 

2016年9月，[[Google|Google]]发布了一款名为[[Google_Allo|Allo]]新通讯应用，该应用程序具有可选的隐身模式，该模式使用Signal协议进行端到端加密。 <ref name="Greenberg-2016-05-18">{{Cite journal|title=With Allo and Duo, Google Finally Encrypts Conversations End-to-End|url=https://www.wired.com/2016/05/allo-duo-google-finally-encrypts-conversations-end-end/|last=Greenberg|first=Andy|date=18 May 2016|journal=[[Wired_(magazine)|Wired]]|accessdate=18 May 2016|archive-date=2017-02-02|archive-url=https://web.archive.org/web/20170202161556/https://www.wired.com/2016/05/allo-duo-google-finally-encrypts-conversations-end-end/|dead-url=no}}</ref> <ref name="Gibbs-2016-9-21">{{Cite web|title=Google launches WhatsApp competitor Allo – with Google Assistant|url=https://www.theguardian.com/technology/2016/sep/21/google-whatsapp-allo-google-assistant|accessdate=21 September 2016|author=Gibbs|date=21 September 2016|first=Samuel|work=[[The_Guardian|The Guardian]]|archive-date=2019-01-07|archive-url=https://web.archive.org/web/20190107054254/https://www.theguardian.com/technology/2016/sep/21/google-whatsapp-allo-google-assistant|dead-url=no}}</ref> 2019年3月，谷歌终止了 Allo，转而支持其Android上的[[Messages_(Google)|Messages]]应用程序。<ref>{{Cite web|title=Google is finally saying goodbye to Allo today|url=https://www.theverge.com/2019/3/12/18261932/google-allo-messaging-app-shutting-down-march-12th-2019|accessdate=26 April 2019|author=Porter|date=12 March 2019|first=Jon|work=The Verge|publisher=Vox Media|archive-date=2019-03-12|archive-url=https://web.archive.org/web/20190312221640/https://www.theverge.com/2019/3/12/18261932/google-allo-messaging-app-shutting-down-march-12th-2019|dead-url=no}}</ref> <ref>{{Cite web|title=The latest on Messages, Allo, Duo and Hangouts|url=https://www.blog.google/products/messages/latest-messages-allo-duo-and-hangouts/|accessdate=26 April 2019|author=Klainer|date=5 December 2018|first=Matt}}</ref>2020年11月起，[[Messages_(Google)|Messages]]开始使用Signal协议进行端到端加密。<ref>{{Cite web|date=2020-11-19|title=Helping you connect around the world with Messages|url=https://blog.google/products/messages/helping-you-connect-around-world-messages/|access-date=2020-11-19|website=Google|language=en}}</ref><ref>{{cite web |last1=Bohn |first1=Dieter |title=Google is rolling out end-to-end encryption for RCS in Android Messages beta |url=https://www.theverge.com/platform/amp/2020/11/19/21574451/android-rcs-encryption-message-end-to-end-beta |website=The Verge |publisher=Vox Media, Inc. |access-date=2020-11-28 |date=2020-11-19}}</ref><ref>{{cite web |last1=Omara |first1=Emad |title=Messages End-to-End Encryption Overview |url=https://www.gstatic.com/messages/papers/messages_e2ee.pdf |website=gstatic.com |publisher=Google |access-date=2020-11-28 |format=PDF |date=November 2020}}</ref>

2016年10月， [[Facebook|Facebook]]在[[Facebook_Messenger|Facebook Messenger]]中部署了一种称为「加密对话」的可选模式，该模式使用Signal协议提供端到端加密。<ref>{{Cite web|title=Facebook to Add 'Secret Conversations' to Messenger App|url=https://www.nytimes.com/2016/07/09/technology/facebook-messenger-app-encryption.html|accessdate=12 July 2016|author=Isaac|date=8 July 2016|first=Mike|work=[[The_New_York_Times|The New York Times]]}}</ref> <ref>{{Cite web|title=Messenger Starts Testing End-to-End Encryption with Secret Conversations|url=https://newsroom.fb.com/news/2016/07/messenger-starts-testing-end-to-end-encryption-with-secret-conversations/|accessdate=11 January 2018|date=8 July 2016|publisher=Facebook}}</ref> <ref>{{Cite journal|title='Secret Conversations:' End-to-End Encryption Comes to Facebook Messenger|url=https://www.wired.com/2016/07/secret-conversations-end-end-encryption-facebook-messenger-arrived/|last=Greenberg|first=Andy|date=8 July 2016|journal=[[Wired_(magazine)|Wired]]|accessdate=12 July 2016}}</ref> <ref name="Greenberg-2016-10-05">{{Cite journal|title=You Can All Finally Encrypt Facebook Messenger, So Do It|url=https://www.wired.com/2016/10/facebook-completely-encrypted-messenger-update-now/|last=Greenberg|first=Andy|date=4 October 2016|journal=[[Wired_(magazine)|Wired]]|accessdate=5 October 2016|archive-date=2017-04-15|archive-url=https://web.archive.org/web/20170415004558/https://www.wired.com/2016/10/facebook-completely-encrypted-messenger-update-now|dead-url=no}}</ref> 

2018年1月，Open Whisper Systems和[[微软|微软]]宣布将Signal协议支持添加到称为私有对话的可选[[Skype|Skype]]模式中。<ref name="Newman-2018-1-11">{{Cite journal|title=Skype's Rolling Out End-to-End Encryption For Hundreds of Millions of People|url=https://www.wired.com/story/skype-end-to-end-encryption-voice-text/|last=Newman|first=Lily Hay|date=11 January 2018|journal=[[Wired_(magazine)|Wired]]|accessdate=13 January 2018}}</ref> <ref name="Lund-2018-1-11">{{Cite web|title=Signal partners with Microsoft to bring end-to-end encryption to Skype|url=https://signal.org/blog/skype-partnership/|accessdate=13 January 2018|author=Lund|date=11 January 2018|first=Joshua|work=Signal Blog|publisher=Open Whisper Systems|archive-date=2020-02-02|archive-url=https://web.archive.org/web/20200202152037/https://signal.org/blog/skype-partnership/|dead-url=yes}}</ref> 

== 影响 ==
Signal协议对其他密码协议也有影响。[[Viber|Viber]]在2016年5月表示，他们的加密协议是定制实现的，但它与Signal协议使用相同的概念。<ref>{{Cite web|title=Viber Encryption Overview|url=https://www.viber.com/en/security-overview|accessdate=8 July 2017|date=3 May 2016|publisher=Viber|archiveurl=https://web.archive.org/web/20160711035838/http://www.viber.com/en/security-overview|archivedate=11 July 2016}}</ref> <ref>{{Cite web|title=Canada, Germany and Australia are getting e2e encryption|url=https://www.viber.com/en/blog/2016-05-03/canada-germany-and-australia-are-getting-e2e-encryption|accessdate=9 October 2016|author=Eyal|date=3 May 2016|first=Ofir|publisher=Viber}}</ref> Forsta的开发人员表示，他们的应用程序使用Signal协议的定制实现。<ref>{{Cite web|title=r/crypto - Forsta - Signal based messaging platform for enterprises|url=https://www.reddit.com/r/crypto/comments/8b1m6n/forsta_signal_based_messaging_platform_for/|accessdate=2019-02-06|author=u/tooker|work=reddit|language=en}}</ref> <ref>{{Cite web|title=ForstaLabs/libsignal-node|url=https://github.com/ForstaLabs/libsignal-node|accessdate=2019-02-06|date=2019-02-03|work=GitHub|publisher=Forsta Inc.|language=en}}</ref>

== 实现 ==
Signal Messenger在[[GitHub|GitHub]]上以[[GNU通用公共许可证|GPLv3]]许可发布并维护以下[[函式庫|函式庫]]： 

* [https://github.com/signalapp/libsignal-protocol-c libsignal-protocol-c]：用[[C语言|C]]编写的函数库，具有Apple [[App_Store_(iOS/iPadOS)|App Store]]其他许可权限。 
* [https://github.com/signalapp/libsignal-protocol-java libsignal-protocol-java]：用[[Java|Java]]编写的函数库。 
* [https://github.com/signalapp/libsignal-protocol-javascript libsignal-protocol-javascript]：用[[JavaScript|JavaScript]]编写的函数库。 

== 参见 ==

* {{link-en|即时通讯协议的比较| Comparison of instant messaging protocols}}
* {{link-en|密码库比较| Comparison of cryptography libraries}}

== 参考资料 ==
{{Reflist|30em}}

== 外部链接 ==

* Trevor Perrin在NorthSec 2015上的演讲[https://www.youtube.com/watch?v=7WnwSovjYMs TextSecure协议：现在和未来] {{Wayback|url=https://www.youtube.com/watch?v=7WnwSovjYMs |date=20190217115020 }} （视频） 
[[Category:加密协议|Category:加密协议]]
[[Category:应用层协议|Category:应用层协议]]