{{noteTA
|G1=IT
|1=zh-hans:加利福尼亚大学; zh-hant:加州大學;
|2=zh-hans:欧文; zh-hant:爾灣;
}}
{{Infobox software
| name                   = SpiderMonkey
| screenshot             =
| caption                =
| developer              = [[Mozilla基金会|Mozilla基金会]]／[[Mozilla公司|Mozilla公司]]
| latest release version =
| latest release date    =
| operating system       = [[跨平台|跨平台]]
| genre                  = [[JavaScript引擎|JavaScript引擎]]
| programming language   = [[C語言|C]]／[[C++|C++]]
| platform = [[IA-32|IA-32]]、[[x86-64|x86-64]]、[[ARM_architecture|ARM]]、[[MIPS_architecture|MIPS]]、[[SPARC|SPARC]]<ref>{{cite web |url=https://developer.mozilla.org/en-US/docs/SpiderMonkey/1.8.8#Platform_support |title=1.8.8 - SpiderMonkey | MDN |publisher=Developer.mozilla.org |date=2013-01-10 |accessdate=2013-03-21 |archive-date=2013-11-14 |archive-url=https://web.archive.org/web/20131114061625/https://developer.mozilla.org/en-US/docs/SpiderMonkey/1.8.8#Platform_support |dead-url=yes }}</ref>
| status                 = 開發中
| license                = [[Mozilla公共许可证|MPL]]<ref>{{citation |url=http://www.mozilla.org/foundation/licensing.html |title=Mozilla Licensing Policies |publisher=mozilla.org |accessdate=2013-03-26 |archive-date=2013-07-15 |archive-url=https://www.webcitation.org/6I80ZvNrG?url=http://www.mozilla.org/en-US/foundation/licensing/ |dead-url=no }}</ref>
| website                = {{URL|spidermonkey.dev}}
}}

'''SpiderMonkey'''是世界上第一款[[JavaScript引擎|JavaScript引擎]]，由前[[网景公司|网景公司]]的[[布兰登·艾克|布兰登·艾克]]設計，後期由[[Mozilla基金会|Mozilla基金会]]維護，以[[開放原始碼|開放原始碼]]發佈。目前為[[Mozilla_Firefox|Mozilla Firefox]][[網頁瀏覽器|網頁瀏覽器]]所使用的[[JavaScript|JavaScript]]引擎，並也被嵌入到其他許多環境，例如[[GNOME|GNOME 3]]桌面。

== 歷史 ==
1995年，艾克被招聘到Netscape，目的是让他在瀏覽器中實作[[Scheme|Scheme]]程式語言<ref name=BE200804>{{cite web
 |url=http://brendaneich.com/2008/04/popularity/
 |title=Popularity
 |date=2008-04-03
 |first=Brendan
 |last=Eich
 |authorlink=Brendan Eich
 |publisher=BrendanEich.com
 |accessdate=2013-01-24
 |archive-date=2011-07-03
 |archive-url=https://web.archive.org/web/20110703020955/http://brendaneich.com/2008/04/popularity/
 |dead-url=yes
 }}</ref>，於是他於10天內開發出JavaScript <ref name=BE201106>{{cite web
 |url=http://brendaneich.com/2011/06/new-javascript-engine-module-owner/
 |title=New JavaScript Engine Module Owner
 |date=2011-06-21
 |first=Brendan
 |last=Eich
 |authorlink=Brendan Eich
 |publisher=BrendanEich.com
 |accessdate=2013-01-24
 |archive-date=2011-07-14
 |archive-url=https://web.archive.org/web/20110714191057/http://brendaneich.com/2011/06/new-javascript-engine-module-owner/
 |dead-url=yes
 }}</ref>（當工程管理決定這個程式語言必須長得像[[Java|Java]]時，使用Scheme的想法被放棄<ref name=BE200804/>）。之後艾克必須為這個重大的[[技術負債|技術負債]]付出代價，在1996年秋天，艾克留在家裡兩個禮拜，並且重寫了Mocha程式庫，也是後來大家所知道的SpiderMonkey<ref name=BE201106/>。SpiderMonkey這個名字源自於電影[[癟四與大頭蛋|癟四與大頭蛋]]横贯美国，電影裡的角色Tom Anderson提到，主要演員就像一對[[蜘蛛猴|蜘蛛猴]]（Spider Monkey）夫妻在[[自慰|自慰]]<ref name=BE201108>{{cite web |url=http://blog.cdleary.com/2011/06/mapping-the-monkeysphere/#comment-222163115 |title=Mapping the Monkeysphere |date=2011-08-19 |first=Brendan |last=Eich |authorlink=Brendan Eich |access-date=2013-01-24 |archive-url=https://web.archive.org/web/20130113222435/http://blog.cdleary.com/2011/06/mapping-the-monkeysphere/#comment-222163115 |archive-date=2013-01-13 |dead-url=yes }}</ref>。2011年，艾克將SpiderMonkey程式碼的管理交給戴夫·曼達林（Dave Mandelin）<ref name=BE201106/>。

===TraceMonkey===
TraceMonkey是第一个为JavaScript语言編寫的JIT編譯器，於2008年8月23日发布并最先作為[[Firefox_3.5|Firefox 3.5]]的SpiderMonkey中的編譯引擎。相比[[Firefox_3.0|Firefox 3.0]]的編譯器，它提供了''高達20到40倍的效能改善''<ref>{{cite web |last=Paul |first=Ryan |url=http://arstechnica.com/news.ars/post/20080822-firefox-to-get-massive-javascript-performance-boost.html |title=Firefox to get massive JavaScript performance boost |publisher=Ars Technica |date=2008-08-22 |accessdate=2013-03-21 |archive-date=2008-12-17 |archive-url=https://web.archive.org/web/20081217025009/http://arstechnica.com/news.ars/post/20080822-firefox-to-get-massive-javascript-performance-boost.html |dead-url=no }}</ref>。

比起編譯全部函式，TraceMonkey採用追蹤[[即時編譯|即時編譯]]（trace Just-in-time Compilation）將JavaScript編譯成二進位碼（Binary code）以提高執行效能，它的運作方式是在執行期間藉由追蹤和記錄[[控制流程|控制流程]]及[[資料類型|資料類型]]，將其用於建構[http://www.ics.uci.edu/~franz/Site/pubs-pdf/ICS-TR-07-12.pdf 追蹤樹（Trace Trees）]{{Wayback|url=http://www.ics.uci.edu/~franz/Site/pubs-pdf/ICS-TR-07-12.pdf |date=20120306225758 }}，以生成高度最佳化路徑的[[机器语言|原生碼]]，追蹤樹技術由[[爾灣加州大學|爾灣加州大學]]研究團隊貢獻，[[安德里亞斯·加爾|安德里亞斯·加爾]]是該團隊的负责人<ref>{{cite web |url=https://brendaneich.com/2008/08/tracemonkey-javascript-lightspeed/ |title=TraceMonkey: JavaScript Lightspeed |publisher=BrendanEich.com |date=2008-08-23 |accessdate=2015-10-25 |archive-date=2015-12-04 |archive-url=https://web.archive.org/web/20151204091540/https://brendaneich.com/2008/08/tracemonkey-javascript-lightspeed/ |dead-url=no }}</ref>。

JägerMonkey的增進，使得TraceMonkey被遺棄，特別是在SpiderMonkey中[[类型推论|类型推论]]引擎的開發，TraceMonkey自Firefox 11開始已經被停止使用<ref>{{cite web |last=Nethercote |first=Nicholas |url=http://blog.mozilla.com/nnethercote/2011/11/01/spidermonkey-is-on-a-diet/ |title=SpiderMonkey is on a diet | Nicholas Nethercote |publisher=Blog.mozilla.com |date=2011-11-01 |accessdate=2013-03-21 |archive-date=2012-03-28 |archive-url=https://web.archive.org/web/20120328124431/http://blog.mozilla.com/nnethercote/2011/11/01/spidermonkey-is-on-a-diet/ |dead-url=yes }}</ref>。

===JägerMonkey===
JägerMonkey由Mozilla自2010年年初开发，在內部被稱為MethodJIT，它被用來改善效能，特別是当某些情況下TraceMonkey無法生成穩定的[[机器语言|原生碼]]<ref>{{cite web |url=http://www.bailopan.net/blog/?p=683 |title=JaegerMonkey – Fast JavaScript, Always! » Mystery Bail Theater |publisher=Bailopan.net |date=2010-02-26 |accessdate=2013-03-21 |archive-date=2013-03-24 |archive-url=https://web.archive.org/web/20130324172746/http://www.bailopan.net/blog/?p=683 |dead-url=yes }}</ref><ref name=hunted>{{cite web |last=Paul |first=Ryan |url=http://arstechnica.com/open-source/news/2010/03/mozilla-borrows-from-webkit-to-build-fast-new-js-engine.ars |title=Mozilla borrows from WebKit to build fast new JS engine |publisher=Ars Technica |date=2010-03-09 |accessdate=2013-03-21 |archive-date=2011-07-09 |archive-url=https://web.archive.org/web/20110709095651/http://arstechnica.com/open-source/news/2010/03/mozilla-borrows-from-webkit-to-build-fast-new-js-engine.ars |dead-url=no }}</ref>。JägerMonkey於[[Mozilla_Firefox_4|Mozilla Firefox 4]]開始被使用，採用組合編譯（Method JIT）和組譯器（Assembler），它的組譯器移植自[[WebKit|WebKit]]的Nitro引擎（SFX，SquirrelFish Extreme）<ref>{{cite web |url=http://blog.mozilla.com/dmandelin/files/2010/03/Slide11.png |title=存档副本 |accessdate=2012-04-22 |deadurl=yes |archiveurl=https://web.archive.org/web/20111114074441/http://blog.mozilla.com/dmandelin/files/2010/03/Slide11.png |archivedate=2011-11-14 }}</ref>。後期Method JIT与TraceMonkey的Tracing JIT整合，使SpiderMonkey的速度更快。

JägerMonkey的運作很不同于其他編譯器，傳統的編譯器是藉由建立{{Link-en|控制流圖|Control Flow Graph}}並將其最佳化，JägerMonkey則是透過重覆線性前進循環SpiderMonkey[[字节码|字节码]]，也就是內部函式表示法。雖然這種方式阻碍重新排序指令的最佳化，但這對JavaScript這個经常改變變數類型而需要重新編譯的語言来说，JägerMonkey有快速編譯的優勢。

Mozilla在JägerMonkey中實做了一個臨界值的最佳化，重要的還有多形態內嵌快取（ Polymorphic inline caching）及[[类型推论|类型推论]]<ref>{{cite web |url=https://wiki.mozilla.org/JaegerMonkey |title=JaegerMonkey - MozillaWiki |publisher=Wiki.mozilla.org |date= |accessdate=2013-03-21 |archive-date=2013-08-23 |archive-url=https://web.archive.org/web/20130823045214/https://wiki.mozilla.org/JaegerMonkey |dead-url=no }}</ref>，Kraken和[[V8_(JavaScript引擎)|V8]]测试分数显示，[[类型推论|类型推论]]可以分别带来44%与30%的分数提升。<ref>{{cite web |url= http://blog.mozilla.com/dmandelin/ |title= David Mandelin's blog |author= David Mandelin |date= 2011-08-30 |deadurl= yes |archiveurl= https://web.archive.org/web/20101211124954/http://blog.mozilla.com/dmandelin/ |archivedate= 2010-12-11 |accessdate= 2011-09-19 }}</ref>

TraceMonkey及JägerMonkey的JIT技術的異同在[http://hacks.mozilla.org/2010/03/improving-javascript-performance-with-jagermonkey/ 一篇hacks.mozilla.org的文章]{{Wayback|url=http://hacks.mozilla.org/2010/03/improving-javascript-performance-with-jagermonkey/ |date=20130208133352 }}中有做解釋，深入的技術細節可在一篇由SpiderMonkey的開發者Chris Leary的[https://archive.is/20121209102341/http://blog.cdleary.com/2010/09/picing-on-javascript-for-fun-and-profit/ 文章]中取得，更多技術資訊还可在其他開發者的部落格中找到：[http://www.bailopan.net/blog/ dvander]{{Wayback|url=http://www.bailopan.net/blog/ |date=20130115112624 }}、[https://web.archive.org/web/20101211124954/http://blog.mozilla.com/dmandelin/ dmandelin]。

==標準==
SpiderMonkey實作了ECMA-262第5.1版（[[ECMAScript|ECMAScript]]）和其他許多特色，而ECMA-357（[[E4X|ECMAScript for XML]] (E4X)）已在2013年取消支援<ref>{{cite web |url=https://bugzilla.mozilla.org/show_bug.cgi?id=759422#c0 |title=759422 – Remove use of e4x in account creation |deadurl=yes |accessdate=2013-02-05 |archive-date=2014-04-23 |archive-url=https://web.archive.org/web/20140423022422/https://bugzilla.mozilla.org/show_bug.cgi?id=759422#c0 }}</ref>。

即便SpiderMonkey在Firefox中被使用，它并不提供一些主要環境，像是[[文档对象模型|文档对象模型]]（DOM）。

==內部==
SpiderMonkey是以[[C语言|C]]和[[C++|C++]]语言編寫，並包含[[直譯器|直譯器]]、IonMonkey[[即時編譯|即時編譯]]和[[垃圾回收器|垃圾回收器]]。

===IonMonkey===
IonMonkey是Mozilla的第三個JIT編譯器，它啟用了許多新的最佳化技術，但是這些特色無法在之前的JägerMonkey架構運行<ref name="mozilla1">{{cite web |url=https://wiki.mozilla.org/Platform/Features/IonMonkey |title=Platform/Features/IonMonkey - MozillaWiki |publisher=Wiki.mozilla.org |date=2013-02-11 |accessdate=2013-03-21 |archive-date=2013-03-08 |archive-url=https://web.archive.org/web/20130308142525/https://wiki.mozilla.org/Platform/Features/IonMonkey |dead-url=no }}</ref>。

IonMonkey更像傳統的編譯器，它使用中間表示層（IR，Intermediate representation）的[[静态单赋值形式|静态单赋值形式]]將SpiderMonkey的[[字节码|字节码]]轉換為控制流圖（Control Flow Graph），這個結構令其他語言使用的最佳化技術可被使用在JavaScript，其中包含形態的特殊化（type specialization）、行內函式（Inline function）、線性掃描的[[暫存器配置|暫存器配置]]（linear scan register allocator）、[[死碼刪除|死碼刪除]]（Dead code elimination）以及盡可能將程序移出迴圈外（Loop-Invariant Code Motion）<ref>{{cite web |url=http://www.infoq.com/news/2011/05/ionmonkey |title=IonMonkey: Mozilla’s new JavaScript JIT compiler |publisher=Infoq.com |date= |accessdate=2013-03-21 |archive-date=2012-12-08 |archive-url=https://web.archive.org/web/20121208010755/http://www.infoq.com/news/2011/05/ionmonkey |dead-url=yes }}</ref>。

该編譯器可以在[[ARM架構|ARM]]、[[X86|X86]]及[[X86-64|X86-64]]上快速的將JavaScript函式轉換成[[机器语言|原生碼]]。

2013年初發行的Firefox 18中開始採用IonMonkey並将其作為預設引擎<ref>{{cite web |url=http://www.mozilla.org/en-US/firefox/18.0/releasenotes/ |title=Firefox Notes - Desktop |publisher=Mozilla.org |date=2013-01-08 |accessdate=2013-03-21 |archive-date=2013-11-07 |archive-url=https://web.archive.org/web/20131107032048/http://www.mozilla.org/en-US/firefox/18.0/releasenotes/ |dead-url=no }}</ref>，这改進了TraceMonkey與JaegerMonkey不會對程式碼進行解析、自動運行最佳化的缺點。<ref>{{cite web|url=http://mozlinks-zh.blogspot.com/2013/01/firefox-18.html|title=躲在 Firefox 18 裡的神奇離子猴 (@@")|accessdate=2013-01-09|date=2013-01-09|archive-date=2013-01-11|archive-url=https://web.archive.org/web/20130111214119/http://mozlinks-zh.blogspot.com/2013/01/firefox-18.html|dead-url=no}}</ref>。

===OdinMonkey===
OdinMonkey被用於最佳化JavaScript的子集[[asm.js|asm.js]]，OdinMonkey並非一個JIT編譯器，它依然採用IonMonkey作為編譯器，这於2013年6月25日正式釋出的Firefox 22起採用<ref>{{cite web |url=http://www.mozilla.org/en-US/firefox/22.0/releasenotes/ |title=Firefox Notes - Desktop |publisher=Mozilla.org |date=2013-06-25 |accessdate=2013-06-25 |archive-date=2013-10-28 |archive-url=https://web.archive.org/web/20131028025434/http://www.mozilla.org/en-US/firefox/22.0/releasenotes/ |dead-url=no }}</ref>。

== 實作 ==
SpiderMonkey可被嵌入於應用程式中，並为應用程式提供執行JavaScript的能力。不完整名單如下：
* Mozilla [[Firefox|Firefox]]、[[Mozilla_Thunderbird|Thunderbird]]、[[SeaMonkey|SeaMonkey]]
* [[Adobe_Acrobat|Adobe Acrobat]]、[[Adobe_Reader|Adobe Reader]]、Adobe Flash Professional、[[Adobe_Dreamweaver|Adobe Dreamweaver]]
* [[GNOME|GNOME]]桌面環境，第3版和更高版本
* [[Yahoo!_Widgets|Yahoo! Widgets]]
* UOX 3，''[[網路創世紀|網路創世紀]]''私人伺服器
* [[FreeSWITCH|FreeSWITCH]]，開放原始碼通信軟體
* [[0_A.D.|0 A.D.]]，即時戰略遊戲
* {{Link-en|ELinks|ELinks}}，純文字網頁瀏覽器<ref name="linuxjournal">{{cite web|last=Bolso|first=Erik Inge|title=2005 Text Mode Browser Roundup|url=http://www.linuxjournal.com/article/8148?page=0,1|publisher=Linux Journal|accessdate=2010-08-05|date=2005-03-08|archive-date=2010-03-15|archive-url=https://web.archive.org/web/20100315132917/http://www.linuxjournal.com/article/8148?page=0,1|dead-url=yes}}</ref>
* {{Link-en|Synchronet|Synchronet}}，BBS、電子郵件和伺服器軟體

SpiderMonkey亦提供了JavaScript Shell，它是一個互動式開發環境，可讓開發者使用[[命令列|命令列]]來執行[[JavaScript|JavaScript]]程式<ref>{{cite web
 |url          = https://developer.mozilla.org/en-US/docs/Mozilla/Projects/SpiderMonkey/Introduction_to_the_JavaScript_shell
 |title        = Introduction to the JavaScript shell
 |date         = 2019-03-18
 |work         = MDN
 |publisher    = Mozilla Developer Network
 |accessdate   = 2019-05-20
 |quote        = The JavaScript shell (js) is a command-line program included in the SpiderMonkey source distribution. It is the JavaScript equivalent of Python's interactive prompt, the Lisp read-eval-print loop, or Ruby's irb. This article explains how to use the shell to experiment with JavaScript code and run JavaScript programs.
 |archive-date = 2019-05-28
 |archive-url  = https://web.archive.org/web/20190528140820/https://developer.mozilla.org/en-US/docs/Mozilla/Projects/SpiderMonkey/Introduction_to_the_JavaScript_shell
 |dead-url     = no
}}</ref>。
許多大型組織使用SpiderMonkey來管理他們前端應用程式的JavaScript。

== 參考資料 ==
{{reflist}}

== 外部連結 ==
* {{official website}}
* [http://arewefastyet.com Are We Fast Yet?]{{Wayback|url=http://arewefastyet.com/ |date=20110223111122 }}——官方基準和比較

{{Mozilla}}
{{ECMAScript}}

[[Category:Mozilla|Category:Mozilla]]
[[Category:JavaScript|Category:JavaScript]]
[[Category:跨平台軟體|Category:跨平台軟體]]
[[Category:JavaScript引擎|Category:JavaScript引擎]]