{{noteTA
|G1=IT
}}
在[[計算複雜度理論|計算複雜度理論]]內, ZPP（zero-error probabilistic polynomial time，零錯誤概率多項式時間）是一個與[[機率圖靈機|機率圖靈機]]有關的的[[複雜度類|複雜度類]]，並且存在以下特點：

* 這機器永遠會給出正確的"是"或者"否"的答案。
* 這個機器平均運作的時間是多項式時間以內。

換句話說，有一個演算法會在運作時使用一個完美隨機的硬幣，並且永遠回傳正確的答案（這種演算法被稱作[[拉斯維加斯演算法|拉斯維加斯演算法]]（Las Vegas algorithm））。對一個輸入大小為''n''的問題，存在一個多項式''p''(''n'')，令平均的運作時間小於''p''(''n'')（有可能偶爾會超過）。

另外，'''ZPP'''可以定義為一個問題的集合，裡面每個問題都存在一個可以解決此問題的機率圖靈機，且此機器性質如下：
* 運轉時間永遠是多項式時間
* 會回傳YES，NO或者DO NOT KNOW的答案
* 答案如果不是DO NOT KNOW，就會是正確的答案
* 如果問題的正確答案是YES，這機器回傳YES的機率至少是1/2（其他時候回傳DO NOT KNOW）
* 如果問題的正確答案是NO，這機器回傳NO的機率至少是1/2（其他時候回傳DO NOT KNOW）

以上這兩個定義是相等的。
'''ZPP'''的定義是基於概率圖靈機。其他基於概率圖靈機的複雜度類包含了'''[[BPP_(複雜度)|BPP]]'''和'''[[RP_(複雜度)|RP]]'''。至於'''[[BQP_(複雜度)|BQP (複雜度)]]'''這個複雜度類則換成使用了[[量子電腦|量子電腦]]這種也是具有隨機性的電腦。

== 以交集定義 ==
'''ZPP'''這個複雜度類正好完全相等於'''[[RP_(複雜度)|RP]]'''和'''Co-RP'''這兩個類別的交集。這也是一個常用的'''ZPP'''的定義。為了展示這個定義，首先得注意''同時''在''''RP'''和'''co-RP'''的每個問題均有個[[拉斯維加斯演算法|拉斯維加斯演算法]]，如下：

*假設我們有一個由'''RP'''演算法A和（可能完全不同的）'''co-RP'''演算法B辨識的L語言。
*給一個輸入到L裡面，讓A演算輸入。如果傳回「是」，則答案一定是「是」。而讓B演算輸入，如果傳回「否」，答案必是「否」。如果兩者皆未發生，則重複這一步驟。

注意到只有一部機器會給出錯誤答案，而兩部機器在回答時給出錯誤答案的機率幾乎是50%。

== 證據與證明 ==

== 與其他複雜度類的關聯 ==
既然'''ZPP''' = '''RP''' ∩ '''coRP'''，'''ZPP'''自然包含在'''RP'''和'''coRP'''裡面。

複雜度類'''[[P_(複雜度)|P]]'''包含在'''ZPP'''裡面，有一些人猜想'''P''' = '''ZPP'''，換句話說，所有的拉斯維加斯演算法都有一個等同的決定型多項式時間演算法。

如果證明了'''ZPP''' = '''[[EXPTIME|EXPTIME]]'''（雖然這猜想幾乎是不可能的）將代表'''P''' ≠ '''ZPP'''，因為'''P''' ≠ '''EXPTIME'''（參見[[時間譜系理論|時間譜系理論]]）。

== 外部連結 ==
{{复杂度类}}

[[Category:概率複雜度類|Category:概率複雜度類]]
[[Category:計算複雜性理論|Category:計算複雜性理論]]