{{howto|time=2016-05-25T03:20:33+00:00}}
{{review|time=2016-05-25T03:20:33+00:00}}
{{NoteTA|G1=IT}}
{{infobox programming language
| name                   = QML
| paradigm               = [[編程範型|編程範型]]：[[宣告式編程|宣告式編程]]、[[脚本语言|脚本语言]]
| year                   = 2009
| developer              = [[Qt發展框架|Qt發展框架]]
| latest_release_version = 5.14.1<ref>{{cite web|url=https://www.qt.io/blog/qt-5.14.1-released/|title=Qt 5.14.1 Released|date=2020-01-27|accessdate=2020-03-10|archive-date=2020-04-08|archive-url=https://web.archive.org/web/20200408194838/https://www.qt.io/blog/qt-5.14.1-released|dead-url=no}}</ref>
| latest release date    = {{Release date and age|2020|1|27}}
| latest_preview_version = 
| latest_preview_date    = 
| typing                 = [[類型系統|動態]]、[[強型別|強型別]]
| influenced_by          = [[JavaScript|JavaScript]]、[[Qt|Qt]]
| influenced = [[Qt|Qt]]
| website     = [http://doc.qt.io/qt-5/qtqml-index.html]
}}
{{Infobox file format
| name                   = QML
| icon                   = 
| extension              = <code>.qml</code>
| publisher              = [[Nokia|Nokia]]
| website     = [http://doc.qt.io/qt-5/qtqml-index.html]
| genre                  = [[脚本语言|脚本语言]]
}}
'''QML''' (Qt Markup Language<ref>{{cite web|url=http://qt-project.org/doc/qt-4.8/qml-tutorial.html|title=Qt 4.8: QML Tutorial|accessdate=2013-10-31|archive-date=2013-11-02|archive-url=https://web.archive.org/web/20131102114647/http://qt-project.org/doc/qt-4.8/qml-tutorial.html|dead-url=no}}</ref> 或 Qt Meta Language 或 Qt Modeling Language<ref>{{cite web |url=http://labs.qt.nokia.com/2009/08/21/qt-declarative-api-changes/#comment-4727 |title=Henrik Hartz (Product Manager for Qt Software at Nokia) comment on the name |date=24 August 2009 |accessdate=2011-06-14 |deadurl=yes |archiveurl=https://web.archive.org/web/20110723120216/http://labs.qt.nokia.com/2009/08/21/qt-declarative-api-changes/#comment-4727 |archivedate=2011-07-23 }}</ref>) 是基於[[JavaScript|JavaScript]]、宣告式編程的程式語言，用於設計使用者介面為主的應用程式。它是{{link-en|Qt Quick|Qt Quick}}，諾基亞開發的使用者介面建立套件的一部分。QML 主要用於行動應用程式，注重於觸控輸入、流暢的動畫（60張/秒）和使用者體驗。QML documents 描述元素的物件樹。

QML 元素可以透過標準 JavaScript 增強，包括這 inline 和引入.js 檔。元素可以也無縫整合和使用 [[Qt|Qt]] 框架的 [[C++|C++]] 元件擴展。

語言的名稱是 QML。runtime的名稱是 QQuickView。

== 語法、語義 ==
=== 基本語法 ===

範例：

<syntaxhighlight lang="qml">
import QtQuick 1.0

 Rectangle {
     id: canvas
     width: 200
     height: 200
     color: "blue"

     Image {
         id: logo
         source: "pics/logo.png"
         anchors.centerIn: parent
         x: canvas.height / 5      
     }
 }
</syntaxhighlight>

=== 動畫 ===

<syntaxhighlight lang="qml">
 Rectangle {
     id: rect
     width: 120; height: 200

     Image {
         id: img
         source: "pics/qt.png"
         x: 60 - img.width/2
         y: 0

         SequentialAnimation on y {
             loops: Animation.Infinite
             NumberAnimation { to: 200 - img.height; easing.type: Easing.OutBounce; duration: 2000 }
             PauseAnimation { duration: 1000 }
             NumberAnimation { to: 0; easing.type: Easing.OutQuad; duration: 1000 }
         }
     }
 }
</syntaxhighlight>

== Qt/C++ 整合 ==
QML 不需要 Qt/C++ 的知識就能使用，但它可以輕鬆地擴展 Qt。

'''熟悉的概念'''

QML 提供直接訪問，從以下來自 Qt 的概念：
* QAction – action 類型
* QObject signals and slots – 作為在 JavaScript 中調用的函數
* QObject properties – 作為 JavaScript 中的變數
* QWidget – QDeclarativeView 是一個 QML-displaying widget
* Q*Model – 直接用在資料綁定 (如 QAbstractItemModel)
	
=== Qt 信號處理式 ===

<syntaxhighlight lang="javascript">
 MouseArea {
     onPressed: console.log("mouse button pressed")
 }
</syntaxhighlight>

=== 操作方法===
* [https://web.archive.org/web/20100819130735/http://wiki.forum.nokia.com/index.php/CS001613_-_Calling_Qt_class_methods_from_QML Calling Qt class methods from QML]
* [https://web.archive.org/web/20100819160752/http://wiki.forum.nokia.com/index.php/CS001627_-_Creating_a_custom_QML_element_with_Qt Creating a custom QML element with Qt]
* [https://web.archive.org/web/20101211113715/http://wiki.forum.nokia.com/index.php/CS001625_-_Connecting_Qt_signal_to_QML_function Connecting Qt signal to QML function]

== 開發工具 ==
由于 QML 和 Javascript 的语法相似，大多数支持 Javascript 的编辑器均可编辑 QML。但是从 [[Qt_Creator|Qt Creator]] 的 2.1 版本开始，该 IDE 提供了完整的语法高亮、代码补全、内建帮助和所见即所得编辑器。在商业版本的 Creator 中，所见即所得编辑器还会提供更多的功能。

== 參考資料 ==
{{reflist}}

== 外部連結 ==
* [https://web.archive.org/web/20111024202714/http://doc.qt.nokia.com/4.7-snapshot/qdeclarativeelements.html QML Reference Documentation]
* [https://web.archive.org/web/20111014054245/http://doc.qt.nokia.com/4.7-snapshot/qdeclarativeintroduction.html Introduction to the QML language]
* [https://web.archive.org/web/20111008153849/http://doc.qt.nokia.com/4.7-snapshot/qdeclarativeexamples.html QML Examples and Demos]
* [https://web.archive.org/web/20090518012534/http://labs.trolltech.com/blogs/category/labs/graphics/kinetic/declarative_ui/ Qt Labs Blog Posts related to QML]
* [https://web.archive.org/web/20100924210913/http://doc.qt.nokia.com/4.7/qml-tutorial.html QML Tutorial]

{{Qt}}

[[Category:Qt|Category:Qt]]
[[Category:宣告式編程語言|Category:宣告式編程語言]]