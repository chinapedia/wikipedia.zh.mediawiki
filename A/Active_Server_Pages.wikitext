{{noteTA|G1=IT}}
{{Infobox software
| name                   = Active Server Pages (ASP)
| logo                   =
| developer              = [[Microsoft|Microsoft]]
| latest_release_version = 3.0
| latest_release_date    = {{Start date and age|2000|2|17}}
| genre                  = [[Web应用框架|Web应用框架]]
| license                = [[专有软件|专有软件]]
| website                =
}}
{{Infobox file format
| name                   = Active Server Pages
| logo                   = 
| extension              = .asp
| mime                   = 
| type code              = 
| uniform type           = 
| magic                  = 
| owner                  = [[Microsoft|Microsoft]]
| genre                  = 
| container for          = 
| contained by           = 
| extended from          = 
| extended to            = 
| standard               = 
| free                   = 
| url                    = 
}}
'''動態伺服器網頁'''（英文：'''A'''ctive '''S'''erver '''P'''ages，简称'''ASP'''），是由[[微软|微软]]公司开发的[[服务器|服务器]]端运行的脚本平台，它被[[Windows|Windows]]下[[IIS|Internet Information Services (IIS)]]的程式所管理。透過ActiveX server的技術讓不同的使用者能有不同的畫面，或需要讓他們可以存取[[服务器|服务器（server）]]上的資料時，使用ASP3.0中提供了五個內建的物件建立模擬和安全性的動態內容，來協助[[程序员|程序员]]隱藏複雜的溝通機制，讓[[程序员|程序员]]可以專注在解決問題和應用之上，這樣可以更快速地开发动态网页的同時每一个组件都是可以由一组富有经验的[[程序员|程序员]]根据动态网页最常用的功能而獨立开发。

== ASP的特色 ==
ASP隱藏了[[網頁伺服器|網頁伺服器]]與瀏覽者之間溝通的繁瑣機制的同時也基於[[script_base|script base]]的特性，網頁撰寫員可以專心撰寫應用的程式的邏輯部份，再者ASP也像[[HTML|HTML]]般透過撰寫程序來即時測試網頁是否安全地運行，而不必擔心程式和伺服器不能溝通的問題，另外因為那些[[script|script]]是於發送前於伺服器中先行轉譯處理成為HTML後再而發送至代理伺服器邊的動態網頁技術，不必擔心瀏覽器的支援性，以及網頁撰寫員的程式邏輯像[[client-side_script|client-side script]]會被盜用，因此最終瀏覽者只會是使用[[HTML|HTML]]來瀏覽。

利用ASP程序最常用的是[[Cookie|Cookie]]s，它利用Session组件实现的。同時还可以利用[[第三方|第三方]]组件延伸ASP的作用，如利用MailSender组件发送[[电子邮件|电子邮件]]。

通过ASP，可以结合[[HTML|HTML]]网页、ASP指令和[[ActiveX|ActiveX]]元件建立动态、交互且高效的WEB服务器应用程序。同时，ASP也支持[[VBScript|VBScript]]和[[JScript|JScript]]等[[脚本语言|脚本语言]]，默认为[[VBScript|VBScript]]，而其中[[JScript|JScript]]是[[微软|微软]]公司的[[ECMAScript|ECMAScript]]标准的实现，并且有自己的扩展。

===五个內建组件===
*Application：在一個ASP-based application讓不同使用者共享資訊。
*Request：從使用者處理取得資訊
*Response：將資訊送給使用者
*Server：提供一些Web Server的工具
*Session：儲存在一個session內使用者的資訊

=== 物件的支援 ===
ASP對[[COM|COM]]的支援會允許撰寫員使用[[server_component|server component]]（或[[OLE_Automation_server|OLE Automation server]]）。透過它撰寫員可以發展自己的物件，或將把程式轉成[[Web-base|Web-base]]的介面。

*透過[[ADO|ADO]]提供對於資料庫的應用。
*透過[[ActiveX|ActiveX]]的Scripting.FileSystemObject提供對於檔案的操作。
<!-- 這段的說法怪怪的
=== 狀態（State）的管理 ===
狀態管理是ASP的重要功能之一，原因為HTTP是一個stateless的協定，當有匿名的request進入時，瀏覽者無法辨認這些的request是否安全，或那些request之間的關連性時，便無法透過瀏覽者取得資訊如帳戶及密碼等，對交易特性的Web應用程式造成了阻礙。因此ASP透過cookie的包裝和使用讓瀏覽者可以簡單地管理眾多使用者名稱的不同狀態。
/-->
===Session的管理===
ASP在Server端Respondse時會經由HTTP的'''Set-Cookie'''的header欄位傳送名為'''ASPSESSIONID'''的{{en-link|Session ID}}。而用戶端的瀏覽器在收到這個Session ID之後，會在下次的Request時，經由HTTP的'''Cookie'''的header欄位再把這個Session ID傳給Server，藉以讓Server區分是同一個瀏覽者，以獲得其專用的Session變數存取。這個機制可應用於帳號登入，在Session TimeOut被清除之前，只要瀏覽者沒關閉瀏覽器，就能持續保持帳號登入的狀態‧

此外，ASP可以經由檔案Global.asa裡的兩個事件處理（Session_OnStart與Session_OnEnd）去控制該瀏覽者Session的建立與結束的額外處理。這可以用來作為統計實際線上人數之用。

== 版本 ==
ASP目前最新的版本為3.0，與Windows 2000一起發行，並內植於IIS 5.0中。

* ASP 1.0內含於Windows NT 4.0 Service Pack 3（IIS 3.0）發行。
* ASP 2.0內含於Windows NT 4.0 Option Pack，與IIS 4.0一起亮相。

自ASP 3.0發行後，除了各版本對它的安全性或問題修補外，對主要功能都沒有再進一步的更新。
Windows Server 2003發行的ASP也是3.0版本。

其後繼者ASP+（即[[ASP.NET|ASP.NET]]），已內含於.NET Framework中持續演化。

== 原理 ==
ASP是经过服务器解析之后再向[[网页浏览器|网页浏览器]]返回数据，所以有了ASP就不必担心客户的浏览器是否能运行你所编写的代码。因为所有的程序都将在[[网页服务器|网页服务器]]端执行，包括所有嵌在普通[[HTML|HTML]]中的脚本程序。当程序执行完毕后，服务器仅将执行的结果返回给客户浏览器，这样也就减轻了客户端浏览器的负担，大大提高了交互的速度。

由于代码是需要经过服务器执行之后才向浏览器发送的，所以在客户端看到的只能是经过解析之后的数据，而无法获得源代码，故编写者不用担心自己的[[源代码|源代码]]会被别人剽窃。但不排除[[黑客|黑客]]利用系统漏洞窃取服务器端的ASP源代码。

基于这样的解析方式，也导致运行ASP页面相对于普通的HTML页面要慢一点。因为普通的HTML页面只需要浏览器就能够解析，而ASP则必须是[[服务器|服务器]]将整页的代码都执行一遍之后再发送数据。

ASP提供与[[数据库|数据库]]的交互，如[[Microsoft_SQL_Server|Microsoft SQL Server]]、[[Microsoft_Access|Microsoft Access]]、[[MySQL|MySQL]]和[[Oracle|Oracle]]，比较流行的是ASP和Microsoft SQL Server的组合。

== 范例 ==
ASP程式（包括與資料庫連線的部分）都是嵌入在普通HTML和其他客户端语言中的。例如
<syntaxhighlight lang="asp">
你好!
<!-- 上面是將“你好!”在瀏覽器中輸出，這是通過HTML實現的 -->
<%
'這一行註釋，將不會顯示
Response.write "Wikipedia!" '這行將在瀏覽器中輸出“Wikipedia!”
%>
</syntaxhighlight>
ASP語言是嵌入在“<%...%>”之間的部分。而這個程序最終結果將是:

<syntaxhighlight lang="text">你好！Wikipedia！</syntaxhighlight>

== 参见 ==
{{wikibooks|:en:Active Server Pages}}
*[[Microsoft_FrontPage|Microsoft FrontPage]]
*{{link-en|Visual InterDev}}
*[[ASP.NET|ASP.NET]]
*[[.NET框架|.NET框架]]
*[[PHP|PHP]]
*[[JSP|JSP]]

== 外部链接 ==
*[http://msdn.microsoft.com/en-us/library/aa286483.aspx ASP on MSDN]{{Wayback|url=http://msdn.microsoft.com/en-us/library/aa286483.aspx |date=20111115020208 }}
*[http://support.microsoft.com/kb/248187/zh-tw?spid=555&sid=1280 -{如何從動態伺服器網頁（Active Server Page）模擬使用者}-]{{Wayback|url=http://support.microsoft.com/kb/248187/zh-tw?spid=555&sid=1280 |date=20150118105049 }}

;應用或比較
*[https://web.archive.org/web/20080923201647/http://www.mysuc.com/?tag=ASP asp实践经验记录]
*[http://tech.163.com/2004w11/12747/2004w11_1101378251633.html Active Server Pages是什么？]{{Wayback|url=http://tech.163.com/2004w11/12747/2004w11_1101378251633.html |date=20050317134436 }}
*[https://web.archive.org/web/20090106055129/http://www.eki.com.tw/content/news/20080610155930.htm ASP.NET與ASP的差異]

;替代產物
*[https://archive.is/20130204205934/http://www.tripi.com/arrowhead/ ArrowHead ASP Server]（將ASP轉移到Java的平台下去模擬ASP的運作） 
*[https://web.archive.org/web/20110611022354/http://cfasp.cloudfoundry.com/ Cloudfoundry ASP]
*[http://www.apache-asp.org/ Apache::ASP]{{Wayback|url=http://www.apache-asp.org/ |date=20111115105154 }}（在[[Apache|Apache]]上加上[[Perl|Perl]]支援後去跑名為ASP的網頁）

{{網頁技術與標準}}
{{Microsoft APIs}}
{{網頁設計}}

[[Category:微軟伺服器技術|Category:微軟伺服器技術]]
[[Category:ASP|*]]