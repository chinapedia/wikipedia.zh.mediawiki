{{Otheruseslist2|[[数据库管理系统|数据库管理系统]]中的概念|该英文单词的中文解释及相关内容|“'''[[酸|酸]]'''”|[[网页标准计划小组|网页标准计划小组]]设计的[[网页浏览器|网页浏览器]]标准测试|“'''[[Acid1|Acid1]]'''”、“'''[[Acid2|Acid2]]'''”和“'''[[Acid3|Acid3]]'''”|數據庫[[增刪查改|增刪查改]]的一種類型|[[增刪查改#型態變化|增刪查改#型態變化]]}}

'''ACID'''，是指[[数据库管理系统|数据库管理系统]]（[[DBMS|DBMS]]）在寫入或更新資料的過程中，為保證[[数据库事务|事务]]（{{lang|en|transaction}}）是正確可靠的，所必須具備的四个特性：{{le|原子性|Atomicity (database systems)}}（atomicity，或稱不可分割性）、[[一致性_(数据库)|一致性]]（consistency）、[[隔离性|隔离性]]（isolation，又称独立性）、[[持久性|持久性]]（durability）。

在数据库系统中，一个事务是指：由一系列数据库操作组成的一个完整的逻辑过程。例如银行转帐，从原账户扣除金额，以及向目标账户添加金额，这两个数据库操作的总和，构成一个完整的逻辑过程，不可拆分。这个过程被称为一个事务，具有ACID特性。ACID的概念在[[ISO|ISO]]/IEC 10026-1:1992文件的第四段內有所說明。

== 四大特性 ==
* 原子性（{{lang|en|Atomicity}}）：一個事务（transaction）中的所有操作，或者全部完成，或者全部不完成，不会结束在中间某个环节。事务在执行过程中发生错误，会被[[回滚_(数据管理)|回滚]]（Rollback）到事务开始前的状态，就像这个事务从来没有执行过一样。即，事务不可分割、不可约简。<ref name="acid" />
* [[一致性_(数据库)|一致性]]（{{lang|en|Consistency}}）：在事务开始之前和事务结束以后，数据库的完整性没有被破坏。这表示写入的资料必须完全符合所有的预设[[数据完整性|约束]]、[[触发器_(数据库)|触发器]]、{{tsl|en|级联回滚}}等。<ref name="acid" />
* [[事務隔離|事務隔離]]（{{lang|en|Isolation}}）：数据库允许多个并发事务同时对其数据进行读写和修改的能力，隔离性可以防止多个事务并发执行时由于交叉执行而导致数据的不一致。事务隔离分为不同级别，包括未提交读（Read uncommitted）、提交读（read committed）、可重复读（repeatable read）和串行化（Serializable）。<ref name="acid" />
* [[持久性|持久性]]（{{lang|en|Durability}}）：事务处理结束后，对数据的修改就是永久的，即便系统故障也不会丢失。<ref name="acid">{{cite book |title=《数据库系统教程（上册）》|author=王能斌 |publisher=电子工业出版社 |isbn=7-5053-7827-9 |pages=91～92页|date=2002年8月}}</ref>

== 参考文献 ==
{{Reflist}}

== 外部連結 ==
* [https://web.archive.org/web/20100608002853/http://structedtext.appspot.com/db/concurrent_control.html] 交易並行控制
* [http://www.iso.org/iso/en/CatalogueDetailPage.CatalogueDetail?CSNUMBER=27121&COMMID=&scopelist= ISO/IEC 10026-1:1992]{{Wayback|url=http://www.iso.org/iso/en/CatalogueDetailPage.CatalogueDetail?CSNUMBER=27121&COMMID=&scopelist= |date=20070311011435 }}（ISO文件，需訂購）

== 参见 ==
* [[关系型数据库|关系型数据库]]
* [[InnoDB|InnoDB]]
* [[PostgreSQL|PostgreSQL]]

{{-}}
{{Databases}}

[[Category:数据库|Category:数据库]]