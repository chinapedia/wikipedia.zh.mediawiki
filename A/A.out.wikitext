{{lowercase}}
{{NoteTA|G1=IT}}
{{Infobox file format
| name      = a.out
| extension = 无, <tt>.o</tt>, <tt>.so</tt>
| owner     = [[AT&T|AT&T]]
| genre     = [[二进制文件|二进制文件]]、[[执行档|执行档]]、[[目的码|目的码]]、[[函式库|函式库]]
}}

'''a.out'''是旧版[[类Unix系统|类Unix系统]]中用于[[执行档|执行档]]、[[目的码|目的码]]和后来系统中的[[函式库|函式库]]的一种[[文件格式|文件格式]]，这个名称的意思是'''[[汇编器|汇编器]]输出'''。

尽管目前大多數[[类Unix系统|类Unix系统]]都已改用[[ELF格式|ELF格式]]，不再采用''a.out''格式，但[[编译器|编译器]]和[[链接器|链接器]]依然会在用户未指定文件名时，将输出文件取名为“<tt>a.out</tt>”。<ref>{{Cite mailing list | title = What to do with a.out | author = Rupert Wood | date = 2002-04-08 | mailinglist = gcc-help | url = http://gcc.gnu.org/ml/gcc-help/2002-04/msg00075.html | accessdate = 2007-04-28 | archive-date = 2007-02-24 | archive-url = https://web.archive.org/web/20070224234626/http://gcc.gnu.org/ml/gcc-help/2002-04/msg00075.html | dead-url = no }}</ref>

== 应用 ==

在UNIX第一版中，就出现了给[[PDP-7|PDP-7]]和[[PDP-11|PDP-11]]用的''a.out''格式。<ref>{{cite manual | title = a.out — assembler and link editor output | author = [[Dennis_Ritchie|Dennis Ritchie]] | date = 1971-11-03 | url = http://cm.bell-labs.com/cm/cs/who/dmr/man51.pdf | format = PDF | publisher = Bell Labs | accessdate = 2006-11-24 | deadurl = yes | archiveurl = https://web.archive.org/web/20061207011324/http://cm.bell-labs.com/cm/cs/who/dmr/man51.pdf | archivedate = 2006-12-07 }}</ref>之后它被[[UNIX_System_V|UNIX System V]]中的[[COFF|COFF]]所取代，而COFF最后也被[[SVR4|SVR4]]中的[[ELF格式|ELF格式]]所取代。

尽管[[BSD|BSD]]曾经沿用了一段时间的''a.out''格式，但较新的BSD系统都已切换到ELF。[[NetBSD|NetBSD/i386]]在1.5版中正式从''a.out''切换到ELF，[[FreeBSD|FreeBSD/i386]]则是在2.2到3.0的转换中切换到ELF的。

''a.out''格式对[[调试|调试]]信息的支持是由符号表中称作“[[stabs|stabs]]”的特殊项实现的。许多[[COFF|COFF]]和[[可執行與可鏈接格式|ELF]]变体中也用到了stabs格式。

[[Linux|Linux]]在1.2版内核之前也曾使用''a.out''格式（实验性的1.1.52版中加入了对ELF的支持），在此之后也被ELF取代了。 <ref>{{cite web |url=http://www.ibiblio.org/pub/historic-linux/distributions/slackware/3.9/docs/ELF-HOWTO |title=The Linux ELF HOWTO (v1.29) |author=Daniel Barlow |date=14 July 1996 |accessdate=2008-03-28 |deadurl=yes |archiveurl=https://web.archive.org/web/20040713171954/http://www.ibiblio.org/pub/historic-linux/distributions/slackware/3.9/docs/ELF-HOWTO |archivedate=2004-07-13 }}</ref>Linux之所以转向ELF，或多或少是因为在此平台上构建一个''a.out''格式的函式库所需的复杂性过高：因为Linux中''a.out''的ld.so不能重定位共享函式库，所以需要一个中央机构来注册各个函式库的虚拟地址域。<ref>{{cite paper | title = How To Write Shared Libraries | author = Ulrich Drepper | section = 1.1  A Little Bit of History | version = 4.0 | date = 2006-08-20 | url = http://people.redhat.com/drepper/dsohowto.pdf | format = PDF | accessdate = 2007-06-20 | quote = When introducing shared libraries certain design decisions had to be made to work in the limitations of a.out. (...) For all these reasons and more, Linux converted early on to using ELF (Executable Linkage Format) as the binary format. | archive-date = 2007-06-16 | archive-url = https://web.archive.org/web/20070616175733/http://people.redhat.com/drepper/dsohowto.pdf | dead-url = yes }}</ref>一些BSD变体在[[Linux|Linux]]被迫转向ELF之后仍然用了很久的''a.out''格式，因为相比于Linux，BSD的''a.out''略微更灵活一些。<ref>{{cite web | title = BSD Myths: BSD uses the a.out executable format, which is outdated technology | accessdate = 2007-04-10 | url = http://people.freebsd.org/~nik/advocacy/myths.html#aout | archive-date = 2007-04-17 | archive-url = https://web.archive.org/web/20070417095655/http://people.freebsd.org/~nik/advocacy/myths.html#aout | dead-url = no }}</ref>由于a.out格式的相关代码已经老旧并缺乏维护，而且已经几乎没有使用a.out格式的存在，5.1版内核决定移除相应的功能支持。<ref>{{cite web
 |title        = x86: Deprecate a.out support
 |author       = Borislav Petkov
 |date         = 5 March 2019
 |accessdate   = 5 March 2019
 |url          = https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=eac616557050737a8d6ef6fe0322d0980ff0ffde
 |quote        = Linux supports ELF binaries for ~25 years now. a.out coredumping has bitrotten quite significantly and would need some fixing to get it into shape again but considering how even the toolchains cannot create a.out executables in its default configuration, let's deprecate a.out support and remove it a couple of releases later, instead.
 |archive-date = 2020-09-19
 |archive-url  = https://web.archive.org/web/20200919224019/https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=eac616557050737a8d6ef6fe0322d0980ff0ffde
 |dead-url     = no
}}</ref>

[[MINIX_3|MINIX 3]]仍将''a.out''作为二进制文件的格式，但其不支持[[函式库|共享函式库]]。

== 格式 ==

''a.out''执行档通常是以下几种变体之一：OMAGIC、NMAGIC、QMAGIC或ZMAGIC。
; OMAGIC
: OMAGIC格式在文件头后有连续段，没有文本和数据的分离。也被用作目标文件格式。
; NMAGIC
: NMAGIC格式与OMAGIC相像，但数据段出现在文本段结束后的下一页，且文本段被标为只读。
; ZMAGIC
: ZMAGIC格式加入了对按需分页的支持，代码段和数据段的长度需要是页宽的整数倍。
; QMAGIC
: QMAGIC二进制文件通常被加载在虚拟地址池的底端，用以通过[[段错误|段错误]]捕获对[[空指针|空指针]]的解引用。''a.out''头部与文本段的第一页合并，通常会省下一页的内存。
; CMAGIC
: 旧版的Linux使用此格式来存放[[核心转储|核心转储]]。

''a.out''文件包含至多七节，顺序如下：
; 执行头部
: 包含内核将二进制文件加载入内存并执行所需的参数，也包含对动态链接器[[动态连接器#类Unix操作系统|ld]]的指引。仅有本节是必须出现的。
; 文本段
: 包含运行时被载入内存的机器码和相关数据，可能是只读的。
; 数据段
: 包含已初始化的数据，总是可写的。
; 文本重定位
: 包含链接编辑器在合并二进制文件时修改文本段指针的记录。
; 数据重定位
: 与文本重定位一节类似，但是给数据段指针用的。
; 符号表
: 包含链接编辑器用于交叉引用不同二进制文件中变量和函式（符号）的记录。
; 字符串表
: 包含对应于符号表的字符串。

== 参见 ==
* [[Portable_Executable|Portable Executable]]
* [[可執行與可鏈接格式|ELF]]
* [[Vasm|Vasm]]，一个自由的汇编器

== 参考资料 ==
{{reflist}}

== 外部链接 ==
* [https://web.archive.org/web/20110103155407/http://osxfaq.com/man/5/a.out.ws a.out格式]
* [https://web.archive.org/web/20110721104412/http://fuse4bsd.creo.hu/localcgi/man-cgi.cgi?a.out+5 a.out格式的Unix手册页]
{{Executables}}
{{DEFAULTSORT:a.out}}
[[Category:可执行文件格式|Category:可执行文件格式]]