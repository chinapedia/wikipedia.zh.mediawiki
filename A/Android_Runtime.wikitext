{{NoteTA|G1=IT}}
[[File:ART_view.png|thumb]]

'''Android Runtime'''（缩写为ART），是一种在[[Android|Android]]操作系统上的[[运行环境|运行环境]]，由[[Google公司|Google公司]]研发，并在2013年作为[[Android_4.4|Android 4.4]]系统中的一项测试功能正式对外发布，在[[Android_5.0|Android 5.0]]及后续Android版本中作为正式的运行时库取代了以往的[[Dalvik虚拟机|Dalvik虚拟机]]。ART能够把应用程序的[[字节码|字节码]]转换为[[机器码|机器码]]，是Android所使用的一种新的[[虚拟机|虚拟机]]。它与Dalvik的主要不同在于：Dalvik采用的是[[JIT|JIT]]技术，而ART采用{{link-en|Ahead-of-time compilation|Ahead-of-time compilation|Ahead-of-time}}（AOT）技术。ART同時也改善了性能、[[垃圾回收_(計算機科學)|垃圾回收]]（Garbage Collection）、应用程序出错以及性能分析。

JIT最早在[[Android_2.2|Android 2.2]]系统中引进到Dalvik虚拟机中，在应用程序启动时，JIT通过进行连续的[[性能分析|性能分析]]来优化程序代码的执行，在程序运行的过程中，Dalvik虚拟机在不断的进行将字节码编译成机器码的工作。与Dalvik虚拟机不同的是，ART引入了AOT这种预编译技术，在应用程序安装的过程中，ART就已经将所有的字节码重新编译成了机器码。应用程序运行过程中无需进行实时的编译工作，只需要进行直接调用。因此，ART极大的提高了应用程序的运行效率，同时也减少了手机的电量消耗，提高了移动设备的续航能力，在垃圾回收等机制上也有了较大的提升。为了保证[[向下兼容|向下兼容]]，ART使用了相同的Dalvik字节码文件（dex），即在应用程序目录下保留了dex文件供旧程序调用，然而.odex文件则替换成了[[可执行与可链接格式|可执行与可链接格式]]（ELF）可执行文件。一旦一个程序被ART的dex2oat命令[[编译|编译]]，那么这个程序将会只通过ELF[[可执行文件|可执行文件]]来运行。因此，相对于Dalvik虚拟机模式，ART模式下Android应用程序的安装需要消耗更多的时间，同时也会占用更大的内部储存空间，用于储存编译后的代码，但节省了很多Dalvik虚拟机用于实时编译的时间。

[[Google公司|Google公司]]在Android 4.4中带来的ART模式仅仅是ART的一个预览版，系统默认仍然使用的是Dalvik虚拟机，4.4上面提供的预览版ART相对于Android 5.0以后的ART运行时库有较大的不同，尤其体现在兼容性上。

== 扩展阅读 ==
{{Portal|电脑程序设计}}

* [[Android历史版本|Android历史版本]]－对Android所有历史版本的介绍，包括Android版本所对应的API版本
* [[虚拟机|虚拟机]]－一种特殊的计算机软件，通过它可以模拟出一个独立的环境供程序执行

== 外部链接 ==
{{Commons category|Android Runtime}}

* {{官方网站|https://source.android.com/devices/tech/dalvik/index.html}}
* {{YouTube|id=USgXkI-NRPo|title=Android Basics 101: Understanding ART, the Android Runtime}}

[[Category:Android|Category:Android]]
[[Category:Java虚拟机|Category:Java虚拟机]]