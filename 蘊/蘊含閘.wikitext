{{noteTA
|T=zh-cn:蕴涵门; zh-hk:蘊含門; zh-tw:蘊含閘;
|1=zh-cn:蕴涵门; zh-hk:蘊含門; zh-tw:蘊含閘;
|G1=Electronics
}}
{{逻辑门}}
{| class="wikitable" align=right
|- bgcolor="#ddeeff" align="center"
|colspan=2|'''輸入'''<br/>A   B || '''輸出'''<br/> A → B
|- bgcolor="#ddffdd" align="center"
|0 || 0 || 1
|- bgcolor="#ddffdd" align="center"
|0 || 1 || 1
|- bgcolor="#ddffdd" align="center"
|1 || 0 || 0
|- bgcolor="#ddffdd" align="center"
|1 || 1 || 1
|}
[[File:Puerta_CM.svg|thumb]]
'''蘊含閘'''<ref>[http://www.iicm.org.tw/term/termb_I.htm 電腦名詞譯名] {{Wayback|url=http://www.iicm.org.tw/term/termb_I.htm |date=20210506141054 }} Implies gate→蘊含閘 iicm.org.tw  [2015-9-30]</ref>（{{lang-en|'''Implies gate'''}}，簡稱{{lang|en|'''IMPLY gate'''}}）<ref>{{Cite web | title = 蘊含閘 implication gate | url = http://terms.naer.edu.tw/detail/2378274/?index=1 | publisher = 國家教育研究院 | access-date = 2019-04-09 }}{{Dead link|date=2020年3月 |bot=InternetArchiveBot |fix-attempted=yes }}</ref>是數位邏輯電路中的一種[[邏輯閘|邏輯閘]]，主要用來完成[[布林代數|布林代數]]中[[實質條件|實質條件]]、實質蘊涵或蘊涵算子。

蘊含閘可由[[CMOS|CMOS]]或其他[[電晶體|電晶體]]設計，利用如下公式：
:<math>Q = A \to B = \overline{(A \land \overline B)} = \overline A \lor B</math>

另外蘊含閘也可以由[[憶阻器|憶阻器]]組成，且只需要由兩個憶阻器即可組成<ref>[http://www.zigwap.com/digital/gates/imply_gate imply gate] {{Wayback|url=http://www.zigwap.com/digital/gates/imply_gate |date=20160304050642 }} zigwap.com  [2015-9-30]</ref><ref>[http://www.eettaiwan.com/ART_8800603622_876045_NT_4cd2fdfa.HTM 可配置性憶阻器現身　CPU掰掰]{{Dead link|date=2018年8月 |bot=InternetArchiveBot |fix-attempted=yes }} 雙憶阻元件實現蘊含閘 eettaiwan.com [2015-9-30]</ref>，由於[[布林代數|布林代數]]的特性可使其他布林函數化成由邏輯蘊含表示<ref>[http://www.ijera.com/papers/Vol5_issue5/Part%20-%205/T50505105109.pdf Imply Logic Implementation of Carry Save Adder Using Memristors] {{Wayback|url=http://www.ijera.com/papers/Vol5_issue5/Part%20-%205/T50505105109.pdf |date=20161020141452 }} ijera.com [2015-9-30]</ref>，因此利用蘊含閘與[[憶阻器|憶阻器]]來設計[[電晶體|電晶體]]可以大幅縮小體積<ref>{{Cite web|url=http://www.news.com/8301-10784_3-9932054-7.html|title=HP makes memory from a once theoretical circuit|last=Kanellos|first=Michael|publisher=CNET News.com|date=2008-04-30|accessdate=2008-04-30|archive-date=2021-02-20|archive-url=https://web.archive.org/web/20210220122540/https://www.cnet.com/news/|dead-url=no}}</ref>。
[[File:IMPLY_gate_Memristor.png|thumb]]

== 性質 ==
{| class="wikitable" align=left
|- bgcolor="#ddeeff" align="center"
|colspan=2|'''輸入'''<br>A   B || '''輸出'''<br> A → B
|- bgcolor="#ddffdd" align="center"
|X || 1 || 1
|- bgcolor="#ddffdd" align="center"
|0 || 0 || 1
|- bgcolor="#ddffdd" align="center"
|1 || 0 || 0
|}
:如果B為[[邏輯真|邏輯真]], 無論A為任何值都會輸出[[邏輯真|邏輯真]]的訊號。
:如果B為[[邏輯假|邏輯假]], 並且A為[[邏輯假|邏輯假]], 才会輸出[[邏輯真|邏輯真]]的訊號。
:其余情況則輸出[[邏輯假|邏輯假]]的訊號。
:蘊含閘可以用來判斷兩輸入的或是否為第二輸入。
{{clear}}

==概述==
{| class="wikitable" 
|- 
! rowspan="2" class="wikitable"| 表达式
! colspan="2" class="wikitable"| 符號
! rowspan="2" class="wikitable"| 功能表
|- class="wikitable"
|ANSI/IEEE 
|IEC
|-
| <math>Y = A \to B</math><br/><br/><math>Y = \overline{(A \land \overline B)}</math><br/><br/><math>Y = \overline A \lor B</math>
|[[File:IMPLY_ANSI.svg|125px]]
|[[File:IEC_Implies_gate.svg|125px]]
|align="center"|
{| class="wikitable"
|-
! width="10%" | A
! width="10%" | B
! width="40%" | <math>Y = A \to B\,</math>
|----- align="center"
| 0 || 0 || '''1'''
|----- align="center"
| 0 || 1 || '''1'''
|----- align="center"
| 1 || 0 || '''0'''
|----- align="center"
| 1 || 1 || '''1'''
|}
|}

== 電路實現 ==
<gallery>
File:NMOS IMPLY gate.png|NMOS蘊含閘
File:PMOS IMPLY gate.png|PMOS蘊含閘
File:CMOS IMPLY gate.png|靜態CMOS蘊含閘
File:TTL IMPLY Gate.png|TTL蘊含閘
File:IMPLY_gate_Memristor.png|[[憶阻器|憶阻器]]蘊含閘
File:IMPLY from NOR.svg|用[[或非閘|或非閘]]實現的蘊含閘
File:IMPLY from NAND.svg|用[[與非閘|與非閘]]實現的蘊含閘
</gallery>

== 複合邏輯閘 ==
[[File:IMPLY_gate_NAND.png|thumb]]]]
大部分的邏輯閘都可以用蘊含閘組合而成，例如[[与非门|-{zh-cn:与非门; zh-hk:與非門; zh-tw:反及閘;}-]]可以用兩個蘊含閘組合而成<ref>[http://web.cecs.pdx.edu/~mperkows/CLASS_574/MEMRISTOR-2012/Memristor_IMPLY%20=%20Jens.pdf Disclosing the secrets of memristors and implication logic] {{Wayback|url=http://web.cecs.pdx.edu/~mperkows/CLASS_574/MEMRISTOR-2012/Memristor_IMPLY%20=%20Jens.pdf |date=20210112025416 }} web.cecs.pdx.edu [2015-9-30]</ref>：
:<math>\begin{align}
    A \to (B \to 0) & = \overline A \lor (\overline B \lor 0) \\
                    & = \overline A \lor \overline B \\
                    & = \overline{ A \land B } \\
                    & = A \bar \curlywedge B
  \end{align}</math>

== 其他邏輯閘 ==
=== 蘊含非閘 ===
'''蘊含非閘'''，簡稱{{lang|en|'''NIMPLY gate'''}}是數位邏輯電路中實現[[非蘊涵|非蘊涵]]的一種邏輯閘。

這種運作方式的元件已在生物學的邏輯信號中有相關研究。<ref>[http://www.nature.com/nature/journal/vaop/ncurrent/fig_tab/nature11149_F2.html Design and processing performance of synthetic N-IMPLY gates in human cells.] {{Wayback|url=http://www.nature.com/nature/journal/vaop/ncurrent/fig_tab/nature11149_F2.html |date=20151002103734 }} From Programmable single-cell mammalian biocomputers Simon Ausländer, David Ausländer, Marius Müller, Markus Wieland & Martin Fussenegger Nature   (2012) {{doi|10.1038/nature11149}}</ref>
{| class="wikitable" 
|- 
! rowspan="2" class="wikitable"| 表达式
! colspan="2" class="wikitable"| 符號
! rowspan="2" class="wikitable"| 功能表
|- class="wikitable"
|ANSI/IEEE
|IEC
|-
| <math>Y = A \to B</math><br/><br/><math>Y = \lnot ( a \to b )</math><br/><br/><math>Y = a \land \lnot b</math>
|[[File:NIMPLY_(AND)_ANSI.svg|125px]]
|[[File:IEC_Nimplies_gate.svg|125px]]
|align="center"|
{| class="wikitable"
|-
! width="10%" | A
! width="10%" | B
! width="40%" | <math>Y = A \nrightarrow B\,</math>
|----- align="center"
| 0 || 0 || '''0'''
|----- align="center"
| 0 || 1 || '''0'''
|----- align="center"
| 1 || 0 || '''1'''
|----- align="center"
| 1 || 1 || '''0'''
|}
|}

== 參見 ==
{{Commonscat|IMPLY_gates}}
{{Wiktionary|implication gate}}
*[[布林代數|布林代數]]
*[[數位邏輯|數位邏輯]]
*[[憶阻器|憶阻器]]

== 參考文獻 ==
{{reflist|2}}

{{逻辑联结词}}
{{数字电路}}

{{DEFAULTSORT:Implies gate}}
[[Category:逻辑门|Category:逻辑门]]
[[Category:電腦小作品|Category:電腦小作品]]