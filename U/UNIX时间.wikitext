{{FPB}}
{{NoteTA
| G1 = IT
}}
{{Expand English}}
<div style="text-align: center; border: 1px solid #dbdbdb; border-radius: 5px; margin: 5px; padding: 10px; max-width: 250px; height: auto; float: right; ">'''當前Unix時間'''<br>{{#time:U}}<hr>'''[[ISO_8601|ISO 8601]]表示法'''<br>{{#time:c}}<hr><small>如果時間不符，請點擊右下方的更新按鈕。</small></div>

'''UNIX時間'''，或稱'''POSIX時間'''是[[UNIX|UNIX]]或[[類UNIX|類UNIX]]系統使用的時間表示方式：從[[協調世界時|UTC]][[1970年|1970年]][[1月1日|1月1日]]0時0分0秒起至現在的總秒數，不考慮[[閏秒|閏秒]]<ref>{{Cite web |url=http://www.madore.org/~david/computers/unix-leap-seconds.html |title=The Unix leap second mess |access-date=2016-02-14 |archive-date=2021-05-04 |archive-url=https://web.archive.org/web/20210504202722/http://www.madore.org/~david/computers/unix-leap-seconds.html |dead-url=no }}</ref>。 在多數Unix系統上Unix時間可以透過<code>date +%s</code>指令來檢查。

== 历史 ==
最早版本的Unix时间是32位整型，以60 [[Hertz|Hz]]增加。1971年11月3日发行的第一版《Unix Programmer's Manual》定义了Unix时间为“the time since 00:00:00, 1 January 1971, measured in sixtieths of a second”，即从1971年1月1日00:00:00开始，以60赫兹增加。<ref>{{cite book|title=Unix Programmer's Manual|edition=1st|url=https://www.bell-labs.com/usr/dmr/www/pdfs/man22.pdf|quote="''time'' returns the time since 00:00:00, 1 Jan. 1971, measured in sixtieths of a second."|date=1971-11-03|access-date=2012-03-28|archive-date=2022-03-05|archive-url=https://web.archive.org/web/20220305094724/https://www.bell-labs.com/usr/dmr/www/pdfs/man22.pdf}}</ref>这意味着以32位无符号整型存储Unix时间，829天（约2.5年）后就将用尽重置。由于该限制，Unix时间原点被重定义多次，直至开始采用1970年1月1日00:00:00UTC为时间原点，以1赫兹计时。由于Unix和C语言采用32位有符号整型表示时间，这可容纳约136年的时间跨度，在1970年之前和之后各占一半。即到2038年1月19日和1901月12月13日用尽重置。

此后，这个Unix 时间定义考虑到时区，闰秒等问题被修订。

== 問題 ==
=== 2038年问题 ===
{{Main|2038年問題}}
[[File:Year_2038_problem.gif|right]]
現時大部分使用UNIX的系統都是[[32位元|32位元]]的，即它們會以32位有符号整数表示時間类型<code>time_t</code>。因此它可以表示136年的秒数。表示協調世界時間1901年12月13日星期五20時45分52秒至2038年1月19日3時14分07秒（二進制：01111111 11111111 11111111 11111111，0x7FFF:FFFF），在下一秒二進制數字會是10000000 00000000 00000000 00000000（0x8000:0000），這是負數，因此各系統會把時間誤解作1901年12月13日20時45分52秒（亦有可能回歸到1970年）。這時可能會令軟體發生問題，導致系統癱瘓。

目前的解決方案是把系統由32位元轉為[[64位元|64位元]]系統。在64位系統下，此時間最多可以表示到2922億7702萬6596年12月4日15時30分08秒。

=== Unix负时间导致部分iPhone手机无法启动 ===
在2016年2月12日，据披露，如果把苹果[[iPhone|iPhone]]、[[iPad|iPad]]等设备的系统时间设置为1970年1月1日，随后重启设备，它会无法正常启动。目前苹果公司正式承认了漏洞存在，但是尚未公布具体的引发原因。<ref>{{cite web|title=苹果确认iPhone/iPad时间设置不对会变砖问题|url=http://tech.sina.com.cn/it/2016-02-16/doc-ifxpmpqt1264736.shtml|accessdate=2016-02-16|archive-date=2019-05-02|archive-url=https://web.archive.org/web/20190502104822/http://tech.sina.com.cn/it/2016-02-16/doc-ifxpmpqt1264736.shtml|dead-url=no}}</ref>部分中国大陆用户猜想这是因为调整当地时间到1970.1.1 0:00后，如果时区为正，那么GMT时间就早于UNIX定义的0时间。例如北京时间 1970.1.1 0:00 （UTC+0800） 是UTC 1969.12.31 16:00 对应的UNIX时间是负的。但是有人回應嘗試設為正時區重啟後仍然无法正常启动。<ref>{{cite web|title=为什么把部分苹果设备的系统时间调整为1970.1.1，重启后就会变砖？|url=https://www.zhihu.com/question/40316064/answer/86223495|access-date=2016-02-16|archive-date=2021-10-08|archive-url=https://web.archive.org/web/20211008145426/https://www.zhihu.com/question/40316064/answer/86223495|dead-url=no}}</ref>苹果对此采用的策略是在随后的固件更新中将时间禁止调整到2000年以前。

== 纪念日 ==
UNIX时间以5000日为纪念日，第一个5000日是1983年9月10日，第二个5000日（即第1萬日）是1997年5月19日，第三个5000日（即第1萬5000日）是2011年1月26日，第四个5000日（即第2萬日）是2024年10月4日，第五百个5000日（即第250萬日）是8814年10月8日<ref>{{cite web|title=About Unix epoch time|url=http://www.day15000.com/about-unix-epoch-time|accessdate=2011-01-27|deadurl=yes|archiveurl=https://web.archive.org/web/20110129180502/http://www.day15000.com/about-unix-epoch-time|archivedate=2011-01-29}}</ref>。

== 相关条目 ==
* [[约翰·提托|约翰·提托]]

== 参考文献 ==
{{Reflist}}

== 外部連結 ==
* [https://www.epochconvert.com Unix时间戳在线转换] {{Wayback|url=https://www.epochconvert.com/ |date=20220104031236 }}
* [https://www.bell-labs.com/usr/dmr/www/1stEdman.html Unix程序员手册，第一版]{{Wayback|url=https://www.bell-labs.com/usr/dmr/www/1stEdman.html |date=20140906222727 }}
* {{cite av media|last=Clewett|first=James|title=2,147,483,647 – The End of Time [Unix]|url=https://www.youtube.com/watch?v=QJQ691PTKsA|access-date=2020-05-30|archive-date=2021-05-04|archive-url=https://web.archive.org/web/20210504230049/https://www.youtube.com/watch?v=QJQ691PTKsA|dead-url=no}}
*[https://howardhinnant.github.io/date_algorithms.html chrono-Compatible Low-Level Date Algorithms] {{Wayback|url=https://howardhinnant.github.io/date_algorithms.html |date=20220122102746 }} – algorithms to convert between Gregorian and Julian dates and the number of days since the start of Unix time

{{Time themes}}
{{曆法}}

[[Category:日历标准|Category:日历标准]]
[[Category:网络时间相关软件|Category:网络时间相关软件]]
[[Category:时间标准|Category:时间标准]]
[[Category:Unix|Category:Unix]]