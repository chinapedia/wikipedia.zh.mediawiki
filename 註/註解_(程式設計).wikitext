{{NoteTA
|G1=IT
|1=zh-cn:注释; zh-tw:註解;
|2=zh-tw:程式碼; zh-hk:程式碼; zh-cn:代码;
}}
{{not|腳注}}
在[[计算机语言|计算机语言]]中，'''注释'''是[[计算机语言|计算机语言]]的一个重要组成部分，用于在[[源代码|源代码]]中解释代码的功用，可以增强程序的可读性，可维护性，或者用于在源代码中处理不需运行的代码段，来调试程序的功能执行。

注释在随源代码进入[[预处理器|预处理器]]或[[编译器|编译器]]处理后会被移除，不会在[[目标代码|目标代码]]中保留其相关信息。

==使用==
怎么用注释是一个备受争论的论题，观点是各种各样的，有时候甚至观点是正相反的。写法也是各种各样，有时候意见也是存在矛盾的。

=== 代码设计和审查 ===
注释可以用于提供[[伪代码|伪代码]]的大纲，并根据该大纲编写代码。通过这种形式，代码的逻辑会更加清晰。<syntaxhighlight lang="cpp">
/* 反向循环所有从服务获取的元素
(他们应该按照时间顺序执行)*/
for (i = (numElementsReturned - 1); i >= 0; i--){
    /* 处理每一个元素里的数据 */
    updatePattern(i, returnedElements[i]);
}
</syntaxhighlight>如果在提交代码时，注释没有被删除，那么代码审查者可以根据注释比较代码和意图的拟合度。一个常见的误解——理解代码想要做什么是很简单的事情。

===代码描述===
注释可用于代码内容的总结、表达开发者的意图。持该观点的学者认为，用更为简单的英语去解释代码是多余的。 需要重新解释地代码，可能意味是候代码太复杂，这时候需要去重写或者重命名。

: “不要去解释说明质量低下的代码，应该去重写。”<ref name="BadComment000">"Don't document bad code – rewrite it."

''[[The_Elements_of_Programming_Style_(book)|The Elements of Programming Style]]'', [[Brian_Kernighan|Kernighan]] & [[P._J._Plauger|Plauger]]</ref>
: “好的注释不应该去重复代码的内容、解释代码，而是应该去解释它的意图。你应该尝试在一个高的维度，将代码抽象出来，并为此说明。”<ref name="GoodComment000">"Good comments don't repeat the code or explain it. They clarify its intent. Comments should explain, at a higher level of abstraction than the code, what you're trying to do."

''[[Code_Complete|Code Complete]]'', [[Steve_McConnell|McConnell]]</ref>’

注释也可用于解释一个-{zh-cn:代码块; zh-tw:程式碼區塊; zh-hk:程式碼區塊}-有什么缺陷，为什么不是最好的方案。这对项目相当紧张、修正bug尤其有效。例如：
<syntaxhighlight lang="vb">
' Second variable dim because of server errors produced when reuse form data. No
' documentation available on server behavior issue, so just coding around it.
vtx = server.mappath("local settings")
</syntaxhighlight>值得注意的是，上述内容是针对英语国家的程序员。而在非英语国家里，通过当地语言去解释代码、翻译代码的意思，这种行为是很常见的，也普遍被接受的。

===算法描述===
比如，下面程序将增加一个注释来解释为什么[[插入排序|插入排序]]没有被[[快速排序|快速排序]]所替代，即使理论上前者比后者更慢。这将写为如下：
<syntaxhighlight lang="java">
 list = [f (b), f (b), f (c), f (d), f (a), ...];
 // Need a stable sort. Besides, the performance really does not matter.
 insertion_sort (list);
</syntaxhighlight>

=== [[元数据|元数据]]和资源 ===
在注释中，可以插入各种资源和[[元数据|元数据]]。

* 常见的资源有：图标、流程图、版权。
* 常见的元数据有：维护者、第一版的时间、编辑者、相关文档的链接等。

下面是[[Spring_Framework|Spring]]框架中的一段注释，用于表达版权。<syntaxhighlight lang="java">
/*
 * Copyright 2002-2016 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

</syntaxhighlight>许多代码维护者会将指导（元数据）放到注释中，帮助读者更好的阅读，并提供反馈途径。但值得一提，随着[[Git|Git]]等版本管理器的流行，元数据作为指导的功能也被部分代替了，如：[[Git|GIt]]能记录第一版代码、代码创作者、修改者等信息。

===调试===
程序员常用的技巧之一，通过暂时把代码块注释的方式，让部分代码不运行。程序员通过该方式，寻找代码bug的位置。

=== 文档自动生成 ===
一些开发工具通过注释来生成文档。如[[java|java]]程序通过[[javadoc|javadoc]],  [[c|c]]/[[c++|c++]]等通过[[doxygen|doxygen]]生成文档。

=== 功能代码 ===
作为代码的一部分被使用。如：[[条件注释|条件注释]]、[[Shebang|Shebang]]。

== 种类与格式 ==
注释可分类为：
* 风格（行/块）
* 解释规则（忽略/插入/内存存储）
* 递归（支持/不支持）

=== 行注释 ===
行注释通过使用换行'\n'字符来指示注释结束，以及使用[[标记|标记]]来开始一条注释。例：
{| class="wikitable"
|-
! 符号
! 语言
|-
|C
|[[Fortran|Fortran 77]]; 'C'必须在一行的第一个字符。
|-
|REM
|BASIC, [[cmd.exe|COMMAND.COM]]
|-
|#
|bash, [[Cobra|Cobra]]、[[Perl|Perl]]、[[Python|Python]]、[[Ruby|Ruby]]、[[Windows_PowerShell|Windows PowerShell]]、[[PHP|PHP]]、[[Maple|Maple]]
|-
|%
|TeX, Prolog, MATLAB<ref name="#1">{{cite web |title=Add Comments to Code - MATLAB & Simulink |url=https://www.mathworks.com/help/matlab/matlab_prog/comments.html |website=www.mathworks.com |accessdate=2022-06-22}}</ref>, Erlang, [[S-Lang|S-Lang]]、[[Visual_Prolog|Visual Prolog]]
|-
|{}
|[[Pascal_(程式語言)|Pascal]]
|-
|//
|[[ActionScript|ActionScript]]、[[C语言|C99]]、[[C++|C++]]、[[Objective-C|Objective-C]]、[[Swift_(程式語言)|Swift]]、[[C_Sharp|C#]]、[[Go|Go]], Object Pascal (Delphi)，[[Java|Java]]、[[JavaScript|JavaScript]]、[[PHP|PHP]]
|-
|'
|[[Visual_Basic|Visual Basic]]、[[VBScript|VBScript]]、[[RealBasic|RealBasic]]
|-
|!
|[[Fortran|Fortran]], Basic Plus
|-
|;
|[[AutoHotkey|AutoHotkey]]、[[Autoit|Autoit]]、[[Lisp|Lisp]]、[[Scheme|Scheme]], many assemblers
|-
|<nowiki>--</nowiki><!--「-」在維基百科被當成表格-->
|[[Euphoria（编程语言）|Euphoria]]、[[Haskell|Haskell]]、[[SQL|SQL]]、[[Ada|Ada]]、[[Applescript|Applescript]]、[[Eiffel|Eiffel]]、[[Lua|Lua]]、[[VHDL|VHDL]]
|-
|*
|[[COBOL|COBOL]], many assemblers
|-
|<nowiki>||</nowiki><!--「|」在維基百科被當成表格-->
|[[Curl|Curl]]
|-
|<nowiki>"</nowiki><!--「''」在維基百科被當成斜體-->
|[[Vim|Vim脚本]]
|-
|<nowiki>\</nowiki>
|[[Forth|Forth]]
|-
|<nowiki>::</nowiki><!--「::」在維基百科被當成縮排-->
|[[Batch_file|批处理]]<ref>{{Cite web |url=http://ss64.com/nt/rem.html |title=Rem - Comment - Windows CMD |website=SS64.com |access-date=2010-06-15 |archive-date=2021-04-19 |archive-url=https://web.archive.org/web/20210419004244/https://ss64.com/nt/rem.html |dead-url=no }}</ref>
|}

=== 块注释 ===
块注释通过定义一个注释开始和一个注释结束标记来使用。在上下文中，[[空格|空格]]和[[換行|換行]]字符不作为区分标志。例：
{| class="wikitable"
|-
! 符号
! 语言
|-
| ¢ ~ ¢, # ~ #, '''co''' ~ '''co''', '''comment''' ~ '''comment'''
| [[ALGOL_68|ALGOL 68]]
|-
| /* */
| ActionScript, AutoHotkey, C, C++, Objective-C, Swift, C#, [[Go|Go]], Java, JavaScript, PHP, PL/I, SQL, [[Visual_Prolog|Visual Prolog]], CSS
|-
| /# #/
| [[Cobra|Cobra]]
|-
| """ """
| Python, Ruby{{NoteTag|More precisely, the quoted text forms a [[string_literal|string literal]].|name="PyStr000"}}
|-
| <nowiki>''' '''</nowiki><!--「'''」在維基百科當成粗體文字-->
| Python{{NoteTag|name="PyStr000"}}
|-
| =begin =cut
| Perl
|-
| =begin =end
| Ruby
|-
| <nowiki>#<tag> #</tag></nowiki><!--「#」在維基百科被當成數字列表-->
| [[S-Lang_(计算机语言)|S-Lang]]
|-
| {- -}
| Haskell
|-
| (* *)
| Object Pascal (Delphi),ML, Mathematica, Pascal, Applescript, OCaml, Maple
|-
| {   }
| Object Pascal (Delphi),Pascal
|-
| <nowiki><!-- --></nowiki><!--必須顯示-->
| [[HTML|HTML]]、[[XML|XML]]
|-
| <nowiki>|# #|</nowiki><!--「|」在維基百科被當成表格-->
| Curl
|-
| <nowiki>%{ %}</nowiki>
| [[MATLAB|MATLAB]]<ref name="#1"/>
|-
| <nowiki>#| |#</nowiki>
| [[Lisp|Lisp]]
|-
| --[[|]]<!--在維基百科中因技術限制而不存在「」條目-->
| [[Lua|Lua]]
|-
|#if 0
<nowiki>#</nowiki>endif
|[[C语言|C语言]]\[[C++|C++]]
|}

== -{zh-hans:注释; zh-hant:註釋}- ==
{{NoteFoot}}

== 参考文献 ==
{{Reflist}}

[[Category:计算机语言|Category:计算机语言]]
[[Category:带有代码示例的条目|Category:带有代码示例的条目]]